{
  "id" : 347,
  "expression" : "baos.size()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/ocsp/OcspUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "baos.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 162,
      "startColumnNumber" : 32,
      "endLineNumber" : 162,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 162,
        "startColumnNumber" : 32,
        "endLineNumber" : 162,
        "endColumnNumber" : 60
      },
      "nodeContext" : "baos.size() >= contentLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 162,
        "startColumnNumber" : 28,
        "endLineNumber" : 164,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (baos.size() >= contentLength) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 159,
        "startColumnNumber" : 65,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  baos.write(buffer,0,length);\n  if (baos.size() >= contentLength) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 159,
        "startColumnNumber" : 24,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((length=in.read(buffer)) != -1) {\n  baos.write(buffer,0,length);\n  if (baos.size() >= contentLength) {\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 155,
        "startColumnNumber" : 24,
        "endLineNumber" : 166,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  byte[] buffer=new byte[8192];\n  int length=-1;\n  while ((length=in.read(buffer)) != -1) {\n    baos.write(buffer,0,length);\n    if (baos.size() >= contentLength) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  byte[] buffer=new byte[8192];\n  int length=-1;\n  while ((length=in.read(buffer)) != -1) {\n    baos.write(buffer,0,length);\n    if (baos.size() >= contentLength) {\n      break;\n    }\n  }\n}\n  finally {\n  baos.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 137,
        "startColumnNumber" : 67,
        "endLineNumber" : 170,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int code=connection.getResponseCode();\n  if (code != HttpsURLConnection.HTTP_OK) {\n    throw new IOException(\"Unexpected status-code=\" + code);\n  }\n  String contentType=connection.getContentType();\n  if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n    throw new IOException(\"Unexpected content-type=\" + contentType);\n  }\n  int contentLength=connection.getContentLength();\n  if (contentLength == -1) {\n    contentLength=Integer.MAX_VALUE;\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  try {\n    byte[] buffer=new byte[8192];\n    int length=-1;\n    while ((length=in.read(buffer)) != -1) {\n      baos.write(buffer,0,length);\n      if (baos.size() >= contentLength) {\n        break;\n      }\n    }\n  }\n  finally {\n    baos.close();\n  }\n  return new OCSPResp(baos.toByteArray());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1483,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (InputStream in=connection.getInputStream()){\n  int code=connection.getResponseCode();\n  if (code != HttpsURLConnection.HTTP_OK) {\n    throw new IOException(\"Unexpected status-code=\" + code);\n  }\n  String contentType=connection.getContentType();\n  if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n    throw new IOException(\"Unexpected content-type=\" + contentType);\n  }\n  int contentLength=connection.getContentLength();\n  if (contentLength == -1) {\n    contentLength=Integer.MAX_VALUE;\n  }\n  ByteArrayOutputStream baos=new ByteArrayOutputStream();\n  try {\n    byte[] buffer=new byte[8192];\n    int length=-1;\n    while ((length=in.read(buffer)) != -1) {\n      baos.write(buffer,0,length);\n      if (baos.size() >= contentLength) {\n        break;\n      }\n    }\n  }\n  finally {\n    baos.close();\n  }\n  return new OCSPResp(baos.toByteArray());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1586,
        "startLineNumber" : 133,
        "startColumnNumber" : 66,
        "endLineNumber" : 171,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  out.write(encoded);\n  out.flush();\n  try (InputStream in=connection.getInputStream()){\n    int code=connection.getResponseCode();\n    if (code != HttpsURLConnection.HTTP_OK) {\n      throw new IOException(\"Unexpected status-code=\" + code);\n    }\n    String contentType=connection.getContentType();\n    if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n      throw new IOException(\"Unexpected content-type=\" + contentType);\n    }\n    int contentLength=connection.getContentLength();\n    if (contentLength == -1) {\n      contentLength=Integer.MAX_VALUE;\n    }\n    ByteArrayOutputStream baos=new ByteArrayOutputStream();\n    try {\n      byte[] buffer=new byte[8192];\n      int length=-1;\n      while ((length=in.read(buffer)) != -1) {\n        baos.write(buffer,0,length);\n        if (baos.size() >= contentLength) {\n          break;\n        }\n      }\n    }\n  finally {\n      baos.close();\n    }\n    return new OCSPResp(baos.toByteArray());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (OutputStream out=connection.getOutputStream()){\n  out.write(encoded);\n  out.flush();\n  try (InputStream in=connection.getInputStream()){\n    int code=connection.getResponseCode();\n    if (code != HttpsURLConnection.HTTP_OK) {\n      throw new IOException(\"Unexpected status-code=\" + code);\n    }\n    String contentType=connection.getContentType();\n    if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n      throw new IOException(\"Unexpected content-type=\" + contentType);\n    }\n    int contentLength=connection.getContentLength();\n    if (contentLength == -1) {\n      contentLength=Integer.MAX_VALUE;\n    }\n    ByteArrayOutputStream baos=new ByteArrayOutputStream();\n    try {\n      byte[] buffer=new byte[8192];\n      int length=-1;\n      while ((length=in.read(buffer)) != -1) {\n        baos.write(buffer,0,length);\n        if (baos.size() >= contentLength) {\n          break;\n        }\n      }\n    }\n  finally {\n      baos.close();\n    }\n    return new OCSPResp(baos.toByteArray());\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 157,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2260,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  connection.setConnectTimeout((int)unit.toMillis(timeout));\n  connection.setReadTimeout((int)unit.toMillis(timeout));\n  connection.setDoOutput(true);\n  connection.setDoInput(true);\n  connection.setRequestMethod(\"POST\");\n  connection.setRequestProperty(\"host\",uri.getHost());\n  connection.setRequestProperty(\"content-type\",OCSP_REQUEST_TYPE);\n  connection.setRequestProperty(\"accept\",OCSP_RESPONSE_TYPE);\n  connection.setRequestProperty(\"content-length\",String.valueOf(encoded.length));\n  try (OutputStream out=connection.getOutputStream()){\n    out.write(encoded);\n    out.flush();\n    try (InputStream in=connection.getInputStream()){\n      int code=connection.getResponseCode();\n      if (code != HttpsURLConnection.HTTP_OK) {\n        throw new IOException(\"Unexpected status-code=\" + code);\n      }\n      String contentType=connection.getContentType();\n      if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n        throw new IOException(\"Unexpected content-type=\" + contentType);\n      }\n      int contentLength=connection.getContentLength();\n      if (contentLength == -1) {\n        contentLength=Integer.MAX_VALUE;\n      }\n      ByteArrayOutputStream baos=new ByteArrayOutputStream();\n      try {\n        byte[] buffer=new byte[8192];\n        int length=-1;\n        while ((length=in.read(buffer)) != -1) {\n          baos.write(buffer,0,length);\n          if (baos.size() >= contentLength) {\n            break;\n          }\n        }\n      }\n  finally {\n        baos.close();\n      }\n      return new OCSPResp(baos.toByteArray());\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  connection.setConnectTimeout((int)unit.toMillis(timeout));\n  connection.setReadTimeout((int)unit.toMillis(timeout));\n  connection.setDoOutput(true);\n  connection.setDoInput(true);\n  connection.setRequestMethod(\"POST\");\n  connection.setRequestProperty(\"host\",uri.getHost());\n  connection.setRequestProperty(\"content-type\",OCSP_REQUEST_TYPE);\n  connection.setRequestProperty(\"accept\",OCSP_RESPONSE_TYPE);\n  connection.setRequestProperty(\"content-length\",String.valueOf(encoded.length));\n  try (OutputStream out=connection.getOutputStream()){\n    out.write(encoded);\n    out.flush();\n    try (InputStream in=connection.getInputStream()){\n      int code=connection.getResponseCode();\n      if (code != HttpsURLConnection.HTTP_OK) {\n        throw new IOException(\"Unexpected status-code=\" + code);\n      }\n      String contentType=connection.getContentType();\n      if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n        throw new IOException(\"Unexpected content-type=\" + contentType);\n      }\n      int contentLength=connection.getContentLength();\n      if (contentLength == -1) {\n        contentLength=Integer.MAX_VALUE;\n      }\n      ByteArrayOutputStream baos=new ByteArrayOutputStream();\n      try {\n        byte[] buffer=new byte[8192];\n        int length=-1;\n        while ((length=in.read(buffer)) != -1) {\n          baos.write(buffer,0,length);\n          if (baos.size() >= contentLength) {\n            break;\n          }\n        }\n      }\n  finally {\n        baos.close();\n      }\n      return new OCSPResp(baos.toByteArray());\n    }\n   }\n }\n  finally {\n  connection.disconnect();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 230,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2505,
        "startLineNumber" : 117,
        "startColumnNumber" : 109,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] encoded=request.getEncoded();\n  URL url=uri.toURL();\n  HttpURLConnection connection=(HttpURLConnection)url.openConnection();\n  try {\n    connection.setConnectTimeout((int)unit.toMillis(timeout));\n    connection.setReadTimeout((int)unit.toMillis(timeout));\n    connection.setDoOutput(true);\n    connection.setDoInput(true);\n    connection.setRequestMethod(\"POST\");\n    connection.setRequestProperty(\"host\",uri.getHost());\n    connection.setRequestProperty(\"content-type\",OCSP_REQUEST_TYPE);\n    connection.setRequestProperty(\"accept\",OCSP_RESPONSE_TYPE);\n    connection.setRequestProperty(\"content-length\",String.valueOf(encoded.length));\n    try (OutputStream out=connection.getOutputStream()){\n      out.write(encoded);\n      out.flush();\n      try (InputStream in=connection.getInputStream()){\n        int code=connection.getResponseCode();\n        if (code != HttpsURLConnection.HTTP_OK) {\n          throw new IOException(\"Unexpected status-code=\" + code);\n        }\n        String contentType=connection.getContentType();\n        if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n          throw new IOException(\"Unexpected content-type=\" + contentType);\n        }\n        int contentLength=connection.getContentLength();\n        if (contentLength == -1) {\n          contentLength=Integer.MAX_VALUE;\n        }\n        ByteArrayOutputStream baos=new ByteArrayOutputStream();\n        try {\n          byte[] buffer=new byte[8192];\n          int length=-1;\n          while ((length=in.read(buffer)) != -1) {\n            baos.write(buffer,0,length);\n            if (baos.size() >= contentLength) {\n              break;\n            }\n          }\n        }\n  finally {\n          baos.close();\n        }\n        return new OCSPResp(baos.toByteArray());\n      }\n     }\n   }\n  finally {\n    connection.disconnect();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2928,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO: This is a very crude and non-scalable HTTP client to fetch the OCSP response from the CA's OCSP responder server. It's meant to demonstrate the basic building blocks on how to interact with the responder server and you should consider using Netty's HTTP client instead.\n */\npublic static OCSPResp request(URI uri,OCSPReq request,long timeout,TimeUnit unit) throws IOException {\n  byte[] encoded=request.getEncoded();\n  URL url=uri.toURL();\n  HttpURLConnection connection=(HttpURLConnection)url.openConnection();\n  try {\n    connection.setConnectTimeout((int)unit.toMillis(timeout));\n    connection.setReadTimeout((int)unit.toMillis(timeout));\n    connection.setDoOutput(true);\n    connection.setDoInput(true);\n    connection.setRequestMethod(\"POST\");\n    connection.setRequestProperty(\"host\",uri.getHost());\n    connection.setRequestProperty(\"content-type\",OCSP_REQUEST_TYPE);\n    connection.setRequestProperty(\"accept\",OCSP_RESPONSE_TYPE);\n    connection.setRequestProperty(\"content-length\",String.valueOf(encoded.length));\n    try (OutputStream out=connection.getOutputStream()){\n      out.write(encoded);\n      out.flush();\n      try (InputStream in=connection.getInputStream()){\n        int code=connection.getResponseCode();\n        if (code != HttpsURLConnection.HTTP_OK) {\n          throw new IOException(\"Unexpected status-code=\" + code);\n        }\n        String contentType=connection.getContentType();\n        if (!contentType.equalsIgnoreCase(OCSP_RESPONSE_TYPE)) {\n          throw new IOException(\"Unexpected content-type=\" + contentType);\n        }\n        int contentLength=connection.getContentLength();\n        if (contentLength == -1) {\n          contentLength=Integer.MAX_VALUE;\n        }\n        ByteArrayOutputStream baos=new ByteArrayOutputStream();\n        try {\n          byte[] buffer=new byte[8192];\n          int length=-1;\n          while ((length=in.read(buffer)) != -1) {\n            baos.write(buffer,0,length);\n            if (baos.size() >= contentLength) {\n              break;\n            }\n          }\n        }\n  finally {\n          baos.close();\n        }\n        return new OCSPResp(baos.toByteArray());\n      }\n     }\n   }\n  finally {\n    connection.disconnect();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 162,
        "startColumnNumber" : 32,
        "endLineNumber" : 162,
        "endColumnNumber" : 60
      },
      "nodeContext" : "baos.size() >= contentLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 162,
    "startColumnNumber" : 32,
    "endLineNumber" : 162,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}