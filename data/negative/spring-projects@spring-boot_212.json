{
  "id" : 212,
  "expression" : "\"/management/actuator/health\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-samples/spring-boot-sample-actuator-custom-security/src/test/java/sample/actuator/customsecurity/ManagementPortAndPathSampleActuatorApplicationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/management/actuator/health\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 69,
      "startColumnNumber" : 48,
      "endLineNumber" : 69,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 77
      },
      "nodeContext" : "\"http://localhost:\" + this.managementPort + \"/management/actuator/health\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 68,
        "startColumnNumber" : 34,
        "endLineNumber" : 70,
        "endColumnNumber" : 17
      },
      "nodeContext" : "new TestRestTemplate().getForEntity(\"http://localhost:\" + this.managementPort + \"/management/actuator/health\",String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 68,
        "startColumnNumber" : 25,
        "endLineNumber" : 70,
        "endColumnNumber" : 17
      },
      "nodeContext" : "entity=new TestRestTemplate().getForEntity(\"http://localhost:\" + this.managementPort + \"/management/actuator/health\",String.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 18
      },
      "nodeContext" : "ResponseEntity<String> entity=new TestRestTemplate().getForEntity(\"http://localhost:\" + this.managementPort + \"/management/actuator/health\",String.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 67,
        "startColumnNumber" : 53,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ResponseEntity<String> entity=new TestRestTemplate().getForEntity(\"http://localhost:\" + this.managementPort + \"/management/actuator/health\",String.class);\n  assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n  assertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 66,
        "startColumnNumber" : 1,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testInsecureActuator() throws Exception {\n  ResponseEntity<String> entity=new TestRestTemplate().getForEntity(\"http://localhost:\" + this.managementPort + \"/management/actuator/health\",String.class);\n  assertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n  assertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 77
      },
      "nodeContext" : "\"http://localhost:\" + this.managementPort + \"/management/actuator/health\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 69,
    "startColumnNumber" : 48,
    "endLineNumber" : 69,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}