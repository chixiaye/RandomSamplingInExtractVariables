{
  "id" : 234,
  "expression" : "pendingCheckpoint == null",
  "projectName" : "apache@flink",
  "commitID" : "33e3b75bb74dad5f75ad0bea788906e24c3df4e8",
  "filePath" : "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointFailureManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pendingCheckpoint == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 102,
      "startColumnNumber" : 16,
      "endLineNumber" : 102,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 101,
        "startColumnNumber" : 13,
        "endLineNumber" : 104,
        "endColumnNumber" : 61
      },
      "nodeContext" : "checkpointId=pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 62
      },
      "nodeContext" : "long checkpointId=pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 100,
        "startColumnNumber" : 49,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long checkpointId=pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID();\n  updateStatsAfterCheckpointFailed(pendingCheckpointStats,statsTracker,exception);\n  LOG.warn(\"Failed to trigger checkpoint {} for job {}. ({} consecutive failed attempts so far)\",checkpointId == UNKNOWN_CHECKPOINT_ID ? \"UNKNOWN_CHECKPOINT_ID\" : checkpointId,job,continuousFailureCounter.get(),exception);\n  if (isJobManagerFailure(exception,executionAttemptID)) {\n    handleJobLevelCheckpointException(checkpointProperties,exception,checkpointId);\n  }\n else {\n    handleTaskLevelCheckpointException(checkNotNull(pendingCheckpoint),exception,checkNotNull(executionAttemptID));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2544,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Failures on JM: <ul> <li>all checkpoints - go against failure counter. <li>any savepoints - donâ€™t do anything, manual action, the failover will not help anyway. </ul> <p>Failures on TM: <ul> <li>all checkpoints - go against failure counter (failover might help and we want to notify users). <li>sync savepoints - we must always fail, otherwise we risk deadlock when the job cancelation waiting for finishing savepoint which never happens. <li>non sync savepoints - go against failure counter (failover might help solve the problem). </ul>\n * @param pendingCheckpoint the failed checkpoint if it was initialized already.\n * @param checkpointProperties the checkpoint properties in order to determinate which handlestrategy can be used.\n * @param exception the checkpoint exception.\n * @param executionAttemptID the execution attempt id, as a safe guard.\n * @param job the JobID.\n * @param pendingCheckpointStats the pending checkpoint statistics.\n * @param statsTracker the tracker for checkpoint statistics.\n */\npublic void handleCheckpointException(@Nullable PendingCheckpoint pendingCheckpoint,CheckpointProperties checkpointProperties,CheckpointException exception,@Nullable ExecutionAttemptID executionAttemptID,JobID job,@Nullable PendingCheckpointStats pendingCheckpointStats,CheckpointStatsTracker statsTracker){\n  long checkpointId=pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID();\n  updateStatsAfterCheckpointFailed(pendingCheckpointStats,statsTracker,exception);\n  LOG.warn(\"Failed to trigger checkpoint {} for job {}. ({} consecutive failed attempts so far)\",checkpointId == UNKNOWN_CHECKPOINT_ID ? \"UNKNOWN_CHECKPOINT_ID\" : checkpointId,job,continuousFailureCounter.get(),exception);\n  if (isJobManagerFailure(exception,executionAttemptID)) {\n    handleJobLevelCheckpointException(checkpointProperties,exception,checkpointId);\n  }\n else {\n    handleTaskLevelCheckpointException(checkNotNull(pendingCheckpoint),exception,checkNotNull(executionAttemptID));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pendingCheckpoint == null ? UNKNOWN_CHECKPOINT_ID : pendingCheckpoint.getCheckpointID()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 102,
    "startColumnNumber" : 16,
    "endLineNumber" : 102,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}