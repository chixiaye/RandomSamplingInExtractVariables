{
  "id" : 156,
  "expression" : "futures",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/util/Futures.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "futures",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 52,
      "startColumnNumber" : 54,
      "endLineNumber" : 52,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 52,
        "startColumnNumber" : 54,
        "endLineNumber" : 52,
        "endColumnNumber" : 68
      },
      "nodeContext" : "futures.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 52,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new AtomicInteger(futures.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 69
      },
      "nodeContext" : "count=new AtomicInteger(futures.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final AtomicInteger count=new AtomicInteger(futures.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 50,
        "startColumnNumber" : 92,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static CompletableFuture<Void> waitForAll(List<CompletableFuture<Void>> futures){\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final AtomicInteger count=new AtomicInteger(futures.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.util.concurrent.CompletableFuture<java.lang.Void>>"
  }, {
    "nodeContext" : "futures",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 54,
      "startColumnNumber" : 46,
      "endLineNumber" : 54,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (CompletableFuture<Void> future : futures) {\n  future.whenComplete((r,ex) -> {\n    if (ex != null) {\n      compositeFuture.completeExceptionally(ex);\n    }\n else     if (count.decrementAndGet() == 0) {\n      compositeFuture.complete(null);\n    }\n  }\n);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 50,
        "startColumnNumber" : 92,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static CompletableFuture<Void> waitForAll(List<CompletableFuture<Void>> futures){\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (CompletableFuture<Void> future : futures) {\n  future.whenComplete((r,ex) -> {\n    if (ex != null) {\n      compositeFuture.completeExceptionally(ex);\n    }\n else     if (count.decrementAndGet() == 0) {\n      compositeFuture.complete(null);\n    }\n  }\n);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 12
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.util.concurrent.CompletableFuture<java.lang.Void>>"
  }, {
    "nodeContext" : "futures",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 65,
      "startColumnNumber" : 12,
      "endLineNumber" : 65,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 29
      },
      "nodeContext" : "futures.isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (futures.isEmpty()) {\n  compositeFuture.complete(null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 50,
        "startColumnNumber" : 92,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static CompletableFuture<Void> waitForAll(List<CompletableFuture<Void>> futures){\n  final CompletableFuture<Void> compositeFuture=new CompletableFuture<>();\n  final AtomicInteger count=new AtomicInteger(futures.size());\n  for (  CompletableFuture<Void> future : futures) {\n    future.whenComplete((r,ex) -> {\n      if (ex != null) {\n        compositeFuture.completeExceptionally(ex);\n      }\n else       if (count.decrementAndGet() == 0) {\n        compositeFuture.complete(null);\n      }\n    }\n);\n  }\n  if (futures.isEmpty()) {\n    compositeFuture.complete(null);\n  }\n  return compositeFuture;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 29
      },
      "nodeContext" : "futures.isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.util.concurrent.CompletableFuture<java.lang.Void>>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 52,
    "startColumnNumber" : 54,
    "endLineNumber" : 52,
    "endColumnNumber" : 61
  }, {
    "charLength" : 7,
    "startLineNumber" : 54,
    "startColumnNumber" : 46,
    "endLineNumber" : 54,
    "endColumnNumber" : 53
  }, {
    "charLength" : 7,
    "startLineNumber" : 65,
    "startColumnNumber" : 12,
    "endLineNumber" : 65,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}