{
  "id" : 71,
  "expression" : "getCardOriginalY(0) + (currentCardPosition * mCardGapBottom)",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/app/src/main/java/io/virtualapp/widgets/CardStackAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getCardOriginalY(0) + (currentCardPosition * mCardGapBottom)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 60,
      "startLineNumber" : 263,
      "startColumnNumber" : 5,
      "endLineNumber" : 263,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 262,
        "startColumnNumber" : 10,
        "endLineNumber" : 263,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 262,
        "startColumnNumber" : 3,
        "endLineNumber" : 263,
        "endColumnNumber" : 67
      },
      "nodeContext" : "return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 261,
        "startColumnNumber" : 9,
        "endLineNumber" : 264,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 259,
        "startColumnNumber" : 2,
        "endLineNumber" : 264,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (currentCardPosition != selectedCardPosition) {\n  return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardFinalY(currentCardPosition));\n}\n else {\n  return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 258,
        "startColumnNumber" : 101,
        "endLineNumber" : 265,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (currentCardPosition != selectedCardPosition) {\n    return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardFinalY(currentCardPosition));\n  }\n else {\n    return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 905,
        "startLineNumber" : 245,
        "startColumnNumber" : 1,
        "endLineNumber" : 265,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * This method can be overridden to have different animations for each card when a click event happens on any card view. This method will be called for every\n * @param view The view for which this method needs to return an animator\n * @param selectedCardPosition Position of the card that was clicked\n * @param currentCardPosition Position of the current card\n * @return animator which has to be applied on the current card\n */\nprotected Animator getAnimatorForView(View view,int currentCardPosition,int selectedCardPosition){\n  if (currentCardPosition != selectedCardPosition) {\n    return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardFinalY(currentCardPosition));\n  }\n else {\n    return ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 262,
        "startColumnNumber" : 10,
        "endLineNumber" : 263,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ObjectAnimator.ofFloat(view,View.Y,(int)view.getY(),getCardOriginalY(0) + (currentCardPosition * mCardGapBottom))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 60,
    "startLineNumber" : 263,
    "startColumnNumber" : 5,
    "endLineNumber" : 263,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}