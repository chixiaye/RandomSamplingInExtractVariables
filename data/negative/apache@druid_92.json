{
  "id" : 92,
  "expression" : "2",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/main/java/org/apache/druid/sql/calcite/planner/SqlResourceCollectorShuttle.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 70,
      "startColumnNumber" : 41,
      "endLineNumber" : 70,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 42
      },
      "nodeContext" : "qualifiedNameParts.size() == 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (qualifiedNameParts.size() == 2) {\n  final String schema=qualifiedNameParts.get(0);\n  if (druidSchemaName.equals(schema)) {\n    resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n  }\n else   if (NamedViewSchema.NAME.equals(schema)) {\n    resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 67,
        "startColumnNumber" : 34,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n  if (qualifiedNameParts.size() == 2) {\n    final String schema=qualifiedNameParts.get(0);\n    if (druidSchemaName.equals(schema)) {\n      resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n    }\n else     if (NamedViewSchema.NAME.equals(schema)) {\n      resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (validatorTable != null) {\n  List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n  if (qualifiedNameParts.size() == 2) {\n    final String schema=qualifiedNameParts.get(0);\n    if (druidSchemaName.equals(schema)) {\n      resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n    }\n else     if (NamedViewSchema.NAME.equals(schema)) {\n      resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 64,
        "startColumnNumber" : 80,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlValidatorTable validatorTable=namespace.getTable();\n  if (validatorTable != null) {\n    List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n    if (qualifiedNameParts.size() == 2) {\n      final String schema=qualifiedNameParts.get(0);\n      if (druidSchemaName.equals(schema)) {\n        resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n      }\n else       if (NamedViewSchema.NAME.equals(schema)) {\n        resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (namespace != null && namespace.isWrapperFor(IdentifierNamespace.class)) {\n  SqlValidatorTable validatorTable=namespace.getTable();\n  if (validatorTable != null) {\n    List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n    if (qualifiedNameParts.size() == 2) {\n      final String schema=qualifiedNameParts.get(0);\n      if (druidSchemaName.equals(schema)) {\n        resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n      }\n else       if (NamedViewSchema.NAME.equals(schema)) {\n        resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SqlValidatorNamespace namespace=validator.getNamespace(id);\n  if (namespace != null && namespace.isWrapperFor(IdentifierNamespace.class)) {\n    SqlValidatorTable validatorTable=namespace.getTable();\n    if (validatorTable != null) {\n      List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n      if (qualifiedNameParts.size() == 2) {\n        final String schema=qualifiedNameParts.get(0);\n        if (druidSchemaName.equals(schema)) {\n          resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n        }\n else         if (NamedViewSchema.NAME.equals(schema)) {\n          resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n        }\n      }\n    }\n  }\n  return super.visit(id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SqlNode visit(SqlIdentifier id){\n  SqlValidatorNamespace namespace=validator.getNamespace(id);\n  if (namespace != null && namespace.isWrapperFor(IdentifierNamespace.class)) {\n    SqlValidatorTable validatorTable=namespace.getTable();\n    if (validatorTable != null) {\n      List<String> qualifiedNameParts=validatorTable.getQualifiedName();\n      if (qualifiedNameParts.size() == 2) {\n        final String schema=qualifiedNameParts.get(0);\n        if (druidSchemaName.equals(schema)) {\n          resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.DATASOURCE));\n        }\n else         if (NamedViewSchema.NAME.equals(schema)) {\n          resources.add(new Resource(qualifiedNameParts.get(1),ResourceType.VIEW));\n        }\n      }\n    }\n  }\n  return super.visit(id);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 42
      },
      "nodeContext" : "qualifiedNameParts.size() == 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 70,
    "startColumnNumber" : 41,
    "endLineNumber" : 70,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}