{
  "id" : 290,
  "expression" : "this",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/buildtool/buildevent/TestFilteringCompleteEvent.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 53,
      "startColumnNumber" : 4,
      "endLineNumber" : 53,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 16
      },
      "nodeContext" : "this.targets",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.targets=ImmutableList.copyOf(targets)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.targets=ImmutableList.copyOf(targets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 52,
        "startColumnNumber" : 76,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1073,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct the event.\n * @param targets The set of active targets that remain.\n * @param testTargets The collection of tests to be run. May be null.\n * @param targetsToSkip The collection of tests that are to be skipped.\n * @param configurationMap A map from configuration keys of all targets to the configurations.\n */\npublic TestFilteringCompleteEvent(Collection<? extends ConfiguredTarget> targets,Collection<? extends ConfiguredTarget> testTargets,Collection<? extends ConfiguredTarget> targetsToSkip,Map<BuildConfigurationKey,BuildConfigurationValue> configurationMap){\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.targets=ImmutableList.copyOf(targets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.buildtool.buildevent.TestFilteringCompleteEvent"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 4,
      "endLineNumber" : 54,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 20
      },
      "nodeContext" : "this.testTargets",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 85
      },
      "nodeContext" : "this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 86
      },
      "nodeContext" : "this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 52,
        "startColumnNumber" : 76,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1073,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct the event.\n * @param targets The set of active targets that remain.\n * @param testTargets The collection of tests to be run. May be null.\n * @param targetsToSkip The collection of tests that are to be skipped.\n * @param configurationMap A map from configuration keys of all targets to the configurations.\n */\npublic TestFilteringCompleteEvent(Collection<? extends ConfiguredTarget> targets,Collection<? extends ConfiguredTarget> testTargets,Collection<? extends ConfiguredTarget> targetsToSkip,Map<BuildConfigurationKey,BuildConfigurationValue> configurationMap){\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 86
      },
      "nodeContext" : "this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.buildtool.buildevent.TestFilteringCompleteEvent"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 4,
      "endLineNumber" : 55,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 21
      },
      "nodeContext" : "this.skippedTests",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.skippedTests=ImmutableList.copyOf(targetsToSkip)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 52,
        "startColumnNumber" : 76,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1073,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct the event.\n * @param targets The set of active targets that remain.\n * @param testTargets The collection of tests to be run. May be null.\n * @param targetsToSkip The collection of tests that are to be skipped.\n * @param configurationMap A map from configuration keys of all targets to the configurations.\n */\npublic TestFilteringCompleteEvent(Collection<? extends ConfiguredTarget> targets,Collection<? extends ConfiguredTarget> testTargets,Collection<? extends ConfiguredTarget> targetsToSkip,Map<BuildConfigurationKey,BuildConfigurationValue> configurationMap){\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.buildtool.buildevent.TestFilteringCompleteEvent"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 4,
      "endLineNumber" : 56,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 25
      },
      "nodeContext" : "this.configurationMap",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.configurationMap=configurationMap",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.configurationMap=configurationMap;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 52,
        "startColumnNumber" : 76,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1073,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Construct the event.\n * @param targets The set of active targets that remain.\n * @param testTargets The collection of tests to be run. May be null.\n * @param targetsToSkip The collection of tests that are to be skipped.\n * @param configurationMap A map from configuration keys of all targets to the configurations.\n */\npublic TestFilteringCompleteEvent(Collection<? extends ConfiguredTarget> targets,Collection<? extends ConfiguredTarget> testTargets,Collection<? extends ConfiguredTarget> targetsToSkip,Map<BuildConfigurationKey,BuildConfigurationValue> configurationMap){\n  this.targets=ImmutableList.copyOf(targets);\n  this.testTargets=testTargets == null ? null : ImmutableList.copyOf(testTargets);\n  this.skippedTests=ImmutableList.copyOf(targetsToSkip);\n  this.configurationMap=configurationMap;\n  if (testTargets == null) {\n    return;\n  }\n  for (  ConfiguredTarget testTarget : testTargets) {\n    Preconditions.checkState(testTarget.getProvider(TestProvider.class) != null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.configurationMap=configurationMap;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.buildtool.buildevent.TestFilteringCompleteEvent"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 53,
    "startColumnNumber" : 4,
    "endLineNumber" : 53,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 4,
    "endLineNumber" : 54,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 4,
    "endLineNumber" : 55,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 4,
    "endLineNumber" : 56,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}