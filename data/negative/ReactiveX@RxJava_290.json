{
  "id" : 290,
  "expression" : "TimeUnit",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableTimestampTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 46,
      "startColumnNumber" : 37,
      "endLineNumber" : 46,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 46,
        "endColumnNumber" : 58
      },
      "nodeContext" : "TimeUnit.MILLISECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 59
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 60
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void timestampWithScheduler(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 60
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 48,
      "startColumnNumber" : 37,
      "endLineNumber" : 48,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 48,
        "startColumnNumber" : 37,
        "endLineNumber" : 48,
        "endColumnNumber" : 58
      },
      "nodeContext" : "TimeUnit.MILLISECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 59
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 60
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void timestampWithScheduler(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 60
      },
      "nodeContext" : "scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 53,
      "startColumnNumber" : 75,
      "endLineNumber" : 53,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 53,
        "startColumnNumber" : 75,
        "endLineNumber" : 53,
        "endColumnNumber" : 96
      },
      "nodeContext" : "TimeUnit.MILLISECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 53,
        "startColumnNumber" : 50,
        "endLineNumber" : 53,
        "endColumnNumber" : 97
      },
      "nodeContext" : "new Timed<Integer>(1,0,TimeUnit.MILLISECONDS)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 98
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 99
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void timestampWithScheduler(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 99
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 54,
      "startColumnNumber" : 77,
      "endLineNumber" : 54,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 54,
        "startColumnNumber" : 77,
        "endLineNumber" : 54,
        "endColumnNumber" : 98
      },
      "nodeContext" : "TimeUnit.MILLISECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 54,
        "startColumnNumber" : 50,
        "endLineNumber" : 54,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new Timed<Integer>(2,100,TimeUnit.MILLISECONDS)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 100
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 101
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void timestampWithScheduler(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 101
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 55,
      "startColumnNumber" : 77,
      "endLineNumber" : 55,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 77,
        "endLineNumber" : 55,
        "endColumnNumber" : 98
      },
      "nodeContext" : "TimeUnit.MILLISECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 55,
        "startColumnNumber" : 50,
        "endLineNumber" : 55,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new Timed<Integer>(3,200,TimeUnit.MILLISECONDS)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 100
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 101
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 38,
        "startColumnNumber" : 41,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void timestampWithScheduler(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  Flowable<Timed<Integer>> m=source.timestamp(scheduler);\n  m.subscribe(observer);\n  source.onNext(1);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(2);\n  scheduler.advanceTimeBy(100,TimeUnit.MILLISECONDS);\n  source.onNext(3);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(1,0,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(2,100,TimeUnit.MILLISECONDS));\n  inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n  verify(observer,never()).onError(any(Throwable.class));\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 101
      },
      "nodeContext" : "inOrder.verify(observer,times(1)).onNext(new Timed<Integer>(3,200,TimeUnit.MILLISECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 46,
    "startColumnNumber" : 37,
    "endLineNumber" : 46,
    "endColumnNumber" : 45
  }, {
    "charLength" : 8,
    "startLineNumber" : 48,
    "startColumnNumber" : 37,
    "endLineNumber" : 48,
    "endColumnNumber" : 45
  }, {
    "charLength" : 8,
    "startLineNumber" : 53,
    "startColumnNumber" : 75,
    "endLineNumber" : 53,
    "endColumnNumber" : 83
  }, {
    "charLength" : 8,
    "startLineNumber" : 54,
    "startColumnNumber" : 77,
    "endLineNumber" : 54,
    "endColumnNumber" : 85
  }, {
    "charLength" : 8,
    "startLineNumber" : 55,
    "startColumnNumber" : 77,
    "endLineNumber" : 55,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}