{
  "id" : 443,
  "expression" : "options instanceof JksOptions",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/net/impl/KeyStoreHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "options instanceof JksOptions",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 54,
      "startColumnNumber" : 8,
      "endLineNumber" : 54,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (options instanceof JksOptions) {\n  JksOptions jks=(JksOptions)options;\n  Supplier<Buffer> value;\n  if (jks.getPath() != null) {\n    value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(jks.getPath()).getAbsolutePath());\n  }\n else   if (jks.getValue() != null) {\n    value=jks::getValue;\n  }\n else {\n    return null;\n  }\n  return new JKSOrPKCS12(\"JKS\",jks.getPassword(),value);\n}\n else if (options instanceof PfxOptions) {\n  PfxOptions pkcs12=(PfxOptions)options;\n  Supplier<Buffer> value;\n  if (pkcs12.getPath() != null) {\n    value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(pkcs12.getPath()).getAbsolutePath());\n  }\n else   if (pkcs12.getValue() != null) {\n    value=pkcs12::getValue;\n  }\n else {\n    return null;\n  }\n  return new JKSOrPKCS12(\"PKCS12\",pkcs12.getPassword(),value);\n}\n else if (options instanceof PemKeyCertOptions) {\n  PemKeyCertOptions keyCert=(PemKeyCertOptions)options;\n  Supplier<Buffer> key=() -> {\n    if (keyCert.getKeyPath() != null) {\n      return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getKeyPath()).getAbsolutePath());\n    }\n else     if (keyCert.getKeyValue() != null) {\n      return keyCert.getKeyValue();\n    }\n else {\n      throw new RuntimeException(\"Missing private key\");\n    }\n  }\n;\n  Supplier<Buffer> cert=() -> {\n    if (keyCert.getCertPath() != null) {\n      return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getCertPath()).getAbsolutePath());\n    }\n else     if (keyCert.getCertValue() != null) {\n      return keyCert.getCertValue();\n    }\n else {\n      throw new RuntimeException(\"Missing X.509 certificate\");\n    }\n  }\n;\n  return new KeyCert(DUMMY_PASSWORD,key,cert);\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1905,
        "startLineNumber" : 53,
        "startColumnNumber" : 83,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (options instanceof JksOptions) {\n    JksOptions jks=(JksOptions)options;\n    Supplier<Buffer> value;\n    if (jks.getPath() != null) {\n      value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(jks.getPath()).getAbsolutePath());\n    }\n else     if (jks.getValue() != null) {\n      value=jks::getValue;\n    }\n else {\n      return null;\n    }\n    return new JKSOrPKCS12(\"JKS\",jks.getPassword(),value);\n  }\n else   if (options instanceof PfxOptions) {\n    PfxOptions pkcs12=(PfxOptions)options;\n    Supplier<Buffer> value;\n    if (pkcs12.getPath() != null) {\n      value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(pkcs12.getPath()).getAbsolutePath());\n    }\n else     if (pkcs12.getValue() != null) {\n      value=pkcs12::getValue;\n    }\n else {\n      return null;\n    }\n    return new JKSOrPKCS12(\"PKCS12\",pkcs12.getPassword(),value);\n  }\n else   if (options instanceof PemKeyCertOptions) {\n    PemKeyCertOptions keyCert=(PemKeyCertOptions)options;\n    Supplier<Buffer> key=() -> {\n      if (keyCert.getKeyPath() != null) {\n        return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getKeyPath()).getAbsolutePath());\n      }\n else       if (keyCert.getKeyValue() != null) {\n        return keyCert.getKeyValue();\n      }\n else {\n        throw new RuntimeException(\"Missing private key\");\n      }\n    }\n;\n    Supplier<Buffer> cert=() -> {\n      if (keyCert.getCertPath() != null) {\n        return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getCertPath()).getAbsolutePath());\n      }\n else       if (keyCert.getCertValue() != null) {\n        return keyCert.getCertValue();\n      }\n else {\n        throw new RuntimeException(\"Missing X.509 certificate\");\n      }\n    }\n;\n    return new KeyCert(DUMMY_PASSWORD,key,cert);\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static KeyStoreHelper create(VertxInternal vertx,KeyCertOptions options){\n  if (options instanceof JksOptions) {\n    JksOptions jks=(JksOptions)options;\n    Supplier<Buffer> value;\n    if (jks.getPath() != null) {\n      value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(jks.getPath()).getAbsolutePath());\n    }\n else     if (jks.getValue() != null) {\n      value=jks::getValue;\n    }\n else {\n      return null;\n    }\n    return new JKSOrPKCS12(\"JKS\",jks.getPassword(),value);\n  }\n else   if (options instanceof PfxOptions) {\n    PfxOptions pkcs12=(PfxOptions)options;\n    Supplier<Buffer> value;\n    if (pkcs12.getPath() != null) {\n      value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(pkcs12.getPath()).getAbsolutePath());\n    }\n else     if (pkcs12.getValue() != null) {\n      value=pkcs12::getValue;\n    }\n else {\n      return null;\n    }\n    return new JKSOrPKCS12(\"PKCS12\",pkcs12.getPassword(),value);\n  }\n else   if (options instanceof PemKeyCertOptions) {\n    PemKeyCertOptions keyCert=(PemKeyCertOptions)options;\n    Supplier<Buffer> key=() -> {\n      if (keyCert.getKeyPath() != null) {\n        return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getKeyPath()).getAbsolutePath());\n      }\n else       if (keyCert.getKeyValue() != null) {\n        return keyCert.getKeyValue();\n      }\n else {\n        throw new RuntimeException(\"Missing private key\");\n      }\n    }\n;\n    Supplier<Buffer> cert=() -> {\n      if (keyCert.getCertPath() != null) {\n        return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getCertPath()).getAbsolutePath());\n      }\n else       if (keyCert.getCertValue() != null) {\n        return keyCert.getCertValue();\n      }\n else {\n        throw new RuntimeException(\"Missing X.509 certificate\");\n      }\n    }\n;\n    return new KeyCert(DUMMY_PASSWORD,key,cert);\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (options instanceof JksOptions) {\n  JksOptions jks=(JksOptions)options;\n  Supplier<Buffer> value;\n  if (jks.getPath() != null) {\n    value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(jks.getPath()).getAbsolutePath());\n  }\n else   if (jks.getValue() != null) {\n    value=jks::getValue;\n  }\n else {\n    return null;\n  }\n  return new JKSOrPKCS12(\"JKS\",jks.getPassword(),value);\n}\n else if (options instanceof PfxOptions) {\n  PfxOptions pkcs12=(PfxOptions)options;\n  Supplier<Buffer> value;\n  if (pkcs12.getPath() != null) {\n    value=() -> vertx.fileSystem().readFileBlocking(vertx.resolveFile(pkcs12.getPath()).getAbsolutePath());\n  }\n else   if (pkcs12.getValue() != null) {\n    value=pkcs12::getValue;\n  }\n else {\n    return null;\n  }\n  return new JKSOrPKCS12(\"PKCS12\",pkcs12.getPassword(),value);\n}\n else if (options instanceof PemKeyCertOptions) {\n  PemKeyCertOptions keyCert=(PemKeyCertOptions)options;\n  Supplier<Buffer> key=() -> {\n    if (keyCert.getKeyPath() != null) {\n      return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getKeyPath()).getAbsolutePath());\n    }\n else     if (keyCert.getKeyValue() != null) {\n      return keyCert.getKeyValue();\n    }\n else {\n      throw new RuntimeException(\"Missing private key\");\n    }\n  }\n;\n  Supplier<Buffer> cert=() -> {\n    if (keyCert.getCertPath() != null) {\n      return vertx.fileSystem().readFileBlocking(vertx.resolveFile(keyCert.getCertPath()).getAbsolutePath());\n    }\n else     if (keyCert.getCertValue() != null) {\n      return keyCert.getCertValue();\n    }\n else {\n      throw new RuntimeException(\"Missing X.509 certificate\");\n    }\n  }\n;\n  return new KeyCert(DUMMY_PASSWORD,key,cert);\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 16
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 54,
    "startColumnNumber" : 8,
    "endLineNumber" : 54,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}