{
  "id" : 337,
  "expression" : "adminEnv",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/jmh-benchmarks/src/main/java/org/apache/kafka/jmh/admin/GetListOffsetsCallsBenchmark.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "adminEnv",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 124,
      "startColumnNumber" : 35,
      "endLineNumber" : 124,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 124,
        "startColumnNumber" : 35,
        "endLineNumber" : 124,
        "endColumnNumber" : 57
      },
      "nodeContext" : "adminEnv.adminClient()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(KafkaAdminClient)adminEnv.adminClient()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 57
      },
      "nodeContext" : "admin=(KafkaAdminClient)adminEnv.adminClient()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 58
      },
      "nodeContext" : "admin=(KafkaAdminClient)adminEnv.adminClient();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 80,
        "startColumnNumber" : 24,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MetadataResponseData data=new MetadataResponseData();\n  List<MetadataResponseTopic> mrTopicList=new ArrayList<>();\n  Set<String> topics=new HashSet<>();\n  for (int topicIndex=0; topicIndex < topicCount; topicIndex++) {\n    Uuid topicId=Uuid.randomUuid();\n    String topicName=\"topic-\" + topicIndex;\n    MetadataResponseTopic mrTopic=new MetadataResponseTopic().setTopicId(topicId).setName(topicName).setErrorCode((short)0).setIsInternal(false);\n    List<MetadataResponsePartition> mrPartitionList=new ArrayList<>();\n    for (int partition=0; partition < partitionCount; partition++) {\n      TopicPartition tp=new TopicPartition(topicName,partition);\n      topics.add(tp.topic());\n      futures.put(tp,new KafkaFutureImpl<>());\n      topicPartitionOffsets.put(tp,OffsetSpec.latest());\n      MetadataResponsePartition mrPartition=new MetadataResponsePartition().setLeaderId(partition % numNodes).setPartitionIndex(partition).setIsrNodes(Arrays.asList(0,1,2)).setReplicaNodes(Arrays.asList(0,1,2)).setOfflineReplicas(Collections.emptyList()).setErrorCode((short)0);\n      mrPartitionList.add(mrPartition);\n    }\n    mrTopic.setPartitions(mrPartitionList);\n    mrTopicList.add(mrTopic);\n  }\n  data.setTopics(new MetadataResponseData.MetadataResponseTopicCollection(mrTopicList.listIterator()));\n  long deadline=0L;\n  short version=0;\n  context=new MetadataOperationContext<>(topics,new ListOffsetsOptions(),deadline,futures);\n  context.setResponse(Optional.of(new MetadataResponse(data,version)));\n  AdminClientUnitTestEnv adminEnv=new AdminClientUnitTestEnv(mockCluster());\n  admin=(KafkaAdminClient)adminEnv.adminClient();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2158,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Setup(Level.Trial) public void setup(){\n  MetadataResponseData data=new MetadataResponseData();\n  List<MetadataResponseTopic> mrTopicList=new ArrayList<>();\n  Set<String> topics=new HashSet<>();\n  for (int topicIndex=0; topicIndex < topicCount; topicIndex++) {\n    Uuid topicId=Uuid.randomUuid();\n    String topicName=\"topic-\" + topicIndex;\n    MetadataResponseTopic mrTopic=new MetadataResponseTopic().setTopicId(topicId).setName(topicName).setErrorCode((short)0).setIsInternal(false);\n    List<MetadataResponsePartition> mrPartitionList=new ArrayList<>();\n    for (int partition=0; partition < partitionCount; partition++) {\n      TopicPartition tp=new TopicPartition(topicName,partition);\n      topics.add(tp.topic());\n      futures.put(tp,new KafkaFutureImpl<>());\n      topicPartitionOffsets.put(tp,OffsetSpec.latest());\n      MetadataResponsePartition mrPartition=new MetadataResponsePartition().setLeaderId(partition % numNodes).setPartitionIndex(partition).setIsrNodes(Arrays.asList(0,1,2)).setReplicaNodes(Arrays.asList(0,1,2)).setOfflineReplicas(Collections.emptyList()).setErrorCode((short)0);\n      mrPartitionList.add(mrPartition);\n    }\n    mrTopic.setPartitions(mrPartitionList);\n    mrTopicList.add(mrTopic);\n  }\n  data.setTopics(new MetadataResponseData.MetadataResponseTopicCollection(mrTopicList.listIterator()));\n  long deadline=0L;\n  short version=0;\n  context=new MetadataOperationContext<>(topics,new ListOffsetsOptions(),deadline,futures);\n  context.setResponse(Optional.of(new MetadataResponse(data,version)));\n  AdminClientUnitTestEnv adminEnv=new AdminClientUnitTestEnv(mockCluster());\n  admin=(KafkaAdminClient)adminEnv.adminClient();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 58
      },
      "nodeContext" : "admin=(KafkaAdminClient)adminEnv.adminClient();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.clients.admin.AdminClientUnitTestEnv"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 124,
    "startColumnNumber" : 35,
    "endLineNumber" : 124,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}