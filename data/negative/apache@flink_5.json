{
  "id" : 5,
  "expression" : "Files.exists(tmp.resolve(rootFile))",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/rest/handler/FileUploadsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Files.exists(tmp.resolve(rootFile))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 106,
      "startColumnNumber" : 30,
      "endLineNumber" : 106,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.assertTrue(Files.exists(tmp.resolve(rootFile)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 103,
        "startColumnNumber" : 78,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n  Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (FileUploads fileUploads=new FileUploads(tmp.resolve(rootDir))){\n  Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n  Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 91,
        "startColumnNumber" : 49,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path rootDir=Paths.get(\"root\");\n  Path rootFile=rootDir.resolve(\"rootFile\");\n  Path subDir=rootDir.resolve(\"sub\");\n  Path subFile=subDir.resolve(\"subFile\");\n  Path tmp=temporaryFolder.getRoot().toPath();\n  Files.createDirectory(tmp.resolve(rootDir));\n  Files.createDirectory(tmp.resolve(subDir));\n  Files.createFile(tmp.resolve(rootFile));\n  Files.createFile(tmp.resolve(subFile));\n  try (FileUploads fileUploads=new FileUploads(tmp.resolve(rootDir))){\n    Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n  }\n   Assert.assertFalse(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subFile)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCleanup() throws IOException {\n  Path rootDir=Paths.get(\"root\");\n  Path rootFile=rootDir.resolve(\"rootFile\");\n  Path subDir=rootDir.resolve(\"sub\");\n  Path subFile=subDir.resolve(\"subFile\");\n  Path tmp=temporaryFolder.getRoot().toPath();\n  Files.createDirectory(tmp.resolve(rootDir));\n  Files.createDirectory(tmp.resolve(subDir));\n  Files.createFile(tmp.resolve(rootFile));\n  Files.createFile(tmp.resolve(subFile));\n  try (FileUploads fileUploads=new FileUploads(tmp.resolve(rootDir))){\n    Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n  }\n   Assert.assertFalse(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subFile)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  }, {
    "nodeContext" : "Files.exists(tmp.resolve(rootFile))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 111,
      "startColumnNumber" : 27,
      "endLineNumber" : 111,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.assertFalse(Files.exists(tmp.resolve(rootFile)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 91,
        "startColumnNumber" : 49,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path rootDir=Paths.get(\"root\");\n  Path rootFile=rootDir.resolve(\"rootFile\");\n  Path subDir=rootDir.resolve(\"sub\");\n  Path subFile=subDir.resolve(\"subFile\");\n  Path tmp=temporaryFolder.getRoot().toPath();\n  Files.createDirectory(tmp.resolve(rootDir));\n  Files.createDirectory(tmp.resolve(subDir));\n  Files.createFile(tmp.resolve(rootFile));\n  Files.createFile(tmp.resolve(subFile));\n  try (FileUploads fileUploads=new FileUploads(tmp.resolve(rootDir))){\n    Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n  }\n   Assert.assertFalse(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subFile)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCleanup() throws IOException {\n  Path rootDir=Paths.get(\"root\");\n  Path rootFile=rootDir.resolve(\"rootFile\");\n  Path subDir=rootDir.resolve(\"sub\");\n  Path subFile=subDir.resolve(\"subFile\");\n  Path tmp=temporaryFolder.getRoot().toPath();\n  Files.createDirectory(tmp.resolve(rootDir));\n  Files.createDirectory(tmp.resolve(subDir));\n  Files.createFile(tmp.resolve(rootFile));\n  Files.createFile(tmp.resolve(subFile));\n  try (FileUploads fileUploads=new FileUploads(tmp.resolve(rootDir))){\n    Assert.assertTrue(Files.exists(tmp.resolve(rootDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subDir)));\n    Assert.assertTrue(Files.exists(tmp.resolve(rootFile)));\n    Assert.assertTrue(Files.exists(tmp.resolve(subFile)));\n  }\n   Assert.assertFalse(Files.exists(tmp.resolve(rootDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subDir)));\n  Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n  Assert.assertFalse(Files.exists(tmp.resolve(subFile)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertFalse(Files.exists(tmp.resolve(rootFile)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 106,
    "startColumnNumber" : 30,
    "endLineNumber" : 106,
    "endColumnNumber" : 65
  }, {
    "charLength" : 35,
    "startLineNumber" : 111,
    "startColumnNumber" : 27,
    "endLineNumber" : 111,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}