{
  "id" : 108,
  "expression" : "partitionName",
  "projectName" : "apache@flink",
  "commitID" : "b6be14da65fedf01e82dc83a58e791709ce8ce57",
  "filePath" : "flink-connectors/flink-connector-pulsar/src/test/java/org/apache/flink/connector/pulsar/testutils/runtime/PulsarRuntimeOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "partitionName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 168,
      "startColumnNumber" : 25,
      "endLineNumber" : 168,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sendMessages(partitionName,schema,messages)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sendMessages(partitionName,schema,messages);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 163,
        "startColumnNumber" : 53,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String partitionName=topicNameWithPartition(topic,i);\n  List<T> messages=Stream.generate(supplier).limit(numRecordsPerSplit).collect(toList());\n  sendMessages(partitionName,schema,messages);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < DEFAULT_PARTITIONS; i++) {\n  String partitionName=topicNameWithPartition(topic,i);\n  List<T> messages=Stream.generate(supplier).limit(numRecordsPerSplit).collect(toList());\n  sendMessages(partitionName,schema,messages);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 158,
        "startColumnNumber" : 90,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String topicName=topicName(topic);\n  createTopic(topicName,DEFAULT_PARTITIONS);\n  for (int i=0; i < DEFAULT_PARTITIONS; i++) {\n    String partitionName=topicNameWithPartition(topic,i);\n    List<T> messages=Stream.generate(supplier).limit(numRecordsPerSplit).collect(toList());\n    sendMessages(partitionName,schema,messages);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1073,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a topic with default  {@link #DEFAULT_PARTITIONS} partitions and send a fixed number ofrecords to this topic.\n * @param topic Pulsar topic name, it couldn't be a name with partition index.\n * @param schema The Pulsar schema for serializing records into bytes.\n * @param supplier The supplier for providing the records which would be sent to Pulsar.\n * @param numRecordsPerSplit The number of records for a partition.\n */\npublic <T>void setupTopic(String topic,Schema<T> schema,Supplier<T> supplier,int numRecordsPerSplit){\n  String topicName=topicName(topic);\n  createTopic(topicName,DEFAULT_PARTITIONS);\n  for (int i=0; i < DEFAULT_PARTITIONS; i++) {\n    String partitionName=topicNameWithPartition(topic,i);\n    List<T> messages=Stream.generate(supplier).limit(numRecordsPerSplit).collect(toList());\n    sendMessages(partitionName,schema,messages);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sendMessages(partitionName,schema,messages);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 168,
    "startColumnNumber" : 25,
    "endLineNumber" : 168,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}