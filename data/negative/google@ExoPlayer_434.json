{
  "id" : 434,
  "expression" : "selections[i] == null",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/testutils/src/main/java/com/google/android/exoplayer2/testutil/FakeAdaptiveMediaPeriod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selections[i] == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 154,
      "startColumnNumber" : 33,
      "endLineNumber" : 154,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 154,
        "startColumnNumber" : 33,
        "endLineNumber" : 154,
        "endColumnNumber" : 82
      },
      "nodeContext" : "selections[i] == null || !mayRetainStreamFlags[i]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 154,
        "startColumnNumber" : 32,
        "endLineNumber" : 154,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(selections[i] == null || !mayRetainStreamFlags[i])",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 154,
        "startColumnNumber" : 10,
        "endLineNumber" : 154,
        "endColumnNumber" : 83
      },
      "nodeContext" : "streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])) {\n  ((ChunkSampleStream<FakeChunkSource>)streams[i]).release();\n  sampleStreams.remove(streams[i]);\n  streams[i]=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1659,
        "startLineNumber" : 153,
        "startColumnNumber" : 44,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])) {\n    ((ChunkSampleStream<FakeChunkSource>)streams[i]).release();\n    sampleStreams.remove(streams[i]);\n    streams[i]=null;\n  }\n  if (streams[i] == null && selections[i] != null) {\n    ExoTrackSelection selection=selections[i];\n    assertThat(selection.length()).isAtLeast(1);\n    TrackGroup trackGroup=selection.getTrackGroup();\n    assertThat(trackGroupArray.indexOf(trackGroup)).isNotEqualTo(C.INDEX_UNSET);\n    int indexInTrackGroup=selection.getIndexInTrackGroup(selection.getSelectedIndex());\n    assertThat(indexInTrackGroup).isAtLeast(0);\n    assertThat(indexInTrackGroup).isLessThan(trackGroup.length);\n    FakeChunkSource chunkSource=chunkSourceFactory.createChunkSource(selection,durationUs,transferListener);\n    ChunkSampleStream<FakeChunkSource> sampleStream=new ChunkSampleStream<>(MimeTypes.getTrackType(selection.getSelectedFormat().sampleMimeType),null,null,chunkSource,this,allocator,positionUs,DrmSessionManager.DRM_UNSUPPORTED,new DrmSessionEventListener.EventDispatcher(),new DefaultLoadErrorHandlingPolicy(3),mediaSourceEventDispatcher);\n    streams[i]=sampleStream;\n    sampleStreams.add(sampleStream);\n    streamResetFlags[i]=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1699,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < rendererCount; i++) {\n  if (streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])) {\n    ((ChunkSampleStream<FakeChunkSource>)streams[i]).release();\n    sampleStreams.remove(streams[i]);\n    streams[i]=null;\n  }\n  if (streams[i] == null && selections[i] != null) {\n    ExoTrackSelection selection=selections[i];\n    assertThat(selection.length()).isAtLeast(1);\n    TrackGroup trackGroup=selection.getTrackGroup();\n    assertThat(trackGroupArray.indexOf(trackGroup)).isNotEqualTo(C.INDEX_UNSET);\n    int indexInTrackGroup=selection.getIndexInTrackGroup(selection.getSelectedIndex());\n    assertThat(indexInTrackGroup).isAtLeast(0);\n    assertThat(indexInTrackGroup).isLessThan(trackGroup.length);\n    FakeChunkSource chunkSource=chunkSourceFactory.createChunkSource(selection,durationUs,transferListener);\n    ChunkSampleStream<FakeChunkSource> sampleStream=new ChunkSampleStream<>(MimeTypes.getTrackType(selection.getSelectedFormat().sampleMimeType),null,null,chunkSource,this,allocator,positionUs,DrmSessionManager.DRM_UNSUPPORTED,new DrmSessionEventListener.EventDispatcher(),new DefaultLoadErrorHandlingPolicy(3),mediaSourceEventDispatcher);\n    streams[i]=sampleStream;\n    sampleStreams.add(sampleStream);\n    streamResetFlags[i]=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 150,
        "startColumnNumber" : 23,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(prepared).isTrue();\n  int rendererCount=selections.length;\n  for (int i=0; i < rendererCount; i++) {\n    if (streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])) {\n      ((ChunkSampleStream<FakeChunkSource>)streams[i]).release();\n      sampleStreams.remove(streams[i]);\n      streams[i]=null;\n    }\n    if (streams[i] == null && selections[i] != null) {\n      ExoTrackSelection selection=selections[i];\n      assertThat(selection.length()).isAtLeast(1);\n      TrackGroup trackGroup=selection.getTrackGroup();\n      assertThat(trackGroupArray.indexOf(trackGroup)).isNotEqualTo(C.INDEX_UNSET);\n      int indexInTrackGroup=selection.getIndexInTrackGroup(selection.getSelectedIndex());\n      assertThat(indexInTrackGroup).isAtLeast(0);\n      assertThat(indexInTrackGroup).isLessThan(trackGroup.length);\n      FakeChunkSource chunkSource=chunkSourceFactory.createChunkSource(selection,durationUs,transferListener);\n      ChunkSampleStream<FakeChunkSource> sampleStream=new ChunkSampleStream<>(MimeTypes.getTrackType(selection.getSelectedFormat().sampleMimeType),null,null,chunkSource,this,allocator,positionUs,DrmSessionManager.DRM_UNSUPPORTED,new DrmSessionEventListener.EventDispatcher(),new DefaultLoadErrorHandlingPolicy(3),mediaSourceEventDispatcher);\n      streams[i]=sampleStream;\n      sampleStreams.add(sampleStream);\n      streamResetFlags[i]=true;\n    }\n  }\n  sequenceableLoader=new CompositeSequenceableLoader(sampleStreams.toArray(new ChunkSampleStream[0]));\n  return seekToUs(positionUs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2260,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings({\"unchecked\",\"rawtypes\"}) @Override public long selectTracks(@NullableType ExoTrackSelection[] selections,boolean[] mayRetainStreamFlags,@NullableType SampleStream[] streams,boolean[] streamResetFlags,long positionUs){\n  assertThat(prepared).isTrue();\n  int rendererCount=selections.length;\n  for (int i=0; i < rendererCount; i++) {\n    if (streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])) {\n      ((ChunkSampleStream<FakeChunkSource>)streams[i]).release();\n      sampleStreams.remove(streams[i]);\n      streams[i]=null;\n    }\n    if (streams[i] == null && selections[i] != null) {\n      ExoTrackSelection selection=selections[i];\n      assertThat(selection.length()).isAtLeast(1);\n      TrackGroup trackGroup=selection.getTrackGroup();\n      assertThat(trackGroupArray.indexOf(trackGroup)).isNotEqualTo(C.INDEX_UNSET);\n      int indexInTrackGroup=selection.getIndexInTrackGroup(selection.getSelectedIndex());\n      assertThat(indexInTrackGroup).isAtLeast(0);\n      assertThat(indexInTrackGroup).isLessThan(trackGroup.length);\n      FakeChunkSource chunkSource=chunkSourceFactory.createChunkSource(selection,durationUs,transferListener);\n      ChunkSampleStream<FakeChunkSource> sampleStream=new ChunkSampleStream<>(MimeTypes.getTrackType(selection.getSelectedFormat().sampleMimeType),null,null,chunkSource,this,allocator,positionUs,DrmSessionManager.DRM_UNSUPPORTED,new DrmSessionEventListener.EventDispatcher(),new DefaultLoadErrorHandlingPolicy(3),mediaSourceEventDispatcher);\n      streams[i]=sampleStream;\n      sampleStreams.add(sampleStream);\n      streamResetFlags[i]=true;\n    }\n  }\n  sequenceableLoader=new CompositeSequenceableLoader(sampleStreams.toArray(new ChunkSampleStream[0]));\n  return seekToUs(positionUs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 154,
        "startColumnNumber" : 10,
        "endLineNumber" : 154,
        "endColumnNumber" : 83
      },
      "nodeContext" : "streams[i] != null && (selections[i] == null || !mayRetainStreamFlags[i])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 154,
    "startColumnNumber" : 33,
    "endLineNumber" : 154,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}