{
  "id" : 82,
  "expression" : "System",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/PowerOfTwoOrNot.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 11,
      "startColumnNumber" : 27,
      "endLineNumber" : 11,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 11,
        "startColumnNumber" : 27,
        "endLineNumber" : 11,
        "endColumnNumber" : 36
      },
      "nodeContext" : "System.in",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 11,
        "startColumnNumber" : 15,
        "endLineNumber" : 11,
        "endColumnNumber" : 37
      },
      "nodeContext" : "new Scanner(System.in)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 11,
        "startColumnNumber" : 10,
        "endLineNumber" : 11,
        "endColumnNumber" : 37
      },
      "nodeContext" : "sc=new Scanner(System.in)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 11,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Scanner sc=new Scanner(System.in);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 9,
        "startColumnNumber" : 41,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 11,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Scanner sc=new Scanner(System.in);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 12,
      "startColumnNumber" : 2,
      "endLineNumber" : 12,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 12,
        "endColumnNumber" : 12
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 12,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(\"Enter the number\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 12,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(\"Enter the number\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 9,
        "startColumnNumber" : 41,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 12,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(\"Enter the number\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 16,
      "startColumnNumber" : 3,
      "endLineNumber" : 16,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 16,
        "startColumnNumber" : 3,
        "endLineNumber" : 16,
        "endColumnNumber" : 13
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 16,
        "startColumnNumber" : 3,
        "endLineNumber" : 16,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.out.println(\"Number is a power of two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 16,
        "startColumnNumber" : 3,
        "endLineNumber" : 16,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(\"Number is a power of two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 15,
        "startColumnNumber" : 20,
        "endLineNumber" : 17,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  System.out.println(\"Number is a power of two\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (isPowerOfTwo) {\n  System.out.println(\"Number is a power of two\");\n}\n else {\n  System.out.println(\"Number is not a power of two\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 9,
        "startColumnNumber" : 41,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 16,
        "startColumnNumber" : 3,
        "endLineNumber" : 16,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(\"Number is a power of two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 18,
      "startColumnNumber" : 3,
      "endLineNumber" : 18,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 18,
        "startColumnNumber" : 3,
        "endLineNumber" : 18,
        "endColumnNumber" : 13
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 18,
        "startColumnNumber" : 3,
        "endLineNumber" : 18,
        "endColumnNumber" : 53
      },
      "nodeContext" : "System.out.println(\"Number is not a power of two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 18,
        "startColumnNumber" : 3,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"Number is not a power of two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 17,
        "startColumnNumber" : 9,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  System.out.println(\"Number is not a power of two\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (isPowerOfTwo) {\n  System.out.println(\"Number is a power of two\");\n}\n else {\n  System.out.println(\"Number is not a power of two\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 9,
        "startColumnNumber" : 41,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 20,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  Scanner sc=new Scanner(System.in);\n  System.out.println(\"Enter the number\");\n  int num=sc.nextInt();\n  boolean isPowerOfTwo=checkIfPowerOfTwoOrNot(num);\n  if (isPowerOfTwo) {\n    System.out.println(\"Number is a power of two\");\n  }\n else {\n    System.out.println(\"Number is not a power of two\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 18,
        "startColumnNumber" : 3,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"Number is not a power of two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 11,
    "startColumnNumber" : 27,
    "endLineNumber" : 11,
    "endColumnNumber" : 33
  }, {
    "charLength" : 6,
    "startLineNumber" : 12,
    "startColumnNumber" : 2,
    "endLineNumber" : 12,
    "endColumnNumber" : 8
  }, {
    "charLength" : 6,
    "startLineNumber" : 16,
    "startColumnNumber" : 3,
    "endLineNumber" : 16,
    "endColumnNumber" : 9
  }, {
    "charLength" : 6,
    "startLineNumber" : 18,
    "startColumnNumber" : 3,
    "endLineNumber" : 18,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}