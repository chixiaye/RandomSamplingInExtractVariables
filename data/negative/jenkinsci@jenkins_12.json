{
  "id" : 12,
  "expression" : "wc",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/model/ComputerSetTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 109,
      "startColumnNumber" : 8,
      "endLineNumber" : 109,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 22
      },
      "nodeContext" : "wc.login(USER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 23
      },
      "nodeContext" : "wc.login(USER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 23
      },
      "nodeContext" : "wc.login(USER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  }, {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 110,
      "startColumnNumber" : 24,
      "endLineNumber" : 110,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 110,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 44
      },
      "nodeContext" : "wc.goTo(\"computer/\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 110,
        "startColumnNumber" : 17,
        "endLineNumber" : 110,
        "endColumnNumber" : 44
      },
      "nodeContext" : "page=wc.goTo(\"computer/\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 45
      },
      "nodeContext" : "HtmlPage page=wc.goTo(\"computer/\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 45
      },
      "nodeContext" : "HtmlPage page=wc.goTo(\"computer/\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  }, {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 115,
      "startColumnNumber" : 15,
      "endLineNumber" : 115,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 115,
        "endColumnNumber" : 44
      },
      "nodeContext" : "wc.goTo(\"computer/configure\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 44
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 45
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 45
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  }, {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 119,
      "startColumnNumber" : 8,
      "endLineNumber" : 119,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 25
      },
      "nodeContext" : "wc.login(MANAGER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 26
      },
      "nodeContext" : "wc.login(MANAGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 26
      },
      "nodeContext" : "wc.login(MANAGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  }, {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 120,
      "startColumnNumber" : 15,
      "endLineNumber" : 120,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 120,
        "startColumnNumber" : 15,
        "endLineNumber" : 120,
        "endColumnNumber" : 35
      },
      "nodeContext" : "wc.goTo(\"computer/\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 35
      },
      "nodeContext" : "page=wc.goTo(\"computer/\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 36
      },
      "nodeContext" : "page=wc.goTo(\"computer/\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 36
      },
      "nodeContext" : "page=wc.goTo(\"computer/\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  }, {
    "nodeContext" : "wc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 125,
      "startColumnNumber" : 15,
      "endLineNumber" : 125,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 125,
        "startColumnNumber" : 15,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "wc.goTo(\"computer/configure\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 45
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void managePermissionCanConfigure() throws Exception {\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n  wc.login(USER);\n  HtmlPage page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,not(containsString(\"Node Monitoring\")));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  wc.login(MANAGER);\n  page=wc.goTo(\"computer/\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"Node Monitoring\"));\n  page=wc.goTo(\"computer/configure\");\n  assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  responseContent=page.getWebResponse().getContentAsString();\n  assertThat(responseContent,containsString(\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 45
      },
      "nodeContext" : "page=wc.goTo(\"computer/configure\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule.WebClient"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 109,
    "startColumnNumber" : 8,
    "endLineNumber" : 109,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 110,
    "startColumnNumber" : 24,
    "endLineNumber" : 110,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 115,
    "startColumnNumber" : 15,
    "endLineNumber" : 115,
    "endColumnNumber" : 17
  }, {
    "charLength" : 2,
    "startLineNumber" : 119,
    "startColumnNumber" : 8,
    "endLineNumber" : 119,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 120,
    "startColumnNumber" : 15,
    "endLineNumber" : 120,
    "endColumnNumber" : 17
  }, {
    "charLength" : 2,
    "startLineNumber" : 125,
    "startColumnNumber" : 15,
    "endLineNumber" : 125,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}