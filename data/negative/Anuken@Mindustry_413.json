{
  "id" : 413,
  "expression" : "new Image(icon.size,icon.size)",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/tools/src/mindustry/tools/Generators.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Image(icon.size,icon.size)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 312,
      "startColumnNumber" : 39,
      "endLineNumber" : 312,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 312,
        "startColumnNumber" : 30,
        "endLineNumber" : 312,
        "endColumnNumber" : 70
      },
      "nodeContext" : "scaled=new Image(icon.size,icon.size)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 312,
        "startColumnNumber" : 24,
        "endLineNumber" : 312,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Image scaled=new Image(icon.size,icon.size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 311,
        "startColumnNumber" : 50,
        "endLineNumber" : 319,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Image scaled=new Image(icon.size,icon.size);\n  scaled.drawScaled(image);\n  scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n  if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n    image.save(block.name + \"-icon-logic\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 311,
        "startColumnNumber" : 20,
        "endLineNumber" : 319,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Cicon icon : Cicon.scaled) {\n  Image scaled=new Image(icon.size,icon.size);\n  scaled.drawScaled(image);\n  scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n  if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n    image.save(block.name + \"-icon-logic\");\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4698,
        "startLineNumber" : 245,
        "startColumnNumber" : 19,
        "endLineNumber" : 347,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Image last=null;\n  if (block.outlineIcon) {\n    int radius=4;\n    GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n    Image base=ImagePacker.get(region);\n    Image out=last=new Image(region.width,region.height);\n    for (int x=0; x < out.width; x++) {\n      for (int y=0; y < out.height; y++) {\n        Color color=base.getColor(x,y);\n        out.draw(x,y,color);\n        if (color.a < 1f) {\n          boolean found=false;\n          outer:           for (int rx=-radius; rx <= radius; rx++) {\n            for (int ry=-radius; ry <= radius; ry++) {\n              if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                found=true;\n                break outer;\n              }\n            }\n          }\n          if (found) {\n            out.draw(x,y,block.outlineColor);\n          }\n        }\n      }\n    }\n    if (block.outlinedIcon >= 0) {\n      for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n        out.draw(ImagePacker.get(regions[i]));\n      }\n    }\n    region.path.delete();\n    out.save(block.name);\n  }\n  Image image=ImagePacker.get(regions[0]);\n  int i=0;\n  for (  TextureRegion region : regions) {\n    i++;\n    if (i != regions.length || last == null) {\n      image.draw(region);\n    }\n else {\n      image.draw(last);\n    }\n    if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n      image.draw(shardTeamTop);\n    }\n  }\n  if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n    image.save(\"block-\" + block.name + \"-full\");\n  }\n  image.save(\"../editor/\" + block.name + \"-icon-editor\");\n  for (  Cicon icon : Cicon.scaled) {\n    Image scaled=new Image(icon.size,icon.size);\n    scaled.drawScaled(image);\n    scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n    if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n      image.save(block.name + \"-icon-logic\");\n    }\n  }\n  boolean hasEmpty=false;\n  Color average=new Color();\n  float asum=0f;\n  for (int x=0; x < image.width; x++) {\n    for (int y=0; y < image.height; y++) {\n      Color color=image.getColor(x,y);\n      average.r+=color.r * color.a;\n      average.g+=color.g * color.a;\n      average.b+=color.b * color.a;\n      asum+=color.a;\n      if (color.a < 0.9f) {\n        hasEmpty=true;\n      }\n    }\n  }\n  average.mul(1f / asum);\n  if (block instanceof Floor) {\n    average.mul(0.8f);\n  }\n else {\n    average.mul(1.1f);\n  }\n  average.a=hasEmpty ? 0.1f : 1f;\n  colors.draw(block.id,0,average);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 574,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4824,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 349,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  Image last=null;\n  if (block.outlineIcon) {\n    int radius=4;\n    GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n    Image base=ImagePacker.get(region);\n    Image out=last=new Image(region.width,region.height);\n    for (int x=0; x < out.width; x++) {\n      for (int y=0; y < out.height; y++) {\n        Color color=base.getColor(x,y);\n        out.draw(x,y,color);\n        if (color.a < 1f) {\n          boolean found=false;\n          outer:           for (int rx=-radius; rx <= radius; rx++) {\n            for (int ry=-radius; ry <= radius; ry++) {\n              if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                found=true;\n                break outer;\n              }\n            }\n          }\n          if (found) {\n            out.draw(x,y,block.outlineColor);\n          }\n        }\n      }\n    }\n    if (block.outlinedIcon >= 0) {\n      for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n        out.draw(ImagePacker.get(regions[i]));\n      }\n    }\n    region.path.delete();\n    out.save(block.name);\n  }\n  Image image=ImagePacker.get(regions[0]);\n  int i=0;\n  for (  TextureRegion region : regions) {\n    i++;\n    if (i != regions.length || last == null) {\n      image.draw(region);\n    }\n else {\n      image.draw(last);\n    }\n    if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n      image.draw(shardTeamTop);\n    }\n  }\n  if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n    image.save(\"block-\" + block.name + \"-full\");\n  }\n  image.save(\"../editor/\" + block.name + \"-icon-editor\");\n  for (  Cicon icon : Cicon.scaled) {\n    Image scaled=new Image(icon.size,icon.size);\n    scaled.drawScaled(image);\n    scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n    if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n      image.save(block.name + \"-icon-logic\");\n    }\n  }\n  boolean hasEmpty=false;\n  Color average=new Color();\n  float asum=0f;\n  for (int x=0; x < image.width; x++) {\n    for (int y=0; y < image.height; y++) {\n      Color color=image.getColor(x,y);\n      average.r+=color.r * color.a;\n      average.g+=color.g * color.a;\n      average.b+=color.b * color.a;\n      asum+=color.a;\n      if (color.a < 0.9f) {\n        hasEmpty=true;\n      }\n    }\n  }\n  average.mul(1f / asum);\n  if (block instanceof Floor) {\n    average.mul(0.8f);\n  }\n else {\n    average.mul(1.1f);\n  }\n  average.a=hasEmpty ? 0.1f : 1f;\n  colors.draw(block.id,0,average);\n}\n catch (NullPointerException e) {\n  Log.err(\"Block &ly'@'&lr has an null region!\",block);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 587,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 6546,
        "startLineNumber" : 204,
        "startColumnNumber" : 47,
        "endLineNumber" : 350,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (block.isAir() || block instanceof ConstructBlock || block instanceof OreBlock|| block instanceof LegacyBlock)   continue;\n  block.load();\n  TextureRegion[] regions=block.getGeneratedIcons();\n  if (block instanceof Floor) {\n    for (    TextureRegion region : block.variantRegions()) {\n      GenRegion gen=(GenRegion)region;\n      if (gen.path == null)       continue;\n      gen.path.copyTo(Fi.get(\"../editor/editor-\" + gen.path.name()));\n    }\n  }\n  Image shardTeamTop=null;\n  if (block.teamRegion.found()) {\n    Image teamr=ImagePacker.get(block.teamRegion);\n    for (    Team team : Team.all) {\n      if (team.hasPalette) {\n        Image out=new Image(teamr.width,teamr.height);\n        teamr.each((x,y) -> {\n          int color=teamr.getColor(x,y).rgba8888();\n          int index=color == 0xffffffff ? 0 : color == 0xdcc6c6ff ? 1 : color == 0x9d7f7fff ? 2 : -1;\n          out.draw(x,y,index == -1 ? teamr.getColor(x,y) : team.palette[index]);\n        }\n);\n        out.save(block.name + \"-team-\" + team.name);\n        if (team == Team.sharded) {\n          shardTeamTop=out;\n        }\n      }\n    }\n  }\n  if (regions.length == 0) {\n    continue;\n  }\n  try {\n    Image last=null;\n    if (block.outlineIcon) {\n      int radius=4;\n      GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n      Image base=ImagePacker.get(region);\n      Image out=last=new Image(region.width,region.height);\n      for (int x=0; x < out.width; x++) {\n        for (int y=0; y < out.height; y++) {\n          Color color=base.getColor(x,y);\n          out.draw(x,y,color);\n          if (color.a < 1f) {\n            boolean found=false;\n            outer:             for (int rx=-radius; rx <= radius; rx++) {\n              for (int ry=-radius; ry <= radius; ry++) {\n                if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                  found=true;\n                  break outer;\n                }\n              }\n            }\n            if (found) {\n              out.draw(x,y,block.outlineColor);\n            }\n          }\n        }\n      }\n      if (block.outlinedIcon >= 0) {\n        for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n          out.draw(ImagePacker.get(regions[i]));\n        }\n      }\n      region.path.delete();\n      out.save(block.name);\n    }\n    Image image=ImagePacker.get(regions[0]);\n    int i=0;\n    for (    TextureRegion region : regions) {\n      i++;\n      if (i != regions.length || last == null) {\n        image.draw(region);\n      }\n else {\n        image.draw(last);\n      }\n      if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n        image.draw(shardTeamTop);\n      }\n    }\n    if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n      image.save(\"block-\" + block.name + \"-full\");\n    }\n    image.save(\"../editor/\" + block.name + \"-icon-editor\");\n    for (    Cicon icon : Cicon.scaled) {\n      Image scaled=new Image(icon.size,icon.size);\n      scaled.drawScaled(image);\n      scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n      if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n        image.save(block.name + \"-icon-logic\");\n      }\n    }\n    boolean hasEmpty=false;\n    Color average=new Color();\n    float asum=0f;\n    for (int x=0; x < image.width; x++) {\n      for (int y=0; y < image.height; y++) {\n        Color color=image.getColor(x,y);\n        average.r+=color.r * color.a;\n        average.g+=color.g * color.a;\n        average.b+=color.b * color.a;\n        asum+=color.a;\n        if (color.a < 0.9f) {\n          hasEmpty=true;\n        }\n      }\n    }\n    average.mul(1f / asum);\n    if (block instanceof Floor) {\n      average.mul(0.8f);\n    }\n else {\n      average.mul(1.1f);\n    }\n    average.a=hasEmpty ? 0.1f : 1f;\n    colors.draw(block.id,0,average);\n  }\n catch (  NullPointerException e) {\n    Log.err(\"Block &ly'@'&lr has an null region!\",block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 813,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6581,
        "startLineNumber" : 204,
        "startColumnNumber" : 12,
        "endLineNumber" : 350,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Block block : content.blocks()) {\n  if (block.isAir() || block instanceof ConstructBlock || block instanceof OreBlock|| block instanceof LegacyBlock)   continue;\n  block.load();\n  TextureRegion[] regions=block.getGeneratedIcons();\n  if (block instanceof Floor) {\n    for (    TextureRegion region : block.variantRegions()) {\n      GenRegion gen=(GenRegion)region;\n      if (gen.path == null)       continue;\n      gen.path.copyTo(Fi.get(\"../editor/editor-\" + gen.path.name()));\n    }\n  }\n  Image shardTeamTop=null;\n  if (block.teamRegion.found()) {\n    Image teamr=ImagePacker.get(block.teamRegion);\n    for (    Team team : Team.all) {\n      if (team.hasPalette) {\n        Image out=new Image(teamr.width,teamr.height);\n        teamr.each((x,y) -> {\n          int color=teamr.getColor(x,y).rgba8888();\n          int index=color == 0xffffffff ? 0 : color == 0xdcc6c6ff ? 1 : color == 0x9d7f7fff ? 2 : -1;\n          out.draw(x,y,index == -1 ? teamr.getColor(x,y) : team.palette[index]);\n        }\n);\n        out.save(block.name + \"-team-\" + team.name);\n        if (team == Team.sharded) {\n          shardTeamTop=out;\n        }\n      }\n    }\n  }\n  if (regions.length == 0) {\n    continue;\n  }\n  try {\n    Image last=null;\n    if (block.outlineIcon) {\n      int radius=4;\n      GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n      Image base=ImagePacker.get(region);\n      Image out=last=new Image(region.width,region.height);\n      for (int x=0; x < out.width; x++) {\n        for (int y=0; y < out.height; y++) {\n          Color color=base.getColor(x,y);\n          out.draw(x,y,color);\n          if (color.a < 1f) {\n            boolean found=false;\n            outer:             for (int rx=-radius; rx <= radius; rx++) {\n              for (int ry=-radius; ry <= radius; ry++) {\n                if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                  found=true;\n                  break outer;\n                }\n              }\n            }\n            if (found) {\n              out.draw(x,y,block.outlineColor);\n            }\n          }\n        }\n      }\n      if (block.outlinedIcon >= 0) {\n        for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n          out.draw(ImagePacker.get(regions[i]));\n        }\n      }\n      region.path.delete();\n      out.save(block.name);\n    }\n    Image image=ImagePacker.get(regions[0]);\n    int i=0;\n    for (    TextureRegion region : regions) {\n      i++;\n      if (i != regions.length || last == null) {\n        image.draw(region);\n      }\n else {\n        image.draw(last);\n      }\n      if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n        image.draw(shardTeamTop);\n      }\n    }\n    if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n      image.save(\"block-\" + block.name + \"-full\");\n    }\n    image.save(\"../editor/\" + block.name + \"-icon-editor\");\n    for (    Cicon icon : Cicon.scaled) {\n      Image scaled=new Image(icon.size,icon.size);\n      scaled.drawScaled(image);\n      scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n      if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n        image.save(block.name + \"-icon-logic\");\n      }\n    }\n    boolean hasEmpty=false;\n    Color average=new Color();\n    float asum=0f;\n    for (int x=0; x < image.width; x++) {\n      for (int y=0; y < image.height; y++) {\n        Color color=image.getColor(x,y);\n        average.r+=color.r * color.a;\n        average.g+=color.g * color.a;\n        average.b+=color.b * color.a;\n        asum+=color.a;\n        if (color.a < 0.9f) {\n          hasEmpty=true;\n        }\n      }\n    }\n    average.mul(1f / asum);\n    if (block instanceof Floor) {\n      average.mul(0.8f);\n    }\n else {\n      average.mul(1.1f);\n    }\n    average.a=hasEmpty ? 0.1f : 1f;\n    colors.draw(block.id,0,average);\n  }\n catch (  NullPointerException e) {\n    Log.err(\"Block &ly'@'&lr has an null region!\",block);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 821,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 6736,
        "startLineNumber" : 201,
        "startColumnNumber" : 50,
        "endLineNumber" : 353,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Image colors=new Image(content.blocks().size,1);\n  for (  Block block : content.blocks()) {\n    if (block.isAir() || block instanceof ConstructBlock || block instanceof OreBlock|| block instanceof LegacyBlock)     continue;\n    block.load();\n    TextureRegion[] regions=block.getGeneratedIcons();\n    if (block instanceof Floor) {\n      for (      TextureRegion region : block.variantRegions()) {\n        GenRegion gen=(GenRegion)region;\n        if (gen.path == null)         continue;\n        gen.path.copyTo(Fi.get(\"../editor/editor-\" + gen.path.name()));\n      }\n    }\n    Image shardTeamTop=null;\n    if (block.teamRegion.found()) {\n      Image teamr=ImagePacker.get(block.teamRegion);\n      for (      Team team : Team.all) {\n        if (team.hasPalette) {\n          Image out=new Image(teamr.width,teamr.height);\n          teamr.each((x,y) -> {\n            int color=teamr.getColor(x,y).rgba8888();\n            int index=color == 0xffffffff ? 0 : color == 0xdcc6c6ff ? 1 : color == 0x9d7f7fff ? 2 : -1;\n            out.draw(x,y,index == -1 ? teamr.getColor(x,y) : team.palette[index]);\n          }\n);\n          out.save(block.name + \"-team-\" + team.name);\n          if (team == Team.sharded) {\n            shardTeamTop=out;\n          }\n        }\n      }\n    }\n    if (regions.length == 0) {\n      continue;\n    }\n    try {\n      Image last=null;\n      if (block.outlineIcon) {\n        int radius=4;\n        GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n        Image base=ImagePacker.get(region);\n        Image out=last=new Image(region.width,region.height);\n        for (int x=0; x < out.width; x++) {\n          for (int y=0; y < out.height; y++) {\n            Color color=base.getColor(x,y);\n            out.draw(x,y,color);\n            if (color.a < 1f) {\n              boolean found=false;\n              outer:               for (int rx=-radius; rx <= radius; rx++) {\n                for (int ry=-radius; ry <= radius; ry++) {\n                  if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                    found=true;\n                    break outer;\n                  }\n                }\n              }\n              if (found) {\n                out.draw(x,y,block.outlineColor);\n              }\n            }\n          }\n        }\n        if (block.outlinedIcon >= 0) {\n          for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n            out.draw(ImagePacker.get(regions[i]));\n          }\n        }\n        region.path.delete();\n        out.save(block.name);\n      }\n      Image image=ImagePacker.get(regions[0]);\n      int i=0;\n      for (      TextureRegion region : regions) {\n        i++;\n        if (i != regions.length || last == null) {\n          image.draw(region);\n        }\n else {\n          image.draw(last);\n        }\n        if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n          image.draw(shardTeamTop);\n        }\n      }\n      if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n        image.save(\"block-\" + block.name + \"-full\");\n      }\n      image.save(\"../editor/\" + block.name + \"-icon-editor\");\n      for (      Cicon icon : Cicon.scaled) {\n        Image scaled=new Image(icon.size,icon.size);\n        scaled.drawScaled(image);\n        scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n        if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n          image.save(block.name + \"-icon-logic\");\n        }\n      }\n      boolean hasEmpty=false;\n      Color average=new Color();\n      float asum=0f;\n      for (int x=0; x < image.width; x++) {\n        for (int y=0; y < image.height; y++) {\n          Color color=image.getColor(x,y);\n          average.r+=color.r * color.a;\n          average.g+=color.g * color.a;\n          average.b+=color.b * color.a;\n          asum+=color.a;\n          if (color.a < 0.9f) {\n            hasEmpty=true;\n          }\n        }\n      }\n      average.mul(1f / asum);\n      if (block instanceof Floor) {\n        average.mul(0.8f);\n      }\n else {\n        average.mul(1.1f);\n      }\n      average.a=hasEmpty ? 0.1f : 1f;\n      colors.draw(block.id,0,average);\n    }\n catch (    NullPointerException e) {\n      Log.err(\"Block &ly'@'&lr has an null region!\",block);\n    }\n  }\n  colors.save(\"../../../assets/sprites/block_colors\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 841,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6742,
        "startLineNumber" : 201,
        "startColumnNumber" : 44,
        "endLineNumber" : 353,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  Image colors=new Image(content.blocks().size,1);\n  for (  Block block : content.blocks()) {\n    if (block.isAir() || block instanceof ConstructBlock || block instanceof OreBlock|| block instanceof LegacyBlock)     continue;\n    block.load();\n    TextureRegion[] regions=block.getGeneratedIcons();\n    if (block instanceof Floor) {\n      for (      TextureRegion region : block.variantRegions()) {\n        GenRegion gen=(GenRegion)region;\n        if (gen.path == null)         continue;\n        gen.path.copyTo(Fi.get(\"../editor/editor-\" + gen.path.name()));\n      }\n    }\n    Image shardTeamTop=null;\n    if (block.teamRegion.found()) {\n      Image teamr=ImagePacker.get(block.teamRegion);\n      for (      Team team : Team.all) {\n        if (team.hasPalette) {\n          Image out=new Image(teamr.width,teamr.height);\n          teamr.each((x,y) -> {\n            int color=teamr.getColor(x,y).rgba8888();\n            int index=color == 0xffffffff ? 0 : color == 0xdcc6c6ff ? 1 : color == 0x9d7f7fff ? 2 : -1;\n            out.draw(x,y,index == -1 ? teamr.getColor(x,y) : team.palette[index]);\n          }\n);\n          out.save(block.name + \"-team-\" + team.name);\n          if (team == Team.sharded) {\n            shardTeamTop=out;\n          }\n        }\n      }\n    }\n    if (regions.length == 0) {\n      continue;\n    }\n    try {\n      Image last=null;\n      if (block.outlineIcon) {\n        int radius=4;\n        GenRegion region=(GenRegion)regions[block.outlinedIcon >= 0 ? block.outlinedIcon : regions.length - 1];\n        Image base=ImagePacker.get(region);\n        Image out=last=new Image(region.width,region.height);\n        for (int x=0; x < out.width; x++) {\n          for (int y=0; y < out.height; y++) {\n            Color color=base.getColor(x,y);\n            out.draw(x,y,color);\n            if (color.a < 1f) {\n              boolean found=false;\n              outer:               for (int rx=-radius; rx <= radius; rx++) {\n                for (int ry=-radius; ry <= radius; ry++) {\n                  if (Mathf.dst(rx,ry) <= radius && base.getColor(rx + x,ry + y).a > 0.01f) {\n                    found=true;\n                    break outer;\n                  }\n                }\n              }\n              if (found) {\n                out.draw(x,y,block.outlineColor);\n              }\n            }\n          }\n        }\n        if (block.outlinedIcon >= 0) {\n          for (int i=block.outlinedIcon + 1; i < regions.length; i++) {\n            out.draw(ImagePacker.get(regions[i]));\n          }\n        }\n        region.path.delete();\n        out.save(block.name);\n      }\n      Image image=ImagePacker.get(regions[0]);\n      int i=0;\n      for (      TextureRegion region : regions) {\n        i++;\n        if (i != regions.length || last == null) {\n          image.draw(region);\n        }\n else {\n          image.draw(last);\n        }\n        if (region == block.teamRegions[Team.sharded.id] && shardTeamTop != null) {\n          image.draw(shardTeamTop);\n        }\n      }\n      if (!(regions.length == 1 && regions[0] == Core.atlas.find(block.name) && shardTeamTop == null)) {\n        image.save(\"block-\" + block.name + \"-full\");\n      }\n      image.save(\"../editor/\" + block.name + \"-icon-editor\");\n      for (      Cicon icon : Cicon.scaled) {\n        Image scaled=new Image(icon.size,icon.size);\n        scaled.drawScaled(image);\n        scaled.save(\"../ui/block-\" + block.name + \"-\"+ icon.name());\n        if (icon == logicIcon && block.synthetic() && block.buildVisibility != BuildVisibility.hidden) {\n          image.save(block.name + \"-icon-logic\");\n        }\n      }\n      boolean hasEmpty=false;\n      Color average=new Color();\n      float asum=0f;\n      for (int x=0; x < image.width; x++) {\n        for (int y=0; y < image.height; y++) {\n          Color color=image.getColor(x,y);\n          average.r+=color.r * color.a;\n          average.g+=color.g * color.a;\n          average.b+=color.b * color.a;\n          asum+=color.a;\n          if (color.a < 0.9f) {\n            hasEmpty=true;\n          }\n        }\n      }\n      average.mul(1f / asum);\n      if (block instanceof Floor) {\n        average.mul(0.8f);\n      }\n else {\n        average.mul(1.1f);\n      }\n      average.a=hasEmpty ? 0.1f : 1f;\n      colors.draw(block.id,0,average);\n    }\n catch (    NullPointerException e) {\n      Log.err(\"Block &ly'@'&lr has an null region!\",block);\n    }\n  }\n  colors.save(\"../../../assets/sprites/block_colors\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 842,
      "astHeight" : 26
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 312,
        "startColumnNumber" : 24,
        "endLineNumber" : 312,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Image scaled=new Image(icon.size,icon.size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "mindustry.tools.Image"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 312,
    "startColumnNumber" : 39,
    "endLineNumber" : 312,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}