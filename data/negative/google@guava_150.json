{
  "id" : 150,
  "expression" : "asList(\"1\",null,\"3\")",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/collect/FluentIterableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "asList(\"1\",null,\"3\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 426,
      "startColumnNumber" : 25,
      "endLineNumber" : 426,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 426,
        "startColumnNumber" : 17,
        "endLineNumber" : 426,
        "endColumnNumber" : 47
      },
      "nodeContext" : "input=asList(\"1\",null,\"3\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 426,
        "startColumnNumber" : 4,
        "endLineNumber" : 426,
        "endColumnNumber" : 48
      },
      "nodeContext" : "List<String> input=asList(\"1\",null,\"3\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 425,
        "startColumnNumber" : 57,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<String> input=asList(\"1\",null,\"3\");\n  Iterable<Integer> iterable=FluentIterable.from(input).transform(new IntegerValueOfFunction());\n  Iterator<Integer> resultIterator=iterable.iterator();\n  resultIterator.next();\n  try {\n    resultIterator.next();\n    fail(\"Transforming null to int should throw NumberFormatException\");\n  }\n catch (  NumberFormatException expected) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 425,
        "startColumnNumber" : 2,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testTransformWith_poorlyBehavedTransform(){\n  List<String> input=asList(\"1\",null,\"3\");\n  Iterable<Integer> iterable=FluentIterable.from(input).transform(new IntegerValueOfFunction());\n  Iterator<Integer> resultIterator=iterable.iterator();\n  resultIterator.next();\n  try {\n    resultIterator.next();\n    fail(\"Transforming null to int should throw NumberFormatException\");\n  }\n catch (  NumberFormatException expected) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 426,
        "startColumnNumber" : 4,
        "endLineNumber" : 426,
        "endColumnNumber" : 48
      },
      "nodeContext" : "List<String> input=asList(\"1\",null,\"3\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 426,
    "startColumnNumber" : 25,
    "endLineNumber" : 426,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}