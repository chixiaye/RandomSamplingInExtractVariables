{
  "id" : 244,
  "expression" : "obj",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-json/src/test/java/cn/hutool/json/JSONConvertTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "obj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 38,
      "endLineNumber" : 58,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 58,
        "startColumnNumber" : 38,
        "endLineNumber" : 58,
        "endColumnNumber" : 67
      },
      "nodeContext" : "obj.getInt(\"toSendManIdCard\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 24,
        "startColumnNumber" : 29,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 23,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testBean2Json(){\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.json.JSONObject"
  }, {
    "nodeContext" : "obj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 33,
      "endLineNumber" : 60,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 66
      },
      "nodeContext" : "obj.getJSONObject(\"userInfoDict\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 66
      },
      "nodeContext" : "examInfoDictsJson=obj.getJSONObject(\"userInfoDict\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 24,
        "startColumnNumber" : 29,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 23,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testBean2Json(){\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.json.JSONObject"
  }, {
    "nodeContext" : "obj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 64,
      "startColumnNumber" : 33,
      "endLineNumber" : 64,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 64,
        "startColumnNumber" : 14,
        "endLineNumber" : 64,
        "endColumnNumber" : 72
      },
      "nodeContext" : "JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 9,
        "endLineNumber" : 64,
        "endColumnNumber" : 72
      },
      "nodeContext" : "id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 24,
        "startColumnNumber" : 29,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 23,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testBean2Json(){\n  UserInfoDict userInfoDict=new UserInfoDict();\n  userInfoDict.setId(1);\n  userInfoDict.setPhotoPath(\"yx.mm.com\");\n  userInfoDict.setRealName(\"质量过关\");\n  ExamInfoDict examInfoDict=new ExamInfoDict();\n  examInfoDict.setId(1);\n  examInfoDict.setExamType(0);\n  examInfoDict.setAnswerIs(1);\n  ExamInfoDict examInfoDict1=new ExamInfoDict();\n  examInfoDict1.setId(2);\n  examInfoDict1.setExamType(0);\n  examInfoDict1.setAnswerIs(0);\n  ExamInfoDict examInfoDict2=new ExamInfoDict();\n  examInfoDict2.setId(3);\n  examInfoDict2.setExamType(1);\n  examInfoDict2.setAnswerIs(0);\n  List<ExamInfoDict> examInfoDicts=new ArrayList<>();\n  examInfoDicts.add(examInfoDict);\n  examInfoDicts.add(examInfoDict1);\n  examInfoDicts.add(examInfoDict2);\n  userInfoDict.setExamInfoDict(examInfoDicts);\n  Map<String,Object> tempMap=new HashMap<>();\n  tempMap.put(\"userInfoDict\",userInfoDict);\n  tempMap.put(\"toSendManIdCard\",1);\n  JSONObject obj=JSONUtil.parseObj(tempMap);\n  Assert.assertEquals(new Integer(1),obj.getInt(\"toSendManIdCard\"));\n  JSONObject examInfoDictsJson=obj.getJSONObject(\"userInfoDict\");\n  Assert.assertEquals(new Integer(1),examInfoDictsJson.getInt(\"id\"));\n  Assert.assertEquals(\"质量过关\",examInfoDictsJson.getStr(\"realName\"));\n  Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n  Assert.assertEquals(1,id);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Object id=JSONUtil.getByPath(obj,\"userInfoDict.examInfoDict[0].id\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.json.JSONObject"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 38,
    "endLineNumber" : 58,
    "endColumnNumber" : 41
  }, {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 33,
    "endLineNumber" : 60,
    "endColumnNumber" : 36
  }, {
    "charLength" : 3,
    "startLineNumber" : 64,
    "startColumnNumber" : 33,
    "endLineNumber" : 64,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}