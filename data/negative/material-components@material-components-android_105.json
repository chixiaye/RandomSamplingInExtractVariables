{
  "id" : 105,
  "expression" : "container",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/bottomsheet/BottomSheetDialog.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "container",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 128,
      "startColumnNumber" : 56,
      "endLineNumber" : 128,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 128,
        "endColumnNumber" : 96
      },
      "nodeContext" : "container.findViewById(R.id.coordinator)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 128,
        "startColumnNumber" : 36,
        "endLineNumber" : 128,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(CoordinatorLayout)container.findViewById(R.id.coordinator)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 128,
        "endColumnNumber" : 96
      },
      "nodeContext" : "coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 97
      },
      "nodeContext" : "CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2404,
        "startLineNumber" : 125,
        "startColumnNumber" : 92,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FrameLayout container=(FrameLayout)View.inflate(getContext(),R.layout.design_bottom_sheet_dialog,null);\n  CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n  if (layoutResId != 0 && view == null) {\n    view=getLayoutInflater().inflate(layoutResId,coordinator,false);\n  }\n  FrameLayout bottomSheet=(FrameLayout)coordinator.findViewById(R.id.design_bottom_sheet);\n  behavior=BottomSheetBehavior.from(bottomSheet);\n  behavior.setBottomSheetCallback(bottomSheetCallback);\n  behavior.setHideable(cancelable);\n  if (params == null) {\n    bottomSheet.addView(view);\n  }\n else {\n    bottomSheet.addView(view,params);\n  }\n  coordinator.findViewById(R.id.touch_outside).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View view){\n      if (cancelable && isShowing() && shouldWindowCloseOnTouchOutside()) {\n        cancel();\n      }\n    }\n  }\n);\n  ViewCompat.setAccessibilityDelegate(bottomSheet,new AccessibilityDelegateCompat(){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      if (cancelable) {\n        info.addAction(AccessibilityNodeInfoCompat.ACTION_DISMISS);\n        info.setDismissable(true);\n      }\n else {\n        info.setDismissable(false);\n      }\n    }\n    @Override public boolean performAccessibilityAction(    View host,    int action,    Bundle args){\n      if (action == AccessibilityNodeInfoCompat.ACTION_DISMISS && cancelable) {\n        cancel();\n        return true;\n      }\n      return super.performAccessibilityAction(host,action,args);\n    }\n  }\n);\n  bottomSheet.setOnTouchListener(new View.OnTouchListener(){\n    @Override public boolean onTouch(    View view,    MotionEvent event){\n      return true;\n    }\n  }\n);\n  return container;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2494,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private View wrapInBottomSheet(int layoutResId,View view,ViewGroup.LayoutParams params){\n  FrameLayout container=(FrameLayout)View.inflate(getContext(),R.layout.design_bottom_sheet_dialog,null);\n  CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n  if (layoutResId != 0 && view == null) {\n    view=getLayoutInflater().inflate(layoutResId,coordinator,false);\n  }\n  FrameLayout bottomSheet=(FrameLayout)coordinator.findViewById(R.id.design_bottom_sheet);\n  behavior=BottomSheetBehavior.from(bottomSheet);\n  behavior.setBottomSheetCallback(bottomSheetCallback);\n  behavior.setHideable(cancelable);\n  if (params == null) {\n    bottomSheet.addView(view);\n  }\n else {\n    bottomSheet.addView(view,params);\n  }\n  coordinator.findViewById(R.id.touch_outside).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View view){\n      if (cancelable && isShowing() && shouldWindowCloseOnTouchOutside()) {\n        cancel();\n      }\n    }\n  }\n);\n  ViewCompat.setAccessibilityDelegate(bottomSheet,new AccessibilityDelegateCompat(){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      if (cancelable) {\n        info.addAction(AccessibilityNodeInfoCompat.ACTION_DISMISS);\n        info.setDismissable(true);\n      }\n else {\n        info.setDismissable(false);\n      }\n    }\n    @Override public boolean performAccessibilityAction(    View host,    int action,    Bundle args){\n      if (action == AccessibilityNodeInfoCompat.ACTION_DISMISS && cancelable) {\n        cancel();\n        return true;\n      }\n      return super.performAccessibilityAction(host,action,args);\n    }\n  }\n);\n  bottomSheet.setOnTouchListener(new View.OnTouchListener(){\n    @Override public boolean onTouch(    View view,    MotionEvent event){\n      return true;\n    }\n  }\n);\n  return container;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 97
      },
      "nodeContext" : "CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.bottomsheet.FrameLayout"
  }, {
    "nodeContext" : "container",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 186,
      "startColumnNumber" : 11,
      "endLineNumber" : 186,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 186,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return container;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2404,
        "startLineNumber" : 125,
        "startColumnNumber" : 92,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FrameLayout container=(FrameLayout)View.inflate(getContext(),R.layout.design_bottom_sheet_dialog,null);\n  CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n  if (layoutResId != 0 && view == null) {\n    view=getLayoutInflater().inflate(layoutResId,coordinator,false);\n  }\n  FrameLayout bottomSheet=(FrameLayout)coordinator.findViewById(R.id.design_bottom_sheet);\n  behavior=BottomSheetBehavior.from(bottomSheet);\n  behavior.setBottomSheetCallback(bottomSheetCallback);\n  behavior.setHideable(cancelable);\n  if (params == null) {\n    bottomSheet.addView(view);\n  }\n else {\n    bottomSheet.addView(view,params);\n  }\n  coordinator.findViewById(R.id.touch_outside).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View view){\n      if (cancelable && isShowing() && shouldWindowCloseOnTouchOutside()) {\n        cancel();\n      }\n    }\n  }\n);\n  ViewCompat.setAccessibilityDelegate(bottomSheet,new AccessibilityDelegateCompat(){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      if (cancelable) {\n        info.addAction(AccessibilityNodeInfoCompat.ACTION_DISMISS);\n        info.setDismissable(true);\n      }\n else {\n        info.setDismissable(false);\n      }\n    }\n    @Override public boolean performAccessibilityAction(    View host,    int action,    Bundle args){\n      if (action == AccessibilityNodeInfoCompat.ACTION_DISMISS && cancelable) {\n        cancel();\n        return true;\n      }\n      return super.performAccessibilityAction(host,action,args);\n    }\n  }\n);\n  bottomSheet.setOnTouchListener(new View.OnTouchListener(){\n    @Override public boolean onTouch(    View view,    MotionEvent event){\n      return true;\n    }\n  }\n);\n  return container;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2494,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private View wrapInBottomSheet(int layoutResId,View view,ViewGroup.LayoutParams params){\n  FrameLayout container=(FrameLayout)View.inflate(getContext(),R.layout.design_bottom_sheet_dialog,null);\n  CoordinatorLayout coordinator=(CoordinatorLayout)container.findViewById(R.id.coordinator);\n  if (layoutResId != 0 && view == null) {\n    view=getLayoutInflater().inflate(layoutResId,coordinator,false);\n  }\n  FrameLayout bottomSheet=(FrameLayout)coordinator.findViewById(R.id.design_bottom_sheet);\n  behavior=BottomSheetBehavior.from(bottomSheet);\n  behavior.setBottomSheetCallback(bottomSheetCallback);\n  behavior.setHideable(cancelable);\n  if (params == null) {\n    bottomSheet.addView(view);\n  }\n else {\n    bottomSheet.addView(view,params);\n  }\n  coordinator.findViewById(R.id.touch_outside).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View view){\n      if (cancelable && isShowing() && shouldWindowCloseOnTouchOutside()) {\n        cancel();\n      }\n    }\n  }\n);\n  ViewCompat.setAccessibilityDelegate(bottomSheet,new AccessibilityDelegateCompat(){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      if (cancelable) {\n        info.addAction(AccessibilityNodeInfoCompat.ACTION_DISMISS);\n        info.setDismissable(true);\n      }\n else {\n        info.setDismissable(false);\n      }\n    }\n    @Override public boolean performAccessibilityAction(    View host,    int action,    Bundle args){\n      if (action == AccessibilityNodeInfoCompat.ACTION_DISMISS && cancelable) {\n        cancel();\n        return true;\n      }\n      return super.performAccessibilityAction(host,action,args);\n    }\n  }\n);\n  bottomSheet.setOnTouchListener(new View.OnTouchListener(){\n    @Override public boolean onTouch(    View view,    MotionEvent event){\n      return true;\n    }\n  }\n);\n  return container;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 186,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return container;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.bottomsheet.FrameLayout"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 128,
    "startColumnNumber" : 56,
    "endLineNumber" : 128,
    "endColumnNumber" : 65
  }, {
    "charLength" : 9,
    "startLineNumber" : 186,
    "startColumnNumber" : 11,
    "endLineNumber" : 186,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}