{
  "id" : 5,
  "expression" : "defaultGroup15",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/rest/resource/TestLDAPResource.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "defaultGroup15",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 155,
      "startColumnNumber" : 116,
      "endLineNumber" : 155,
      "endColumnNumber" : 130
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 131
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 132
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6021,
        "startLineNumber" : 114,
        "startColumnNumber" : 40,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LDAPTestUtils.addLocalUser(session,realm,\"mary\",\"mary@test.com\",\"password-app\");\n  LDAPTestUtils.addLocalUser(session,realm,\"john\",\"john@test.com\",\"password-app\");\n  ComponentModel ldapModel=LDAPTestUtils.getLdapProviderModel(realm);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ldapModel);\n  String descriptionAttrName=getGroupDescriptionLDAPAttrName(ldapFedProvider);\n  LDAPTestUtils.addOrUpdateGroupMapper(realm,ldapModel,LDAPGroupMapperMode.LDAP_ONLY,descriptionAttrName);\n  LDAPTestUtils.removeAllLDAPGroups(session,realm,ldapModel,\"groupsMapper\");\n  LDAPObject group1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group1\",descriptionAttrName,\"group1 - description\");\n  LDAPObject group11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group11\");\n  LDAPObject group12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group12\",descriptionAttrName,\"group12 - description\");\n  LDAPObject defaultGroup1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup1\",descriptionAttrName,\"Default Group1 - description\");\n  LDAPObject defaultGroup11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup11\");\n  LDAPObject defaultGroup12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup12\",descriptionAttrName,\"Default Group12 - description\");\n  LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team 2016/2017\",descriptionAttrName,\"A group with slashes in the name\");\n  LDAPObject teamChild20182019=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Child 2018/2019\",descriptionAttrName,\"A child group with slashes in the name\");\n  LDAPObject teamSubChild20202021=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2020/2021\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup13=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup13\",descriptionAttrName,\"Default Group13 - description\");\n  LDAPObject teamSubChild20222023=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2022/2023/A/B/C/D/E\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup14=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup14\",descriptionAttrName,\"Default Group14 - description\");\n  LDAPObject teamRoot20242025=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Root 2024/2025/A/B/C/D\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup15=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup15\",descriptionAttrName,\"Default Group15 - description\");\n  LDAPObject teamSubChild20262027=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2026/2027\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,teamChild20182019);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamChild20182019,teamSubChild20202021);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup13,teamSubChild20222023);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamSubChild20222023,defaultGroup14);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n  ComponentModel mapperModel=LDAPTestUtils.getSubcomponentByName(realm,ldapModel,\"groupsMapper\");\n  new GroupLDAPStorageMapperFactory().create(session,mapperModel).syncDataFromFederationProviderToKeycloak(realm);\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup11\"));\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup12\"));\n  LDAPTestUtils.removeAllLDAPUsers(ldapFedProvider,realm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,john,\"Password1\");\n  LDAPObject mary=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"marykeycloak\",\"Mary\",\"Kelly\",\"mary@email.org\",null,\"5678\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,mary,\"Password1\");\n  LDAPObject rob=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"robkeycloak\",\"Rob\",\"Brown\",\"rob@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,rob,\"Password1\");\n  LDAPObject james=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"jameskeycloak\",\"James\",\"Brown\",\"james@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,james,\"Password1\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 544,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6308,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Prepare groups LDAP tests. Creates some LDAP mappers as well as some built-in GRoups and users in LDAP\n */\n@POST @Path(\"/configure-groups\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) public void prepareGroupsLDAPTest(){\n  LDAPTestUtils.addLocalUser(session,realm,\"mary\",\"mary@test.com\",\"password-app\");\n  LDAPTestUtils.addLocalUser(session,realm,\"john\",\"john@test.com\",\"password-app\");\n  ComponentModel ldapModel=LDAPTestUtils.getLdapProviderModel(realm);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ldapModel);\n  String descriptionAttrName=getGroupDescriptionLDAPAttrName(ldapFedProvider);\n  LDAPTestUtils.addOrUpdateGroupMapper(realm,ldapModel,LDAPGroupMapperMode.LDAP_ONLY,descriptionAttrName);\n  LDAPTestUtils.removeAllLDAPGroups(session,realm,ldapModel,\"groupsMapper\");\n  LDAPObject group1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group1\",descriptionAttrName,\"group1 - description\");\n  LDAPObject group11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group11\");\n  LDAPObject group12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group12\",descriptionAttrName,\"group12 - description\");\n  LDAPObject defaultGroup1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup1\",descriptionAttrName,\"Default Group1 - description\");\n  LDAPObject defaultGroup11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup11\");\n  LDAPObject defaultGroup12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup12\",descriptionAttrName,\"Default Group12 - description\");\n  LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team 2016/2017\",descriptionAttrName,\"A group with slashes in the name\");\n  LDAPObject teamChild20182019=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Child 2018/2019\",descriptionAttrName,\"A child group with slashes in the name\");\n  LDAPObject teamSubChild20202021=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2020/2021\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup13=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup13\",descriptionAttrName,\"Default Group13 - description\");\n  LDAPObject teamSubChild20222023=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2022/2023/A/B/C/D/E\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup14=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup14\",descriptionAttrName,\"Default Group14 - description\");\n  LDAPObject teamRoot20242025=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Root 2024/2025/A/B/C/D\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup15=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup15\",descriptionAttrName,\"Default Group15 - description\");\n  LDAPObject teamSubChild20262027=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2026/2027\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,teamChild20182019);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamChild20182019,teamSubChild20202021);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup13,teamSubChild20222023);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamSubChild20222023,defaultGroup14);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n  ComponentModel mapperModel=LDAPTestUtils.getSubcomponentByName(realm,ldapModel,\"groupsMapper\");\n  new GroupLDAPStorageMapperFactory().create(session,mapperModel).syncDataFromFederationProviderToKeycloak(realm);\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup11\"));\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup12\"));\n  LDAPTestUtils.removeAllLDAPUsers(ldapFedProvider,realm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,john,\"Password1\");\n  LDAPObject mary=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"marykeycloak\",\"Mary\",\"Kelly\",\"mary@email.org\",null,\"5678\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,mary,\"Password1\");\n  LDAPObject rob=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"robkeycloak\",\"Rob\",\"Brown\",\"rob@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,rob,\"Password1\");\n  LDAPObject james=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"jameskeycloak\",\"James\",\"Brown\",\"james@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,james,\"Password1\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 564,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 132
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.storage.ldap.idm.model.LDAPObject"
  }, {
    "nodeContext" : "defaultGroup15",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 156,
      "startColumnNumber" : 98,
      "endLineNumber" : 156,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 135
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 136
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6021,
        "startLineNumber" : 114,
        "startColumnNumber" : 40,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LDAPTestUtils.addLocalUser(session,realm,\"mary\",\"mary@test.com\",\"password-app\");\n  LDAPTestUtils.addLocalUser(session,realm,\"john\",\"john@test.com\",\"password-app\");\n  ComponentModel ldapModel=LDAPTestUtils.getLdapProviderModel(realm);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ldapModel);\n  String descriptionAttrName=getGroupDescriptionLDAPAttrName(ldapFedProvider);\n  LDAPTestUtils.addOrUpdateGroupMapper(realm,ldapModel,LDAPGroupMapperMode.LDAP_ONLY,descriptionAttrName);\n  LDAPTestUtils.removeAllLDAPGroups(session,realm,ldapModel,\"groupsMapper\");\n  LDAPObject group1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group1\",descriptionAttrName,\"group1 - description\");\n  LDAPObject group11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group11\");\n  LDAPObject group12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group12\",descriptionAttrName,\"group12 - description\");\n  LDAPObject defaultGroup1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup1\",descriptionAttrName,\"Default Group1 - description\");\n  LDAPObject defaultGroup11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup11\");\n  LDAPObject defaultGroup12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup12\",descriptionAttrName,\"Default Group12 - description\");\n  LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team 2016/2017\",descriptionAttrName,\"A group with slashes in the name\");\n  LDAPObject teamChild20182019=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Child 2018/2019\",descriptionAttrName,\"A child group with slashes in the name\");\n  LDAPObject teamSubChild20202021=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2020/2021\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup13=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup13\",descriptionAttrName,\"Default Group13 - description\");\n  LDAPObject teamSubChild20222023=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2022/2023/A/B/C/D/E\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup14=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup14\",descriptionAttrName,\"Default Group14 - description\");\n  LDAPObject teamRoot20242025=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Root 2024/2025/A/B/C/D\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup15=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup15\",descriptionAttrName,\"Default Group15 - description\");\n  LDAPObject teamSubChild20262027=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2026/2027\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,teamChild20182019);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamChild20182019,teamSubChild20202021);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup13,teamSubChild20222023);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamSubChild20222023,defaultGroup14);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n  ComponentModel mapperModel=LDAPTestUtils.getSubcomponentByName(realm,ldapModel,\"groupsMapper\");\n  new GroupLDAPStorageMapperFactory().create(session,mapperModel).syncDataFromFederationProviderToKeycloak(realm);\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup11\"));\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup12\"));\n  LDAPTestUtils.removeAllLDAPUsers(ldapFedProvider,realm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,john,\"Password1\");\n  LDAPObject mary=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"marykeycloak\",\"Mary\",\"Kelly\",\"mary@email.org\",null,\"5678\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,mary,\"Password1\");\n  LDAPObject rob=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"robkeycloak\",\"Rob\",\"Brown\",\"rob@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,rob,\"Password1\");\n  LDAPObject james=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"jameskeycloak\",\"James\",\"Brown\",\"james@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,james,\"Password1\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 544,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6308,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Prepare groups LDAP tests. Creates some LDAP mappers as well as some built-in GRoups and users in LDAP\n */\n@POST @Path(\"/configure-groups\") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) public void prepareGroupsLDAPTest(){\n  LDAPTestUtils.addLocalUser(session,realm,\"mary\",\"mary@test.com\",\"password-app\");\n  LDAPTestUtils.addLocalUser(session,realm,\"john\",\"john@test.com\",\"password-app\");\n  ComponentModel ldapModel=LDAPTestUtils.getLdapProviderModel(realm);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ldapModel);\n  String descriptionAttrName=getGroupDescriptionLDAPAttrName(ldapFedProvider);\n  LDAPTestUtils.addOrUpdateGroupMapper(realm,ldapModel,LDAPGroupMapperMode.LDAP_ONLY,descriptionAttrName);\n  LDAPTestUtils.removeAllLDAPGroups(session,realm,ldapModel,\"groupsMapper\");\n  LDAPObject group1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group1\",descriptionAttrName,\"group1 - description\");\n  LDAPObject group11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group11\");\n  LDAPObject group12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"group12\",descriptionAttrName,\"group12 - description\");\n  LDAPObject defaultGroup1=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup1\",descriptionAttrName,\"Default Group1 - description\");\n  LDAPObject defaultGroup11=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup11\");\n  LDAPObject defaultGroup12=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup12\",descriptionAttrName,\"Default Group12 - description\");\n  LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team 2016/2017\",descriptionAttrName,\"A group with slashes in the name\");\n  LDAPObject teamChild20182019=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Child 2018/2019\",descriptionAttrName,\"A child group with slashes in the name\");\n  LDAPObject teamSubChild20202021=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2020/2021\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup13=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup13\",descriptionAttrName,\"Default Group13 - description\");\n  LDAPObject teamSubChild20222023=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2022/2023/A/B/C/D/E\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup14=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup14\",descriptionAttrName,\"Default Group14 - description\");\n  LDAPObject teamRoot20242025=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team Root 2024/2025/A/B/C/D\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPObject defaultGroup15=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"defaultGroup15\",descriptionAttrName,\"Default Group15 - description\");\n  LDAPObject teamSubChild20262027=LDAPTestUtils.createLDAPGroup(session,realm,ldapModel,\"Team SubChild 2026/2027\",descriptionAttrName,\"A sub child group with slashes in the name\");\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",group1,group12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup11);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,defaultGroup12);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup1,teamChild20182019);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamChild20182019,teamSubChild20202021);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup13,teamSubChild20222023);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamSubChild20222023,defaultGroup14);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",teamRoot20242025,defaultGroup15);\n  LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n  ComponentModel mapperModel=LDAPTestUtils.getSubcomponentByName(realm,ldapModel,\"groupsMapper\");\n  new GroupLDAPStorageMapperFactory().create(session,mapperModel).syncDataFromFederationProviderToKeycloak(realm);\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup11\"));\n  realm.addDefaultGroup(KeycloakModelUtils.findGroupByPath(realm,\"/defaultGroup1/defaultGroup12\"));\n  LDAPTestUtils.removeAllLDAPUsers(ldapFedProvider,realm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,john,\"Password1\");\n  LDAPObject mary=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"marykeycloak\",\"Mary\",\"Kelly\",\"mary@email.org\",null,\"5678\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,mary,\"Password1\");\n  LDAPObject rob=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"robkeycloak\",\"Rob\",\"Brown\",\"rob@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,rob,\"Password1\");\n  LDAPObject james=LDAPTestUtils.addLDAPUser(ldapFedProvider,realm,\"jameskeycloak\",\"James\",\"Brown\",\"james@email.org\",null,\"8910\");\n  LDAPTestUtils.updateLDAPPassword(ldapFedProvider,james,\"Password1\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 564,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 136
      },
      "nodeContext" : "LDAPUtils.addMember(ldapFedProvider,MembershipType.DN,LDAPConstants.MEMBER,\"not-used\",defaultGroup15,teamSubChild20262027);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.storage.ldap.idm.model.LDAPObject"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 155,
    "startColumnNumber" : 116,
    "endLineNumber" : 155,
    "endColumnNumber" : 130
  }, {
    "charLength" : 14,
    "startLineNumber" : 156,
    "startColumnNumber" : 98,
    "endLineNumber" : 156,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}