{
  "id" : 356,
  "expression" : "data.internalTypeName",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/XmlFilePage.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data.internalTypeName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 77,
      "startColumnNumber" : 42,
      "endLineNumber" : 77,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 77,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "internalTypeName=data.internalTypeName",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String internalTypeName=data.internalTypeName;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1314,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n catch (URISyntaxException e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 180,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 68,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (data.enabled) {\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1554,
        "startLineNumber" : 65,
        "startColumnNumber" : 76,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1626,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void openHyperlink(int x,int y,HyperlinkData hyperlinkData){\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String internalTypeName=data.internalTypeName;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "data.internalTypeName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 89,
      "startColumnNumber" : 66,
      "endLineNumber" : 89,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 88
      },
      "nodeContext" : "api.openURI(x,y,sameContainerEntries,null,data.internalTypeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 89
      },
      "nodeContext" : "api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 88,
        "startColumnNumber" : 53,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sameContainerEntries.size() > 0) {\n  api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n}\n else if (entries.size() > 0) {\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1314,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n catch (URISyntaxException e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 180,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 68,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (data.enabled) {\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1554,
        "startLineNumber" : 65,
        "startColumnNumber" : 76,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1626,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void openHyperlink(int x,int y,HyperlinkData hyperlinkData){\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 89
      },
      "nodeContext" : "api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "data.internalTypeName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 91,
      "startColumnNumber" : 53,
      "endLineNumber" : 91,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 75
      },
      "nodeContext" : "api.openURI(x,y,entries,null,data.internalTypeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "api.openURI(x,y,entries,null,data.internalTypeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 90,
        "startColumnNumber" : 47,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 90,
        "startColumnNumber" : 23,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entries.size() > 0) {\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (sameContainerEntries.size() > 0) {\n  api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n}\n else if (entries.size() > 0) {\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1314,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n catch (URISyntaxException e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 180,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 68,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (data.enabled) {\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1554,
        "startLineNumber" : 65,
        "startColumnNumber" : 76,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1626,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void openHyperlink(int x,int y,HyperlinkData hyperlinkData){\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 76
      },
      "nodeContext" : "api.openURI(x,y,entries,null,data.internalTypeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 77,
    "startColumnNumber" : 42,
    "endLineNumber" : 77,
    "endColumnNumber" : 63
  }, {
    "charLength" : 21,
    "startLineNumber" : 89,
    "startColumnNumber" : 66,
    "endLineNumber" : 89,
    "endColumnNumber" : 87
  }, {
    "charLength" : 21,
    "startLineNumber" : 91,
    "startColumnNumber" : 53,
    "endLineNumber" : 91,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}