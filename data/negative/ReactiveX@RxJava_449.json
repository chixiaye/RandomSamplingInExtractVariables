{
  "id" : 449,
  "expression" : "ts",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableFromIterableTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 118,
      "startColumnNumber" : 20,
      "endLineNumber" : 118,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 23
      },
      "nodeContext" : "o.subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 24
      },
      "nodeContext" : "o.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 113,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 24
      },
      "nodeContext" : "o.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "ts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 120,
      "startColumnNumber" : 8,
      "endLineNumber" : 120,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 113,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "ts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 121,
      "startColumnNumber" : 8,
      "endLineNumber" : 121,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 29
      },
      "nodeContext" : "ts.assertTerminated()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 30
      },
      "nodeContext" : "ts.assertTerminated();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 113,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  Observable<Integer> o=Observable.fromIterable(Arrays.asList(1,2,3,4,5));\n  TestObserver<Integer> ts=new TestObserver<Integer>();\n  o.subscribe(ts);\n  ts.assertValues(1,2,3,4,5);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 30
      },
      "nodeContext" : "ts.assertTerminated();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 118,
    "startColumnNumber" : 20,
    "endLineNumber" : 118,
    "endColumnNumber" : 22
  }, {
    "charLength" : 2,
    "startLineNumber" : 120,
    "startColumnNumber" : 8,
    "endLineNumber" : 120,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 121,
    "startColumnNumber" : 8,
    "endLineNumber" : 121,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}