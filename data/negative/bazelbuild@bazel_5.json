{
  "id" : 5,
  "expression" : "LogUtil.toTruncatedString(helloWorld.getBytes())",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/shell/ToTruncatedStringTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LogUtil.toTruncatedString(helloWorld.getBytes())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 68,
      "startColumnNumber" : 15,
      "endLineNumber" : 68,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(LogUtil.toTruncatedString(helloWorld.getBytes()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(LogUtil.toTruncatedString(helloWorld.getBytes())).isEqualTo(helloWorld)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertThat(LogUtil.toTruncatedString(helloWorld.getBytes())).isEqualTo(helloWorld);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 66,
        "startColumnNumber" : 57,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String helloWorld=\"Hello, world.\";\n  assertThat(LogUtil.toTruncatedString(helloWorld.getBytes())).isEqualTo(helloWorld);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTruncatingHelloWorldYieldsHelloWorld(){\n  String helloWorld=\"Hello, world.\";\n  assertThat(LogUtil.toTruncatedString(helloWorld.getBytes())).isEqualTo(helloWorld);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 25,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertThat(LogUtil.toTruncatedString(helloWorld.getBytes())).isEqualTo(helloWorld);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 68,
    "startColumnNumber" : 15,
    "endLineNumber" : 68,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}