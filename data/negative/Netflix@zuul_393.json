{
  "id" : 393,
  "expression" : "Arrays",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/init/ZuulFiltersModule.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 81,
      "startColumnNumber" : 41,
      "endLineNumber" : 81,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 81,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Arrays.stream(filterClassNamesStrArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 82,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Arrays.stream(filterClassNamesStrArray).map(String::trim)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 83,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 81,
        "startColumnNumber" : 23,
        "endLineNumber" : 83,
        "endColumnNumber" : 39
      },
      "nodeContext" : "classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Stream<String> classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 77,
        "startColumnNumber" : 58,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] filterClassNamesStrArray=config.getStringArray(\"zuul.filters.classes\");\n  Stream<String> classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate());\n  String[] packageNamesStrArray=config.getStringArray(\"zuul.filters.packages\");\n  ClassPath cp;\n  try {\n    cp=ClassPath.from(this.getClass().getClassLoader());\n  }\n catch (  IOException e) {\n    throw new RuntimeException(\"Error attempting to read classpath to find filters!\",e);\n  }\n  Stream<String> packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName);\n  String[] filterClassNames=Stream.concat(classNameStream,packageStream).toArray(String[]::new);\n  if (filterClassNames.length != 0) {\n    LOG.info(\"Using filter classnames: \");\n    for (    String location : filterClassNames) {\n      LOG.info(\"  \" + location);\n    }\n  }\n  return filterClassNames;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1533,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting String[] findClassNames(AbstractConfiguration config){\n  String[] filterClassNamesStrArray=config.getStringArray(\"zuul.filters.classes\");\n  Stream<String> classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate());\n  String[] packageNamesStrArray=config.getStringArray(\"zuul.filters.packages\");\n  ClassPath cp;\n  try {\n    cp=ClassPath.from(this.getClass().getClassLoader());\n  }\n catch (  IOException e) {\n    throw new RuntimeException(\"Error attempting to read classpath to find filters!\",e);\n  }\n  Stream<String> packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName);\n  String[] filterClassNames=Stream.concat(classNameStream,packageStream).toArray(String[]::new);\n  if (filterClassNames.length != 0) {\n    LOG.info(\"Using filter classnames: \");\n    for (    String location : filterClassNames) {\n      LOG.info(\"  \" + location);\n    }\n  }\n  return filterClassNames;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 81,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Arrays.stream(filterClassNamesStrArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  }, {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 94,
      "startColumnNumber" : 39,
      "endLineNumber" : 94,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 94,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 95,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 97,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 98,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 99,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 100,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 94,
        "startColumnNumber" : 23,
        "endLineNumber" : 100,
        "endColumnNumber" : 45
      },
      "nodeContext" : "packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Stream<String> packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 77,
        "startColumnNumber" : 58,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] filterClassNamesStrArray=config.getStringArray(\"zuul.filters.classes\");\n  Stream<String> classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate());\n  String[] packageNamesStrArray=config.getStringArray(\"zuul.filters.packages\");\n  ClassPath cp;\n  try {\n    cp=ClassPath.from(this.getClass().getClassLoader());\n  }\n catch (  IOException e) {\n    throw new RuntimeException(\"Error attempting to read classpath to find filters!\",e);\n  }\n  Stream<String> packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName);\n  String[] filterClassNames=Stream.concat(classNameStream,packageStream).toArray(String[]::new);\n  if (filterClassNames.length != 0) {\n    LOG.info(\"Using filter classnames: \");\n    for (    String location : filterClassNames) {\n      LOG.info(\"  \" + location);\n    }\n  }\n  return filterClassNames;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1533,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting String[] findClassNames(AbstractConfiguration config){\n  String[] filterClassNamesStrArray=config.getStringArray(\"zuul.filters.classes\");\n  Stream<String> classNameStream=Arrays.stream(filterClassNamesStrArray).map(String::trim).filter(blank.negate());\n  String[] packageNamesStrArray=config.getStringArray(\"zuul.filters.packages\");\n  ClassPath cp;\n  try {\n    cp=ClassPath.from(this.getClass().getClassLoader());\n  }\n catch (  IOException e) {\n    throw new RuntimeException(\"Error attempting to read classpath to find filters!\",e);\n  }\n  Stream<String> packageStream=Arrays.stream(packageNamesStrArray).map(String::trim).filter(blank.negate()).flatMap(packageName -> cp.getTopLevelClasses(packageName).stream()).map(ClassPath.ClassInfo::load).filter(ZuulFilter.class::isAssignableFrom).map(Class::getCanonicalName);\n  String[] filterClassNames=Stream.concat(classNameStream,packageStream).toArray(String[]::new);\n  if (filterClassNames.length != 0) {\n    LOG.info(\"Using filter classnames: \");\n    for (    String location : filterClassNames) {\n      LOG.info(\"  \" + location);\n    }\n  }\n  return filterClassNames;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 39,
        "endLineNumber" : 94,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Arrays.stream(packageNamesStrArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 81,
    "startColumnNumber" : 41,
    "endLineNumber" : 81,
    "endColumnNumber" : 47
  }, {
    "charLength" : 6,
    "startLineNumber" : 94,
    "startColumnNumber" : 39,
    "endLineNumber" : 94,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 9
  } ]
}