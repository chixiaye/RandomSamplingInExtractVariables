{
  "id" : 42,
  "expression" : "\" Found: hey! (parameter #1)\"",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/RequestBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" Found: hey! (parameter #1)\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 170,
      "startColumnNumber" : 16,
      "endLineNumber" : 170,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 169,
        "startColumnNumber" : 10,
        "endLineNumber" : 170,
        "endColumnNumber" : 45
      },
      "nodeContext" : "\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 170,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 170,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 167,
        "startColumnNumber" : 41,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IllegalArgumentException e) {\n  assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  buildRequest(Example.class);\n  fail();\n}\n catch (IllegalArgumentException e) {\n  assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 156,
        "startColumnNumber" : 56,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nclass Example {\n    @GET(\"/\") Response method(    @Path(\"hey!\") String thing){\n      return null;\n    }\n  }\n  try {\n    buildRequest(Example.class);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n    assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void invalidPathParam() throws Exception {\nclass Example {\n    @GET(\"/\") Response method(    @Path(\"hey!\") String thing){\n      return null;\n    }\n  }\n  try {\n    buildRequest(Example.class);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n    assertThat(e).hasMessage(\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 169,
        "startColumnNumber" : 10,
        "endLineNumber" : 170,
        "endColumnNumber" : 45
      },
      "nodeContext" : "\"Example.method: @Path parameter name must match \\\\{([a-zA-Z][a-zA-Z0-9_-]*)\\\\}.\" + \" Found: hey! (parameter #1)\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 170,
    "startColumnNumber" : 16,
    "endLineNumber" : 170,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}