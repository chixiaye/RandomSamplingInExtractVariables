{
  "id" : 159,
  "expression" : "repository.getAllExportedUrls()",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-dubbo/src/main/java/com/alibaba/cloud/dubbo/autoconfigure/DubboServiceRegistrationNonWebApplicationAutoConfiguration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "repository.getAllExportedUrls()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 100,
      "startColumnNumber" : 34,
      "endLineNumber" : 100,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 100,
        "startColumnNumber" : 34,
        "endLineNumber" : 100,
        "endColumnNumber" : 74
      },
      "nodeContext" : "repository.getAllExportedUrls().values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (List<URL> urls : repository.getAllExportedUrls().values()) {\n  urls.stream().filter(url -> REST_PROTOCOL.equalsIgnoreCase(url.getProtocol())).findFirst().ifPresent(url -> {\n    serverPort=url.getPort();\n  }\n);\n  if (serverPort == null) {\n    urls.stream().findAny().ifPresent(url -> {\n      serverPort=url.getPort();\n    }\n);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 99,
        "startColumnNumber" : 32,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  List<URL> urls : repository.getAllExportedUrls().values()) {\n    urls.stream().filter(url -> REST_PROTOCOL.equalsIgnoreCase(url.getProtocol())).findFirst().ifPresent(url -> {\n      serverPort=url.getPort();\n    }\n);\n    if (serverPort == null) {\n      urls.stream().findAny().ifPresent(url -> {\n        serverPort=url.getPort();\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (serverPort == null) {\n  for (  List<URL> urls : repository.getAllExportedUrls().values()) {\n    urls.stream().filter(url -> REST_PROTOCOL.equalsIgnoreCase(url.getProtocol())).findFirst().ifPresent(url -> {\n      serverPort=url.getPort();\n    }\n);\n    if (serverPort == null) {\n      urls.stream().findAny().ifPresent(url -> {\n        serverPort=url.getPort();\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 98,
        "startColumnNumber" : 33,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (serverPort == null) {\n    for (    List<URL> urls : repository.getAllExportedUrls().values()) {\n      urls.stream().filter(url -> REST_PROTOCOL.equalsIgnoreCase(url.getProtocol())).findFirst().ifPresent(url -> {\n        serverPort=url.getPort();\n      }\n);\n      if (serverPort == null) {\n        urls.stream().findAny().ifPresent(url -> {\n          serverPort=url.getPort();\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set web port from  {@link ServiceBean#getExportedUrls() exported URLs}  if \"rest\" protocol is present.\n */\nprivate void setServerPort(){\n  if (serverPort == null) {\n    for (    List<URL> urls : repository.getAllExportedUrls().values()) {\n      urls.stream().filter(url -> REST_PROTOCOL.equalsIgnoreCase(url.getProtocol())).findFirst().ifPresent(url -> {\n        serverPort=url.getPort();\n      }\n);\n      if (serverPort == null) {\n        urls.stream().findAny().ifPresent(url -> {\n          serverPort=url.getPort();\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 100,
        "startColumnNumber" : 34,
        "endLineNumber" : 100,
        "endColumnNumber" : 74
      },
      "nodeContext" : "repository.getAllExportedUrls().values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.util.List<com.alibaba.cloud.dubbo.metadata.repository.URL>>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 100,
    "startColumnNumber" : 34,
    "endLineNumber" : 100,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}