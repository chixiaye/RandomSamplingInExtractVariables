{
  "id" : 207,
  "expression" : "\"Texture needs filename.\"",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Texture needs filename.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 215,
      "startColumnNumber" : 58,
      "endLineNumber" : 215,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 215,
        "startColumnNumber" : 34,
        "endLineNumber" : 215,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new GdxRuntimeException(\"Texture needs filename.\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 215,
        "startColumnNumber" : 28,
        "endLineNumber" : 215,
        "endColumnNumber" : 85
      },
      "nodeContext" : "throw new GdxRuntimeException(\"Texture needs filename.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 215,
        "startColumnNumber" : 6,
        "endLineNumber" : 215,
        "endColumnNumber" : 85
      },
      "nodeContext" : "if (fileName == null) throw new GdxRuntimeException(\"Texture needs filename.\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 207,
        "startColumnNumber" : 87,
        "endLineNumber" : 229,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  ModelTexture jsonTexture=new ModelTexture();\n  String textureId=texture.getString(\"id\",null);\n  if (textureId == null)   throw new GdxRuntimeException(\"Texture has no id.\");\n  jsonTexture.id=textureId;\n  String fileName=texture.getString(\"filename\",null);\n  if (fileName == null)   throw new GdxRuntimeException(\"Texture needs filename.\");\n  jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n  jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n  jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n  String textureType=texture.getString(\"type\",null);\n  if (textureType == null)   throw new GdxRuntimeException(\"Texture needs type.\");\n  jsonTexture.usage=parseTextureUsage(textureType);\n  if (jsonMaterial.textures == null)   jsonMaterial.textures=new Array<ModelTexture>();\n  jsonMaterial.textures.add(jsonTexture);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 207,
        "startColumnNumber" : 5,
        "endLineNumber" : 229,
        "endColumnNumber" : 6
      },
      "nodeContext" : "for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n  ModelTexture jsonTexture=new ModelTexture();\n  String textureId=texture.getString(\"id\",null);\n  if (textureId == null)   throw new GdxRuntimeException(\"Texture has no id.\");\n  jsonTexture.id=textureId;\n  String fileName=texture.getString(\"filename\",null);\n  if (fileName == null)   throw new GdxRuntimeException(\"Texture needs filename.\");\n  jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n  jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n  jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n  String textureType=texture.getString(\"type\",null);\n  if (textureType == null)   throw new GdxRuntimeException(\"Texture needs type.\");\n  jsonTexture.usage=parseTextureUsage(textureType);\n  if (jsonMaterial.textures == null)   jsonMaterial.textures=new Array<ModelTexture>();\n  jsonMaterial.textures.add(jsonTexture);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1138,
        "startLineNumber" : 206,
        "startColumnNumber" : 26,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n    ModelTexture jsonTexture=new ModelTexture();\n    String textureId=texture.getString(\"id\",null);\n    if (textureId == null)     throw new GdxRuntimeException(\"Texture has no id.\");\n    jsonTexture.id=textureId;\n    String fileName=texture.getString(\"filename\",null);\n    if (fileName == null)     throw new GdxRuntimeException(\"Texture needs filename.\");\n    jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n    jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n    jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n    String textureType=texture.getString(\"type\",null);\n    if (textureType == null)     throw new GdxRuntimeException(\"Texture needs type.\");\n    jsonTexture.usage=parseTextureUsage(textureType);\n    if (jsonMaterial.textures == null)     jsonMaterial.textures=new Array<ModelTexture>();\n    jsonMaterial.textures.add(jsonTexture);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (textures != null) {\n  for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n    ModelTexture jsonTexture=new ModelTexture();\n    String textureId=texture.getString(\"id\",null);\n    if (textureId == null)     throw new GdxRuntimeException(\"Texture has no id.\");\n    jsonTexture.id=textureId;\n    String fileName=texture.getString(\"filename\",null);\n    if (fileName == null)     throw new GdxRuntimeException(\"Texture needs filename.\");\n    jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n    jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n    jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n    String textureType=texture.getString(\"type\",null);\n    if (textureType == null)     throw new GdxRuntimeException(\"Texture needs type.\");\n    jsonTexture.usage=parseTextureUsage(textureType);\n    if (jsonMaterial.textures == null)     jsonMaterial.textures=new Array<ModelTexture>();\n    jsonMaterial.textures.add(jsonTexture);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 174,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 180,
        "startColumnNumber" : 90,
        "endLineNumber" : 233,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ModelMaterial jsonMaterial=new ModelMaterial();\n  String id=material.getString(\"id\",null);\n  if (id == null)   throw new GdxRuntimeException(\"Material needs an id.\");\n  jsonMaterial.id=id;\n  final JsonValue diffuse=material.get(\"diffuse\");\n  if (diffuse != null)   jsonMaterial.diffuse=parseColor(diffuse);\n  final JsonValue ambient=material.get(\"ambient\");\n  if (ambient != null)   jsonMaterial.ambient=parseColor(ambient);\n  final JsonValue emissive=material.get(\"emissive\");\n  if (emissive != null)   jsonMaterial.emissive=parseColor(emissive);\n  final JsonValue specular=material.get(\"specular\");\n  if (specular != null)   jsonMaterial.specular=parseColor(specular);\n  final JsonValue reflection=material.get(\"reflection\");\n  if (reflection != null)   jsonMaterial.reflection=parseColor(reflection);\n  jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n  jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n  JsonValue textures=material.get(\"textures\");\n  if (textures != null) {\n    for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n      ModelTexture jsonTexture=new ModelTexture();\n      String textureId=texture.getString(\"id\",null);\n      if (textureId == null)       throw new GdxRuntimeException(\"Texture has no id.\");\n      jsonTexture.id=textureId;\n      String fileName=texture.getString(\"filename\",null);\n      if (fileName == null)       throw new GdxRuntimeException(\"Texture needs filename.\");\n      jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n      jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n      jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n      String textureType=texture.getString(\"type\",null);\n      if (textureType == null)       throw new GdxRuntimeException(\"Texture needs type.\");\n      jsonTexture.usage=parseTextureUsage(textureType);\n      if (jsonMaterial.textures == null)       jsonMaterial.textures=new Array<ModelTexture>();\n      jsonMaterial.textures.add(jsonTexture);\n    }\n  }\n  model.materials.add(jsonMaterial);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 354,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2452,
        "startLineNumber" : 180,
        "startColumnNumber" : 3,
        "endLineNumber" : 233,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (JsonValue material=materials.child; material != null; material=material.next) {\n  ModelMaterial jsonMaterial=new ModelMaterial();\n  String id=material.getString(\"id\",null);\n  if (id == null)   throw new GdxRuntimeException(\"Material needs an id.\");\n  jsonMaterial.id=id;\n  final JsonValue diffuse=material.get(\"diffuse\");\n  if (diffuse != null)   jsonMaterial.diffuse=parseColor(diffuse);\n  final JsonValue ambient=material.get(\"ambient\");\n  if (ambient != null)   jsonMaterial.ambient=parseColor(ambient);\n  final JsonValue emissive=material.get(\"emissive\");\n  if (emissive != null)   jsonMaterial.emissive=parseColor(emissive);\n  final JsonValue specular=material.get(\"specular\");\n  if (specular != null)   jsonMaterial.specular=parseColor(specular);\n  final JsonValue reflection=material.get(\"reflection\");\n  if (reflection != null)   jsonMaterial.reflection=parseColor(reflection);\n  jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n  jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n  JsonValue textures=material.get(\"textures\");\n  if (textures != null) {\n    for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n      ModelTexture jsonTexture=new ModelTexture();\n      String textureId=texture.getString(\"id\",null);\n      if (textureId == null)       throw new GdxRuntimeException(\"Texture has no id.\");\n      jsonTexture.id=textureId;\n      String fileName=texture.getString(\"filename\",null);\n      if (fileName == null)       throw new GdxRuntimeException(\"Texture needs filename.\");\n      jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n      jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n      jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n      String textureType=texture.getString(\"type\",null);\n      if (textureType == null)       throw new GdxRuntimeException(\"Texture needs type.\");\n      jsonTexture.usage=parseTextureUsage(textureType);\n      if (jsonMaterial.textures == null)       jsonMaterial.textures=new Array<ModelTexture>();\n      jsonMaterial.textures.add(jsonTexture);\n    }\n  }\n  model.materials.add(jsonMaterial);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 371,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2515,
        "startLineNumber" : 178,
        "startColumnNumber" : 9,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  model.materials.ensureCapacity(materials.size);\n  for (JsonValue material=materials.child; material != null; material=material.next) {\n    ModelMaterial jsonMaterial=new ModelMaterial();\n    String id=material.getString(\"id\",null);\n    if (id == null)     throw new GdxRuntimeException(\"Material needs an id.\");\n    jsonMaterial.id=id;\n    final JsonValue diffuse=material.get(\"diffuse\");\n    if (diffuse != null)     jsonMaterial.diffuse=parseColor(diffuse);\n    final JsonValue ambient=material.get(\"ambient\");\n    if (ambient != null)     jsonMaterial.ambient=parseColor(ambient);\n    final JsonValue emissive=material.get(\"emissive\");\n    if (emissive != null)     jsonMaterial.emissive=parseColor(emissive);\n    final JsonValue specular=material.get(\"specular\");\n    if (specular != null)     jsonMaterial.specular=parseColor(specular);\n    final JsonValue reflection=material.get(\"reflection\");\n    if (reflection != null)     jsonMaterial.reflection=parseColor(reflection);\n    jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n    jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n    JsonValue textures=material.get(\"textures\");\n    if (textures != null) {\n      for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n        ModelTexture jsonTexture=new ModelTexture();\n        String textureId=texture.getString(\"id\",null);\n        if (textureId == null)         throw new GdxRuntimeException(\"Texture has no id.\");\n        jsonTexture.id=textureId;\n        String fileName=texture.getString(\"filename\",null);\n        if (fileName == null)         throw new GdxRuntimeException(\"Texture needs filename.\");\n        jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n        jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n        jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n        String textureType=texture.getString(\"type\",null);\n        if (textureType == null)         throw new GdxRuntimeException(\"Texture needs type.\");\n        jsonTexture.usage=parseTextureUsage(textureType);\n        if (jsonMaterial.textures == null)         jsonMaterial.textures=new Array<ModelTexture>();\n        jsonMaterial.textures.add(jsonTexture);\n      }\n    }\n    model.materials.add(jsonMaterial);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 381,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2618,
        "startLineNumber" : 176,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (materials == null) {\n}\n else {\n  model.materials.ensureCapacity(materials.size);\n  for (JsonValue material=materials.child; material != null; material=material.next) {\n    ModelMaterial jsonMaterial=new ModelMaterial();\n    String id=material.getString(\"id\",null);\n    if (id == null)     throw new GdxRuntimeException(\"Material needs an id.\");\n    jsonMaterial.id=id;\n    final JsonValue diffuse=material.get(\"diffuse\");\n    if (diffuse != null)     jsonMaterial.diffuse=parseColor(diffuse);\n    final JsonValue ambient=material.get(\"ambient\");\n    if (ambient != null)     jsonMaterial.ambient=parseColor(ambient);\n    final JsonValue emissive=material.get(\"emissive\");\n    if (emissive != null)     jsonMaterial.emissive=parseColor(emissive);\n    final JsonValue specular=material.get(\"specular\");\n    if (specular != null)     jsonMaterial.specular=parseColor(specular);\n    final JsonValue reflection=material.get(\"reflection\");\n    if (reflection != null)     jsonMaterial.reflection=parseColor(reflection);\n    jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n    jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n    JsonValue textures=material.get(\"textures\");\n    if (textures != null) {\n      for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n        ModelTexture jsonTexture=new ModelTexture();\n        String textureId=texture.getString(\"id\",null);\n        if (textureId == null)         throw new GdxRuntimeException(\"Texture has no id.\");\n        jsonTexture.id=textureId;\n        String fileName=texture.getString(\"filename\",null);\n        if (fileName == null)         throw new GdxRuntimeException(\"Texture needs filename.\");\n        jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n        jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n        jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n        String textureType=texture.getString(\"type\",null);\n        if (textureType == null)         throw new GdxRuntimeException(\"Texture needs type.\");\n        jsonTexture.usage=parseTextureUsage(textureType);\n        if (jsonMaterial.textures == null)         jsonMaterial.textures=new Array<ModelTexture>();\n        jsonMaterial.textures.add(jsonTexture);\n      }\n    }\n    model.materials.add(jsonMaterial);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 386,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 174,
        "startColumnNumber" : 85,
        "endLineNumber" : 235,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JsonValue materials=json.get(\"materials\");\n  if (materials == null) {\n  }\n else {\n    model.materials.ensureCapacity(materials.size);\n    for (JsonValue material=materials.child; material != null; material=material.next) {\n      ModelMaterial jsonMaterial=new ModelMaterial();\n      String id=material.getString(\"id\",null);\n      if (id == null)       throw new GdxRuntimeException(\"Material needs an id.\");\n      jsonMaterial.id=id;\n      final JsonValue diffuse=material.get(\"diffuse\");\n      if (diffuse != null)       jsonMaterial.diffuse=parseColor(diffuse);\n      final JsonValue ambient=material.get(\"ambient\");\n      if (ambient != null)       jsonMaterial.ambient=parseColor(ambient);\n      final JsonValue emissive=material.get(\"emissive\");\n      if (emissive != null)       jsonMaterial.emissive=parseColor(emissive);\n      final JsonValue specular=material.get(\"specular\");\n      if (specular != null)       jsonMaterial.specular=parseColor(specular);\n      final JsonValue reflection=material.get(\"reflection\");\n      if (reflection != null)       jsonMaterial.reflection=parseColor(reflection);\n      jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n      jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n      JsonValue textures=material.get(\"textures\");\n      if (textures != null) {\n        for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n          ModelTexture jsonTexture=new ModelTexture();\n          String textureId=texture.getString(\"id\",null);\n          if (textureId == null)           throw new GdxRuntimeException(\"Texture has no id.\");\n          jsonTexture.id=textureId;\n          String fileName=texture.getString(\"filename\",null);\n          if (fileName == null)           throw new GdxRuntimeException(\"Texture needs filename.\");\n          jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n          jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n          jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n          String textureType=texture.getString(\"type\",null);\n          if (textureType == null)           throw new GdxRuntimeException(\"Texture needs type.\");\n          jsonTexture.usage=parseTextureUsage(textureType);\n          if (jsonMaterial.textures == null)           jsonMaterial.textures=new Array<ModelTexture>();\n          jsonMaterial.textures.add(jsonTexture);\n        }\n      }\n      model.materials.add(jsonMaterial);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 396,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2759,
        "startLineNumber" : 174,
        "startColumnNumber" : 1,
        "endLineNumber" : 235,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected void parseMaterials(ModelData model,JsonValue json,String materialDir){\n  JsonValue materials=json.get(\"materials\");\n  if (materials == null) {\n  }\n else {\n    model.materials.ensureCapacity(materials.size);\n    for (JsonValue material=materials.child; material != null; material=material.next) {\n      ModelMaterial jsonMaterial=new ModelMaterial();\n      String id=material.getString(\"id\",null);\n      if (id == null)       throw new GdxRuntimeException(\"Material needs an id.\");\n      jsonMaterial.id=id;\n      final JsonValue diffuse=material.get(\"diffuse\");\n      if (diffuse != null)       jsonMaterial.diffuse=parseColor(diffuse);\n      final JsonValue ambient=material.get(\"ambient\");\n      if (ambient != null)       jsonMaterial.ambient=parseColor(ambient);\n      final JsonValue emissive=material.get(\"emissive\");\n      if (emissive != null)       jsonMaterial.emissive=parseColor(emissive);\n      final JsonValue specular=material.get(\"specular\");\n      if (specular != null)       jsonMaterial.specular=parseColor(specular);\n      final JsonValue reflection=material.get(\"reflection\");\n      if (reflection != null)       jsonMaterial.reflection=parseColor(reflection);\n      jsonMaterial.shininess=material.getFloat(\"shininess\",0.0f);\n      jsonMaterial.opacity=material.getFloat(\"opacity\",1.0f);\n      JsonValue textures=material.get(\"textures\");\n      if (textures != null) {\n        for (JsonValue texture=textures.child; texture != null; texture=texture.next) {\n          ModelTexture jsonTexture=new ModelTexture();\n          String textureId=texture.getString(\"id\",null);\n          if (textureId == null)           throw new GdxRuntimeException(\"Texture has no id.\");\n          jsonTexture.id=textureId;\n          String fileName=texture.getString(\"filename\",null);\n          if (fileName == null)           throw new GdxRuntimeException(\"Texture needs filename.\");\n          jsonTexture.fileName=materialDir + (materialDir.length() == 0 || materialDir.endsWith(\"/\") ? \"\" : \"/\") + fileName;\n          jsonTexture.uvTranslation=readVector2(texture.get(\"uvTranslation\"),0f,0f);\n          jsonTexture.uvScaling=readVector2(texture.get(\"uvScaling\"),1f,1f);\n          String textureType=texture.getString(\"type\",null);\n          if (textureType == null)           throw new GdxRuntimeException(\"Texture needs type.\");\n          jsonTexture.usage=parseTextureUsage(textureType);\n          if (jsonMaterial.textures == null)           jsonMaterial.textures=new Array<ModelTexture>();\n          jsonMaterial.textures.add(jsonTexture);\n        }\n      }\n      model.materials.add(jsonMaterial);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 412,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 215,
        "startColumnNumber" : 6,
        "endLineNumber" : 215,
        "endColumnNumber" : 85
      },
      "nodeContext" : "if (fileName == null) throw new GdxRuntimeException(\"Texture needs filename.\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 215,
    "startColumnNumber" : 58,
    "endLineNumber" : 215,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}