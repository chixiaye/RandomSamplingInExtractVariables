{
  "id" : 222,
  "expression" : "ServerResolvers",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-testkit/src/main/java/com/netflix/eureka2/testkit/embedded/EurekaDeployment.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ServerResolvers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 141,
      "startColumnNumber" : 42,
      "endLineNumber" : 141,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 141,
        "startColumnNumber" : 42,
        "endLineNumber" : 141,
        "endColumnNumber" : 129
      },
      "nodeContext" : "ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 141,
        "endColumnNumber" : 129
      },
      "nodeContext" : "readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 141,
        "endColumnNumber" : 130
      },
      "nodeContext" : "readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 139,
        "startColumnNumber" : 41,
        "endLineNumber" : 142,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n  readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 139,
        "startColumnNumber" : 16,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (readClusterSize > 0) {\n  discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n  readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n}\n else {\n  discoveryPort=writeCluster.getServer(0).getDiscoveryPort();\n  readClusterResolver=writeCluster.discoveryResolver();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 136,
        "startColumnNumber" : 34,
        "endLineNumber" : 155,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int discoveryPort;\n  ServerResolver readClusterResolver;\n  if (readClusterSize > 0) {\n    discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n    readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n  }\n else {\n    discoveryPort=writeCluster.getServer(0).getDiscoveryPort();\n    readClusterResolver=writeCluster.discoveryResolver();\n  }\n  dashboardServer=EmbeddedDashboardServer.newDashboard(writeCluster.registrationResolver(),readClusterResolver,discoveryPort,extensionsEnabled,adminUIEnabled);\n  dashboardServer.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 155,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dashboardEnabled) {\n  int discoveryPort;\n  ServerResolver readClusterResolver;\n  if (readClusterSize > 0) {\n    discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n    readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n  }\n else {\n    discoveryPort=writeCluster.getServer(0).getDiscoveryPort();\n    readClusterResolver=writeCluster.discoveryResolver();\n  }\n  dashboardServer=EmbeddedDashboardServer.newDashboard(writeCluster.registrationResolver(),readClusterResolver,discoveryPort,extensionsEnabled,adminUIEnabled);\n  dashboardServer.start();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1852,
        "startLineNumber" : 122,
        "startColumnNumber" : 40,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  EmbeddedWriteCluster writeCluster=new EmbeddedWriteCluster(extensionsEnabled,adminUIEnabled,ephemeralPorts);\n  writeCluster.scaleUpBy(writeClusterSize);\n  EmbeddedReadCluster readCluster=new EmbeddedReadCluster(writeCluster.registrationResolver(),writeCluster.discoveryResolver(),extensionsEnabled,adminUIEnabled,ephemeralPorts);\n  readCluster.scaleUpBy(readClusterSize);\n  EmbeddedBridgeServer bridgeServer=null;\n  if (bridgeEnabled) {\n    bridgeServer=EmbeddedBridgeServer.newBridge(writeCluster.replicationPeers(),extensionsEnabled,adminUIEnabled);\n    bridgeServer.start();\n  }\n  EmbeddedDashboardServer dashboardServer=null;\n  if (dashboardEnabled) {\n    int discoveryPort;\n    ServerResolver readClusterResolver;\n    if (readClusterSize > 0) {\n      discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n      readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n    }\n else {\n      discoveryPort=writeCluster.getServer(0).getDiscoveryPort();\n      readClusterResolver=writeCluster.discoveryResolver();\n    }\n    dashboardServer=EmbeddedDashboardServer.newDashboard(writeCluster.registrationResolver(),readClusterResolver,discoveryPort,extensionsEnabled,adminUIEnabled);\n    dashboardServer.start();\n  }\n  return new EurekaDeployment(writeCluster,readCluster,bridgeServer,dashboardServer,viewEnabled);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1884,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public EurekaDeployment build(){\n  EmbeddedWriteCluster writeCluster=new EmbeddedWriteCluster(extensionsEnabled,adminUIEnabled,ephemeralPorts);\n  writeCluster.scaleUpBy(writeClusterSize);\n  EmbeddedReadCluster readCluster=new EmbeddedReadCluster(writeCluster.registrationResolver(),writeCluster.discoveryResolver(),extensionsEnabled,adminUIEnabled,ephemeralPorts);\n  readCluster.scaleUpBy(readClusterSize);\n  EmbeddedBridgeServer bridgeServer=null;\n  if (bridgeEnabled) {\n    bridgeServer=EmbeddedBridgeServer.newBridge(writeCluster.replicationPeers(),extensionsEnabled,adminUIEnabled);\n    bridgeServer.start();\n  }\n  EmbeddedDashboardServer dashboardServer=null;\n  if (dashboardEnabled) {\n    int discoveryPort;\n    ServerResolver readClusterResolver;\n    if (readClusterSize > 0) {\n      discoveryPort=readCluster.getServer(0).getDiscoveryPort();\n      readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n    }\n else {\n      discoveryPort=writeCluster.getServer(0).getDiscoveryPort();\n      readClusterResolver=writeCluster.discoveryResolver();\n    }\n    dashboardServer=EmbeddedDashboardServer.newDashboard(writeCluster.registrationResolver(),readClusterResolver,discoveryPort,extensionsEnabled,adminUIEnabled);\n    dashboardServer.start();\n  }\n  return new EurekaDeployment(writeCluster,readCluster,bridgeServer,dashboardServer,viewEnabled);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 141,
        "startColumnNumber" : 20,
        "endLineNumber" : 141,
        "endColumnNumber" : 130
      },
      "nodeContext" : "readClusterResolver=ServerResolvers.fromWriteServer(writeCluster.discoveryResolver(),readCluster.getVip());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.client.resolver.ServerResolvers"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 141,
    "startColumnNumber" : 42,
    "endLineNumber" : 141,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}