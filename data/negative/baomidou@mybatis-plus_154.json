{
  "id" : 154,
  "expression" : "needsHexEscape",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/StringEscape.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "needsHexEscape",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 55,
      "startColumnNumber" : 16,
      "endLineNumber" : 55,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (needsHexEscape) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 24,
        "startColumnNumber" : 38,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=str.charAt(i);\nswitch (c) {\ncase 0:    needsHexEscape=true;\n  break;\ncase '\\n':needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < len; ++i) {\n  char c=str.charAt(i);\nswitch (c) {\ncase 0:    needsHexEscape=true;\n  break;\ncase '\\n':needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 77,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 22,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean needsHexEscape=false;\n  for (int i=0; i < len; ++i) {\n    char c=str.charAt(i);\nswitch (c) {\ncase 0:      needsHexEscape=true;\n    break;\ncase '\\n':  needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\nreturn needsHexEscape;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 字符串是否需要转义 </p>\n * @param str\n * @param len\n * @return\n */\nprivate static boolean isEscapeNeededForString(String str,int len){\n  boolean needsHexEscape=false;\n  for (int i=0; i < len; ++i) {\n    char c=str.charAt(i);\nswitch (c) {\ncase 0:      needsHexEscape=true;\n    break;\ncase '\\n':  needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\nreturn needsHexEscape;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (needsHexEscape) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "needsHexEscape",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 60,
      "startColumnNumber" : 15,
      "endLineNumber" : 60,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return needsHexEscape;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 22,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean needsHexEscape=false;\n  for (int i=0; i < len; ++i) {\n    char c=str.charAt(i);\nswitch (c) {\ncase 0:      needsHexEscape=true;\n    break;\ncase '\\n':  needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\nreturn needsHexEscape;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 字符串是否需要转义 </p>\n * @param str\n * @param len\n * @return\n */\nprivate static boolean isEscapeNeededForString(String str,int len){\n  boolean needsHexEscape=false;\n  for (int i=0; i < len; ++i) {\n    char c=str.charAt(i);\nswitch (c) {\ncase 0:      needsHexEscape=true;\n    break;\ncase '\\n':  needsHexEscape=true;\nbreak;\ncase '\\r':needsHexEscape=true;\nbreak;\ncase '\\\\':needsHexEscape=true;\nbreak;\ncase '\\'':needsHexEscape=true;\nbreak;\ncase '\"':needsHexEscape=true;\nbreak;\ncase '\\032':needsHexEscape=true;\nbreak;\ndefault:break;\n}\nif (needsHexEscape) {\nbreak;\n}\n}\nreturn needsHexEscape;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return needsHexEscape;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 55,
    "startColumnNumber" : 16,
    "endLineNumber" : 55,
    "endColumnNumber" : 30
  }, {
    "charLength" : 14,
    "startLineNumber" : 60,
    "startColumnNumber" : 15,
    "endLineNumber" : 60,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}