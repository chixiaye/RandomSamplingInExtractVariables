{
  "id" : 23,
  "expression" : "client",
  "projectName" : "alibaba@nacos",
  "commitID" : "ac73e7395ebf04141d94d7608551b2efa5e82de1",
  "filePath" : "naming/src/test/java/com/alibaba/nacos/naming/healthcheck/heartbeat/ClientBeatCheckTaskV2Test.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "client",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 148,
      "startColumnNumber" : 20,
      "endLineNumber" : 148,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 148,
        "startColumnNumber" : 20,
        "endLineNumber" : 148,
        "endColumnNumber" : 54
      },
      "nodeContext" : "client.getAllInstancePublishInfo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 148,
        "startColumnNumber" : 20,
        "endLineNumber" : 148,
        "endColumnNumber" : 64
      },
      "nodeContext" : "client.getAllInstancePublishInfo().isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertFalse(client.getAllInstancePublishInfo().isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertFalse(client.getAllInstancePublishInfo().isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 138,
        "startColumnNumber" : 92,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  injectInstance(true,System.currentTimeMillis());\n  Service service=Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME);\n  InstanceMetadata metadata=new InstanceMetadata();\n  metadata.getExtendData().put(PreservedMetadataKeys.HEART_BEAT_TIMEOUT,1000L);\n  String address=IP + IPUtil.IP_PORT_SPLITER + PORT;\n  when(namingMetadataManager.getInstanceMetadata(service,address)).thenReturn(Optional.of(metadata));\n  when(globalConfig.isExpireInstance()).thenReturn(true);\n  TimeUnit.SECONDS.sleep(1);\n  beatCheckTask.run();\n  assertFalse(client.getAllInstancePublishInfo().isEmpty());\n  assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRunHealthyInstanceWithTimeoutFromMetadata() throws InterruptedException {\n  injectInstance(true,System.currentTimeMillis());\n  Service service=Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME);\n  InstanceMetadata metadata=new InstanceMetadata();\n  metadata.getExtendData().put(PreservedMetadataKeys.HEART_BEAT_TIMEOUT,1000L);\n  String address=IP + IPUtil.IP_PORT_SPLITER + PORT;\n  when(namingMetadataManager.getInstanceMetadata(service,address)).thenReturn(Optional.of(metadata));\n  when(globalConfig.isExpireInstance()).thenReturn(true);\n  TimeUnit.SECONDS.sleep(1);\n  beatCheckTask.run();\n  assertFalse(client.getAllInstancePublishInfo().isEmpty());\n  assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertFalse(client.getAllInstancePublishInfo().isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient"
  }, {
    "nodeContext" : "client",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 149,
      "startColumnNumber" : 20,
      "endLineNumber" : 149,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 106
      },
      "nodeContext" : "client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 118
      },
      "nodeContext" : "client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 119
      },
      "nodeContext" : "assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 120
      },
      "nodeContext" : "assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 138,
        "startColumnNumber" : 92,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  injectInstance(true,System.currentTimeMillis());\n  Service service=Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME);\n  InstanceMetadata metadata=new InstanceMetadata();\n  metadata.getExtendData().put(PreservedMetadataKeys.HEART_BEAT_TIMEOUT,1000L);\n  String address=IP + IPUtil.IP_PORT_SPLITER + PORT;\n  when(namingMetadataManager.getInstanceMetadata(service,address)).thenReturn(Optional.of(metadata));\n  when(globalConfig.isExpireInstance()).thenReturn(true);\n  TimeUnit.SECONDS.sleep(1);\n  beatCheckTask.run();\n  assertFalse(client.getAllInstancePublishInfo().isEmpty());\n  assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRunHealthyInstanceWithTimeoutFromMetadata() throws InterruptedException {\n  injectInstance(true,System.currentTimeMillis());\n  Service service=Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME);\n  InstanceMetadata metadata=new InstanceMetadata();\n  metadata.getExtendData().put(PreservedMetadataKeys.HEART_BEAT_TIMEOUT,1000L);\n  String address=IP + IPUtil.IP_PORT_SPLITER + PORT;\n  when(namingMetadataManager.getInstanceMetadata(service,address)).thenReturn(Optional.of(metadata));\n  when(globalConfig.isExpireInstance()).thenReturn(true);\n  TimeUnit.SECONDS.sleep(1);\n  beatCheckTask.run();\n  assertFalse(client.getAllInstancePublishInfo().isEmpty());\n  assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 120
      },
      "nodeContext" : "assertFalse(client.getInstancePublishInfo(Service.newService(NAMESPACE,GROUP_NAME,SERVICE_NAME)).isHealthy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.v2.client.impl.IpPortBasedClient"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 148,
    "startColumnNumber" : 20,
    "endLineNumber" : 148,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 149,
    "startColumnNumber" : 20,
    "endLineNumber" : 149,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}