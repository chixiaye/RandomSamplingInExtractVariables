{
  "id" : 113,
  "expression" : "expected",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/testutils/src/main/java/com/google/android/exoplayer2/testutil/DecoderCountersUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 45,
      "startColumnNumber" : 78,
      "endLineNumber" : 45,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 21
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 41,
        "startColumnNumber" : 59,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  counters.ensureUpdated();\n  int actual=counters.skippedOutputBufferCount;\n  assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void assertSkippedOutputBufferCount(String name,DecoderCounters counters,int expected){\n  counters.ensureUpdated();\n  int actual=counters.skippedOutputBufferCount;\n  assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 47,
      "startColumnNumber" : 19,
      "endLineNumber" : 47,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 41,
        "startColumnNumber" : 59,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  counters.ensureUpdated();\n  int actual=counters.skippedOutputBufferCount;\n  assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void assertSkippedOutputBufferCount(String name,DecoderCounters counters,int expected){\n  counters.ensureUpdated();\n  int actual=counters.skippedOutputBufferCount;\n  assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertWithMessage(\"Codec(\" + name + \") skipped \"+ actual+ \" buffers. Expected \"+ expected+ \".\").that(actual).isEqualTo(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 45,
    "startColumnNumber" : 78,
    "endLineNumber" : 45,
    "endColumnNumber" : 86
  }, {
    "charLength" : 8,
    "startLineNumber" : 47,
    "startColumnNumber" : 19,
    "endLineNumber" : 47,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}