{
  "id" : 217,
  "expression" : "replicas[i] == value",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/metadata/src/main/java/org/apache/kafka/metadata/Replicas.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "replicas[i] == value",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 137,
      "startColumnNumber" : 16,
      "endLineNumber" : 137,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 50
      },
      "nodeContext" : "if (replicas[i] == value) return true;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 136,
        "startColumnNumber" : 50,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (replicas[i] == value)   return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < replicas.length; i++) {\n  if (replicas[i] == value)   return true;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 135,
        "startColumnNumber" : 62,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < replicas.length; i++) {\n    if (replicas[i] == value)     return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns true if an array of replicas contains a specific value.\n * @param replicas      The replica array.\n * @param value         The value to look for.\n * @return              True only if the value is found in the array.\n */\npublic static boolean contains(int[] replicas,int value){\n  for (int i=0; i < replicas.length; i++) {\n    if (replicas[i] == value)     return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 50
      },
      "nodeContext" : "if (replicas[i] == value) return true;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 137,
    "startColumnNumber" : 16,
    "endLineNumber" : 137,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}