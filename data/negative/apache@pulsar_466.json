{
  "id" : 466,
  "expression" : "topicsChangeListener",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/main/java/org/apache/pulsar/client/impl/PatternMultiTopicsConsumerImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "topicsChangeListener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 104,
      "startColumnNumber" : 24,
      "endLineNumber" : 104,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 104,
        "startColumnNumber" : 24,
        "endLineNumber" : 104,
        "endColumnNumber" : 98
      },
      "nodeContext" : "topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 99
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 100
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 87,
        "startColumnNumber" : 105,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (log.isDebugEnabled()) {\n    log.debug(\"Get topics under namespace {}, topics.size: {}\",namespaceName.toString(),topics.size());\n    topics.forEach(topicName -> log.debug(\"Get topics under namespace {}, topic: {}\",namespaceName.toString(),topicName));\n  }\n  List<String> newTopics=PulsarClientImpl.topicsPatternFilter(topics,topicsPattern);\n  List<String> oldTopics=Lists.newArrayList();\n  oldTopics.addAll(getPartitionedTopics());\n  getPartitions().forEach(p -> {\n    TopicName t=TopicName.get(p);\n    if (!t.isPartitioned() || !oldTopics.contains(t.getPartitionedTopicName())) {\n      oldTopics.add(p);\n    }\n  }\n);\n  futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n  futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n  FutureUtil.waitForAll(futures).thenAccept(finalFuture -> recheckFuture.complete(null)).exceptionally(ex -> {\n    log.warn(\"[{}] Failed to recheck topics change: {}\",topic,ex.getMessage());\n    recheckFuture.completeExceptionally(ex);\n    return null;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1391,
        "startLineNumber" : 87,
        "startColumnNumber" : 95,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "topics -> {\n  if (log.isDebugEnabled()) {\n    log.debug(\"Get topics under namespace {}, topics.size: {}\",namespaceName.toString(),topics.size());\n    topics.forEach(topicName -> log.debug(\"Get topics under namespace {}, topic: {}\",namespaceName.toString(),topicName));\n  }\n  List<String> newTopics=PulsarClientImpl.topicsPatternFilter(topics,topicsPattern);\n  List<String> oldTopics=Lists.newArrayList();\n  oldTopics.addAll(getPartitionedTopics());\n  getPartitions().forEach(p -> {\n    TopicName t=TopicName.get(p);\n    if (!t.isPartitioned() || !oldTopics.contains(t.getPartitionedTopicName())) {\n      oldTopics.add(p);\n    }\n  }\n);\n  futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n  futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n  FutureUtil.waitForAll(futures).thenAccept(finalFuture -> recheckFuture.complete(null)).exceptionally(ex -> {\n    log.warn(\"[{}] Failed to recheck topics change: {}\",topic,ex.getMessage());\n    recheckFuture.completeExceptionally(ex);\n    return null;\n  }\n);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 160,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 100
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "topicsChangeListener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 105,
      "startColumnNumber" : 24,
      "endLineNumber" : 105,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 105,
        "startColumnNumber" : 24,
        "endLineNumber" : 105,
        "endColumnNumber" : 100
      },
      "nodeContext" : "topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 101
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 102
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 87,
        "startColumnNumber" : 105,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (log.isDebugEnabled()) {\n    log.debug(\"Get topics under namespace {}, topics.size: {}\",namespaceName.toString(),topics.size());\n    topics.forEach(topicName -> log.debug(\"Get topics under namespace {}, topic: {}\",namespaceName.toString(),topicName));\n  }\n  List<String> newTopics=PulsarClientImpl.topicsPatternFilter(topics,topicsPattern);\n  List<String> oldTopics=Lists.newArrayList();\n  oldTopics.addAll(getPartitionedTopics());\n  getPartitions().forEach(p -> {\n    TopicName t=TopicName.get(p);\n    if (!t.isPartitioned() || !oldTopics.contains(t.getPartitionedTopicName())) {\n      oldTopics.add(p);\n    }\n  }\n);\n  futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n  futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n  FutureUtil.waitForAll(futures).thenAccept(finalFuture -> recheckFuture.complete(null)).exceptionally(ex -> {\n    log.warn(\"[{}] Failed to recheck topics change: {}\",topic,ex.getMessage());\n    recheckFuture.completeExceptionally(ex);\n    return null;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1391,
        "startLineNumber" : 87,
        "startColumnNumber" : 95,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "topics -> {\n  if (log.isDebugEnabled()) {\n    log.debug(\"Get topics under namespace {}, topics.size: {}\",namespaceName.toString(),topics.size());\n    topics.forEach(topicName -> log.debug(\"Get topics under namespace {}, topic: {}\",namespaceName.toString(),topicName));\n  }\n  List<String> newTopics=PulsarClientImpl.topicsPatternFilter(topics,topicsPattern);\n  List<String> oldTopics=Lists.newArrayList();\n  oldTopics.addAll(getPartitionedTopics());\n  getPartitions().forEach(p -> {\n    TopicName t=TopicName.get(p);\n    if (!t.isPartitioned() || !oldTopics.contains(t.getPartitionedTopicName())) {\n      oldTopics.add(p);\n    }\n  }\n);\n  futures.add(topicsChangeListener.onTopicsAdded(topicsListsMinus(newTopics,oldTopics)));\n  futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n  FutureUtil.waitForAll(futures).thenAccept(finalFuture -> recheckFuture.complete(null)).exceptionally(ex -> {\n    log.warn(\"[{}] Failed to recheck topics change: {}\",topic,ex.getMessage());\n    recheckFuture.completeExceptionally(ex);\n    return null;\n  }\n);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 160,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 102
      },
      "nodeContext" : "futures.add(topicsChangeListener.onTopicsRemoved(topicsListsMinus(oldTopics,newTopics)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 104,
    "startColumnNumber" : 24,
    "endLineNumber" : 104,
    "endColumnNumber" : 44
  }, {
    "charLength" : 20,
    "startLineNumber" : 105,
    "startColumnNumber" : 24,
    "endLineNumber" : 105,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}