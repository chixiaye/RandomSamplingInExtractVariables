{
  "id" : 456,
  "expression" : "new ANTLRInputStream(input)",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestGrammarParserInterpreter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ANTLRInputStream(input)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 108,
      "startColumnNumber" : 57,
      "endLineNumber" : 108,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 108,
        "startColumnNumber" : 31,
        "endLineNumber" : 108,
        "endColumnNumber" : 85
      },
      "nodeContext" : "lg.createLexerInterpreter(new ANTLRInputStream(input))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 108,
        "endColumnNumber" : 85
      },
      "nodeContext" : "lexEngine=lg.createLexerInterpreter(new ANTLRInputStream(input))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 86
      },
      "nodeContext" : "LexerInterpreter lexEngine=lg.createLexerInterpreter(new ANTLRInputStream(input));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 107,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  LexerInterpreter lexEngine=lg.createLexerInterpreter(new ANTLRInputStream(input));\n  CommonTokenStream tokens=new CommonTokenStream(lexEngine);\n  GrammarParserInterpreter parser=g.createGrammarParserInterpreter(tokens);\n  ParseTree t=parser.parse(g.rules.get(startRule).index);\n  InterpreterTreeTextProvider nodeTextProvider=new InterpreterTreeTextProvider(g.getRuleNames());\n  String treeStr=Trees.toStringTree(t,nodeTextProvider);\n  assertEquals(expectedParseTree,treeStr);\n  return (InterpreterRuleContext)t;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 104,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "InterpreterRuleContext testInterp(LexerGrammar lg,Grammar g,String startRule,String input,String expectedParseTree){\n  LexerInterpreter lexEngine=lg.createLexerInterpreter(new ANTLRInputStream(input));\n  CommonTokenStream tokens=new CommonTokenStream(lexEngine);\n  GrammarParserInterpreter parser=g.createGrammarParserInterpreter(tokens);\n  ParseTree t=parser.parse(g.rules.get(startRule).index);\n  InterpreterTreeTextProvider nodeTextProvider=new InterpreterTreeTextProvider(g.getRuleNames());\n  String treeStr=Trees.toStringTree(t,nodeTextProvider);\n  assertEquals(expectedParseTree,treeStr);\n  return (InterpreterRuleContext)t;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 86
      },
      "nodeContext" : "LexerInterpreter lexEngine=lg.createLexerInterpreter(new ANTLRInputStream(input));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "org.antlr.v4.runtime.ANTLRInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 108,
    "startColumnNumber" : 57,
    "endLineNumber" : 108,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}