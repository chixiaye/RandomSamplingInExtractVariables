{
  "id" : 235,
  "expression" : "null",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/jta/atomikos/AtomikosDependsOnBeanFactoryPostProcessorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 58,
      "startColumnNumber" : 35,
      "endLineNumber" : 58,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "definition.getDependsOn() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (definition.getDependsOn() == null) {\n  assertThat(expected).as(\"No dependsOn expected for \" + bean).isEmpty();\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 56,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BeanDefinition definition=this.context.getBeanDefinition(bean);\n  if (definition.getDependsOn() == null) {\n    assertThat(expected).as(\"No dependsOn expected for \" + bean).isEmpty();\n    return;\n  }\n  HashSet<String> dependsOn=new HashSet<>(Arrays.asList(definition.getDependsOn()));\n  assertThat(dependsOn).isEqualTo(new HashSet<>(Arrays.asList(expected)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void assertDependsOn(String bean,String... expected){\n  BeanDefinition definition=this.context.getBeanDefinition(bean);\n  if (definition.getDependsOn() == null) {\n    assertThat(expected).as(\"No dependsOn expected for \" + bean).isEmpty();\n    return;\n  }\n  HashSet<String> dependsOn=new HashSet<>(Arrays.asList(definition.getDependsOn()));\n  assertThat(dependsOn).isEqualTo(new HashSet<>(Arrays.asList(expected)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "definition.getDependsOn() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 58,
    "startColumnNumber" : 35,
    "endLineNumber" : 58,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}