{
  "id" : 8,
  "expression" : "new byte[data.length]",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "313ceee2369392317adccb19ecc813ae0ccac292",
  "filePath" : "code/src/test/com/lmax/disruptor/MultiProducerOffHeapRingBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new byte[data.length]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 23,
      "startColumnNumber" : 22,
      "endLineNumber" : 23,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 23,
        "startColumnNumber" : 15,
        "endLineNumber" : 23,
        "endColumnNumber" : 43
      },
      "nodeContext" : "read=new byte[data.length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 44
      },
      "nodeContext" : "byte[] read=new byte[data.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String expected=\"This is some test data\";\n  MultiProducerOffHeapRingBuffer buffer=MultiProducerOffHeapRingBuffer.newInstance(32,256,new BlockingWaitStrategy());\n  buffer.setGatingSequences();\n  byte[] data=expected.getBytes(\"ASCII\");\n  buffer.put(data,0,data.length);\n  assertThat(buffer.getEntrySize(0),is(data.length));\n  byte[] read=new byte[data.length];\n  buffer.getData(0,read,0,read.length);\n  assertThat(new String(read),is(expected));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInsertSingleMessage() throws Exception {\n  String expected=\"This is some test data\";\n  MultiProducerOffHeapRingBuffer buffer=MultiProducerOffHeapRingBuffer.newInstance(32,256,new BlockingWaitStrategy());\n  buffer.setGatingSequences();\n  byte[] data=expected.getBytes(\"ASCII\");\n  buffer.put(data,0,data.length);\n  assertThat(buffer.getEntrySize(0),is(data.length));\n  byte[] read=new byte[data.length];\n  buffer.getData(0,read,0,read.length);\n  assertThat(new String(read),is(expected));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 44
      },
      "nodeContext" : "byte[] read=new byte[data.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 23,
    "startColumnNumber" : 22,
    "endLineNumber" : 23,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}