{
  "id" : 399,
  "expression" : "expectedException",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/testutils/src/test/java/com/google/android/exoplayer2/testutil/AdditionalFailureInfoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 55,
      "startColumnNumber" : 4,
      "endLineNumber" : 55,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 10
      },
      "nodeContext" : "expectedException.setAssertions(throwable -> {\n  assertThat(throwable).isInstanceOf(AssertionError.class);\n  assertThat(throwable).hasMessageThat().isEqualTo(\"extra info\\n\" + originalAssertionError.getMessage());\n  assertThat(throwable).hasCauseThat().isNull();\n  assertThat(throwable.getStackTrace()).isEqualTo(originalAssertionError.getStackTrace());\n  assertThat(throwable.toString()).startsWith(\"extra info\");\n  assertThat(throwable.toString()).doesNotContain(\"AssertionError\");\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 11
      },
      "nodeContext" : "expectedException.setAssertions(throwable -> {\n  assertThat(throwable).isInstanceOf(AssertionError.class);\n  assertThat(throwable).hasMessageThat().isEqualTo(\"extra info\\n\" + originalAssertionError.getMessage());\n  assertThat(throwable).hasCauseThat().isNull();\n  assertThat(throwable.getStackTrace()).isEqualTo(originalAssertionError.getStackTrace());\n  assertThat(throwable.toString()).startsWith(\"extra info\");\n  assertThat(throwable.toString()).doesNotContain(\"AssertionError\");\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1156,
        "startLineNumber" : 44,
        "startColumnNumber" : 76,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AssertionError originalAssertionError=assertThrows(AssertionError.class,() -> assertThat(true).isFalse());\n  additionalFailureInfo.setInfo(\"extra info\");\n  expectedException.setAssertions(throwable -> {\n    assertThat(throwable).isInstanceOf(AssertionError.class);\n    assertThat(throwable).hasMessageThat().isEqualTo(\"extra info\\n\" + originalAssertionError.getMessage());\n    assertThat(throwable).hasCauseThat().isNull();\n    assertThat(throwable.getStackTrace()).isEqualTo(originalAssertionError.getStackTrace());\n    assertThat(throwable.toString()).startsWith(\"extra info\");\n    assertThat(throwable.toString()).doesNotContain(\"AssertionError\");\n  }\n);\n  throw originalAssertionError;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void extraInfoSet_addsInfoToAssertionErrorAndSuppressesClassName(){\n  AssertionError originalAssertionError=assertThrows(AssertionError.class,() -> assertThat(true).isFalse());\n  additionalFailureInfo.setInfo(\"extra info\");\n  expectedException.setAssertions(throwable -> {\n    assertThat(throwable).isInstanceOf(AssertionError.class);\n    assertThat(throwable).hasMessageThat().isEqualTo(\"extra info\\n\" + originalAssertionError.getMessage());\n    assertThat(throwable).hasCauseThat().isNull();\n    assertThat(throwable.getStackTrace()).isEqualTo(originalAssertionError.getStackTrace());\n    assertThat(throwable.toString()).startsWith(\"extra info\");\n    assertThat(throwable.toString()).doesNotContain(\"AssertionError\");\n  }\n);\n  throw originalAssertionError;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 10
      },
      "nodeContext" : "expectedException.setAssertions(throwable -> {\n  assertThat(throwable).isInstanceOf(AssertionError.class);\n  assertThat(throwable).hasMessageThat().isEqualTo(\"extra info\\n\" + originalAssertionError.getMessage());\n  assertThat(throwable).hasCauseThat().isNull();\n  assertThat(throwable.getStackTrace()).isEqualTo(originalAssertionError.getStackTrace());\n  assertThat(throwable.toString()).startsWith(\"extra info\");\n  assertThat(throwable.toString()).doesNotContain(\"AssertionError\");\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.testutil.AdditionalFailureInfoTest.ExpectedException"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 55,
    "startColumnNumber" : 4,
    "endLineNumber" : 55,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}