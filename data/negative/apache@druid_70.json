{
  "id" : 70,
  "expression" : "storage.get(BUCKET,logPath,offset)",
  "projectName" : "apache@druid",
  "commitID" : "d057c5149fe5a20c98f3e60af9189e4a1f7ad9ce",
  "filePath" : "extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleTaskLogsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "storage.get(BUCKET,logPath,offset)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 142,
      "startColumnNumber" : 20,
      "endLineNumber" : 142,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 57
      },
      "nodeContext" : "EasyMock.expect(storage.get(BUCKET,logPath,offset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 81
      },
      "nodeContext" : "EasyMock.expect(storage.get(BUCKET,logPath,offset)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 82
      },
      "nodeContext" : "EasyMock.expect(storage.get(BUCKET,logPath,offset)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String testLog=\"hello this is a log\";\n  final int offset=5;\n  final String expectedLog=testLog.substring(offset);\n  final String logPath=PREFIX + \"/\" + TASKID;\n  EasyMock.expect(storage.exists(BUCKET,logPath)).andReturn(true);\n  EasyMock.expect(storage.size(BUCKET,logPath)).andReturn((long)testLog.length());\n  EasyMock.expect(storage.get(BUCKET,logPath,offset)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)));\n  replayAll();\n  final Optional<ByteSource> byteSource=googleTaskLogs.streamTaskLog(TASKID,offset);\n  final StringWriter writer=new StringWriter();\n  IOUtils.copy(byteSource.get().openStream(),writer,\"UTF-8\");\n  Assert.assertEquals(writer.toString(),expectedLog);\n  verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 133,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testStreamTaskLogWithPositiveOffset() throws Exception {\n  final String testLog=\"hello this is a log\";\n  final int offset=5;\n  final String expectedLog=testLog.substring(offset);\n  final String logPath=PREFIX + \"/\" + TASKID;\n  EasyMock.expect(storage.exists(BUCKET,logPath)).andReturn(true);\n  EasyMock.expect(storage.size(BUCKET,logPath)).andReturn((long)testLog.length());\n  EasyMock.expect(storage.get(BUCKET,logPath,offset)).andReturn(new ByteArrayInputStream(StringUtils.toUtf8(expectedLog)));\n  replayAll();\n  final Optional<ByteSource> byteSource=googleTaskLogs.streamTaskLog(TASKID,offset);\n  final StringWriter writer=new StringWriter();\n  IOUtils.copy(byteSource.get().openStream(),writer,\"UTF-8\");\n  Assert.assertEquals(writer.toString(),expectedLog);\n  verifyAll();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 57
      },
      "nodeContext" : "EasyMock.expect(storage.get(BUCKET,logPath,offset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 142,
    "startColumnNumber" : 20,
    "endLineNumber" : 142,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}