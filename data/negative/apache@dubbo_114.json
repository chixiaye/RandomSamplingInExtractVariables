{
  "id" : 114,
  "expression" : "revisionsToUrls",
  "projectName" : "apache@dubbo",
  "commitID" : "829c0df27368640122bd6455567fa4d766ba39f8",
  "filePath" : "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "revisionsToUrls",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 157,
      "startColumnNumber" : 29,
      "endLineNumber" : 157,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 157,
        "startColumnNumber" : 29,
        "endLineNumber" : 157,
        "endColumnNumber" : 59
      },
      "nodeContext" : "revisionsToUrls.get(revisions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 157,
        "startColumnNumber" : 22,
        "endLineNumber" : 157,
        "endColumnNumber" : 59
      },
      "nodeContext" : "urls=revisionsToUrls.get(revisions)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 157,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<URL> urls=revisionsToUrls.get(revisions);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 152,
        "startColumnNumber" : 68,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String protocol=serviceInfo.getProtocol();\n  Map<Set<String>,List<URL>> revisionsToUrls=protocolRevisionsToUrls.computeIfAbsent(protocol,k -> {\n    return new HashMap<>();\n  }\n);\n  List<URL> urls=revisionsToUrls.get(revisions);\n  if (urls != null) {\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n else {\n    urls=new ArrayList<>();\n    for (    String r : revisions) {\n      for (      ServiceInstance i : revisionToInstances.get(r)) {\n        if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n          DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n          if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n            urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n            break;\n          }\n        }\n        urls.add(i.toURL());\n      }\n    }\n    revisionsToUrls.put(revisions,urls);\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 152,
        "startColumnNumber" : 40,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "(serviceInfo,revisions) -> {\n  String protocol=serviceInfo.getProtocol();\n  Map<Set<String>,List<URL>> revisionsToUrls=protocolRevisionsToUrls.computeIfAbsent(protocol,k -> {\n    return new HashMap<>();\n  }\n);\n  List<URL> urls=revisionsToUrls.get(revisions);\n  if (urls != null) {\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n else {\n    urls=new ArrayList<>();\n    for (    String r : revisions) {\n      for (      ServiceInstance i : revisionToInstances.get(r)) {\n        if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n          DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n          if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n            urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n            break;\n          }\n        }\n        urls.add(i.toURL());\n      }\n    }\n    revisionsToUrls.put(revisions,urls);\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 162,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 157,
        "endColumnNumber" : 60
      },
      "nodeContext" : "List<URL> urls=revisionsToUrls.get(revisions);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.util.Set<java.lang.String>,java.util.List<org.apache.dubbo.common.URL>>"
  }, {
    "nodeContext" : "revisionsToUrls",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 175,
      "startColumnNumber" : 16,
      "endLineNumber" : 175,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 175,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 52
      },
      "nodeContext" : "revisionsToUrls.put(revisions,urls)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 175,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 53
      },
      "nodeContext" : "revisionsToUrls.put(revisions,urls);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 160,
        "startColumnNumber" : 19,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  urls=new ArrayList<>();\n  for (  String r : revisions) {\n    for (    ServiceInstance i : revisionToInstances.get(r)) {\n      if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n        DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n        if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n          urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n          break;\n        }\n      }\n      urls.add(i.toURL());\n    }\n  }\n  revisionsToUrls.put(revisions,urls);\n  newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1059,
        "startLineNumber" : 158,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (urls != null) {\n  newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n}\n else {\n  urls=new ArrayList<>();\n  for (  String r : revisions) {\n    for (    ServiceInstance i : revisionToInstances.get(r)) {\n      if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n        DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n        if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n          urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n          break;\n        }\n      }\n      urls.add(i.toURL());\n    }\n  }\n  revisionsToUrls.put(revisions,urls);\n  newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 152,
        "startColumnNumber" : 68,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String protocol=serviceInfo.getProtocol();\n  Map<Set<String>,List<URL>> revisionsToUrls=protocolRevisionsToUrls.computeIfAbsent(protocol,k -> {\n    return new HashMap<>();\n  }\n);\n  List<URL> urls=revisionsToUrls.get(revisions);\n  if (urls != null) {\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n else {\n    urls=new ArrayList<>();\n    for (    String r : revisions) {\n      for (      ServiceInstance i : revisionToInstances.get(r)) {\n        if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n          DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n          if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n            urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n            break;\n          }\n        }\n        urls.add(i.toURL());\n      }\n    }\n    revisionsToUrls.put(revisions,urls);\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 152,
        "startColumnNumber" : 40,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "(serviceInfo,revisions) -> {\n  String protocol=serviceInfo.getProtocol();\n  Map<Set<String>,List<URL>> revisionsToUrls=protocolRevisionsToUrls.computeIfAbsent(protocol,k -> {\n    return new HashMap<>();\n  }\n);\n  List<URL> urls=revisionsToUrls.get(revisions);\n  if (urls != null) {\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n else {\n    urls=new ArrayList<>();\n    for (    String r : revisions) {\n      for (      ServiceInstance i : revisionToInstances.get(r)) {\n        if (ServiceInstanceMetadataUtils.hasEndpoints(i)) {\n          DefaultServiceInstance.Endpoint endpoint=ServiceInstanceMetadataUtils.getEndpoint(i,protocol);\n          if (endpoint != null && !endpoint.getPort().equals(i.getPort())) {\n            urls.add(((DefaultServiceInstance)i).copy(endpoint).toURL());\n            break;\n          }\n        }\n        urls.add(i.toURL());\n      }\n    }\n    revisionsToUrls.put(revisions,urls);\n    newServiceUrls.put(serviceInfo.getMatchKey(),urls);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 162,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 175,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 53
      },
      "nodeContext" : "revisionsToUrls.put(revisions,urls);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.util.Set<java.lang.String>,java.util.List<org.apache.dubbo.common.URL>>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 157,
    "startColumnNumber" : 29,
    "endLineNumber" : 157,
    "endColumnNumber" : 44
  }, {
    "charLength" : 15,
    "startLineNumber" : 175,
    "startColumnNumber" : 16,
    "endLineNumber" : 175,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}