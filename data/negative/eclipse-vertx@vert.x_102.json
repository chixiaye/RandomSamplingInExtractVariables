{
  "id" : 102,
  "expression" : "server",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/eventbus/impl/clustered/ClusteredEventBus.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "server",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 121,
      "startColumnNumber" : 8,
      "endLineNumber" : 121,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 49
      },
      "nodeContext" : "server.connectHandler(getServerHandler())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 50
      },
      "nodeContext" : "server.connectHandler(getServerHandler());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 117,
        "startColumnNumber" : 27,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  subs=ar2.result();\n  server=vertx.createNetServer(getServerOptions());\n  server.connectHandler(getServerHandler());\n  server.listen(asyncResult -> {\n    if (asyncResult.succeeded()) {\n      int serverPort=getClusterPublicPort(options,server.actualPort());\n      String serverHost=getClusterPublicHost(options);\n      serverID=new ServerID(serverPort,serverHost);\n      haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n      if (resultHandler != null) {\n        started=true;\n        resultHandler.handle(Future.succeededFuture());\n      }\n    }\n else {\n      if (resultHandler != null) {\n        resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n      }\n else {\n        log.error(asyncResult.cause());\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 146,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ar2.succeeded()) {\n  subs=ar2.result();\n  server=vertx.createNetServer(getServerOptions());\n  server.connectHandler(getServerHandler());\n  server.listen(asyncResult -> {\n    if (asyncResult.succeeded()) {\n      int serverPort=getClusterPublicPort(options,server.actualPort());\n      String serverHost=getClusterPublicHost(options);\n      serverID=new ServerID(serverPort,serverHost);\n      haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n      if (resultHandler != null) {\n        started=true;\n        resultHandler.handle(Future.succeededFuture());\n      }\n    }\n else {\n      if (resultHandler != null) {\n        resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n      }\n else {\n        log.error(asyncResult.cause());\n      }\n    }\n  }\n);\n}\n else {\n  if (resultHandler != null) {\n    resultHandler.handle(Future.failedFuture(ar2.cause()));\n  }\n else {\n    log.error(ar2.cause());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 116,
        "startColumnNumber" : 76,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ar2.succeeded()) {\n    subs=ar2.result();\n    server=vertx.createNetServer(getServerOptions());\n    server.connectHandler(getServerHandler());\n    server.listen(asyncResult -> {\n      if (asyncResult.succeeded()) {\n        int serverPort=getClusterPublicPort(options,server.actualPort());\n        String serverHost=getClusterPublicHost(options);\n        serverID=new ServerID(serverPort,serverHost);\n        haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n        if (resultHandler != null) {\n          started=true;\n          resultHandler.handle(Future.succeededFuture());\n        }\n      }\n else {\n        if (resultHandler != null) {\n          resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n        }\n else {\n          log.error(asyncResult.cause());\n        }\n      }\n    }\n);\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(ar2.cause()));\n    }\n else {\n      log.error(ar2.cause());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1176,
        "startLineNumber" : 116,
        "startColumnNumber" : 69,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ar2 -> {\n  if (ar2.succeeded()) {\n    subs=ar2.result();\n    server=vertx.createNetServer(getServerOptions());\n    server.connectHandler(getServerHandler());\n    server.listen(asyncResult -> {\n      if (asyncResult.succeeded()) {\n        int serverPort=getClusterPublicPort(options,server.actualPort());\n        String serverHost=getClusterPublicHost(options);\n        serverID=new ServerID(serverPort,serverHost);\n        haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n        if (resultHandler != null) {\n          started=true;\n          resultHandler.handle(Future.succeededFuture());\n        }\n      }\n else {\n        if (resultHandler != null) {\n          resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n        }\n else {\n          log.error(asyncResult.cause());\n        }\n      }\n    }\n);\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(ar2.cause()));\n    }\n else {\n      log.error(ar2.cause());\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 152,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 50
      },
      "nodeContext" : "server.connectHandler(getServerHandler());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.net.NetServer"
  }, {
    "nodeContext" : "server",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 122,
      "startColumnNumber" : 8,
      "endLineNumber" : 122,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 10
      },
      "nodeContext" : "server.listen(asyncResult -> {\n  if (asyncResult.succeeded()) {\n    int serverPort=getClusterPublicPort(options,server.actualPort());\n    String serverHost=getClusterPublicHost(options);\n    serverID=new ServerID(serverPort,serverHost);\n    haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n    if (resultHandler != null) {\n      started=true;\n      resultHandler.handle(Future.succeededFuture());\n    }\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n    }\n else {\n      log.error(asyncResult.cause());\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 11
      },
      "nodeContext" : "server.listen(asyncResult -> {\n  if (asyncResult.succeeded()) {\n    int serverPort=getClusterPublicPort(options,server.actualPort());\n    String serverHost=getClusterPublicHost(options);\n    serverID=new ServerID(serverPort,serverHost);\n    haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n    if (resultHandler != null) {\n      started=true;\n      resultHandler.handle(Future.succeededFuture());\n    }\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n    }\n else {\n      log.error(asyncResult.cause());\n    }\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 99,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 117,
        "startColumnNumber" : 27,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  subs=ar2.result();\n  server=vertx.createNetServer(getServerOptions());\n  server.connectHandler(getServerHandler());\n  server.listen(asyncResult -> {\n    if (asyncResult.succeeded()) {\n      int serverPort=getClusterPublicPort(options,server.actualPort());\n      String serverHost=getClusterPublicHost(options);\n      serverID=new ServerID(serverPort,serverHost);\n      haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n      if (resultHandler != null) {\n        started=true;\n        resultHandler.handle(Future.succeededFuture());\n      }\n    }\n else {\n      if (resultHandler != null) {\n        resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n      }\n else {\n        log.error(asyncResult.cause());\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 146,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ar2.succeeded()) {\n  subs=ar2.result();\n  server=vertx.createNetServer(getServerOptions());\n  server.connectHandler(getServerHandler());\n  server.listen(asyncResult -> {\n    if (asyncResult.succeeded()) {\n      int serverPort=getClusterPublicPort(options,server.actualPort());\n      String serverHost=getClusterPublicHost(options);\n      serverID=new ServerID(serverPort,serverHost);\n      haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n      if (resultHandler != null) {\n        started=true;\n        resultHandler.handle(Future.succeededFuture());\n      }\n    }\n else {\n      if (resultHandler != null) {\n        resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n      }\n else {\n        log.error(asyncResult.cause());\n      }\n    }\n  }\n);\n}\n else {\n  if (resultHandler != null) {\n    resultHandler.handle(Future.failedFuture(ar2.cause()));\n  }\n else {\n    log.error(ar2.cause());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 116,
        "startColumnNumber" : 76,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ar2.succeeded()) {\n    subs=ar2.result();\n    server=vertx.createNetServer(getServerOptions());\n    server.connectHandler(getServerHandler());\n    server.listen(asyncResult -> {\n      if (asyncResult.succeeded()) {\n        int serverPort=getClusterPublicPort(options,server.actualPort());\n        String serverHost=getClusterPublicHost(options);\n        serverID=new ServerID(serverPort,serverHost);\n        haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n        if (resultHandler != null) {\n          started=true;\n          resultHandler.handle(Future.succeededFuture());\n        }\n      }\n else {\n        if (resultHandler != null) {\n          resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n        }\n else {\n          log.error(asyncResult.cause());\n        }\n      }\n    }\n);\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(ar2.cause()));\n    }\n else {\n      log.error(ar2.cause());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1176,
        "startLineNumber" : 116,
        "startColumnNumber" : 69,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ar2 -> {\n  if (ar2.succeeded()) {\n    subs=ar2.result();\n    server=vertx.createNetServer(getServerOptions());\n    server.connectHandler(getServerHandler());\n    server.listen(asyncResult -> {\n      if (asyncResult.succeeded()) {\n        int serverPort=getClusterPublicPort(options,server.actualPort());\n        String serverHost=getClusterPublicHost(options);\n        serverID=new ServerID(serverPort,serverHost);\n        haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n        if (resultHandler != null) {\n          started=true;\n          resultHandler.handle(Future.succeededFuture());\n        }\n      }\n else {\n        if (resultHandler != null) {\n          resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n        }\n else {\n          log.error(asyncResult.cause());\n        }\n      }\n    }\n);\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(ar2.cause()));\n    }\n else {\n      log.error(ar2.cause());\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 152,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 10
      },
      "nodeContext" : "server.listen(asyncResult -> {\n  if (asyncResult.succeeded()) {\n    int serverPort=getClusterPublicPort(options,server.actualPort());\n    String serverHost=getClusterPublicHost(options);\n    serverID=new ServerID(serverPort,serverHost);\n    haManager.addDataToAHAInfo(SERVER_ID_HA_KEY,new JsonObject().put(\"host\",serverID.host).put(\"port\",serverID.port));\n    if (resultHandler != null) {\n      started=true;\n      resultHandler.handle(Future.succeededFuture());\n    }\n  }\n else {\n    if (resultHandler != null) {\n      resultHandler.handle(Future.failedFuture(asyncResult.cause()));\n    }\n else {\n      log.error(asyncResult.cause());\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 98,
      "astHeight" : 12
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.net.NetServer"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 121,
    "startColumnNumber" : 8,
    "endLineNumber" : 121,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 122,
    "startColumnNumber" : 8,
    "endLineNumber" : 122,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}