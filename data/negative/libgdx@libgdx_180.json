{
  "id" : 180,
  "expression" : "new HttpClientResponse(connection)",
  "projectName" : "libgdx@libgdx",
  "commitID" : "a5a87fdf07d60ed0ad72e32150c88bbd9877474e",
  "filePath" : "gdx/src/com/badlogic/gdx/net/NetJavaImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HttpClientResponse(connection)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 225,
      "startColumnNumber" : 48,
      "endLineNumber" : 225,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 225,
        "startColumnNumber" : 31,
        "endLineNumber" : 225,
        "endColumnNumber" : 82
      },
      "nodeContext" : "clientResponse=new HttpClientResponse(connection)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 225,
        "startColumnNumber" : 6,
        "endLineNumber" : 225,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 198,
        "startColumnNumber" : 9,
        "endLineNumber" : 236,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 198,
        "startColumnNumber" : 5,
        "endLineNumber" : 243,
        "endColumnNumber" : 6
      },
      "nodeContext" : "try {\n  if (doingOutPut) {\n    String contentAsString=httpRequest.getContent();\n    if (contentAsString != null) {\n      OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n      try {\n        writer.write(contentAsString);\n      }\n  finally {\n        StreamUtils.closeQuietly(writer);\n      }\n    }\n else {\n      InputStream contentAsStream=httpRequest.getContentStream();\n      if (contentAsStream != null) {\n        OutputStream os=connection.getOutputStream();\n        try {\n          StreamUtils.copyStream(contentAsStream,os);\n        }\n  finally {\n          StreamUtils.closeQuietly(os);\n        }\n      }\n    }\n  }\n  connection.connect();\n  final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n  try {\n    HttpResponseListener listener=getFromListeners(httpRequest);\n    if (listener != null) {\n      listener.handleHttpResponse(clientResponse);\n    }\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n  finally {\n    connection.disconnect();\n  }\n}\n catch (final Exception e) {\n  connection.disconnect();\n  try {\n    httpResponseListener.failed(e);\n  }\n  finally {\n    removeFromConnectionsAndListeners(httpRequest);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1552,
        "startLineNumber" : 197,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    if (doingOutPut) {\n      String contentAsString=httpRequest.getContent();\n      if (contentAsString != null) {\n        OutputStreamWriter writer=new OutputStreamWriter(connection.getOutputStream(),\"UTF8\");\n        try {\n          writer.write(contentAsString);\n        }\n  finally {\n          StreamUtils.closeQuietly(writer);\n        }\n      }\n else {\n        InputStream contentAsStream=httpRequest.getContentStream();\n        if (contentAsStream != null) {\n          OutputStream os=connection.getOutputStream();\n          try {\n            StreamUtils.copyStream(contentAsStream,os);\n          }\n  finally {\n            StreamUtils.closeQuietly(os);\n          }\n        }\n      }\n    }\n    connection.connect();\n    final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n    try {\n      HttpResponseListener listener=getFromListeners(httpRequest);\n      if (listener != null) {\n        listener.handleHttpResponse(clientResponse);\n      }\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  finally {\n      connection.disconnect();\n    }\n  }\n catch (  final Exception e) {\n    connection.disconnect();\n    try {\n      httpResponseListener.failed(e);\n    }\n  finally {\n      removeFromConnectionsAndListeners(httpRequest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 225,
        "startColumnNumber" : 6,
        "endLineNumber" : 225,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final HttpClientResponse clientResponse=new HttpClientResponse(connection);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.badlogic.gdx.net.NetJavaImpl.HttpClientResponse"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 225,
    "startColumnNumber" : 48,
    "endLineNumber" : 225,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}