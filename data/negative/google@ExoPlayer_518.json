{
  "id" : 518,
  "expression" : "cue.textSize",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/test/java/com/google/android/exoplayer2/text/CueSerializationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cue.textSize",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 76,
      "startColumnNumber" : 52,
      "endLineNumber" : 76,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(cueAfterDecoding.textSize).isEqualTo(cue.textSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(cueAfterDecoding.textSize).isEqualTo(cue.textSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1955,
        "startLineNumber" : 45,
        "startColumnNumber" : 43,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CueEncoder encoder=new CueEncoder();\n  CueDecoder decoder=new CueDecoder();\n  Cue cue=new Cue.Builder().setText(SpannedString.valueOf(\"text\")).setTextAlignment(Layout.Alignment.ALIGN_CENTER).setMultiRowAlignment(Layout.Alignment.ALIGN_NORMAL).setLine(5,Cue.LINE_TYPE_NUMBER).setLineAnchor(Cue.ANCHOR_TYPE_END).setPosition(0.4f).setPositionAnchor(Cue.ANCHOR_TYPE_MIDDLE).setTextSize(0.2f,Cue.TEXT_SIZE_TYPE_FRACTIONAL).setSize(0.8f).setWindowColor(Color.CYAN).setVerticalType(Cue.VERTICAL_TYPE_RL).setShearDegrees(-15f).build();\n  byte[] encodedCues=encoder.encode(ImmutableList.of(cue));\n  List<Cue> cuesAfterDecoding=decoder.decode(encodedCues);\n  Cue cueAfterDecoding=cuesAfterDecoding.get(0);\n  assertThat(cueAfterDecoding.text.toString()).isEqualTo(cue.text.toString());\n  assertThat(cueAfterDecoding.textAlignment).isEqualTo(cue.textAlignment);\n  assertThat(cueAfterDecoding.multiRowAlignment).isEqualTo(cue.multiRowAlignment);\n  assertThat(cueAfterDecoding.line).isEqualTo(cue.line);\n  assertThat(cueAfterDecoding.lineType).isEqualTo(cue.lineType);\n  assertThat(cueAfterDecoding.position).isEqualTo(cue.position);\n  assertThat(cueAfterDecoding.positionAnchor).isEqualTo(cue.positionAnchor);\n  assertThat(cueAfterDecoding.textSize).isEqualTo(cue.textSize);\n  assertThat(cueAfterDecoding.textSizeType).isEqualTo(cue.textSizeType);\n  assertThat(cueAfterDecoding.size).isEqualTo(cue.size);\n  assertThat(cueAfterDecoding.windowColor).isEqualTo(cue.windowColor);\n  assertThat(cueAfterDecoding.windowColorSet).isEqualTo(cue.windowColorSet);\n  assertThat(cueAfterDecoding.verticalType).isEqualTo(cue.verticalType);\n  assertThat(cueAfterDecoding.shearDegrees).isEqualTo(cue.shearDegrees);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void serializingCueWithoutSpans(){\n  CueEncoder encoder=new CueEncoder();\n  CueDecoder decoder=new CueDecoder();\n  Cue cue=new Cue.Builder().setText(SpannedString.valueOf(\"text\")).setTextAlignment(Layout.Alignment.ALIGN_CENTER).setMultiRowAlignment(Layout.Alignment.ALIGN_NORMAL).setLine(5,Cue.LINE_TYPE_NUMBER).setLineAnchor(Cue.ANCHOR_TYPE_END).setPosition(0.4f).setPositionAnchor(Cue.ANCHOR_TYPE_MIDDLE).setTextSize(0.2f,Cue.TEXT_SIZE_TYPE_FRACTIONAL).setSize(0.8f).setWindowColor(Color.CYAN).setVerticalType(Cue.VERTICAL_TYPE_RL).setShearDegrees(-15f).build();\n  byte[] encodedCues=encoder.encode(ImmutableList.of(cue));\n  List<Cue> cuesAfterDecoding=decoder.decode(encodedCues);\n  Cue cueAfterDecoding=cuesAfterDecoding.get(0);\n  assertThat(cueAfterDecoding.text.toString()).isEqualTo(cue.text.toString());\n  assertThat(cueAfterDecoding.textAlignment).isEqualTo(cue.textAlignment);\n  assertThat(cueAfterDecoding.multiRowAlignment).isEqualTo(cue.multiRowAlignment);\n  assertThat(cueAfterDecoding.line).isEqualTo(cue.line);\n  assertThat(cueAfterDecoding.lineType).isEqualTo(cue.lineType);\n  assertThat(cueAfterDecoding.position).isEqualTo(cue.position);\n  assertThat(cueAfterDecoding.positionAnchor).isEqualTo(cue.positionAnchor);\n  assertThat(cueAfterDecoding.textSize).isEqualTo(cue.textSize);\n  assertThat(cueAfterDecoding.textSizeType).isEqualTo(cue.textSizeType);\n  assertThat(cueAfterDecoding.size).isEqualTo(cue.size);\n  assertThat(cueAfterDecoding.windowColor).isEqualTo(cue.windowColor);\n  assertThat(cueAfterDecoding.windowColorSet).isEqualTo(cue.windowColorSet);\n  assertThat(cueAfterDecoding.verticalType).isEqualTo(cue.verticalType);\n  assertThat(cueAfterDecoding.shearDegrees).isEqualTo(cue.shearDegrees);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(cueAfterDecoding.textSize).isEqualTo(cue.textSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 76,
    "startColumnNumber" : 52,
    "endLineNumber" : 76,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}