{
  "id" : 498,
  "expression" : "param",
  "projectName" : "apache@kafka",
  "commitID" : "265d3199ec741928c1731397302f6c320cf6af40",
  "filePath" : "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "param",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 447,
      "startColumnNumber" : 91,
      "endLineNumber" : 447,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 447,
        "startColumnNumber" : 67,
        "endLineNumber" : 447,
        "endColumnNumber" : 97
      },
      "nodeContext" : "getStore(kafkaStreams1,param)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 447,
        "startColumnNumber" : 58,
        "endLineNumber" : 447,
        "endColumnNumber" : 97
      },
      "nodeContext" : "store1=getStore(kafkaStreams1,param)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 447,
        "startColumnNumber" : 12,
        "endLineNumber" : 447,
        "endColumnNumber" : 98
      },
      "nodeContext" : "final ReadOnlyKeyValueStore<Integer,Integer> store1=getStore(kafkaStreams1,param);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 446,
        "startColumnNumber" : 41,
        "endLineNumber" : 449,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final ReadOnlyKeyValueStore<Integer,Integer> store1=getStore(kafkaStreams1,param);\n  return store1.get(key) != null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 446,
        "startColumnNumber" : 35,
        "endLineNumber" : 449,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  final ReadOnlyKeyValueStore<Integer,Integer> store1=getStore(kafkaStreams1,param);\n  return store1.get(key) != null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 24,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 447,
        "startColumnNumber" : 12,
        "endLineNumber" : 447,
        "endColumnNumber" : 98
      },
      "nodeContext" : "final ReadOnlyKeyValueStore<Integer,Integer> store1=getStore(kafkaStreams1,param);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.namedtopology.NamedTopologyStoreQueryParameters<org.apache.kafka.streams.state.ReadOnlyKeyValueStore<java.lang.Integer,java.lang.Integer>>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 447,
    "startColumnNumber" : 91,
    "endLineNumber" : 447,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}