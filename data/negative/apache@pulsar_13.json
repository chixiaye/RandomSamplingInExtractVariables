{
  "id" : 13,
  "expression" : "pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/EnableProxyProtocolTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 85,
      "startLineNumber" : 93,
      "startColumnNumber" : 54,
      "endLineNumber" : 93,
      "endColumnNumber" : 139
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 93,
        "startColumnNumber" : 54,
        "endLineNumber" : 93,
        "endColumnNumber" : 154
      },
      "nodeContext" : "pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 93,
        "startColumnNumber" : 54,
        "endLineNumber" : 93,
        "endColumnNumber" : 161
      },
      "nodeContext" : "pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 93,
        "endColumnNumber" : 161
      },
      "nodeContext" : "c=pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 162
      },
      "nodeContext" : "org.apache.pulsar.broker.service.Consumer c=pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1666,
        "startLineNumber" : 83,
        "startColumnNumber" : 129,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"prop/ns-abc\";\n  final String topicName=\"persistent://\" + namespace + \"/testProxyProtocol\";\n  final String subName=\"my-subscriber-name\";\n  PulsarClientImpl client=(PulsarClientImpl)pulsarClient;\n  CompletableFuture<ClientCnx> cnx=client.getCnxPool().getConnection(InetSocketAddress.createUnresolved(\"localhost\",pulsar.getBrokerListenPort().get()));\n  cnx.get().ctx().channel().writeAndFlush(Unpooled.copiedBuffer(\"PROXY TCP4 198.51.100.22 203.0.113.7 35646 80\\r\\n\".getBytes()));\n  pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  org.apache.pulsar.broker.service.Consumer c=pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0);\n  Awaitility.await().untilAsserted(() -> Assert.assertTrue(c.cnx().hasHAProxyMessage()));\n  TopicStats topicStats=admin.topics().getStats(topicName);\n  Assert.assertEquals(topicStats.getSubscriptions().size(),1);\n  SubscriptionStats subscriptionStats=topicStats.getSubscriptions().get(subName);\n  Assert.assertEquals(subscriptionStats.getConsumers().size(),1);\n  Assert.assertEquals(subscriptionStats.getConsumers().get(0).getAddress(),\"198.51.100.22:35646\");\n  pulsarClient.newProducer().topic(topicName).create();\n  topicStats=admin.topics().getStats(topicName);\n  Assert.assertEquals(topicStats.getPublishers().size(),1);\n  Assert.assertEquals(topicStats.getPublishers().get(0).getAddress(),\"198.51.100.22:35646\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testProxyProtocol() throws PulsarClientException, ExecutionException, InterruptedException, PulsarAdminException {\n  final String namespace=\"prop/ns-abc\";\n  final String topicName=\"persistent://\" + namespace + \"/testProxyProtocol\";\n  final String subName=\"my-subscriber-name\";\n  PulsarClientImpl client=(PulsarClientImpl)pulsarClient;\n  CompletableFuture<ClientCnx> cnx=client.getCnxPool().getConnection(InetSocketAddress.createUnresolved(\"localhost\",pulsar.getBrokerListenPort().get()));\n  cnx.get().ctx().channel().writeAndFlush(Unpooled.copiedBuffer(\"PROXY TCP4 198.51.100.22 203.0.113.7 35646 80\\r\\n\".getBytes()));\n  pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  org.apache.pulsar.broker.service.Consumer c=pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0);\n  Awaitility.await().untilAsserted(() -> Assert.assertTrue(c.cnx().hasHAProxyMessage()));\n  TopicStats topicStats=admin.topics().getStats(topicName);\n  Assert.assertEquals(topicStats.getSubscriptions().size(),1);\n  SubscriptionStats subscriptionStats=topicStats.getSubscriptions().get(subName);\n  Assert.assertEquals(subscriptionStats.getConsumers().size(),1);\n  Assert.assertEquals(subscriptionStats.getConsumers().get(0).getAddress(),\"198.51.100.22:35646\");\n  pulsarClient.newProducer().topic(topicName).create();\n  topicStats=admin.topics().getStats(topicName);\n  Assert.assertEquals(topicStats.getPublishers().size(),1);\n  Assert.assertEquals(topicStats.getPublishers().get(0).getAddress(),\"198.51.100.22:35646\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 162
      },
      "nodeContext" : "org.apache.pulsar.broker.service.Consumer c=pulsar.getBrokerService().getTopicReference(topicName).get().getSubscription(subName).getConsumers().get(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    },
    "tokenLength" : 7,
    "type" : "org.apache.pulsar.broker.service.Subscription"
  } ],
  "positionList" : [ {
    "charLength" : 85,
    "startLineNumber" : 93,
    "startColumnNumber" : 54,
    "endLineNumber" : 93,
    "endColumnNumber" : 139
  } ],
  "layoutRelationDataList" : [ ]
}