{
  "id" : 60,
  "expression" : "registrator",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "eb8b970912e957aafc8106a6b7165d0fc53840f4",
  "filePath" : "spring-boot-admin-starter-client/src/test/java/de/codecentric/boot/admin/registration/ApplicationRegistratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registrator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 77,
      "startColumnNumber" : 13,
      "endLineNumber" : 77,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 77,
        "startColumnNumber" : 13,
        "endLineNumber" : 77,
        "endColumnNumber" : 35
      },
      "nodeContext" : "registrator.register()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(registrator.register())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(registrator.register()).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(registrator.register()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 72,
        "startColumnNumber" : 35,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  when(restTemplate.postForEntity(isA(String.class),isA(HttpEntity.class),eq(Map.class))).thenReturn(new ResponseEntity<>(Collections.singletonMap(\"id\",\"-id-\"),HttpStatus.CREATED));\n  assertThat(registrator.register()).isTrue();\n  Application applicationRef=Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build();\n  verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(applicationRef,headers),Map.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") @Test public void register_successful(){\n  when(restTemplate.postForEntity(isA(String.class),isA(HttpEntity.class),eq(Map.class))).thenReturn(new ResponseEntity<>(Collections.singletonMap(\"id\",\"-id-\"),HttpStatus.CREATED));\n  assertThat(registrator.register()).isTrue();\n  Application applicationRef=Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build();\n  verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(applicationRef,headers),Map.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(registrator.register()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "de.codecentric.boot.admin.client.registration.ApplicationRegistrator"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 77,
    "startColumnNumber" : 13,
    "endLineNumber" : 77,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}