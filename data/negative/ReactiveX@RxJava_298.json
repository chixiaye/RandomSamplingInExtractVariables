{
  "id" : 298,
  "expression" : "Future.class",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableToFutureTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Future.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 33,
      "startColumnNumber" : 37,
      "endLineNumber" : 33,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 33,
        "startColumnNumber" : 32,
        "endLineNumber" : 33,
        "endColumnNumber" : 50
      },
      "nodeContext" : "mock(Future.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 33,
        "startColumnNumber" : 23,
        "endLineNumber" : 33,
        "endColumnNumber" : 50
      },
      "nodeContext" : "future=mock(Future.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 51
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") Future<Object> future=mock(Future.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 31,
        "startColumnNumber" : 47,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Future<Object> future=mock(Future.class);\n  Object value=new Object();\n  when(future.get()).thenReturn(value);\n  Observer<Object> o=TestHelper.mockObserver();\n  TestObserver<Object> ts=new TestObserver<Object>(o);\n  Observable.fromFuture(future).subscribe(ts);\n  ts.dispose();\n  verify(o,times(1)).onNext(value);\n  verify(o,times(1)).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  verify(future,times(1)).cancel(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSuccess() throws Exception {\n  @SuppressWarnings(\"unchecked\") Future<Object> future=mock(Future.class);\n  Object value=new Object();\n  when(future.get()).thenReturn(value);\n  Observer<Object> o=TestHelper.mockObserver();\n  TestObserver<Object> ts=new TestObserver<Object>(o);\n  Observable.fromFuture(future).subscribe(ts);\n  ts.dispose();\n  verify(o,times(1)).onNext(value);\n  verify(o,times(1)).onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  verify(future,times(1)).cancel(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 33,
        "startColumnNumber" : 23,
        "endLineNumber" : 33,
        "endColumnNumber" : 50
      },
      "nodeContext" : "future=mock(Future.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.util.concurrent.Future>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 33,
    "startColumnNumber" : 37,
    "endLineNumber" : 33,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}