{
  "id" : 259,
  "expression" : "e.getValue()",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 234,
      "startColumnNumber" : 32,
      "endLineNumber" : 234,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 234,
        "startColumnNumber" : 10,
        "endLineNumber" : 234,
        "endColumnNumber" : 45
      },
      "nodeContext" : "clone.add(e.getKey(),e.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 234,
        "startColumnNumber" : 10,
        "endLineNumber" : 234,
        "endColumnNumber" : 46
      },
      "nodeContext" : "clone.add(e.getKey(),e.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 233,
        "startColumnNumber" : 71,
        "endLineNumber" : 235,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  clone.add(e.getKey(),e.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 233,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,JsonElement> e : jsonObject.entrySet()) {\n  clone.add(e.getKey(),e.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 217,
        "startColumnNumber" : 78,
        "endLineNumber" : 237,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Class<?> srcType=value.getClass();\n  String label=subtypeToLabel.get(srcType);\n  @SuppressWarnings(\"unchecked\") TypeAdapter<R> delegate=(TypeAdapter<R>)subtypeToDelegate.get(srcType);\n  if (delegate == null) {\n    throw new JsonParseException(\"cannot serialize \" + srcType.getName() + \"; did you forget to register a subtype?\");\n  }\n  JsonObject jsonObject=delegate.toJsonTree(value).getAsJsonObject();\n  if (jsonObject.has(typeFieldName)) {\n    throw new JsonParseException(\"cannot serialize \" + srcType.getName() + \" because it already defines a field named \"+ typeFieldName);\n  }\n  JsonObject clone=new JsonObject();\n  clone.add(typeFieldName,new JsonPrimitive(label));\n  for (  Map.Entry<String,JsonElement> e : jsonObject.entrySet()) {\n    clone.add(e.getKey(),e.getValue());\n  }\n  Streams.write(clone,out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 217,
        "startColumnNumber" : 6,
        "endLineNumber" : 237,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void write(JsonWriter out,R value) throws IOException {\n  Class<?> srcType=value.getClass();\n  String label=subtypeToLabel.get(srcType);\n  @SuppressWarnings(\"unchecked\") TypeAdapter<R> delegate=(TypeAdapter<R>)subtypeToDelegate.get(srcType);\n  if (delegate == null) {\n    throw new JsonParseException(\"cannot serialize \" + srcType.getName() + \"; did you forget to register a subtype?\");\n  }\n  JsonObject jsonObject=delegate.toJsonTree(value).getAsJsonObject();\n  if (jsonObject.has(typeFieldName)) {\n    throw new JsonParseException(\"cannot serialize \" + srcType.getName() + \" because it already defines a field named \"+ typeFieldName);\n  }\n  JsonObject clone=new JsonObject();\n  clone.add(typeFieldName,new JsonPrimitive(label));\n  for (  Map.Entry<String,JsonElement> e : jsonObject.entrySet()) {\n    clone.add(e.getKey(),e.getValue());\n  }\n  Streams.write(clone,out);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 234,
        "startColumnNumber" : 10,
        "endLineNumber" : 234,
        "endColumnNumber" : 46
      },
      "nodeContext" : "clone.add(e.getKey(),e.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.gson.JsonElement"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 234,
    "startColumnNumber" : 32,
    "endLineNumber" : 234,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}