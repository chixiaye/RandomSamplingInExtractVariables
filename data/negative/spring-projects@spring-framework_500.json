{
  "id" : 500,
  "expression" : "Map.Entry",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/core/convert/support/MapToMapConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Map.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 81,
      "startColumnNumber" : 7,
      "endLineNumber" : 81,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 81,
        "startColumnNumber" : 7,
        "endLineNumber" : 81,
        "endColumnNumber" : 16
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 81,
        "startColumnNumber" : 7,
        "endLineNumber" : 81,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Map.Entry<Object,Object>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 7,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Map.Entry<Object,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Map.Entry<Object,Object> entry : sourceMap.entrySet()) {\n  Object sourceKey=entry.getKey();\n  Object sourceValue=entry.getValue();\n  Object targetKey=convertKey(sourceKey,sourceType,keyDesc);\n  Object targetValue=convertValue(sourceValue,sourceType,valueDesc);\n  targetEntries.add(new MapEntry(targetKey,targetValue));\n  if (sourceKey != targetKey || sourceValue != targetValue) {\n    copyRequired=true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1223,
        "startLineNumber" : 66,
        "startColumnNumber" : 102,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (source == null) {\n    return null;\n  }\n  Map<Object,Object> sourceMap=(Map<Object,Object>)source;\n  boolean copyRequired=!targetType.getType().isInstance(source);\n  if (!copyRequired && sourceMap.isEmpty()) {\n    return sourceMap;\n  }\n  TypeDescriptor keyDesc=targetType.getMapKeyTypeDescriptor();\n  TypeDescriptor valueDesc=targetType.getMapValueTypeDescriptor();\n  List<MapEntry> targetEntries=new ArrayList<>(sourceMap.size());\n  for (  Map.Entry<Object,Object> entry : sourceMap.entrySet()) {\n    Object sourceKey=entry.getKey();\n    Object sourceValue=entry.getValue();\n    Object targetKey=convertKey(sourceKey,sourceType,keyDesc);\n    Object targetValue=convertValue(sourceValue,sourceType,valueDesc);\n    targetEntries.add(new MapEntry(targetKey,targetValue));\n    if (sourceKey != targetKey || sourceValue != targetValue) {\n      copyRequired=true;\n    }\n  }\n  if (!copyRequired) {\n    return sourceMap;\n  }\n  Map<Object,Object> targetMap=CollectionFactory.createMap(targetType.getType(),(keyDesc != null ? keyDesc.getType() : null),sourceMap.size());\n  for (  MapEntry entry : targetEntries) {\n    entry.addToMap(targetMap);\n  }\n  return targetMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1378,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") @Nullable public Object convert(@Nullable Object source,TypeDescriptor sourceType,TypeDescriptor targetType){\n  if (source == null) {\n    return null;\n  }\n  Map<Object,Object> sourceMap=(Map<Object,Object>)source;\n  boolean copyRequired=!targetType.getType().isInstance(source);\n  if (!copyRequired && sourceMap.isEmpty()) {\n    return sourceMap;\n  }\n  TypeDescriptor keyDesc=targetType.getMapKeyTypeDescriptor();\n  TypeDescriptor valueDesc=targetType.getMapValueTypeDescriptor();\n  List<MapEntry> targetEntries=new ArrayList<>(sourceMap.size());\n  for (  Map.Entry<Object,Object> entry : sourceMap.entrySet()) {\n    Object sourceKey=entry.getKey();\n    Object sourceValue=entry.getValue();\n    Object targetKey=convertKey(sourceKey,sourceType,keyDesc);\n    Object targetValue=convertValue(sourceValue,sourceType,valueDesc);\n    targetEntries.add(new MapEntry(targetKey,targetValue));\n    if (sourceKey != targetKey || sourceValue != targetValue) {\n      copyRequired=true;\n    }\n  }\n  if (!copyRequired) {\n    return sourceMap;\n  }\n  Map<Object,Object> targetMap=CollectionFactory.createMap(targetType.getType(),(keyDesc != null ? keyDesc.getType() : null),sourceMap.size());\n  for (  MapEntry entry : targetEntries) {\n    entry.addToMap(targetMap);\n  }\n  return targetMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 7,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Map.Entry<Object,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Map.Entry<java.lang.Object,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 81,
    "startColumnNumber" : 7,
    "endLineNumber" : 81,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}