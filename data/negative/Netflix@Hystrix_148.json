{
  "id" : 148,
  "expression" : "com",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "b61613bdb24f84823d36d720a200e72d973e8b45",
  "filePath" : "hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/observable/BasicObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "com",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 76,
      "startColumnNumber" : 8,
      "endLineNumber" : 76,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 19
      },
      "nodeContext" : "com.netflix",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 27
      },
      "nodeContext" : "com.netflix.hystrix",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 48
      },
      "nodeContext" : "com.netflix.hystrix.HystrixInvokableInfo",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 48
      },
      "nodeContext" : "com.netflix.hystrix.HystrixInvokableInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 100
      },
      "nodeContext" : "com.netflix.hystrix.HystrixInvokableInfo getUserCommand=getHystrixCommandByKey(\"getUser\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1416,
        "startLineNumber" : 39,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<User> observable=userService.getUser(\"1\",\"name: \");\n  assertObservableExecutionMode(observable,ObservableExecutionMode.EAGER);\n  assertEquals(\"name: 1\",observable.toBlocking().single().getName());\n  Observable<User> fUser=userService.getUser(\"1\",\"name: \");\n  fUser.subscribe(new Observer<User>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      e.printStackTrace();\n    }\n    @Override public void onNext(    User v){\n      System.out.println(\"onNext: \" + v);\n    }\n  }\n);\n  Observable<User> fs=userService.getUser(\"1\",\"name: \");\n  fs.subscribe(new Action1<User>(){\n    @Override public void call(    User user){\n      assertEquals(\"name: 1\",user.getName());\n    }\n  }\n);\n  assertEquals(3,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  com.netflix.hystrix.HystrixInvokableInfo getUserCommand=getHystrixCommandByKey(\"getUser\");\n  assertTrue(getUserCommand.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetUserByIdSuccess(){\n  Observable<User> observable=userService.getUser(\"1\",\"name: \");\n  assertObservableExecutionMode(observable,ObservableExecutionMode.EAGER);\n  assertEquals(\"name: 1\",observable.toBlocking().single().getName());\n  Observable<User> fUser=userService.getUser(\"1\",\"name: \");\n  fUser.subscribe(new Observer<User>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      e.printStackTrace();\n    }\n    @Override public void onNext(    User v){\n      System.out.println(\"onNext: \" + v);\n    }\n  }\n);\n  Observable<User> fs=userService.getUser(\"1\",\"name: \");\n  fs.subscribe(new Action1<User>(){\n    @Override public void call(    User user){\n      assertEquals(\"name: 1\",user.getName());\n    }\n  }\n);\n  assertEquals(3,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  com.netflix.hystrix.HystrixInvokableInfo getUserCommand=getHystrixCommandByKey(\"getUser\");\n  assertTrue(getUserCommand.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 100
      },
      "nodeContext" : "com.netflix.hystrix.HystrixInvokableInfo getUserCommand=getHystrixCommandByKey(\"getUser\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 76,
    "startColumnNumber" : 8,
    "endLineNumber" : 76,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ ]
}