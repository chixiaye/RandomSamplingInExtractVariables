{
  "id" : 81,
  "expression" : "\"failed\"",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/test/java/zipkin/InternalBlockingToAsyncSpanConsumerAdapterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"failed\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 58,
      "startColumnNumber" : 38,
      "endLineNumber" : 58,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 47
      },
      "nodeContext" : "new IllegalStateException(\"failed\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 48
      },
      "nodeContext" : "doThrow(new IllegalStateException(\"failed\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 27
      },
      "nodeContext" : "doThrow(new IllegalStateException(\"failed\")).when(spanConsumer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "doThrow(new IllegalStateException(\"failed\")).when(spanConsumer).accept(TestObjects.TRACE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "doThrow(new IllegalStateException(\"failed\")).when(spanConsumer).accept(TestObjects.TRACE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 56,
        "startColumnNumber" : 33,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  thrown.expect(IllegalStateException.class);\n  doThrow(new IllegalStateException(\"failed\")).when(spanConsumer).accept(TestObjects.TRACE);\n  CallbackCaptor<Void> captor=new CallbackCaptor<>();\n  asyncSpanConsumer.accept(TestObjects.TRACE,captor);\n  captor.get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void accept_exception(){\n  thrown.expect(IllegalStateException.class);\n  doThrow(new IllegalStateException(\"failed\")).when(spanConsumer).accept(TestObjects.TRACE);\n  CallbackCaptor<Void> captor=new CallbackCaptor<>();\n  asyncSpanConsumer.accept(TestObjects.TRACE,captor);\n  captor.get();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 48
      },
      "nodeContext" : "doThrow(new IllegalStateException(\"failed\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 58,
    "startColumnNumber" : 38,
    "endLineNumber" : 58,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}