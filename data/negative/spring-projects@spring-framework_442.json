{
  "id" : 442,
  "expression" : "actualMethods",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/test/java/org/springframework/test/context/TestContextConcurrencyTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actualMethods",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 64,
      "startColumnNumber" : 3,
      "endLineNumber" : 64,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 24
      },
      "nodeContext" : "actualMethods.clear()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "actualMethods.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 63,
        "startColumnNumber" : 38,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  actualMethods.clear();\n  stream(TestCase.class.getDeclaredMethods()).parallel().forEach(testMethod -> {\n    try {\n      tcm.beforeTestClass();\n      tcm.beforeTestMethod(testInstance,testMethod);\n      tcm.afterTestMethod(testInstance,testMethod,null);\n      tcm.afterTestClass();\n    }\n catch (    Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n);\n  assertThat(actualMethods,equalTo(expectedMethods));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 63,
        "startColumnNumber" : 33,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "i -> {\n  actualMethods.clear();\n  stream(TestCase.class.getDeclaredMethods()).parallel().forEach(testMethod -> {\n    try {\n      tcm.beforeTestClass();\n      tcm.beforeTestMethod(testInstance,testMethod);\n      tcm.afterTestMethod(testInstance,testMethod,null);\n      tcm.afterTestClass();\n    }\n catch (    Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n);\n  assertThat(actualMethods,equalTo(expectedMethods));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 65,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "actualMethods.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  }, {
    "nodeContext" : "actualMethods",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 79,
      "startColumnNumber" : 14,
      "endLineNumber" : 79,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(actualMethods,equalTo(expectedMethods))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(actualMethods,equalTo(expectedMethods));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 63,
        "startColumnNumber" : 38,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  actualMethods.clear();\n  stream(TestCase.class.getDeclaredMethods()).parallel().forEach(testMethod -> {\n    try {\n      tcm.beforeTestClass();\n      tcm.beforeTestMethod(testInstance,testMethod);\n      tcm.afterTestMethod(testInstance,testMethod,null);\n      tcm.afterTestClass();\n    }\n catch (    Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n);\n  assertThat(actualMethods,equalTo(expectedMethods));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 63,
        "startColumnNumber" : 33,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "i -> {\n  actualMethods.clear();\n  stream(TestCase.class.getDeclaredMethods()).parallel().forEach(testMethod -> {\n    try {\n      tcm.beforeTestClass();\n      tcm.beforeTestMethod(testInstance,testMethod);\n      tcm.afterTestMethod(testInstance,testMethod,null);\n      tcm.afterTestClass();\n    }\n catch (    Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n);\n  assertThat(actualMethods,equalTo(expectedMethods));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 65,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(actualMethods,equalTo(expectedMethods));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 64,
    "startColumnNumber" : 3,
    "endLineNumber" : 64,
    "endColumnNumber" : 16
  }, {
    "charLength" : 13,
    "startLineNumber" : 79,
    "startColumnNumber" : 14,
    "endLineNumber" : 79,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}