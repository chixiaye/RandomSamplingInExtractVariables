{
  "id" : 308,
  "expression" : "n > 0 && completed.compareAndSet(false,true)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableSwitchIfEmptyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n > 0 && completed.compareAndSet(false,true)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 186,
      "startColumnNumber" : 28,
      "endLineNumber" : 186,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 186,
        "startColumnNumber" : 24,
        "endLineNumber" : 192,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (n > 0 && completed.compareAndSet(false,true)) {\n  Schedulers.io().createWorker().schedule(new Runnable(){\n    @Override public void run(){\n      subscriber.onComplete();\n    }\n  }\n,100,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 185,
        "startColumnNumber" : 48,
        "endLineNumber" : 193,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (n > 0 && completed.compareAndSet(false,true)) {\n    Schedulers.io().createWorker().schedule(new Runnable(){\n      @Override public void run(){\n        subscriber.onComplete();\n      }\n    }\n,100,TimeUnit.MILLISECONDS);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 184,
        "startColumnNumber" : 20,
        "endLineNumber" : 193,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public void request(long n){\n  if (n > 0 && completed.compareAndSet(false,true)) {\n    Schedulers.io().createWorker().schedule(new Runnable(){\n      @Override public void run(){\n        subscriber.onComplete();\n      }\n    }\n,100,TimeUnit.MILLISECONDS);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 186,
        "startColumnNumber" : 24,
        "endLineNumber" : 192,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (n > 0 && completed.compareAndSet(false,true)) {\n  Schedulers.io().createWorker().schedule(new Runnable(){\n    @Override public void run(){\n      subscriber.onComplete();\n    }\n  }\n,100,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 11
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 186,
    "startColumnNumber" : 28,
    "endLineNumber" : 186,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}