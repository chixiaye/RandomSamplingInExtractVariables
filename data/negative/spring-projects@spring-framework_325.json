{
  "id" : 325,
  "expression" : "bean instanceof LoadTimeWeaverAware",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/context/weaving/LoadTimeWeaverAwareProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bean instanceof LoadTimeWeaverAware",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 95,
      "startColumnNumber" : 6,
      "endLineNumber" : 95,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (bean instanceof LoadTimeWeaverAware) {\n  LoadTimeWeaver ltw=this.loadTimeWeaver;\n  if (ltw == null) {\n    Assert.state(this.beanFactory != null,\"BeanFactory required if no LoadTimeWeaver explicitly specified\");\n    ltw=this.beanFactory.getBean(ConfigurableApplicationContext.LOAD_TIME_WEAVER_BEAN_NAME,LoadTimeWeaver.class);\n  }\n  ((LoadTimeWeaverAware)bean).setLoadTimeWeaver(ltw);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 94,
        "startColumnNumber" : 99,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (bean instanceof LoadTimeWeaverAware) {\n    LoadTimeWeaver ltw=this.loadTimeWeaver;\n    if (ltw == null) {\n      Assert.state(this.beanFactory != null,\"BeanFactory required if no LoadTimeWeaver explicitly specified\");\n      ltw=this.beanFactory.getBean(ConfigurableApplicationContext.LOAD_TIME_WEAVER_BEAN_NAME,LoadTimeWeaver.class);\n    }\n    ((LoadTimeWeaverAware)bean).setLoadTimeWeaver(ltw);\n  }\n  return bean;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Object postProcessBeforeInitialization(Object bean,String beanName) throws BeansException {\n  if (bean instanceof LoadTimeWeaverAware) {\n    LoadTimeWeaver ltw=this.loadTimeWeaver;\n    if (ltw == null) {\n      Assert.state(this.beanFactory != null,\"BeanFactory required if no LoadTimeWeaver explicitly specified\");\n      ltw=this.beanFactory.getBean(ConfigurableApplicationContext.LOAD_TIME_WEAVER_BEAN_NAME,LoadTimeWeaver.class);\n    }\n    ((LoadTimeWeaverAware)bean).setLoadTimeWeaver(ltw);\n  }\n  return bean;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (bean instanceof LoadTimeWeaverAware) {\n  LoadTimeWeaver ltw=this.loadTimeWeaver;\n  if (ltw == null) {\n    Assert.state(this.beanFactory != null,\"BeanFactory required if no LoadTimeWeaver explicitly specified\");\n    ltw=this.beanFactory.getBean(ConfigurableApplicationContext.LOAD_TIME_WEAVER_BEAN_NAME,LoadTimeWeaver.class);\n  }\n  ((LoadTimeWeaverAware)bean).setLoadTimeWeaver(ltw);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 95,
    "startColumnNumber" : 6,
    "endLineNumber" : 95,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}