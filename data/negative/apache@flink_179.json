{
  "id" : 179,
  "expression" : "i < args.length",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-rpc/flink-rpc-core/src/main/java/org/apache/flink/runtime/rpc/messages/RemoteRpcInvocation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < args.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 173,
      "startColumnNumber" : 32,
      "endLineNumber" : 173,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 173,
        "startColumnNumber" : 16,
        "endLineNumber" : 188,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < args.length; i++) {\n  try {\n    oos.writeObject(args[i]);\n  }\n catch (  IOException e) {\n    throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 170,
        "startColumnNumber" : 30,
        "endLineNumber" : 189,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  oos.writeBoolean(true);\n  for (int i=0; i < args.length; i++) {\n    try {\n      oos.writeObject(args[i]);\n    }\n catch (    IOException e) {\n      throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 170,
        "startColumnNumber" : 12,
        "endLineNumber" : 191,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (args != null) {\n  oos.writeBoolean(true);\n  for (int i=0; i < args.length; i++) {\n    try {\n      oos.writeObject(args[i]);\n    }\n catch (    IOException e) {\n      throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n    }\n  }\n}\n else {\n  oos.writeBoolean(false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 160,
        "startColumnNumber" : 76,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  oos.writeUTF(declaringClassName);\n  oos.writeUTF(methodName);\n  oos.writeInt(parameterTypes.length);\n  for (  Class<?> parameterType : parameterTypes) {\n    oos.writeObject(parameterType);\n  }\n  if (args != null) {\n    oos.writeBoolean(true);\n    for (int i=0; i < args.length; i++) {\n      try {\n        oos.writeObject(args[i]);\n      }\n catch (      IOException e) {\n        throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n      }\n    }\n  }\n else {\n    oos.writeBoolean(false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private void writeObject(ObjectOutputStream oos) throws IOException {\n  oos.writeUTF(declaringClassName);\n  oos.writeUTF(methodName);\n  oos.writeInt(parameterTypes.length);\n  for (  Class<?> parameterType : parameterTypes) {\n    oos.writeObject(parameterType);\n  }\n  if (args != null) {\n    oos.writeBoolean(true);\n    for (int i=0; i < args.length; i++) {\n      try {\n        oos.writeObject(args[i]);\n      }\n catch (      IOException e) {\n        throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n      }\n    }\n  }\n else {\n    oos.writeBoolean(false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 173,
        "startColumnNumber" : 16,
        "endLineNumber" : 188,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < args.length; i++) {\n  try {\n    oos.writeObject(args[i]);\n  }\n catch (  IOException e) {\n    throw new IOException(\"Could not serialize \" + i + \"th argument of method \"+ methodName+ \". This indicates that the argument type \"+ args.getClass().getName()+ \" is not serializable. Arguments have to \"+ \"be serializable for remote rpc calls.\",e);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 11
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 173,
    "startColumnNumber" : 32,
    "endLineNumber" : 173,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}