{
  "id" : 203,
  "expression" : "hasListenerConfig",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedKafkaCluster.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hasListenerConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 152,
      "startColumnNumber" : 17,
      "endLineNumber" : 152,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 152,
        "startColumnNumber" : 16,
        "endLineNumber" : 152,
        "endColumnNumber" : 34
      },
      "nodeContext" : "!hasListenerConfig",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 126
      },
      "nodeContext" : "if (!hasListenerConfig) brokerConfig.put(KafkaConfig.ListenersProp(),listenerName.value() + \"://localhost:\" + currentBrokerPorts[i]);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 148,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  brokerConfig.put(KafkaConfig.BrokerIdProp(),i);\n  currentBrokerLogDirs[i]=currentBrokerLogDirs[i] == null ? createLogDir() : currentBrokerLogDirs[i];\n  brokerConfig.put(KafkaConfig.LogDirProp(),currentBrokerLogDirs[i]);\n  if (!hasListenerConfig)   brokerConfig.put(KafkaConfig.ListenersProp(),listenerName.value() + \"://localhost:\" + currentBrokerPorts[i]);\n  brokers[i]=TestUtils.createServer(new KafkaConfig(brokerConfig,true),time);\n  currentBrokerPorts[i]=brokers[i].boundPort(listenerName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < brokers.length; i++) {\n  brokerConfig.put(KafkaConfig.BrokerIdProp(),i);\n  currentBrokerLogDirs[i]=currentBrokerLogDirs[i] == null ? createLogDir() : currentBrokerLogDirs[i];\n  brokerConfig.put(KafkaConfig.LogDirProp(),currentBrokerLogDirs[i]);\n  if (!hasListenerConfig)   brokerConfig.put(KafkaConfig.ListenersProp(),listenerName.value() + \"://localhost:\" + currentBrokerPorts[i]);\n  brokers[i]=TestUtils.createServer(new KafkaConfig(brokerConfig,true),time);\n  currentBrokerPorts[i]=brokers[i].boundPort(listenerName);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2281,
        "startLineNumber" : 131,
        "startColumnNumber" : 27,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  brokerConfig.put(KafkaConfig.ZkConnectProp(),zKConnectString());\n  putIfAbsent(brokerConfig,KafkaConfig.DeleteTopicEnableProp(),true);\n  putIfAbsent(brokerConfig,KafkaConfig.GroupInitialRebalanceDelayMsProp(),0);\n  putIfAbsent(brokerConfig,KafkaConfig.OffsetsTopicReplicationFactorProp(),(short)brokers.length);\n  putIfAbsent(brokerConfig,KafkaConfig.AutoCreateTopicsEnableProp(),false);\n  putIfAbsent(brokerConfig,KafkaConfig.LogCleanerDedupeBufferSizeProp(),2 * 1024 * 1024L);\n  Object listenerConfig=brokerConfig.get(KafkaConfig.InterBrokerListenerNameProp());\n  if (listenerConfig == null)   listenerConfig=brokerConfig.get(KafkaConfig.InterBrokerSecurityProtocolProp());\n  if (listenerConfig == null)   listenerConfig=\"PLAINTEXT\";\n  listenerName=new ListenerName(listenerConfig.toString());\n  for (int i=0; i < brokers.length; i++) {\n    brokerConfig.put(KafkaConfig.BrokerIdProp(),i);\n    currentBrokerLogDirs[i]=currentBrokerLogDirs[i] == null ? createLogDir() : currentBrokerLogDirs[i];\n    brokerConfig.put(KafkaConfig.LogDirProp(),currentBrokerLogDirs[i]);\n    if (!hasListenerConfig)     brokerConfig.put(KafkaConfig.ListenersProp(),listenerName.value() + \"://localhost:\" + currentBrokerPorts[i]);\n    brokers[i]=TestUtils.createServer(new KafkaConfig(brokerConfig,true),time);\n    currentBrokerPorts[i]=brokers[i].boundPort(listenerName);\n  }\n  Map<String,Object> producerProps=new HashMap<>();\n  producerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,bootstrapServers());\n  if (sslEnabled()) {\n    producerProps.put(SslConfigs.SSL_TRUSTSTORE_LOCATION_CONFIG,brokerConfig.get(SslConfigs.SSL_TRUSTSTORE_LOCATION_CONFIG));\n    producerProps.put(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG,brokerConfig.get(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG));\n    producerProps.put(CommonClientConfigs.SECURITY_PROTOCOL_CONFIG,\"SSL\");\n  }\n  producer=new KafkaProducer<>(producerProps,new ByteArraySerializer(),new ByteArraySerializer());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void doStart(){\n  brokerConfig.put(KafkaConfig.ZkConnectProp(),zKConnectString());\n  putIfAbsent(brokerConfig,KafkaConfig.DeleteTopicEnableProp(),true);\n  putIfAbsent(brokerConfig,KafkaConfig.GroupInitialRebalanceDelayMsProp(),0);\n  putIfAbsent(brokerConfig,KafkaConfig.OffsetsTopicReplicationFactorProp(),(short)brokers.length);\n  putIfAbsent(brokerConfig,KafkaConfig.AutoCreateTopicsEnableProp(),false);\n  putIfAbsent(brokerConfig,KafkaConfig.LogCleanerDedupeBufferSizeProp(),2 * 1024 * 1024L);\n  Object listenerConfig=brokerConfig.get(KafkaConfig.InterBrokerListenerNameProp());\n  if (listenerConfig == null)   listenerConfig=brokerConfig.get(KafkaConfig.InterBrokerSecurityProtocolProp());\n  if (listenerConfig == null)   listenerConfig=\"PLAINTEXT\";\n  listenerName=new ListenerName(listenerConfig.toString());\n  for (int i=0; i < brokers.length; i++) {\n    brokerConfig.put(KafkaConfig.BrokerIdProp(),i);\n    currentBrokerLogDirs[i]=currentBrokerLogDirs[i] == null ? createLogDir() : currentBrokerLogDirs[i];\n    brokerConfig.put(KafkaConfig.LogDirProp(),currentBrokerLogDirs[i]);\n    if (!hasListenerConfig)     brokerConfig.put(KafkaConfig.ListenersProp(),listenerName.value() + \"://localhost:\" + currentBrokerPorts[i]);\n    brokers[i]=TestUtils.createServer(new KafkaConfig(brokerConfig,true),time);\n    currentBrokerPorts[i]=brokers[i].boundPort(listenerName);\n  }\n  Map<String,Object> producerProps=new HashMap<>();\n  producerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG,bootstrapServers());\n  if (sslEnabled()) {\n    producerProps.put(SslConfigs.SSL_TRUSTSTORE_LOCATION_CONFIG,brokerConfig.get(SslConfigs.SSL_TRUSTSTORE_LOCATION_CONFIG));\n    producerProps.put(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG,brokerConfig.get(SslConfigs.SSL_TRUSTSTORE_PASSWORD_CONFIG));\n    producerProps.put(CommonClientConfigs.SECURITY_PROTOCOL_CONFIG,\"SSL\");\n  }\n  producer=new KafkaProducer<>(producerProps,new ByteArraySerializer(),new ByteArraySerializer());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 152,
        "startColumnNumber" : 16,
        "endLineNumber" : 152,
        "endColumnNumber" : 34
      },
      "nodeContext" : "!hasListenerConfig",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 152,
    "startColumnNumber" : 17,
    "endLineNumber" : 152,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}