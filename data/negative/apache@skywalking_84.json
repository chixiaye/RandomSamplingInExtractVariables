{
  "id" : 84,
  "expression" : "true",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/conf/SnifferConfigInitializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 113,
      "startColumnNumber" : 28,
      "endLineNumber" : 113,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 32
      },
      "nodeContext" : "IS_INIT_COMPLETED=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 33
      },
      "nodeContext" : "IS_INIT_COMPLETED=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 63,
        "startColumnNumber" : 65,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AGENT_SETTINGS=new Properties();\n  try (final InputStreamReader configFileStream=loadConfig()){\n    AGENT_SETTINGS.load(configFileStream);\n    for (    String key : AGENT_SETTINGS.stringPropertyNames()) {\n      String value=(String)AGENT_SETTINGS.get(key);\n      AGENT_SETTINGS.put(key,PropertyPlaceholderHelper.INSTANCE.replacePlaceholders(value,AGENT_SETTINGS));\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(e,\"Failed to read the config file, skywalking is going to run in default config.\");\n  }\n  try {\n    overrideConfigBySystemProp();\n  }\n catch (  Exception e) {\n    LOGGER.error(e,\"Failed to read the system properties.\");\n  }\n  agentOptions=StringUtil.trim(agentOptions,',');\n  if (!StringUtil.isEmpty(agentOptions)) {\n    try {\n      agentOptions=agentOptions.trim();\n      LOGGER.info(\"Agent options is {}.\",agentOptions);\n      overrideConfigByAgentOptions(agentOptions);\n    }\n catch (    Exception e) {\n      LOGGER.error(e,\"Failed to parse the agent options, val is {}.\",agentOptions);\n    }\n  }\n  initializeConfig(Config.class);\n  configureLogger();\n  LOGGER=LogManager.getLogger(SnifferConfigInitializer.class);\n  if (StringUtil.isEmpty(Config.Agent.SERVICE_NAME)) {\n    throw new ExceptionInInitializerError(\"`agent.service_name` is missing.\");\n  }\n  if (StringUtil.isEmpty(Config.Collector.BACKEND_SERVICE)) {\n    throw new ExceptionInInitializerError(\"`collector.backend_service` is missing.\");\n  }\n  if (Config.Plugin.PEER_MAX_LENGTH <= 3) {\n    LOGGER.warn(\"PEER_MAX_LENGTH configuration:{} error, the default value of 200 will be used.\",Config.Plugin.PEER_MAX_LENGTH);\n    Config.Plugin.PEER_MAX_LENGTH=200;\n  }\n  IS_INIT_COMPLETED=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2788,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If the specified agent config path is set, the agent will try to locate the specified agent config. If the specified agent config path is not set , the agent will try to locate `agent.config`, which should be in the /config directory of agent package. <p> Also try to override the config by system.properties. All the keys in this place should start with  {@link #ENV_KEY_PREFIX}. e.g. in env `skywalking.agent.service_name=yourAppName` to override `agent.service_name` in config file. <p> At the end, `agent.service_name` and `collector.servers` must not be blank.\n */\npublic static void initializeCoreConfig(String agentOptions){\n  AGENT_SETTINGS=new Properties();\n  try (final InputStreamReader configFileStream=loadConfig()){\n    AGENT_SETTINGS.load(configFileStream);\n    for (    String key : AGENT_SETTINGS.stringPropertyNames()) {\n      String value=(String)AGENT_SETTINGS.get(key);\n      AGENT_SETTINGS.put(key,PropertyPlaceholderHelper.INSTANCE.replacePlaceholders(value,AGENT_SETTINGS));\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(e,\"Failed to read the config file, skywalking is going to run in default config.\");\n  }\n  try {\n    overrideConfigBySystemProp();\n  }\n catch (  Exception e) {\n    LOGGER.error(e,\"Failed to read the system properties.\");\n  }\n  agentOptions=StringUtil.trim(agentOptions,',');\n  if (!StringUtil.isEmpty(agentOptions)) {\n    try {\n      agentOptions=agentOptions.trim();\n      LOGGER.info(\"Agent options is {}.\",agentOptions);\n      overrideConfigByAgentOptions(agentOptions);\n    }\n catch (    Exception e) {\n      LOGGER.error(e,\"Failed to parse the agent options, val is {}.\",agentOptions);\n    }\n  }\n  initializeConfig(Config.class);\n  configureLogger();\n  LOGGER=LogManager.getLogger(SnifferConfigInitializer.class);\n  if (StringUtil.isEmpty(Config.Agent.SERVICE_NAME)) {\n    throw new ExceptionInInitializerError(\"`agent.service_name` is missing.\");\n  }\n  if (StringUtil.isEmpty(Config.Collector.BACKEND_SERVICE)) {\n    throw new ExceptionInInitializerError(\"`collector.backend_service` is missing.\");\n  }\n  if (Config.Plugin.PEER_MAX_LENGTH <= 3) {\n    LOGGER.warn(\"PEER_MAX_LENGTH configuration:{} error, the default value of 200 will be used.\",Config.Plugin.PEER_MAX_LENGTH);\n    Config.Plugin.PEER_MAX_LENGTH=200;\n  }\n  IS_INIT_COMPLETED=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 33
      },
      "nodeContext" : "IS_INIT_COMPLETED=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 113,
    "startColumnNumber" : 28,
    "endLineNumber" : 113,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}