{
  "id" : 375,
  "expression" : "1",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/tools/src/main/java/org/apache/rocketmq/tools/monitor/MonitorService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 59,
      "endLineNumber" : 84,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 61
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMin(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMin(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.defaultMQPushConsumer.setConsumeThreadMin(1);\n  this.defaultMQPushConsumer.setConsumeThreadMax(1);\n  this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n  this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n    @Override public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      try {\n        OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n        DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n        deleteMsgsEvent.setOffsetMovedEvent(ome);\n        deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n        MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n      }\n catch (      Exception e) {\n      }\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  this.defaultMQPushConsumer.setConsumeThreadMin(1);\n  this.defaultMQPushConsumer.setConsumeThreadMax(1);\n  this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n  this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n    @Override public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      try {\n        OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n        DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n        deleteMsgsEvent.setOffsetMovedEvent(ome);\n        deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n        MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n      }\n catch (      Exception e) {\n      }\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n}\n catch (MQClientException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 70,
        "startColumnNumber" : 105,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.monitorConfig=monitorConfig;\n  this.monitorListener=monitorListener;\n  this.defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  this.defaultMQAdminExt.setInstanceName(instanceName());\n  this.defaultMQAdminExt.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPullConsumer.setInstanceName(instanceName());\n  this.defaultMQPullConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPushConsumer.setInstanceName(instanceName());\n  this.defaultMQPushConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  try {\n    this.defaultMQPushConsumer.setConsumeThreadMin(1);\n    this.defaultMQPushConsumer.setConsumeThreadMax(1);\n    this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n    this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n      @Override public ConsumeConcurrentlyStatus consumeMessage(      List<MessageExt> msgs,      ConsumeConcurrentlyContext context){\n        try {\n          OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n          DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n          deleteMsgsEvent.setOffsetMovedEvent(ome);\n          deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n          MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n        }\n catch (        Exception e) {\n        }\n        return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n      }\n    }\n);\n  }\n catch (  MQClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1941,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public MonitorService(MonitorConfig monitorConfig,MonitorListener monitorListener,RPCHook rpcHook){\n  this.monitorConfig=monitorConfig;\n  this.monitorListener=monitorListener;\n  this.defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  this.defaultMQAdminExt.setInstanceName(instanceName());\n  this.defaultMQAdminExt.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPullConsumer.setInstanceName(instanceName());\n  this.defaultMQPullConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPushConsumer.setInstanceName(instanceName());\n  this.defaultMQPushConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  try {\n    this.defaultMQPushConsumer.setConsumeThreadMin(1);\n    this.defaultMQPushConsumer.setConsumeThreadMax(1);\n    this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n    this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n      @Override public ConsumeConcurrentlyStatus consumeMessage(      List<MessageExt> msgs,      ConsumeConcurrentlyContext context){\n        try {\n          OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n          DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n          deleteMsgsEvent.setOffsetMovedEvent(ome);\n          deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n          MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n        }\n catch (        Exception e) {\n        }\n        return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n      }\n    }\n);\n  }\n catch (  MQClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMin(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 85,
      "startColumnNumber" : 59,
      "endLineNumber" : 85,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 61
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMax(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMax(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.defaultMQPushConsumer.setConsumeThreadMin(1);\n  this.defaultMQPushConsumer.setConsumeThreadMax(1);\n  this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n  this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n    @Override public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      try {\n        OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n        DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n        deleteMsgsEvent.setOffsetMovedEvent(ome);\n        deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n        MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n      }\n catch (      Exception e) {\n      }\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  this.defaultMQPushConsumer.setConsumeThreadMin(1);\n  this.defaultMQPushConsumer.setConsumeThreadMax(1);\n  this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n  this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n    @Override public ConsumeConcurrentlyStatus consumeMessage(    List<MessageExt> msgs,    ConsumeConcurrentlyContext context){\n      try {\n        OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n        DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n        deleteMsgsEvent.setOffsetMovedEvent(ome);\n        deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n        MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n      }\n catch (      Exception e) {\n      }\n      return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n    }\n  }\n);\n}\n catch (MQClientException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 70,
        "startColumnNumber" : 105,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.monitorConfig=monitorConfig;\n  this.monitorListener=monitorListener;\n  this.defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  this.defaultMQAdminExt.setInstanceName(instanceName());\n  this.defaultMQAdminExt.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPullConsumer.setInstanceName(instanceName());\n  this.defaultMQPullConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPushConsumer.setInstanceName(instanceName());\n  this.defaultMQPushConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  try {\n    this.defaultMQPushConsumer.setConsumeThreadMin(1);\n    this.defaultMQPushConsumer.setConsumeThreadMax(1);\n    this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n    this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n      @Override public ConsumeConcurrentlyStatus consumeMessage(      List<MessageExt> msgs,      ConsumeConcurrentlyContext context){\n        try {\n          OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n          DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n          deleteMsgsEvent.setOffsetMovedEvent(ome);\n          deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n          MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n        }\n catch (        Exception e) {\n        }\n        return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n      }\n    }\n);\n  }\n catch (  MQClientException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1941,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public MonitorService(MonitorConfig monitorConfig,MonitorListener monitorListener,RPCHook rpcHook){\n  this.monitorConfig=monitorConfig;\n  this.monitorListener=monitorListener;\n  this.defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  this.defaultMQAdminExt.setInstanceName(instanceName());\n  this.defaultMQAdminExt.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPullConsumer.setInstanceName(instanceName());\n  this.defaultMQPullConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  this.defaultMQPushConsumer.setInstanceName(instanceName());\n  this.defaultMQPushConsumer.setNamesrvAddr(monitorConfig.getNamesrvAddr());\n  try {\n    this.defaultMQPushConsumer.setConsumeThreadMin(1);\n    this.defaultMQPushConsumer.setConsumeThreadMax(1);\n    this.defaultMQPushConsumer.subscribe(MixAll.OFFSET_MOVED_EVENT,\"*\");\n    this.defaultMQPushConsumer.registerMessageListener(new MessageListenerConcurrently(){\n      @Override public ConsumeConcurrentlyStatus consumeMessage(      List<MessageExt> msgs,      ConsumeConcurrentlyContext context){\n        try {\n          OffsetMovedEvent ome=OffsetMovedEvent.decode(msgs.get(0).getBody(),OffsetMovedEvent.class);\n          DeleteMsgsEvent deleteMsgsEvent=new DeleteMsgsEvent();\n          deleteMsgsEvent.setOffsetMovedEvent(ome);\n          deleteMsgsEvent.setEventTimestamp(msgs.get(0).getStoreTimestamp());\n          MonitorService.this.monitorListener.reportDeleteMsgsEvent(deleteMsgsEvent);\n        }\n catch (        Exception e) {\n        }\n        return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n      }\n    }\n);\n  }\n catch (  MQClientException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.defaultMQPushConsumer.setConsumeThreadMax(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 59,
    "endLineNumber" : 84,
    "endColumnNumber" : 60
  }, {
    "charLength" : 1,
    "startLineNumber" : 85,
    "startColumnNumber" : 59,
    "endLineNumber" : 85,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}