{
  "id" : 510,
  "expression" : "mappedFile",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/test/java/org/apache/rocketmq/store/MappedFileTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 38,
      "startColumnNumber" : 25,
      "endLineNumber" : 38,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 38,
        "startColumnNumber" : 25,
        "endLineNumber" : 38,
        "endColumnNumber" : 74
      },
      "nodeContext" : "mappedFile.appendMessage(storeMessage.getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 74
      },
      "nodeContext" : "result=mappedFile.appendMessage(storeMessage.getBytes())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 75
      },
      "nodeContext" : "boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 75
      },
      "nodeContext" : "boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  }, {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 41,
      "startColumnNumber" : 60,
      "endLineNumber" : 41,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 60,
        "endLineNumber" : 41,
        "endColumnNumber" : 92
      },
      "nodeContext" : "mappedFile.selectMappedBuffer(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 41,
        "endColumnNumber" : 92
      },
      "nodeContext" : "selectMappedBufferResult=mappedFile.selectMappedBuffer(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 93
      },
      "nodeContext" : "SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 93
      },
      "nodeContext" : "SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  }, {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 33
      },
      "nodeContext" : "mappedFile.shutdown(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mappedFile.shutdown(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mappedFile.shutdown(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  }, {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 49,
      "startColumnNumber" : 19,
      "endLineNumber" : 49,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "mappedFile.isAvailable()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(mappedFile.isAvailable())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(mappedFile.isAvailable()).isFalse()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(mappedFile.isAvailable()).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(mappedFile.isAvailable()).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  }, {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 51,
      "startColumnNumber" : 19,
      "endLineNumber" : 51,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 45
      },
      "nodeContext" : "mappedFile.isCleanupOver()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(mappedFile.isCleanupOver())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(mappedFile.isCleanupOver()).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(mappedFile.isCleanupOver()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(mappedFile.isCleanupOver()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  }, {
    "nodeContext" : "mappedFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 52,
      "startColumnNumber" : 19,
      "endLineNumber" : 52,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 43
      },
      "nodeContext" : "mappedFile.destroy(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(mappedFile.destroy(1000))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(mappedFile.destroy(1000)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(mappedFile.destroy(1000)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 36,
        "startColumnNumber" : 60,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectMappedBuffer() throws IOException {\n  MappedFile mappedFile=new MappedFile(\"target/unit_test_store/MappedFileTest/000\",1024 * 64);\n  boolean result=mappedFile.appendMessage(storeMessage.getBytes());\n  assertThat(result).isTrue();\n  SelectMappedBufferResult selectMappedBufferResult=mappedFile.selectMappedBuffer(0);\n  byte[] data=new byte[storeMessage.length()];\n  selectMappedBufferResult.getByteBuffer().get(data);\n  String readString=new String(data);\n  assertThat(readString).isEqualTo(storeMessage);\n  mappedFile.shutdown(1000);\n  assertThat(mappedFile.isAvailable()).isFalse();\n  selectMappedBufferResult.release();\n  assertThat(mappedFile.isCleanupOver()).isTrue();\n  assertThat(mappedFile.destroy(1000)).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(mappedFile.destroy(1000)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.store.MappedFile"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 38,
    "startColumnNumber" : 25,
    "endLineNumber" : 38,
    "endColumnNumber" : 35
  }, {
    "charLength" : 10,
    "startLineNumber" : 41,
    "startColumnNumber" : 60,
    "endLineNumber" : 41,
    "endColumnNumber" : 70
  }, {
    "charLength" : 10,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 49,
    "startColumnNumber" : 19,
    "endLineNumber" : 49,
    "endColumnNumber" : 29
  }, {
    "charLength" : 10,
    "startLineNumber" : 51,
    "startColumnNumber" : 19,
    "endLineNumber" : 51,
    "endColumnNumber" : 29
  }, {
    "charLength" : 10,
    "startLineNumber" : 52,
    "startColumnNumber" : 19,
    "endLineNumber" : 52,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}