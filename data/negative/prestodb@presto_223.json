{
  "id" : 223,
  "expression" : "Double",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-ml/src/main/java/com/facebook/presto/ml/LibSvmUtils.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Double",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 63,
      "startColumnNumber" : 35,
      "endLineNumber" : 63,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Double.parseDouble(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 20,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "params.gamma=Double.parseDouble(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 20,
        "endLineNumber" : 63,
        "endColumnNumber" : 61
      },
      "nodeContext" : "params.gamma=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"kernel\":  params.kernel_type=parseKernelType(value);\nbreak;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 49,
        "startColumnNumber" : 84,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static svm_parameter parseParameters(String paramString){\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 20,
        "endLineNumber" : 63,
        "endColumnNumber" : 61
      },
      "nodeContext" : "params.gamma=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  }, {
    "nodeContext" : "Double",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 66,
      "startColumnNumber" : 35,
      "endLineNumber" : 66,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 66,
        "startColumnNumber" : 35,
        "endLineNumber" : 66,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Double.parseDouble(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 20,
        "endLineNumber" : 66,
        "endColumnNumber" : 60
      },
      "nodeContext" : "params.coef0=Double.parseDouble(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 66,
        "startColumnNumber" : 20,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "params.coef0=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"kernel\":  params.kernel_type=parseKernelType(value);\nbreak;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 49,
        "startColumnNumber" : 84,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static svm_parameter parseParameters(String paramString){\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 66,
        "startColumnNumber" : 20,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "params.coef0=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  }, {
    "nodeContext" : "Double",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 69,
      "startColumnNumber" : 31,
      "endLineNumber" : 69,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 69,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Double.parseDouble(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 69,
        "startColumnNumber" : 20,
        "endLineNumber" : 69,
        "endColumnNumber" : 56
      },
      "nodeContext" : "params.C=Double.parseDouble(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 69,
        "startColumnNumber" : 20,
        "endLineNumber" : 69,
        "endColumnNumber" : 57
      },
      "nodeContext" : "params.C=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"kernel\":  params.kernel_type=parseKernelType(value);\nbreak;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 49,
        "startColumnNumber" : 84,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static svm_parameter parseParameters(String paramString){\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 69,
        "startColumnNumber" : 20,
        "endLineNumber" : 69,
        "endColumnNumber" : 57
      },
      "nodeContext" : "params.C=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  }, {
    "nodeContext" : "Double",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 72,
      "startColumnNumber" : 32,
      "endLineNumber" : 72,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 72,
        "startColumnNumber" : 32,
        "endLineNumber" : 72,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Double.parseDouble(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 72,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 57
      },
      "nodeContext" : "params.nu=Double.parseDouble(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 72,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 58
      },
      "nodeContext" : "params.nu=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"kernel\":  params.kernel_type=parseKernelType(value);\nbreak;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 49,
        "startColumnNumber" : 84,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static svm_parameter parseParameters(String paramString){\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 72,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 58
      },
      "nodeContext" : "params.nu=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  }, {
    "nodeContext" : "Double",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 75,
      "startColumnNumber" : 33,
      "endLineNumber" : 75,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 75,
        "startColumnNumber" : 33,
        "endLineNumber" : 75,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Double.parseDouble(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 58
      },
      "nodeContext" : "params.eps=Double.parseDouble(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 59
      },
      "nodeContext" : "params.eps=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (key) {\ncase \"kernel\":  params.kernel_type=parseKernelType(value);\nbreak;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 49,
        "startColumnNumber" : 84,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n  String[] pair=split.split(\"=\");\n  checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n  String value=pair[1].trim();\n  String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":    params.kernel_type=parseKernelType(value);\n  break;\ncase \"degree\":params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static svm_parameter parseParameters(String paramString){\n  svm_parameter params=new svm_parameter();\n  params.kernel_type=svm_parameter.LINEAR;\n  params.degree=3;\n  params.gamma=0;\n  params.coef0=0;\n  params.nu=0.5;\n  params.cache_size=100;\n  params.C=1;\n  params.eps=0.1;\n  params.p=0.1;\n  params.shrinking=1;\n  params.probability=0;\n  params.nr_weight=0;\n  params.weight_label=new int[0];\n  params.weight=new double[0];\n  for (  String split : Splitter.on(',').omitEmptyStrings().split(paramString)) {\n    String[] pair=split.split(\"=\");\n    checkArgument(pair.length == 2,\"Invalid hyperparameters string for libsvm\");\n    String value=pair[1].trim();\n    String key=pair[0].trim();\nswitch (key) {\ncase \"kernel\":      params.kernel_type=parseKernelType(value);\n    break;\ncase \"degree\":  params.degree=Integer.parseInt(value);\nbreak;\ncase \"gamma\":params.gamma=Double.parseDouble(value);\nbreak;\ncase \"coef0\":params.coef0=Double.parseDouble(value);\nbreak;\ncase \"C\":params.C=Double.parseDouble(value);\nbreak;\ncase \"nu\":params.nu=Double.parseDouble(value);\nbreak;\ncase \"eps\":params.eps=Double.parseDouble(value);\nbreak;\ndefault:throw new PrestoException(INVALID_FUNCTION_ARGUMENT,format(\"Unknown parameter %s\",pair[0]));\n}\n}\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 59
      },
      "nodeContext" : "params.eps=Double.parseDouble(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 63,
    "startColumnNumber" : 35,
    "endLineNumber" : 63,
    "endColumnNumber" : 41
  }, {
    "charLength" : 6,
    "startLineNumber" : 66,
    "startColumnNumber" : 35,
    "endLineNumber" : 66,
    "endColumnNumber" : 41
  }, {
    "charLength" : 6,
    "startLineNumber" : 69,
    "startColumnNumber" : 31,
    "endLineNumber" : 69,
    "endColumnNumber" : 37
  }, {
    "charLength" : 6,
    "startLineNumber" : 72,
    "startColumnNumber" : 32,
    "endLineNumber" : 72,
    "endColumnNumber" : 38
  }, {
    "charLength" : 6,
    "startLineNumber" : 75,
    "startColumnNumber" : 33,
    "endLineNumber" : 75,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}