{
  "id" : 3,
  "expression" : "truststoreProvider.getIntermediateCertificates()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/utils/CRLUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "truststoreProvider.getIntermediateCertificates()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 159,
      "startColumnNumber" : 64,
      "endLineNumber" : 159,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 159,
        "startColumnNumber" : 44,
        "endLineNumber" : 159,
        "endColumnNumber" : 112
      },
      "nodeContext" : "intermediateCerts=truststoreProvider.getIntermediateCertificates()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Map<X500Principal,X509Certificate> intermediateCerts=truststoreProvider.getIntermediateCertificates();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2685,
        "startLineNumber" : 152,
        "startColumnNumber" : 191,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TruststoreProvider truststoreProvider=session.getProvider(TruststoreProvider.class);\n  if (truststoreProvider == null || truststoreProvider.getTruststore() == null) {\n    throw new GeneralSecurityException(\"Truststore not available\");\n  }\n  Map<X500Principal,X509Certificate> rootCerts=truststoreProvider.getRootCertificates();\n  Map<X500Principal,X509Certificate> intermediateCerts=truststoreProvider.getIntermediateCertificates();\n  X509Certificate crlSignatureCertificate=intermediateCerts.get(crlIssuerPrincipal);\n  if (crlSignatureCertificate == null) {\n    crlSignatureCertificate=rootCerts.get(crlIssuerPrincipal);\n  }\n  if (crlSignatureCertificate == null) {\n    throw new GeneralSecurityException(\"Not available certificate for CRL issuer '\" + crlIssuerPrincipal + \"' in the truststore, nor in the CA chain\");\n  }\n else {\n    log.tracef(\"Found CRL issuer certificate with subject '%s' in the truststore. Verifying trust anchor\",crlIssuerPrincipal);\n  }\n  Set<X500Principal> certificateCAPrincipals=Arrays.asList(certs).stream().map(X509Certificate::getSubjectX500Principal).collect(Collectors.toSet());\n  certificateCAPrincipals.remove(certs[0].getSubjectX500Principal());\n  X509Certificate currentCRLAnchorCertificate=crlSignatureCertificate;\n  X500Principal currentCRLAnchorPrincipal=crlIssuerPrincipal;\n  while (true) {\n    if (certificateCAPrincipals.contains(currentCRLAnchorPrincipal)) {\n      log.tracef(\"Found trust anchor of the CRL issuer '%s' in the CA chain. Anchor is '%s'\",crlIssuerPrincipal,currentCRLAnchorPrincipal);\n      break;\n    }\n    currentCRLAnchorPrincipal=currentCRLAnchorCertificate.getIssuerX500Principal();\n    currentCRLAnchorCertificate=intermediateCerts.get(currentCRLAnchorPrincipal);\n    if (currentCRLAnchorCertificate == null) {\n      currentCRLAnchorCertificate=rootCerts.get(currentCRLAnchorPrincipal);\n    }\n    if (currentCRLAnchorCertificate == null) {\n      throw new GeneralSecurityException(\"Certificate for CRL issuer '\" + crlIssuerPrincipal + \"' available in the truststore, but doesn't have trust anchors with the CA chain.\");\n    }\n  }\n  return crlSignatureCertificate;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2872,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static X509Certificate findCRLSignatureCertificateInTruststore(KeycloakSession session,X509Certificate[] certs,X500Principal crlIssuerPrincipal) throws GeneralSecurityException {\n  TruststoreProvider truststoreProvider=session.getProvider(TruststoreProvider.class);\n  if (truststoreProvider == null || truststoreProvider.getTruststore() == null) {\n    throw new GeneralSecurityException(\"Truststore not available\");\n  }\n  Map<X500Principal,X509Certificate> rootCerts=truststoreProvider.getRootCertificates();\n  Map<X500Principal,X509Certificate> intermediateCerts=truststoreProvider.getIntermediateCertificates();\n  X509Certificate crlSignatureCertificate=intermediateCerts.get(crlIssuerPrincipal);\n  if (crlSignatureCertificate == null) {\n    crlSignatureCertificate=rootCerts.get(crlIssuerPrincipal);\n  }\n  if (crlSignatureCertificate == null) {\n    throw new GeneralSecurityException(\"Not available certificate for CRL issuer '\" + crlIssuerPrincipal + \"' in the truststore, nor in the CA chain\");\n  }\n else {\n    log.tracef(\"Found CRL issuer certificate with subject '%s' in the truststore. Verifying trust anchor\",crlIssuerPrincipal);\n  }\n  Set<X500Principal> certificateCAPrincipals=Arrays.asList(certs).stream().map(X509Certificate::getSubjectX500Principal).collect(Collectors.toSet());\n  certificateCAPrincipals.remove(certs[0].getSubjectX500Principal());\n  X509Certificate currentCRLAnchorCertificate=crlSignatureCertificate;\n  X500Principal currentCRLAnchorPrincipal=crlIssuerPrincipal;\n  while (true) {\n    if (certificateCAPrincipals.contains(currentCRLAnchorPrincipal)) {\n      log.tracef(\"Found trust anchor of the CRL issuer '%s' in the CA chain. Anchor is '%s'\",crlIssuerPrincipal,currentCRLAnchorPrincipal);\n      break;\n    }\n    currentCRLAnchorPrincipal=currentCRLAnchorCertificate.getIssuerX500Principal();\n    currentCRLAnchorCertificate=intermediateCerts.get(currentCRLAnchorPrincipal);\n    if (currentCRLAnchorCertificate == null) {\n      currentCRLAnchorCertificate=rootCerts.get(currentCRLAnchorPrincipal);\n    }\n    if (currentCRLAnchorCertificate == null) {\n      throw new GeneralSecurityException(\"Certificate for CRL issuer '\" + crlIssuerPrincipal + \"' available in the truststore, but doesn't have trust anchors with the CA chain.\");\n    }\n  }\n  return crlSignatureCertificate;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Map<X500Principal,X509Certificate> intermediateCerts=truststoreProvider.getIntermediateCertificates();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate>"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 159,
    "startColumnNumber" : 64,
    "endLineNumber" : 159,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}