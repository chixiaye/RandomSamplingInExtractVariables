{
  "id" : 210,
  "expression" : "new Token(value,identity,path,expiresSec,permissions,isAdmin)",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/objectServer/java/io/realm/internal/objectserver/Token.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Token(value,identity,path,expiresSec,permissions,isAdmin)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 70,
      "startColumnNumber" : 15,
      "endLineNumber" : 70,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new Token(value,identity,path,expiresSec,permissions,isAdmin);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 48,
        "startColumnNumber" : 68,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String value=token.getString(KEY_TOKEN);\n  JSONObject tokenData=token.getJSONObject(KEY_TOKEN_DATA);\n  String identity=tokenData.getString(KEY_IDENTITY);\n  String path=tokenData.optString(KEY_PATH);\n  long expiresSec=tokenData.getLong(KEY_EXPIRES);\n  Permission[] permissions;\n  JSONArray access=tokenData.getJSONArray(KEY_ACCESS);\n  if (access != null) {\n    permissions=new Permission[access.length()];\n    for (int i=0; i < access.length(); i++) {\n      try {\n        permissions[i]=Permission.valueOf(access.getString(i));\n      }\n catch (      IllegalArgumentException e) {\n        permissions[i]=Permission.UNKNOWN;\n      }\n    }\n  }\n else {\n    permissions=new Permission[0];\n  }\n  boolean isAdmin=tokenData.optBoolean(KEY_IS_ADMIN);\n  return new Token(value,identity,path,expiresSec,permissions,isAdmin);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Token from(JSONObject token) throws JSONException {\n  String value=token.getString(KEY_TOKEN);\n  JSONObject tokenData=token.getJSONObject(KEY_TOKEN_DATA);\n  String identity=tokenData.getString(KEY_IDENTITY);\n  String path=tokenData.optString(KEY_PATH);\n  long expiresSec=tokenData.getLong(KEY_EXPIRES);\n  Permission[] permissions;\n  JSONArray access=tokenData.getJSONArray(KEY_ACCESS);\n  if (access != null) {\n    permissions=new Permission[access.length()];\n    for (int i=0; i < access.length(); i++) {\n      try {\n        permissions[i]=Permission.valueOf(access.getString(i));\n      }\n catch (      IllegalArgumentException e) {\n        permissions[i]=Permission.UNKNOWN;\n      }\n    }\n  }\n else {\n    permissions=new Permission[0];\n  }\n  boolean isAdmin=tokenData.optBoolean(KEY_IS_ADMIN);\n  return new Token(value,identity,path,expiresSec,permissions,isAdmin);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new Token(value,identity,path,expiresSec,permissions,isAdmin);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "io.realm.internal.objectserver.Token"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 70,
    "startColumnNumber" : 15,
    "endLineNumber" : 70,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}