{
  "id" : 475,
  "expression" : "headerFileA",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/tar/TarStreamBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "headerFileA",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 209,
      "startColumnNumber" : 54,
      "endLineNumber" : 209,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 209,
        "startColumnNumber" : 54,
        "endLineNumber" : 209,
        "endColumnNumber" : 75
      },
      "nodeContext" : "headerFileA.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(\"some/path/to/resourceFileA\",headerFileA.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertEquals(\"some/path/to/resourceFileA\",headerFileA.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 206,
        "startColumnNumber" : 96,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TarArchiveEntry headerFileA=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/path/to/resourceFileA\",headerFileA.getName());\n  byte[] fileAString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileAContents,fileAString);\n  TarArchiveEntry headerFileB=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"crepecake\",headerFileB.getName());\n  byte[] fileBString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileBContents,fileBString);\n  TarArchiveEntry headerDirectoryA=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/path/to/\",headerDirectoryA.getName());\n  TarArchiveEntry headerFileALong=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/really/long/path/that/exceeds/100/characters/abcdefghijklmnopqrstuvwxyz0123456789012345678901234567890\",headerFileALong.getName());\n  byte[] fileALongString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileAContents,fileALongString);\n  Assert.assertNull(tarArchiveInputStream.getNextTarEntry());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 202,
        "startColumnNumber" : 2,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Helper method to verify that the files were archived correctly by reading  {@code tarArchiveInputStream}.\n */\nprivate void verifyTarArchive(TarArchiveInputStream tarArchiveInputStream) throws IOException {\n  TarArchiveEntry headerFileA=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/path/to/resourceFileA\",headerFileA.getName());\n  byte[] fileAString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileAContents,fileAString);\n  TarArchiveEntry headerFileB=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"crepecake\",headerFileB.getName());\n  byte[] fileBString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileBContents,fileBString);\n  TarArchiveEntry headerDirectoryA=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/path/to/\",headerDirectoryA.getName());\n  TarArchiveEntry headerFileALong=tarArchiveInputStream.getNextTarEntry();\n  Assert.assertEquals(\"some/really/long/path/that/exceeds/100/characters/abcdefghijklmnopqrstuvwxyz0123456789012345678901234567890\",headerFileALong.getName());\n  byte[] fileALongString=ByteStreams.toByteArray(tarArchiveInputStream);\n  Assert.assertArrayEquals(fileAContents,fileALongString);\n  Assert.assertNull(tarArchiveInputStream.getNextTarEntry());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertEquals(\"some/path/to/resourceFileA\",headerFileA.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.tar.TarArchiveEntry"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 209,
    "startColumnNumber" : 54,
    "endLineNumber" : 209,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}