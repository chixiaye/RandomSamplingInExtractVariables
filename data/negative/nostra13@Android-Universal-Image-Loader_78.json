{
  "id" : 78,
  "expression" : "(float)srcHeight / targetHeight",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/utils/ImageSizeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(float)srcHeight / targetHeight",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 150,
      "startColumnNumber" : 36,
      "endLineNumber" : 150,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 150,
        "startColumnNumber" : 26,
        "endLineNumber" : 150,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Math.ceil((float)srcHeight / targetHeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 69
      },
      "nodeContext" : "(int)Math.ceil((float)srcHeight / targetHeight)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 150,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 69
      },
      "nodeContext" : "heightScale=(int)Math.ceil((float)srcHeight / targetHeight)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int heightScale=(int)Math.ceil((float)srcHeight / targetHeight);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 143,
        "startColumnNumber" : 64,
        "endLineNumber" : 153,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int srcWidth=srcSize.getWidth();\n  int srcHeight=srcSize.getHeight();\n  int targetWidth=maxBitmapSize.getWidth();\n  int targetHeight=maxBitmapSize.getHeight();\n  int widthScale=(int)Math.ceil((float)srcWidth / targetWidth);\n  int heightScale=(int)Math.ceil((float)srcHeight / targetHeight);\n  return Math.max(widthScale,heightScale);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 134,
        "startColumnNumber" : 1,
        "endLineNumber" : 153,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes minimal sample size for downscaling image so result image size won't exceed max acceptable OpenGL texture size.<br /> We can't create Bitmap in memory with size exceed max texture size (usually this is 2048x2048) so this method calculate minimal sample size which should be applied to image to fit into these limits.\n * @param srcSize Original image size\n * @return Minimal sample size\n */\npublic static int computeMinImageSampleSize(ImageSize srcSize){\n  int srcWidth=srcSize.getWidth();\n  int srcHeight=srcSize.getHeight();\n  int targetWidth=maxBitmapSize.getWidth();\n  int targetHeight=maxBitmapSize.getHeight();\n  int widthScale=(int)Math.ceil((float)srcWidth / targetWidth);\n  int heightScale=(int)Math.ceil((float)srcHeight / targetHeight);\n  return Math.max(widthScale,heightScale);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int heightScale=(int)Math.ceil((float)srcHeight / targetHeight);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 150,
    "startColumnNumber" : 36,
    "endLineNumber" : 150,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}