{
  "id" : 479,
  "expression" : "record",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/transforms/src/main/java/org/apache/kafka/connect/transforms/DropHeaders.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 51,
      "startColumnNumber" : 29,
      "endLineNumber" : 51,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 51,
        "startColumnNumber" : 29,
        "endLineNumber" : 51,
        "endColumnNumber" : 45
      },
      "nodeContext" : "record.headers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Header header : record.headers()) {\n  if (!headers.contains(header.key())) {\n    updatedHeaders.add(header);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 51,
        "startColumnNumber" : 29,
        "endLineNumber" : 51,
        "endColumnNumber" : 45
      },
      "nodeContext" : "record.headers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 15,
      "endLineNumber" : 56,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 32,
      "endLineNumber" : 56,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 56,
        "startColumnNumber" : 32,
        "endLineNumber" : 56,
        "endColumnNumber" : 46
      },
      "nodeContext" : "record.topic()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 56,
        "startColumnNumber" : 32,
        "endLineNumber" : 56,
        "endColumnNumber" : 46
      },
      "nodeContext" : "record.topic()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 48,
      "endLineNumber" : 56,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 48,
        "endLineNumber" : 56,
        "endColumnNumber" : 71
      },
      "nodeContext" : "record.kafkaPartition()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 48,
        "endLineNumber" : 56,
        "endColumnNumber" : 71
      },
      "nodeContext" : "record.kafkaPartition()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 73,
      "endLineNumber" : 56,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 73,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "record.keySchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 73,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "record.keySchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 93,
      "endLineNumber" : 56,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 56,
        "startColumnNumber" : 93,
        "endLineNumber" : 56,
        "endColumnNumber" : 105
      },
      "nodeContext" : "record.key()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 56,
        "startColumnNumber" : 93,
        "endLineNumber" : 56,
        "endColumnNumber" : 105
      },
      "nodeContext" : "record.key()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 16,
      "endLineNumber" : 57,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 36
      },
      "nodeContext" : "record.valueSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 36
      },
      "nodeContext" : "record.valueSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 38,
      "endLineNumber" : 57,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 57,
        "startColumnNumber" : 38,
        "endLineNumber" : 57,
        "endColumnNumber" : 52
      },
      "nodeContext" : "record.value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 57,
        "startColumnNumber" : 38,
        "endLineNumber" : 57,
        "endColumnNumber" : 52
      },
      "nodeContext" : "record.value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 54,
      "endLineNumber" : 57,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 57,
        "startColumnNumber" : 54,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "record.timestamp()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 89
      },
      "nodeContext" : "record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public R apply(R record){\n  Headers updatedHeaders=new ConnectHeaders();\n  for (  Header header : record.headers()) {\n    if (!headers.contains(header.key())) {\n      updatedHeaders.add(header);\n    }\n  }\n  return record.newRecord(record.topic(),record.kafkaPartition(),record.keySchema(),record.key(),record.valueSchema(),record.value(),record.timestamp(),updatedHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 57,
        "startColumnNumber" : 54,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "record.timestamp()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "R"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 51,
    "startColumnNumber" : 29,
    "endLineNumber" : 51,
    "endColumnNumber" : 35
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 15,
    "endLineNumber" : 56,
    "endColumnNumber" : 21
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 32,
    "endLineNumber" : 56,
    "endColumnNumber" : 38
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 48,
    "endLineNumber" : 56,
    "endColumnNumber" : 54
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 73,
    "endLineNumber" : 56,
    "endColumnNumber" : 79
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 93,
    "endLineNumber" : 56,
    "endColumnNumber" : 99
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 16,
    "endLineNumber" : 57,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 38,
    "endLineNumber" : 57,
    "endColumnNumber" : 44
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 54,
    "endLineNumber" : 57,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 1
  } ]
}