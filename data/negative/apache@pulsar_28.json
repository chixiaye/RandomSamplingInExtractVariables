{
  "id" : 28,
  "expression" : "functionRuntime",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionsStatsGenerator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "functionRuntime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 68,
      "startColumnNumber" : 24,
      "endLineNumber" : 68,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 68,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "functionRuntime != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 77,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (functionRuntime != null) {\n  try {\n    out.write(functionRuntime.getPrometheusMetrics());\n  }\n catch (  IOException e) {\n    log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 66,
        "startColumnNumber" : 52,
        "endLineNumber" : 78,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n  if (functionRuntime != null) {\n    try {\n      out.write(functionRuntime.getPrometheusMetrics());\n    }\n catch (    IOException e) {\n      log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (functionRuntimeSpawner != null) {\n  Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n  if (functionRuntime != null) {\n    try {\n      out.write(functionRuntime.getPrometheusMetrics());\n    }\n catch (    IOException e) {\n      log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 61,
        "startColumnNumber" : 93,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String fullyQualifiedInstanceName=entry.getKey();\n  FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n  RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n  if (functionRuntimeSpawner != null) {\n    Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n    if (functionRuntime != null) {\n      try {\n        out.write(functionRuntime.getPrometheusMetrics());\n      }\n catch (      IOException e) {\n        log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n  String fullyQualifiedInstanceName=entry.getKey();\n  FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n  RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n  if (functionRuntimeSpawner != null) {\n    Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n    if (functionRuntime != null) {\n      try {\n        out.write(functionRuntime.getPrometheusMetrics());\n      }\n catch (      IOException e) {\n        log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1729,
        "startLineNumber" : 40,
        "startColumnNumber" : 68,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    out.write(workerService.getWorkerStatsManager().getStatsAsString());\n  }\n catch (  IOException e) {\n    log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n  }\n  if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n    return;\n  }\n  Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n  for (  Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n    String fullyQualifiedInstanceName=entry.getKey();\n    FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n    RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n    if (functionRuntimeSpawner != null) {\n      Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n      if (functionRuntime != null) {\n        try {\n          out.write(functionRuntime.getPrometheusMetrics());\n        }\n catch (        IOException e) {\n          log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1789,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (workerService != null && workerService.isInitialized()) {\n  try {\n    out.write(workerService.getWorkerStatsManager().getStatsAsString());\n  }\n catch (  IOException e) {\n    log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n  }\n  if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n    return;\n  }\n  Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n  for (  Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n    String fullyQualifiedInstanceName=entry.getKey();\n    FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n    RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n    if (functionRuntimeSpawner != null) {\n      Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n      if (functionRuntime != null) {\n        try {\n          out.write(functionRuntime.getPrometheusMetrics());\n        }\n catch (        IOException e) {\n          log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 38,
        "startColumnNumber" : 95,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (workerService != null && workerService.isInitialized()) {\n    try {\n      out.write(workerService.getWorkerStatsManager().getStatsAsString());\n    }\n catch (    IOException e) {\n      log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n    }\n    if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n      return;\n    }\n    Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n    for (    Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n      String fullyQualifiedInstanceName=entry.getKey();\n      FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n      RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n      if (functionRuntimeSpawner != null) {\n        Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n        if (functionRuntime != null) {\n          try {\n            out.write(functionRuntime.getPrometheusMetrics());\n          }\n catch (          IOException e) {\n            log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void generate(PulsarWorkerService workerService,SimpleTextOutputStream out){\n  if (workerService != null && workerService.isInitialized()) {\n    try {\n      out.write(workerService.getWorkerStatsManager().getStatsAsString());\n    }\n catch (    IOException e) {\n      log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n    }\n    if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n      return;\n    }\n    Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n    for (    Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n      String fullyQualifiedInstanceName=entry.getKey();\n      FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n      RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n      if (functionRuntimeSpawner != null) {\n        Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n        if (functionRuntime != null) {\n          try {\n            out.write(functionRuntime.getPrometheusMetrics());\n          }\n catch (          IOException e) {\n            log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 68,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "functionRuntime != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.runtime.Runtime"
  }, {
    "nodeContext" : "functionRuntime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 71,
      "startColumnNumber" : 38,
      "endLineNumber" : 71,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 71,
        "startColumnNumber" : 38,
        "endLineNumber" : 71,
        "endColumnNumber" : 76
      },
      "nodeContext" : "functionRuntime.getPrometheusMetrics()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 71,
        "startColumnNumber" : 28,
        "endLineNumber" : 71,
        "endColumnNumber" : 77
      },
      "nodeContext" : "out.write(functionRuntime.getPrometheusMetrics())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 71,
        "startColumnNumber" : 28,
        "endLineNumber" : 71,
        "endColumnNumber" : 78
      },
      "nodeContext" : "out.write(functionRuntime.getPrometheusMetrics());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 69,
        "startColumnNumber" : 28,
        "endLineNumber" : 73,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  out.write(functionRuntime.getPrometheusMetrics());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 76,
        "endColumnNumber" : 25
      },
      "nodeContext" : "try {\n  out.write(functionRuntime.getPrometheusMetrics());\n}\n catch (IOException e) {\n  log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 68,
        "startColumnNumber" : 49,
        "endLineNumber" : 77,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  try {\n    out.write(functionRuntime.getPrometheusMetrics());\n  }\n catch (  IOException e) {\n    log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 77,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (functionRuntime != null) {\n  try {\n    out.write(functionRuntime.getPrometheusMetrics());\n  }\n catch (  IOException e) {\n    log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 66,
        "startColumnNumber" : 52,
        "endLineNumber" : 78,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n  if (functionRuntime != null) {\n    try {\n      out.write(functionRuntime.getPrometheusMetrics());\n    }\n catch (    IOException e) {\n      log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (functionRuntimeSpawner != null) {\n  Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n  if (functionRuntime != null) {\n    try {\n      out.write(functionRuntime.getPrometheusMetrics());\n    }\n catch (    IOException e) {\n      log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 61,
        "startColumnNumber" : 93,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String fullyQualifiedInstanceName=entry.getKey();\n  FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n  RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n  if (functionRuntimeSpawner != null) {\n    Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n    if (functionRuntime != null) {\n      try {\n        out.write(functionRuntime.getPrometheusMetrics());\n      }\n catch (      IOException e) {\n        log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n  String fullyQualifiedInstanceName=entry.getKey();\n  FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n  RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n  if (functionRuntimeSpawner != null) {\n    Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n    if (functionRuntime != null) {\n      try {\n        out.write(functionRuntime.getPrometheusMetrics());\n      }\n catch (      IOException e) {\n        log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1729,
        "startLineNumber" : 40,
        "startColumnNumber" : 68,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    out.write(workerService.getWorkerStatsManager().getStatsAsString());\n  }\n catch (  IOException e) {\n    log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n  }\n  if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n    return;\n  }\n  Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n  for (  Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n    String fullyQualifiedInstanceName=entry.getKey();\n    FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n    RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n    if (functionRuntimeSpawner != null) {\n      Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n      if (functionRuntime != null) {\n        try {\n          out.write(functionRuntime.getPrometheusMetrics());\n        }\n catch (        IOException e) {\n          log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1789,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (workerService != null && workerService.isInitialized()) {\n  try {\n    out.write(workerService.getWorkerStatsManager().getStatsAsString());\n  }\n catch (  IOException e) {\n    log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n  }\n  if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n    return;\n  }\n  Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n  for (  Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n    String fullyQualifiedInstanceName=entry.getKey();\n    FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n    RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n    if (functionRuntimeSpawner != null) {\n      Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n      if (functionRuntime != null) {\n        try {\n          out.write(functionRuntime.getPrometheusMetrics());\n        }\n catch (        IOException e) {\n          log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 143,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 38,
        "startColumnNumber" : 95,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (workerService != null && workerService.isInitialized()) {\n    try {\n      out.write(workerService.getWorkerStatsManager().getStatsAsString());\n    }\n catch (    IOException e) {\n      log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n    }\n    if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n      return;\n    }\n    Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n    for (    Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n      String fullyQualifiedInstanceName=entry.getKey();\n      FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n      RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n      if (functionRuntimeSpawner != null) {\n        Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n        if (functionRuntime != null) {\n          try {\n            out.write(functionRuntime.getPrometheusMetrics());\n          }\n catch (          IOException e) {\n            log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void generate(PulsarWorkerService workerService,SimpleTextOutputStream out){\n  if (workerService != null && workerService.isInitialized()) {\n    try {\n      out.write(workerService.getWorkerStatsManager().getStatsAsString());\n    }\n catch (    IOException e) {\n      log.warn(\"Encountered error when generating metrics for worker {}\",workerService.getWorkerConfig().getWorkerId(),e);\n    }\n    if (workerService.getFunctionRuntimeManager().getRuntimeFactory() instanceof KubernetesRuntimeFactory) {\n      return;\n    }\n    Map<String,FunctionRuntimeInfo> functionRuntimes=workerService.getFunctionRuntimeManager().getFunctionRuntimeInfos();\n    for (    Map.Entry<String,FunctionRuntimeInfo> entry : functionRuntimes.entrySet()) {\n      String fullyQualifiedInstanceName=entry.getKey();\n      FunctionRuntimeInfo functionRuntimeInfo=entry.getValue();\n      RuntimeSpawner functionRuntimeSpawner=functionRuntimeInfo.getRuntimeSpawner();\n      if (functionRuntimeSpawner != null) {\n        Runtime functionRuntime=functionRuntimeSpawner.getRuntime();\n        if (functionRuntime != null) {\n          try {\n            out.write(functionRuntime.getPrometheusMetrics());\n          }\n catch (          IOException e) {\n            log.warn(\"Failed to collect metrics for function instance {}\",fullyQualifiedInstanceName,e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 71,
        "startColumnNumber" : 28,
        "endLineNumber" : 71,
        "endColumnNumber" : 78
      },
      "nodeContext" : "out.write(functionRuntime.getPrometheusMetrics());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.runtime.Runtime"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 68,
    "startColumnNumber" : 24,
    "endLineNumber" : 68,
    "endColumnNumber" : 39
  }, {
    "charLength" : 15,
    "startLineNumber" : 71,
    "startColumnNumber" : 38,
    "endLineNumber" : 71,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}