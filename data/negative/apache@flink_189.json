{
  "id" : 189,
  "expression" : "!success",
  "projectName" : "apache@flink",
  "commitID" : "431f757aa3547833b3684f7e80dcc3ec8d2d8311",
  "filePath" : "flink-runtime/src/main/java/org/apache/flink/runtime/zookeeper/ZooKeeperStateHandleStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!success",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 369,
      "startColumnNumber" : 15,
      "endLineNumber" : 369,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 369,
        "startColumnNumber" : 8,
        "endLineNumber" : 404,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!success) {\n  stateHandles.clear();\n  Stat stat=client.checkExists().forPath(rootPath);\n  if (stat == null) {\n    break;\n  }\n else {\n    int initialCVersion=stat.getCversion();\n    final List<String> children=getNodeChildren.apply(rootPath);\n    for (    String path : children) {\n      path=rootPath + path;\n      try {\n        final RetrievableStateHandle<T> stateHandle=getAndLock(path);\n        stateHandles.add(new Tuple2<>(stateHandle,path));\n      }\n catch (      NotExistException ignored) {\n        continue retry;\n      }\ncatch (      IOException ioException) {\n        LOG.warn(\"Could not get all ZooKeeper children. Node {} contained \" + \"corrupted data. Ignoring this node.\",path,ioException);\n      }\n    }\n    int finalCVersion=client.checkExists().forPath(rootPath).getCversion();\n    success=initialCVersion == finalCVersion;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1511,
        "startLineNumber" : 368,
        "startColumnNumber" : 8,
        "endLineNumber" : 404,
        "endColumnNumber" : 9
      },
      "nodeContext" : "retry: while (!success) {\n  stateHandles.clear();\n  Stat stat=client.checkExists().forPath(rootPath);\n  if (stat == null) {\n    break;\n  }\n else {\n    int initialCVersion=stat.getCversion();\n    final List<String> children=getNodeChildren.apply(rootPath);\n    for (    String path : children) {\n      path=rootPath + path;\n      try {\n        final RetrievableStateHandle<T> stateHandle=getAndLock(path);\n        stateHandles.add(new Tuple2<>(stateHandle,path));\n      }\n catch (      NotExistException ignored) {\n        continue retry;\n      }\ncatch (      IOException ioException) {\n        LOG.warn(\"Could not get all ZooKeeper children. Node {} contained \" + \"corrupted data. Ignoring this node.\",path,ioException);\n      }\n    }\n    int finalCVersion=client.checkExists().forPath(rootPath).getCversion();\n    success=initialCVersion == finalCVersion;\n  }\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 126,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1725,
        "startLineNumber" : 362,
        "startColumnNumber" : 29,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<Tuple2<RetrievableStateHandle<T>,String>> stateHandles=new ArrayList<>();\n  final String rootPath=\"/\";\n  boolean success=false;\n  retry:   while (!success) {\n    stateHandles.clear();\n    Stat stat=client.checkExists().forPath(rootPath);\n    if (stat == null) {\n      break;\n    }\n else {\n      int initialCVersion=stat.getCversion();\n      final List<String> children=getNodeChildren.apply(rootPath);\n      for (      String path : children) {\n        path=rootPath + path;\n        try {\n          final RetrievableStateHandle<T> stateHandle=getAndLock(path);\n          stateHandles.add(new Tuple2<>(stateHandle,path));\n        }\n catch (        NotExistException ignored) {\n          continue retry;\n        }\ncatch (        IOException ioException) {\n          LOG.warn(\"Could not get all ZooKeeper children. Node {} contained \" + \"corrupted data. Ignoring this node.\",path,ioException);\n        }\n      }\n      int finalCVersion=client.checkExists().forPath(rootPath).getCversion();\n      success=initialCVersion == finalCVersion;\n    }\n  }\n  return stateHandles;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 359,
        "startColumnNumber" : 4,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting List<Tuple2<RetrievableStateHandle<T>,String>> getAllAndLock(FunctionWithException<String,List<String>,Exception> getNodeChildren) throws Exception {\n  final List<Tuple2<RetrievableStateHandle<T>,String>> stateHandles=new ArrayList<>();\n  final String rootPath=\"/\";\n  boolean success=false;\n  retry:   while (!success) {\n    stateHandles.clear();\n    Stat stat=client.checkExists().forPath(rootPath);\n    if (stat == null) {\n      break;\n    }\n else {\n      int initialCVersion=stat.getCversion();\n      final List<String> children=getNodeChildren.apply(rootPath);\n      for (      String path : children) {\n        path=rootPath + path;\n        try {\n          final RetrievableStateHandle<T> stateHandle=getAndLock(path);\n          stateHandles.add(new Tuple2<>(stateHandle,path));\n        }\n catch (        NotExistException ignored) {\n          continue retry;\n        }\ncatch (        IOException ioException) {\n          LOG.warn(\"Could not get all ZooKeeper children. Node {} contained \" + \"corrupted data. Ignoring this node.\",path,ioException);\n        }\n      }\n      int finalCVersion=client.checkExists().forPath(rootPath).getCversion();\n      success=initialCVersion == finalCVersion;\n    }\n  }\n  return stateHandles;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 369,
        "startColumnNumber" : 8,
        "endLineNumber" : 404,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!success) {\n  stateHandles.clear();\n  Stat stat=client.checkExists().forPath(rootPath);\n  if (stat == null) {\n    break;\n  }\n else {\n    int initialCVersion=stat.getCversion();\n    final List<String> children=getNodeChildren.apply(rootPath);\n    for (    String path : children) {\n      path=rootPath + path;\n      try {\n        final RetrievableStateHandle<T> stateHandle=getAndLock(path);\n        stateHandles.add(new Tuple2<>(stateHandle,path));\n      }\n catch (      NotExistException ignored) {\n        continue retry;\n      }\ncatch (      IOException ioException) {\n        LOG.warn(\"Could not get all ZooKeeper children. Node {} contained \" + \"corrupted data. Ignoring this node.\",path,ioException);\n      }\n    }\n    int finalCVersion=client.checkExists().forPath(rootPath).getCversion();\n    success=initialCVersion == finalCVersion;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 369,
    "startColumnNumber" : 15,
    "endLineNumber" : 369,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}