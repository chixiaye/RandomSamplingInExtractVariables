{
  "id" : 236,
  "expression" : "new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"))",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/RealmQuery.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 128,
      "startLineNumber" : 1702,
      "startColumnNumber" : 22,
      "endLineNumber" : 1703,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 1702,
        "startColumnNumber" : 16,
        "endLineNumber" : 1703,
        "endColumnNumber" : 75
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 1692,
        "startColumnNumber" : 8,
        "endLineNumber" : 1704,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (table.getColumnType(columnKey)) {\ncase INTEGER:  return query.sumInt(columnKey);\ncase FLOAT:return query.sumFloat(columnKey);\ncase DOUBLE:return query.sumDouble(columnKey);\ncase DECIMAL128:return query.sumDecimal128(columnKey);\ndefault:throw new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 1687,
        "startColumnNumber" : 40,
        "endLineNumber" : 1705,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  realm.checkIfValid();\n  realm.checkAllowQueriesOnUiThread();\n  long columnKey=schema.getAndCheckFieldColumnKey(fieldName);\nswitch (table.getColumnType(columnKey)) {\ncase INTEGER:    return query.sumInt(columnKey);\ncase FLOAT:  return query.sumFloat(columnKey);\ncase DOUBLE:return query.sumDouble(columnKey);\ncase DECIMAL128:return query.sumDecimal128(columnKey);\ndefault:throw new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 1677,
        "startColumnNumber" : 4,
        "endLineNumber" : 1705,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calculates the sum of a given field.\n * @param fieldName the field to sum. Only number fields are supported.\n * @return the sum of fields of the matching objects. If no objects exist or they all have {@code null} as the valuefor the given field,  {@code 0} will be returned. When computing the sum, objects with {@code null} valuesare ignored.\n * @throws java.lang.IllegalArgumentException if the field is not a number type.\n * @throws RealmException                     if called from the UI thread after opting out via {@link RealmConfiguration.Builder#allowQueriesOnUiThread(boolean)}.\n */\npublic Number sum(String fieldName){\n  realm.checkIfValid();\n  realm.checkAllowQueriesOnUiThread();\n  long columnKey=schema.getAndCheckFieldColumnKey(fieldName);\nswitch (table.getColumnType(columnKey)) {\ncase INTEGER:    return query.sumInt(columnKey);\ncase FLOAT:  return query.sumFloat(columnKey);\ncase DOUBLE:return query.sumDouble(columnKey);\ncase DECIMAL128:return query.sumDecimal128(columnKey);\ndefault:throw new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 1702,
        "startColumnNumber" : 16,
        "endLineNumber" : 1703,
        "endColumnNumber" : 75
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(Locale.US,TYPE_MISMATCH,fieldName,\"int, float or double\"));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 128,
    "startLineNumber" : 1702,
    "startColumnNumber" : 22,
    "endLineNumber" : 1703,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}