{
  "id" : 450,
  "expression" : "entityList",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "1e00211f3510beefdc5b2d7ab735df7853d8df0d",
  "filePath" : "src/main/java/com/baomidou/mybatisplus/service/impl/ServiceImpl.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entityList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 309,
      "startColumnNumber" : 36,
      "endLineNumber" : 309,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 309,
        "startColumnNumber" : 12,
        "endLineNumber" : 309,
        "endColumnNumber" : 47
      },
      "nodeContext" : "CollectionUtils.isEmpty(entityList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 311,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (CollectionUtils.isEmpty(entityList)) {\n  throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 308,
        "startColumnNumber" : 90,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 301,
        "startColumnNumber" : 4,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 根据主键ID进行批量修改\n * @param entityList 实体对象列表\n * @param batchSize 批量刷新个数\n * @param selective 是否滤掉空字段\n * @return boolean\n */\nprivate boolean updateBatchById(List<T> entityList,int batchSize,boolean selective){\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 309,
        "startColumnNumber" : 12,
        "endLineNumber" : 309,
        "endColumnNumber" : 47
      },
      "nodeContext" : "CollectionUtils.isEmpty(entityList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<T>"
  }, {
    "nodeContext" : "entityList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 313,
      "startColumnNumber" : 23,
      "endLineNumber" : 313,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 313,
        "startColumnNumber" : 23,
        "endLineNumber" : 313,
        "endColumnNumber" : 40
      },
      "nodeContext" : "entityList.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 313,
        "startColumnNumber" : 16,
        "endLineNumber" : 313,
        "endColumnNumber" : 40
      },
      "nodeContext" : "size=entityList.size()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 41
      },
      "nodeContext" : "int size=entityList.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 312,
        "startColumnNumber" : 61,
        "endLineNumber" : 325,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (SqlSession batchSqlSession=sqlSessionBatch()){\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Throwable e) {\n  throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 308,
        "startColumnNumber" : 90,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 301,
        "startColumnNumber" : 4,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 根据主键ID进行批量修改\n * @param entityList 实体对象列表\n * @param batchSize 批量刷新个数\n * @param selective 是否滤掉空字段\n * @return boolean\n */\nprivate boolean updateBatchById(List<T> entityList,int batchSize,boolean selective){\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 313,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 41
      },
      "nodeContext" : "int size=entityList.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<T>"
  }, {
    "nodeContext" : "entityList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 318,
      "startColumnNumber" : 32,
      "endLineNumber" : 318,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 318,
        "startColumnNumber" : 32,
        "endLineNumber" : 318,
        "endColumnNumber" : 49
      },
      "nodeContext" : "entityList.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 318,
        "startColumnNumber" : 16,
        "endLineNumber" : 318,
        "endColumnNumber" : 50
      },
      "nodeContext" : "param.put(\"et\",entityList.get(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 318,
        "startColumnNumber" : 16,
        "endLineNumber" : 318,
        "endColumnNumber" : 51
      },
      "nodeContext" : "param.put(\"et\",entityList.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 316,
        "startColumnNumber" : 43,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n  param.put(\"et\",entityList.get(i));\n  batchSqlSession.update(sqlStatement,param);\n  if (i >= 1 && i % batchSize == 0) {\n    batchSqlSession.flushStatements();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 316,
        "startColumnNumber" : 12,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n  param.put(\"et\",entityList.get(i));\n  batchSqlSession.update(sqlStatement,param);\n  if (i >= 1 && i % batchSize == 0) {\n    batchSqlSession.flushStatements();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 312,
        "startColumnNumber" : 61,
        "endLineNumber" : 325,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (SqlSession batchSqlSession=sqlSessionBatch()){\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Throwable e) {\n  throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 308,
        "startColumnNumber" : 90,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 301,
        "startColumnNumber" : 4,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 根据主键ID进行批量修改\n * @param entityList 实体对象列表\n * @param batchSize 批量刷新个数\n * @param selective 是否滤掉空字段\n * @return boolean\n */\nprivate boolean updateBatchById(List<T> entityList,int batchSize,boolean selective){\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 318,
        "startColumnNumber" : 16,
        "endLineNumber" : 318,
        "endColumnNumber" : 51
      },
      "nodeContext" : "param.put(\"et\",entityList.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<T>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 309,
    "startColumnNumber" : 36,
    "endLineNumber" : 309,
    "endColumnNumber" : 46
  }, {
    "charLength" : 10,
    "startLineNumber" : 313,
    "startColumnNumber" : 23,
    "endLineNumber" : 313,
    "endColumnNumber" : 33
  }, {
    "charLength" : 10,
    "startLineNumber" : 318,
    "startColumnNumber" : 32,
    "endLineNumber" : 318,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}