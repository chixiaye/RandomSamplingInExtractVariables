{
  "id" : 1,
  "expression" : "sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/model/map/src/main/java/org/keycloak/models/map/storage/chm/CriteriaOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 204,
      "startColumnNumber" : 30,
      "endLineNumber" : 204,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 16,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 204,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 203,
        "startColumnNumber" : 14,
        "endLineNumber" : 205,
        "endColumnNumber" : 36
      },
      "nodeContext" : "(anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 202,
        "startColumnNumber" : 29,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 202,
        "startColumnNumber" : 20,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Pattern pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 192,
        "startColumnNumber" : 38,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String sValue=(String)value0;\n  if (Pattern.matches(\"^%+$\",sValue)) {\n    return ALWAYS_TRUE;\n  }\n  boolean anyBeginning=sValue.startsWith(\"%\");\n  boolean anyEnd=sValue.endsWith(\"%\");\n  Pattern pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL);\n  return o -> {\n    return o instanceof String && pValue.matcher((String)o).matches();\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value0 instanceof String) {\n  String sValue=(String)value0;\n  if (Pattern.matches(\"^%+$\",sValue)) {\n    return ALWAYS_TRUE;\n  }\n  boolean anyBeginning=sValue.startsWith(\"%\");\n  boolean anyEnd=sValue.endsWith(\"%\");\n  Pattern pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL);\n  return o -> {\n    return o instanceof String && pValue.matcher((String)o).matches();\n  }\n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 101,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 190,
        "startColumnNumber" : 57,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object value0=getFirstArrayElement(value);\n  if (value0 instanceof String) {\n    String sValue=(String)value0;\n    if (Pattern.matches(\"^%+$\",sValue)) {\n      return ALWAYS_TRUE;\n    }\n    boolean anyBeginning=sValue.startsWith(\"%\");\n    boolean anyEnd=sValue.endsWith(\"%\");\n    Pattern pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL);\n    return o -> {\n      return o instanceof String && pValue.matcher((String)o).matches();\n    }\n;\n  }\n  return ALWAYS_FALSE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Predicate<Object> like(Object[] value){\n  Object value0=getFirstArrayElement(value);\n  if (value0 instanceof String) {\n    String sValue=(String)value0;\n    if (Pattern.matches(\"^%+$\",sValue)) {\n      return ALWAYS_TRUE;\n    }\n    boolean anyBeginning=sValue.startsWith(\"%\");\n    boolean anyEnd=sValue.endsWith(\"%\");\n    Pattern pValue=Pattern.compile((anyBeginning ? \".*\" : \"\") + Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0))) + (anyEnd ? \".*\" : \"\"),Pattern.DOTALL);\n    return o -> {\n      return o instanceof String && pValue.matcher((String)o).matches();\n    }\n;\n  }\n  return ALWAYS_FALSE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 204,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Pattern.quote(sValue.substring(anyBeginning ? 1 : 0,sValue.length() - (anyEnd ? 1 : 0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 11,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 74,
    "startLineNumber" : 204,
    "startColumnNumber" : 30,
    "endLineNumber" : 204,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}