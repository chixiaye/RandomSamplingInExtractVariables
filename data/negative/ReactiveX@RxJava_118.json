{
  "id" : 118,
  "expression" : "\"subscriptions did not receive values\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"subscriptions did not receive values\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 128,
      "startColumnNumber" : 17,
      "endLineNumber" : 128,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 56
      },
      "nodeContext" : "fail(\"subscriptions did not receive values\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 57
      },
      "nodeContext" : "fail(\"subscriptions did not receive values\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 127,
        "startColumnNumber" : 55,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fail(\"subscriptions did not receive values\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!latch.await(1000,TimeUnit.MILLISECONDS)) {\n  fail(\"subscriptions did not receive values\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1680,
        "startLineNumber" : 84,
        "startColumnNumber" : 56,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger counter=new AtomicInteger();\n  Flowable<String> o=Flowable.create(new Publisher<String>(){\n    @Override public void subscribe(    final Subscriber<? super String> observer){\n      observer.onSubscribe(new BooleanSubscription());\n      new Thread(new Runnable(){\n        @Override public void run(){\n          counter.incrementAndGet();\n          System.out.println(\"published observable being executed\");\n          observer.onNext(\"one\");\n          observer.onComplete();\n        }\n      }\n).start();\n    }\n  }\n).cache();\n  final CountDownLatch latch=new CountDownLatch(2);\n  o.subscribe(new Consumer<String>(){\n    @Override public void accept(    String v){\n      assertEquals(\"one\",v);\n      System.out.println(\"v: \" + v);\n      latch.countDown();\n    }\n  }\n);\n  o.subscribe(new Consumer<String>(){\n    @Override public void accept(    String v){\n      assertEquals(\"one\",v);\n      System.out.println(\"v: \" + v);\n      latch.countDown();\n    }\n  }\n);\n  if (!latch.await(1000,TimeUnit.MILLISECONDS)) {\n    fail(\"subscriptions did not receive values\");\n  }\n  assertEquals(1,counter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1743,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCache() throws InterruptedException {\n  final AtomicInteger counter=new AtomicInteger();\n  Flowable<String> o=Flowable.create(new Publisher<String>(){\n    @Override public void subscribe(    final Subscriber<? super String> observer){\n      observer.onSubscribe(new BooleanSubscription());\n      new Thread(new Runnable(){\n        @Override public void run(){\n          counter.incrementAndGet();\n          System.out.println(\"published observable being executed\");\n          observer.onNext(\"one\");\n          observer.onComplete();\n        }\n      }\n).start();\n    }\n  }\n).cache();\n  final CountDownLatch latch=new CountDownLatch(2);\n  o.subscribe(new Consumer<String>(){\n    @Override public void accept(    String v){\n      assertEquals(\"one\",v);\n      System.out.println(\"v: \" + v);\n      latch.countDown();\n    }\n  }\n);\n  o.subscribe(new Consumer<String>(){\n    @Override public void accept(    String v){\n      assertEquals(\"one\",v);\n      System.out.println(\"v: \" + v);\n      latch.countDown();\n    }\n  }\n);\n  if (!latch.await(1000,TimeUnit.MILLISECONDS)) {\n    fail(\"subscriptions did not receive values\");\n  }\n  assertEquals(1,counter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 57
      },
      "nodeContext" : "fail(\"subscriptions did not receive values\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 128,
    "startColumnNumber" : 17,
    "endLineNumber" : 128,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}