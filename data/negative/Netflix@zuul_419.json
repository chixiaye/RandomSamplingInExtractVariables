{
  "id" : 419,
  "expression" : "route.replace(\"/\",\"_\")",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/stats/ErrorStatsManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "route.replace(\"/\",\"_\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 61,
      "startColumnNumber" : 16,
      "endLineNumber" : 61,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 39
      },
      "nodeContext" : "route=route.replace(\"/\",\"_\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "route=route.replace(\"/\",\"_\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 728,
        "startLineNumber" : 59,
        "startColumnNumber" : 53,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (route == null)   route=\"UNKNOWN_ROUTE\";\n  route=route.replace(\"/\",\"_\");\n  ConcurrentHashMap<String,ErrorStatsData> statsMap=routeMap.get(route);\n  if (statsMap == null) {\n    statsMap=new ConcurrentHashMap<String,ErrorStatsData>();\n    routeMap.putIfAbsent(route,statsMap);\n  }\n  ErrorStatsData sd=statsMap.get(cause);\n  if (sd == null) {\n    sd=new ErrorStatsData(route,cause);\n    ErrorStatsData sd1=statsMap.putIfAbsent(cause,sd);\n    if (sd1 != null) {\n      sd=sd1;\n    }\n else {\n      MonitorRegistry.getInstance().registerObject(sd);\n    }\n  }\n  sd.update();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * updates count for the given route and error cause\n * @param route\n * @param cause\n */\npublic void putStats(String route,String cause){\n  if (route == null)   route=\"UNKNOWN_ROUTE\";\n  route=route.replace(\"/\",\"_\");\n  ConcurrentHashMap<String,ErrorStatsData> statsMap=routeMap.get(route);\n  if (statsMap == null) {\n    statsMap=new ConcurrentHashMap<String,ErrorStatsData>();\n    routeMap.putIfAbsent(route,statsMap);\n  }\n  ErrorStatsData sd=statsMap.get(cause);\n  if (sd == null) {\n    sd=new ErrorStatsData(route,cause);\n    ErrorStatsData sd1=statsMap.putIfAbsent(cause,sd);\n    if (sd1 != null) {\n      sd=sd1;\n    }\n else {\n      MonitorRegistry.getInstance().registerObject(sd);\n    }\n  }\n  sd.update();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "route=route.replace(\"/\",\"_\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 61,
    "startColumnNumber" : 16,
    "endLineNumber" : 61,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}