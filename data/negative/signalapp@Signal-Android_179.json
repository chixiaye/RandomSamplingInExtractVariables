{
  "id" : 179,
  "expression" : "digestStream.getTransmittedDigest()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/libsignal/service/src/test/java/org/whispersystems/signalservice/api/crypto/AttachmentCipherTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "digestStream.getTransmittedDigest()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 129,
      "startColumnNumber" : 29,
      "endLineNumber" : 129,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 129,
        "startColumnNumber" : 13,
        "endLineNumber" : 129,
        "endColumnNumber" : 64
      },
      "nodeContext" : "digest=digestStream.getTransmittedDigest()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 65
      },
      "nodeContext" : "byte[] digest=digestStream.getTransmittedDigest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 113,
        "startColumnNumber" : 31,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] plaintextInput=new byte[length];\n  for (int i=0; i < length; i++) {\n    plaintextInput[i]=(byte)0x97;\n  }\n  byte[] key=Util.getSecretBytes(64);\n  ByteArrayInputStream inputStream=new ByteArrayInputStream(plaintextInput);\n  InputStream dataStream=new PaddingInputStream(inputStream,length);\n  ByteArrayOutputStream encryptedStream=new ByteArrayOutputStream();\n  DigestingOutputStream digestStream=new AttachmentCipherOutputStreamFactory(key,null).createFor(encryptedStream);\n  Util.copy(dataStream,digestStream);\n  digestStream.flush();\n  byte[] digest=digestStream.getTransmittedDigest();\n  byte[] encryptedData=encryptedStream.toByteArray();\n  encryptedStream.close();\n  inputStream.close();\n  File cipherFile=writeToFile(encryptedData);\n  InputStream decryptedStream=AttachmentCipherInputStream.createForAttachment(cipherFile,length,key,digest);\n  byte[] plaintextOutput=readInputStreamFully(decryptedStream);\n  assertArrayEquals(plaintextInput,plaintextOutput);\n  cipherFile.delete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1216,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int length : lengths) {\n  byte[] plaintextInput=new byte[length];\n  for (int i=0; i < length; i++) {\n    plaintextInput[i]=(byte)0x97;\n  }\n  byte[] key=Util.getSecretBytes(64);\n  ByteArrayInputStream inputStream=new ByteArrayInputStream(plaintextInput);\n  InputStream dataStream=new PaddingInputStream(inputStream,length);\n  ByteArrayOutputStream encryptedStream=new ByteArrayOutputStream();\n  DigestingOutputStream digestStream=new AttachmentCipherOutputStreamFactory(key,null).createFor(encryptedStream);\n  Util.copy(dataStream,digestStream);\n  digestStream.flush();\n  byte[] digest=digestStream.getTransmittedDigest();\n  byte[] encryptedData=encryptedStream.toByteArray();\n  encryptedStream.close();\n  inputStream.close();\n  File cipherFile=writeToFile(encryptedData);\n  InputStream decryptedStream=AttachmentCipherInputStream.createForAttachment(cipherFile,length,key,digest);\n  byte[] plaintextOutput=readInputStreamFully(decryptedStream);\n  assertArrayEquals(plaintextInput,plaintextOutput);\n  cipherFile.delete();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 110,
        "startColumnNumber" : 99,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] lengths={531,600,724,1019,1024};\n  for (  int length : lengths) {\n    byte[] plaintextInput=new byte[length];\n    for (int i=0; i < length; i++) {\n      plaintextInput[i]=(byte)0x97;\n    }\n    byte[] key=Util.getSecretBytes(64);\n    ByteArrayInputStream inputStream=new ByteArrayInputStream(plaintextInput);\n    InputStream dataStream=new PaddingInputStream(inputStream,length);\n    ByteArrayOutputStream encryptedStream=new ByteArrayOutputStream();\n    DigestingOutputStream digestStream=new AttachmentCipherOutputStreamFactory(key,null).createFor(encryptedStream);\n    Util.copy(dataStream,digestStream);\n    digestStream.flush();\n    byte[] digest=digestStream.getTransmittedDigest();\n    byte[] encryptedData=encryptedStream.toByteArray();\n    encryptedStream.close();\n    inputStream.close();\n    File cipherFile=writeToFile(encryptedData);\n    InputStream decryptedStream=AttachmentCipherInputStream.createForAttachment(cipherFile,length,key,digest);\n    byte[] plaintextOutput=readInputStreamFully(decryptedStream);\n    assertArrayEquals(plaintextInput,plaintextOutput);\n    cipherFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1394,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void attachment_encryptDecryptPaddedContent() throws IOException, InvalidMessageException {\n  int[] lengths={531,600,724,1019,1024};\n  for (  int length : lengths) {\n    byte[] plaintextInput=new byte[length];\n    for (int i=0; i < length; i++) {\n      plaintextInput[i]=(byte)0x97;\n    }\n    byte[] key=Util.getSecretBytes(64);\n    ByteArrayInputStream inputStream=new ByteArrayInputStream(plaintextInput);\n    InputStream dataStream=new PaddingInputStream(inputStream,length);\n    ByteArrayOutputStream encryptedStream=new ByteArrayOutputStream();\n    DigestingOutputStream digestStream=new AttachmentCipherOutputStreamFactory(key,null).createFor(encryptedStream);\n    Util.copy(dataStream,digestStream);\n    digestStream.flush();\n    byte[] digest=digestStream.getTransmittedDigest();\n    byte[] encryptedData=encryptedStream.toByteArray();\n    encryptedStream.close();\n    inputStream.close();\n    File cipherFile=writeToFile(encryptedData);\n    InputStream decryptedStream=AttachmentCipherInputStream.createForAttachment(cipherFile,length,key,digest);\n    byte[] plaintextOutput=readInputStreamFully(decryptedStream);\n    assertArrayEquals(plaintextInput,plaintextOutput);\n    cipherFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 65
      },
      "nodeContext" : "byte[] digest=digestStream.getTransmittedDigest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 129,
    "startColumnNumber" : 29,
    "endLineNumber" : 129,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}