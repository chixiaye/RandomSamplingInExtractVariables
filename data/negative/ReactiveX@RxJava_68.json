{
  "id" : 68,
  "expression" : "source.toMap(lengthFunc)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableToMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.toMap(lengthFunc)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 52,
      "startColumnNumber" : 48,
      "endLineNumber" : 52,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 52,
        "startColumnNumber" : 39,
        "endLineNumber" : 52,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mapped=source.toMap(lengthFunc)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Flowable<Map<Integer,String>> mapped=source.toMap(lengthFunc);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 49,
        "startColumnNumber" : 28,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<String> source=Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\");\n  Flowable<Map<Integer,String>> mapped=source.toMap(lengthFunc);\n  Map<Integer,String> expected=new HashMap<Integer,String>();\n  expected.put(1,\"a\");\n  expected.put(2,\"bb\");\n  expected.put(3,\"ccc\");\n  expected.put(4,\"dddd\");\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,never()).onError(any(Throwable.class));\n  verify(objectObserver,times(1)).onNext(expected);\n  verify(objectObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToMap(){\n  Flowable<String> source=Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\");\n  Flowable<Map<Integer,String>> mapped=source.toMap(lengthFunc);\n  Map<Integer,String> expected=new HashMap<Integer,String>();\n  expected.put(1,\"a\");\n  expected.put(2,\"bb\");\n  expected.put(3,\"ccc\");\n  expected.put(4,\"dddd\");\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,never()).onError(any(Throwable.class));\n  verify(objectObserver,times(1)).onNext(expected);\n  verify(objectObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Flowable<Map<Integer,String>> mapped=source.toMap(lengthFunc);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.Flowable<java.util.Map<java.lang.Integer,java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 52,
    "startColumnNumber" : 48,
    "endLineNumber" : 52,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}