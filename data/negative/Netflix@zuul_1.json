{
  "id" : 1,
  "expression" : "new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1}",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/http2/Http2Configuration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 100,
      "startLineNumber" : 42,
      "startColumnNumber" : 32,
      "endLineNumber" : 43,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 54
      },
      "nodeContext" : "supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1}",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 41,
        "startColumnNumber" : 13,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (HTTP2_DISABLED.get()) {\n  supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_1_1};\n}\n else {\n  supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1527,
        "startLineNumber" : 34,
        "startColumnNumber" : 89,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SslContextBuilder builder=sslContextFactory.createBuilderForServer();\n  String[] supportedProtocol;\n  if (HTTP2_DISABLED.get()) {\n    supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_1_1};\n  }\n else {\n    supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n  }\n  ApplicationProtocolConfig apn=new ApplicationProtocolConfig(ApplicationProtocolConfig.Protocol.ALPN,ApplicationProtocolConfig.SelectorFailureBehavior.NO_ADVERTISE,ApplicationProtocolConfig.SelectedListenerFailureBehavior.ACCEPT,supportedProtocol);\n  final SslContext sslContext;\n  try {\n    sslContext=builder.applicationProtocolConfig(apn).build();\n  }\n catch (  SSLException e) {\n    throw new RuntimeException(\"Error configuring SslContext with ALPN!\",e);\n  }\n  sslContextFactory.enableSessionTickets(sslContext);\n  sslContextFactory.configureOpenSslStatsMetrics(sslContext,Integer.toString(port));\n  return sslContext;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1612,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static SslContext configureSSL(SslContextFactory sslContextFactory,int port){\n  SslContextBuilder builder=sslContextFactory.createBuilderForServer();\n  String[] supportedProtocol;\n  if (HTTP2_DISABLED.get()) {\n    supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_1_1};\n  }\n else {\n    supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n  }\n  ApplicationProtocolConfig apn=new ApplicationProtocolConfig(ApplicationProtocolConfig.Protocol.ALPN,ApplicationProtocolConfig.SelectorFailureBehavior.NO_ADVERTISE,ApplicationProtocolConfig.SelectedListenerFailureBehavior.ACCEPT,supportedProtocol);\n  final SslContext sslContext;\n  try {\n    sslContext=builder.applicationProtocolConfig(apn).build();\n  }\n catch (  SSLException e) {\n    throw new RuntimeException(\"Error configuring SslContext with ALPN!\",e);\n  }\n  sslContextFactory.enableSessionTickets(sslContext);\n  sslContextFactory.configureOpenSslStatsMetrics(sslContext,Integer.toString(port));\n  return sslContext;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "supportedProtocol=new String[]{ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 8,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 100,
    "startLineNumber" : 42,
    "startColumnNumber" : 32,
    "endLineNumber" : 43,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}