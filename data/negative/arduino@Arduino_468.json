{
  "id" : 468,
  "expression" : "pids",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/Platform.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pids",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 150,
      "startColumnNumber" : 50,
      "endLineNumber" : 150,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 150,
        "startColumnNumber" : 50,
        "endLineNumber" : 150,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pids.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 150,
        "startColumnNumber" : 30,
        "endLineNumber" : 150,
        "endColumnNumber" : 61
      },
      "nodeContext" : "vids.get(i) + \"_\" + pids.get(i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 150,
        "startColumnNumber" : 21,
        "endLineNumber" : 150,
        "endColumnNumber" : 61
      },
      "nodeContext" : "vidPid=vids.get(i) + \"_\" + pids.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 150,
        "startColumnNumber" : 14,
        "endLineNumber" : 150,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String vidPid=vids.get(i) + \"_\" + pids.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 149,
        "startColumnNumber" : 50,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String vidPid=vids.get(i) + \"_\" + pids.get(i);\n  if (vidPid.toUpperCase().equals(readVIDPID)) {\n    Map<String,Object> boardData=new HashMap<String,Object>();\n    boardData.put(\"board\",board);\n    boardData.put(\"vid\",vids.get(i));\n    boardData.put(\"pid\",pids.get(i));\n    return boardData;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < vids.size(); i++) {\n  String vidPid=vids.get(i) + \"_\" + pids.get(i);\n  if (vidPid.toUpperCase().equals(readVIDPID)) {\n    Map<String,Object> boardData=new HashMap<String,Object>();\n    boardData.put(\"board\",board);\n    boardData.put(\"vid\",vids.get(i));\n    boardData.put(\"pid\",pids.get(i));\n    return boardData;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 147,
        "startColumnNumber" : 31,
        "endLineNumber" : 159,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n  for (int i=0; i < vids.size(); i++) {\n    String vidPid=vids.get(i) + \"_\" + pids.get(i);\n    if (vidPid.toUpperCase().equals(readVIDPID)) {\n      Map<String,Object> boardData=new HashMap<String,Object>();\n      boardData.put(\"board\",board);\n      boardData.put(\"vid\",vids.get(i));\n      boardData.put(\"pid\",pids.get(i));\n      return boardData;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 147,
        "startColumnNumber" : 10,
        "endLineNumber" : 159,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!vids.isEmpty()) {\n  List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n  for (int i=0; i < vids.size(); i++) {\n    String vidPid=vids.get(i) + \"_\" + pids.get(i);\n    if (vidPid.toUpperCase().equals(readVIDPID)) {\n      Map<String,Object> boardData=new HashMap<String,Object>();\n      boardData.put(\"board\",board);\n      boardData.put(\"vid\",vids.get(i));\n      boardData.put(\"pid\",pids.get(i));\n      return boardData;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 145,
        "startColumnNumber" : 70,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n  if (!vids.isEmpty()) {\n    List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n    for (int i=0; i < vids.size(); i++) {\n      String vidPid=vids.get(i) + \"_\" + pids.get(i);\n      if (vidPid.toUpperCase().equals(readVIDPID)) {\n        Map<String,Object> boardData=new HashMap<String,Object>();\n        boardData.put(\"board\",board);\n        boardData.put(\"vid\",vids.get(i));\n        boardData.put(\"pid\",pids.get(i));\n        return boardData;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (TargetBoard board : targetPlatform.getBoards().values()) {\n  List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n  if (!vids.isEmpty()) {\n    List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n    for (int i=0; i < vids.size(); i++) {\n      String vidPid=vids.get(i) + \"_\" + pids.get(i);\n      if (vidPid.toUpperCase().equals(readVIDPID)) {\n        Map<String,Object> boardData=new HashMap<String,Object>();\n        boardData.put(\"board\",board);\n        boardData.put(\"vid\",vids.get(i));\n        boardData.put(\"pid\",pids.get(i));\n        return boardData;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 144,
        "startColumnNumber" : 82,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (  TargetBoard board : targetPlatform.getBoards().values()) {\n    List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n    if (!vids.isEmpty()) {\n      List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n      for (int i=0; i < vids.size(); i++) {\n        String vidPid=vids.get(i) + \"_\" + pids.get(i);\n        if (vidPid.toUpperCase().equals(readVIDPID)) {\n          Map<String,Object> boardData=new HashMap<String,Object>();\n          boardData.put(\"board\",board);\n          boardData.put(\"vid\",vids.get(i));\n          boardData.put(\"pid\",pids.get(i));\n          return boardData;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 144,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n  for (  TargetBoard board : targetPlatform.getBoards().values()) {\n    List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n    if (!vids.isEmpty()) {\n      List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n      for (int i=0; i < vids.size(); i++) {\n        String vidPid=vids.get(i) + \"_\" + pids.get(i);\n        if (vidPid.toUpperCase().equals(readVIDPID)) {\n          Map<String,Object> boardData=new HashMap<String,Object>();\n          boardData.put(\"board\",board);\n          boardData.put(\"vid\",vids.get(i));\n          boardData.put(\"pid\",pids.get(i));\n          return boardData;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 155,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 143,
        "startColumnNumber" : 58,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n    for (    TargetBoard board : targetPlatform.getBoards().values()) {\n      List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n      if (!vids.isEmpty()) {\n        List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n        for (int i=0; i < vids.size(); i++) {\n          String vidPid=vids.get(i) + \"_\" + pids.get(i);\n          if (vidPid.toUpperCase().equals(readVIDPID)) {\n            Map<String,Object> boardData=new HashMap<String,Object>();\n            boardData.put(\"board\",board);\n            boardData.put(\"vid\",vids.get(i));\n            boardData.put(\"pid\",pids.get(i));\n            return boardData;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (TargetPackage targetPackage : packages.values()) {\n  for (  TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n    for (    TargetBoard board : targetPlatform.getBoards().values()) {\n      List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n      if (!vids.isEmpty()) {\n        List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n        for (int i=0; i < vids.size(); i++) {\n          String vidPid=vids.get(i) + \"_\" + pids.get(i);\n          if (vidPid.toUpperCase().equals(readVIDPID)) {\n            Map<String,Object> boardData=new HashMap<String,Object>();\n            boardData.put(\"board\",board);\n            boardData.put(\"vid\",vids.get(i));\n            boardData.put(\"pid\",pids.get(i));\n            return boardData;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 164,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 142,
        "startColumnNumber" : 121,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  TargetPackage targetPackage : packages.values()) {\n    for (    TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n      for (      TargetBoard board : targetPlatform.getBoards().values()) {\n        List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n        if (!vids.isEmpty()) {\n          List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n          for (int i=0; i < vids.size(); i++) {\n            String vidPid=vids.get(i) + \"_\" + pids.get(i);\n            if (vidPid.toUpperCase().equals(readVIDPID)) {\n              Map<String,Object> boardData=new HashMap<String,Object>();\n              boardData.put(\"board\",board);\n              boardData.put(\"vid\",vids.get(i));\n              boardData.put(\"pid\",pids.get(i));\n              return boardData;\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 142,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected Map<String,Object> resolveDeviceByVendorIdProductId(Map<String,TargetPackage> packages,String readVIDPID){\n  for (  TargetPackage targetPackage : packages.values()) {\n    for (    TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n      for (      TargetBoard board : targetPlatform.getBoards().values()) {\n        List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n        if (!vids.isEmpty()) {\n          List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n          for (int i=0; i < vids.size(); i++) {\n            String vidPid=vids.get(i) + \"_\" + pids.get(i);\n            if (vidPid.toUpperCase().equals(readVIDPID)) {\n              Map<String,Object> boardData=new HashMap<String,Object>();\n              boardData.put(\"board\",board);\n              boardData.put(\"vid\",vids.get(i));\n              boardData.put(\"pid\",pids.get(i));\n              return boardData;\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 150,
        "startColumnNumber" : 14,
        "endLineNumber" : 150,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String vidPid=vids.get(i) + \"_\" + pids.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "pids",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 155,
      "startColumnNumber" : 37,
      "endLineNumber" : 155,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 155,
        "startColumnNumber" : 37,
        "endLineNumber" : 155,
        "endColumnNumber" : 48
      },
      "nodeContext" : "pids.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 49
      },
      "nodeContext" : "boardData.put(\"pid\",pids.get(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 50
      },
      "nodeContext" : "boardData.put(\"pid\",pids.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 151,
        "startColumnNumber" : 59,
        "endLineNumber" : 157,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  Map<String,Object> boardData=new HashMap<String,Object>();\n  boardData.put(\"board\",board);\n  boardData.put(\"vid\",vids.get(i));\n  boardData.put(\"pid\",pids.get(i));\n  return boardData;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 151,
        "startColumnNumber" : 14,
        "endLineNumber" : 157,
        "endColumnNumber" : 15
      },
      "nodeContext" : "if (vidPid.toUpperCase().equals(readVIDPID)) {\n  Map<String,Object> boardData=new HashMap<String,Object>();\n  boardData.put(\"board\",board);\n  boardData.put(\"vid\",vids.get(i));\n  boardData.put(\"pid\",pids.get(i));\n  return boardData;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 149,
        "startColumnNumber" : 50,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String vidPid=vids.get(i) + \"_\" + pids.get(i);\n  if (vidPid.toUpperCase().equals(readVIDPID)) {\n    Map<String,Object> boardData=new HashMap<String,Object>();\n    boardData.put(\"board\",board);\n    boardData.put(\"vid\",vids.get(i));\n    boardData.put(\"pid\",pids.get(i));\n    return boardData;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < vids.size(); i++) {\n  String vidPid=vids.get(i) + \"_\" + pids.get(i);\n  if (vidPid.toUpperCase().equals(readVIDPID)) {\n    Map<String,Object> boardData=new HashMap<String,Object>();\n    boardData.put(\"board\",board);\n    boardData.put(\"vid\",vids.get(i));\n    boardData.put(\"pid\",pids.get(i));\n    return boardData;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 147,
        "startColumnNumber" : 31,
        "endLineNumber" : 159,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n  for (int i=0; i < vids.size(); i++) {\n    String vidPid=vids.get(i) + \"_\" + pids.get(i);\n    if (vidPid.toUpperCase().equals(readVIDPID)) {\n      Map<String,Object> boardData=new HashMap<String,Object>();\n      boardData.put(\"board\",board);\n      boardData.put(\"vid\",vids.get(i));\n      boardData.put(\"pid\",pids.get(i));\n      return boardData;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 147,
        "startColumnNumber" : 10,
        "endLineNumber" : 159,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!vids.isEmpty()) {\n  List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n  for (int i=0; i < vids.size(); i++) {\n    String vidPid=vids.get(i) + \"_\" + pids.get(i);\n    if (vidPid.toUpperCase().equals(readVIDPID)) {\n      Map<String,Object> boardData=new HashMap<String,Object>();\n      boardData.put(\"board\",board);\n      boardData.put(\"vid\",vids.get(i));\n      boardData.put(\"pid\",pids.get(i));\n      return boardData;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 145,
        "startColumnNumber" : 70,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n  if (!vids.isEmpty()) {\n    List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n    for (int i=0; i < vids.size(); i++) {\n      String vidPid=vids.get(i) + \"_\" + pids.get(i);\n      if (vidPid.toUpperCase().equals(readVIDPID)) {\n        Map<String,Object> boardData=new HashMap<String,Object>();\n        boardData.put(\"board\",board);\n        boardData.put(\"vid\",vids.get(i));\n        boardData.put(\"pid\",pids.get(i));\n        return boardData;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (TargetBoard board : targetPlatform.getBoards().values()) {\n  List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n  if (!vids.isEmpty()) {\n    List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n    for (int i=0; i < vids.size(); i++) {\n      String vidPid=vids.get(i) + \"_\" + pids.get(i);\n      if (vidPid.toUpperCase().equals(readVIDPID)) {\n        Map<String,Object> boardData=new HashMap<String,Object>();\n        boardData.put(\"board\",board);\n        boardData.put(\"vid\",vids.get(i));\n        boardData.put(\"pid\",pids.get(i));\n        return boardData;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 144,
        "startColumnNumber" : 82,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (  TargetBoard board : targetPlatform.getBoards().values()) {\n    List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n    if (!vids.isEmpty()) {\n      List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n      for (int i=0; i < vids.size(); i++) {\n        String vidPid=vids.get(i) + \"_\" + pids.get(i);\n        if (vidPid.toUpperCase().equals(readVIDPID)) {\n          Map<String,Object> boardData=new HashMap<String,Object>();\n          boardData.put(\"board\",board);\n          boardData.put(\"vid\",vids.get(i));\n          boardData.put(\"pid\",pids.get(i));\n          return boardData;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 144,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n  for (  TargetBoard board : targetPlatform.getBoards().values()) {\n    List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n    if (!vids.isEmpty()) {\n      List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n      for (int i=0; i < vids.size(); i++) {\n        String vidPid=vids.get(i) + \"_\" + pids.get(i);\n        if (vidPid.toUpperCase().equals(readVIDPID)) {\n          Map<String,Object> boardData=new HashMap<String,Object>();\n          boardData.put(\"board\",board);\n          boardData.put(\"vid\",vids.get(i));\n          boardData.put(\"pid\",pids.get(i));\n          return boardData;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 155,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 143,
        "startColumnNumber" : 58,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n    for (    TargetBoard board : targetPlatform.getBoards().values()) {\n      List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n      if (!vids.isEmpty()) {\n        List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n        for (int i=0; i < vids.size(); i++) {\n          String vidPid=vids.get(i) + \"_\" + pids.get(i);\n          if (vidPid.toUpperCase().equals(readVIDPID)) {\n            Map<String,Object> boardData=new HashMap<String,Object>();\n            boardData.put(\"board\",board);\n            boardData.put(\"vid\",vids.get(i));\n            boardData.put(\"pid\",pids.get(i));\n            return boardData;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (TargetPackage targetPackage : packages.values()) {\n  for (  TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n    for (    TargetBoard board : targetPlatform.getBoards().values()) {\n      List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n      if (!vids.isEmpty()) {\n        List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n        for (int i=0; i < vids.size(); i++) {\n          String vidPid=vids.get(i) + \"_\" + pids.get(i);\n          if (vidPid.toUpperCase().equals(readVIDPID)) {\n            Map<String,Object> boardData=new HashMap<String,Object>();\n            boardData.put(\"board\",board);\n            boardData.put(\"vid\",vids.get(i));\n            boardData.put(\"pid\",pids.get(i));\n            return boardData;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 164,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 142,
        "startColumnNumber" : 121,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  TargetPackage targetPackage : packages.values()) {\n    for (    TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n      for (      TargetBoard board : targetPlatform.getBoards().values()) {\n        List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n        if (!vids.isEmpty()) {\n          List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n          for (int i=0; i < vids.size(); i++) {\n            String vidPid=vids.get(i) + \"_\" + pids.get(i);\n            if (vidPid.toUpperCase().equals(readVIDPID)) {\n              Map<String,Object> boardData=new HashMap<String,Object>();\n              boardData.put(\"board\",board);\n              boardData.put(\"vid\",vids.get(i));\n              boardData.put(\"pid\",pids.get(i));\n              return boardData;\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 142,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected Map<String,Object> resolveDeviceByVendorIdProductId(Map<String,TargetPackage> packages,String readVIDPID){\n  for (  TargetPackage targetPackage : packages.values()) {\n    for (    TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {\n      for (      TargetBoard board : targetPlatform.getBoards().values()) {\n        List<String> vids=new LinkedList<String>(board.getPreferences().subTree(\"vid\",1).values());\n        if (!vids.isEmpty()) {\n          List<String> pids=new LinkedList<String>(board.getPreferences().subTree(\"pid\",1).values());\n          for (int i=0; i < vids.size(); i++) {\n            String vidPid=vids.get(i) + \"_\" + pids.get(i);\n            if (vidPid.toUpperCase().equals(readVIDPID)) {\n              Map<String,Object> boardData=new HashMap<String,Object>();\n              boardData.put(\"board\",board);\n              boardData.put(\"vid\",vids.get(i));\n              boardData.put(\"pid\",pids.get(i));\n              return boardData;\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 50
      },
      "nodeContext" : "boardData.put(\"pid\",pids.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 150,
    "startColumnNumber" : 50,
    "endLineNumber" : 150,
    "endColumnNumber" : 54
  }, {
    "charLength" : 4,
    "startLineNumber" : 155,
    "startColumnNumber" : 37,
    "endLineNumber" : 155,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}