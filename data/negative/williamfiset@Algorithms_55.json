{
  "id" : 55,
  "expression" : "N + 1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/NChooseRModPrime.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "N + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 18,
      "startColumnNumber" : 32,
      "endLineNumber" : 18,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 18,
        "startColumnNumber" : 23,
        "endLineNumber" : 18,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new long[N + 1]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 18,
        "startColumnNumber" : 11,
        "endLineNumber" : 18,
        "endColumnNumber" : 38
      },
      "nodeContext" : "factorial=new long[N + 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 39
      },
      "nodeContext" : "long[] factorial=new long[N + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 15,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (R == 0)   return 1;\n  long[] factorial=new long[N + 1];\n  factorial[0]=1;\n  for (int i=1; i <= N; i++) {\n    factorial[i]=factorial[i - 1] * i % P;\n  }\n  return (factorial[N] * ModularInverse.modInv(factorial[R],P) % P * ModularInverse.modInv(factorial[N - R],P) % P) % P;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 7,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculate the value of C(N, R) % P using Fermat's Little Theorem.\n * @param N\n * @param R\n * @param P\n * @return The value of N choose R Modulus P\n */\npublic static long compute(int N,int R,int P){\n  if (R == 0)   return 1;\n  long[] factorial=new long[N + 1];\n  factorial[0]=1;\n  for (int i=1; i <= N; i++) {\n    factorial[i]=factorial[i - 1] * i % P;\n  }\n  return (factorial[N] * ModularInverse.modInv(factorial[R],P) % P * ModularInverse.modInv(factorial[N - R],P) % P) % P;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 39
      },
      "nodeContext" : "long[] factorial=new long[N + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 18,
    "startColumnNumber" : 32,
    "endLineNumber" : 18,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}