{
  "id" : 49,
  "expression" : "unicode.length()",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/UnicodeUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unicode.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 27,
      "startColumnNumber" : 18,
      "endLineNumber" : 27,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 27,
        "startColumnNumber" : 12,
        "endLineNumber" : 27,
        "endColumnNumber" : 34
      },
      "nodeContext" : "len=unicode.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 35
      },
      "nodeContext" : "final int len=unicode.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 22,
        "startColumnNumber" : 47,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (StrUtil.isBlank(unicode)) {\n    return unicode;\n  }\n  final int len=unicode.length();\n  StrBuilder sb=StrBuilder.create(len);\n  int i;\n  int pos=0;\n  while ((i=StrUtil.indexOfIgnoreCase(unicode,\"\\\\u\",pos)) != -1) {\n    sb.append(unicode,pos,i);\n    pos=i;\n    if (i + 5 < len) {\n      char c;\n      try {\n        c=(char)Integer.parseInt(unicode.substring(i + 2,i + 6),16);\n        sb.append(c);\n        pos=i + 6;\n      }\n catch (      NumberFormatException e) {\n        sb.append(unicode,pos,i + 2);\n        pos=i + 2;\n      }\n    }\n else {\n      break;\n    }\n  }\n  if (pos < len) {\n    sb.append(unicode,pos,len);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 15,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Unicode字符串转为普通字符串<br> Unicode字符串的表现方式为：\\\\uXXXX\n * @param unicode Unicode字符串\n * @return 普通字符串\n */\npublic static String toString(String unicode){\n  if (StrUtil.isBlank(unicode)) {\n    return unicode;\n  }\n  final int len=unicode.length();\n  StrBuilder sb=StrBuilder.create(len);\n  int i;\n  int pos=0;\n  while ((i=StrUtil.indexOfIgnoreCase(unicode,\"\\\\u\",pos)) != -1) {\n    sb.append(unicode,pos,i);\n    pos=i;\n    if (i + 5 < len) {\n      char c;\n      try {\n        c=(char)Integer.parseInt(unicode.substring(i + 2,i + 6),16);\n        sb.append(c);\n        pos=i + 6;\n      }\n catch (      NumberFormatException e) {\n        sb.append(unicode,pos,i + 2);\n        pos=i + 2;\n      }\n    }\n else {\n      break;\n    }\n  }\n  if (pos < len) {\n    sb.append(unicode,pos,len);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 35
      },
      "nodeContext" : "final int len=unicode.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 27,
    "startColumnNumber" : 18,
    "endLineNumber" : 27,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}