{
  "id" : 223,
  "expression" : "fromMap",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/collect/Multimaps.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fromMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 1322,
      "startColumnNumber" : 44,
      "endLineNumber" : 1322,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 1322,
        "startColumnNumber" : 11,
        "endLineNumber" : 1322,
        "endColumnNumber" : 65
      },
      "nodeContext" : "new TransformedEntriesMultimap<>(fromMap,transformer)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 1322,
        "startColumnNumber" : 4,
        "endLineNumber" : 1322,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return new TransformedEntriesMultimap<>(fromMap,transformer);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 1321,
        "startColumnNumber" : 92,
        "endLineNumber" : 1323,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new TransformedEntriesMultimap<>(fromMap,transformer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3151,
        "startLineNumber" : 1267,
        "startColumnNumber" : 2,
        "endLineNumber" : 1323,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a view of a multimap whose values are derived from the original multimap's entries. In contrast to  {@link #transformValues}, this method's entry-transformation logic may depend on the key as well as the value. <p>All other properties of the transformed multimap, such as iteration order, are left intact. For example, the code: <pre> {@code SetMultimap<String, Integer> multimap = ImmutableSetMultimap.of(\"a\", 1, \"a\", 4, \"b\", -6); EntryTransformer<String, Integer, String> transformer = new EntryTransformer<String, Integer, String>()  public String transformEntry(String key, Integer value)  return (value >= 0) ? key : \"no\" + key;}}; Multimap<String, String> transformed = Multimaps.transformEntries(multimap, transformer); System.out.println(transformed); }</pre> ... prints  {@code} {a=[a, a], b=[nob]}}.<p>Changes in the underlying multimap are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying multimap. <p>It's acceptable for the underlying multimap to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed multimap might contain null values if the transformer sometimes gives a null result. <p>The returned multimap is not thread-safe or serializable, even if the underlying multimap is. The  {@code equals} and {@code hashCode} methods of the returned multimap are meaningless,since there is not a definition of  {@code equals} or {@code hashCode} for general collections,and  {@code get()} will return a general {@code Collection} as opposed to a {@code List} or a{@code Set}. <p>The transformer is applied lazily, invoked when needed. This is necessary for the returned multimap to be a view, but it means that the transformer will be applied many times for bulk operations like  {@link Multimap#containsValue} and {@link Object#toString}. For this to perform well,  {@code transformer} should be fast. To avoid lazy evaluation when the returned multimapdoesn't need to be a view, copy the returned multimap into a new multimap of your choosing. <p><b>Warning:</b> This method assumes that for any instance  {@code k} of {@code EntryTransformer} key type {@code K},  {@code k.equals(k2)} implies that {@code k2} is also oftype  {@code K}. Using an  {@code EntryTransformer} key type for which this may not hold, such as{@code ArrayList}, may risk a  {@code ClassCastException} when calling methods on thetransformed multimap.\n * @since 7.0\n */\npublic static <K extends @Nullable Object,V1 extends @Nullable Object,V2 extends @Nullable Object>Multimap<K,V2> transformEntries(Multimap<K,V1> fromMap,EntryTransformer<? super K,? super V1,V2> transformer){\n  return new TransformedEntriesMultimap<>(fromMap,transformer);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 1322,
        "startColumnNumber" : 4,
        "endLineNumber" : 1322,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return new TransformedEntriesMultimap<>(fromMap,transformer);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.common.collect.Multimap<K,V1>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 1322,
    "startColumnNumber" : 44,
    "endLineNumber" : 1322,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}