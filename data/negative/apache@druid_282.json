{
  "id" : 282,
  "expression" : "names",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/DefaultQueryMetrics.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "names",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 57,
      "startColumnNumber" : 8,
      "endLineNumber" : 57,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 20
      },
      "nodeContext" : "names.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "names.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (names.size() == 1) {\n  return Iterables.getOnlyElement(names);\n}\n else {\n  return names.stream().sorted().collect(Collectors.toList()).toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String getTableNamesAsString(DataSource dataSource){\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "names.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  }, {
    "nodeContext" : "names",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 58,
      "startColumnNumber" : 38,
      "endLineNumber" : 58,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 58,
        "startColumnNumber" : 13,
        "endLineNumber" : 58,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Iterables.getOnlyElement(names)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return Iterables.getOnlyElement(names);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 57,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Iterables.getOnlyElement(names);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (names.size() == 1) {\n  return Iterables.getOnlyElement(names);\n}\n else {\n  return names.stream().sorted().collect(Collectors.toList()).toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String getTableNamesAsString(DataSource dataSource){\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return Iterables.getOnlyElement(names);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  }, {
    "nodeContext" : "names",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 60,
      "startColumnNumber" : 13,
      "endLineNumber" : 60,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 27
      },
      "nodeContext" : "names.stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 36
      },
      "nodeContext" : "names.stream().sorted()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "names.stream().sorted().collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "names.stream().sorted().collect(Collectors.toList()).toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 77
      },
      "nodeContext" : "return names.stream().sorted().collect(Collectors.toList()).toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return names.stream().sorted().collect(Collectors.toList()).toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (names.size() == 1) {\n  return Iterables.getOnlyElement(names);\n}\n else {\n  return names.stream().sorted().collect(Collectors.toList()).toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String getTableNamesAsString(DataSource dataSource){\n  final Set<String> names=dataSource.getTableNames();\n  if (names.size() == 1) {\n    return Iterables.getOnlyElement(names);\n  }\n else {\n    return names.stream().sorted().collect(Collectors.toList()).toString();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 77
      },
      "nodeContext" : "return names.stream().sorted().collect(Collectors.toList()).toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 57,
    "startColumnNumber" : 8,
    "endLineNumber" : 57,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 58,
    "startColumnNumber" : 38,
    "endLineNumber" : 58,
    "endColumnNumber" : 43
  }, {
    "charLength" : 5,
    "startLineNumber" : 60,
    "startColumnNumber" : 13,
    "endLineNumber" : 60,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}