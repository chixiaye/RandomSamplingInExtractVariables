{
  "id" : 29,
  "expression" : "Type.INTEGER",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "30fd508bf68c8bb9cf32839b71f79a9aa4bd069a",
  "filePath" : "src/main/java/com/google/devtools/build/lib/packages/StarlarkDefinedAspect.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Type.INTEGER",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 196,
      "startColumnNumber" : 20,
      "endLineNumber" : 196,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 32
      },
      "nodeContext" : "attrType == Type.INTEGER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (attrType == Type.INTEGER) {\n  castedValue=StarlarkInt.parse(attrValue,0);\n  attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n}\n else if (attrType == Type.BOOLEAN) {\n  castedValue=Boolean.parseBoolean(attrValue);\n  attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n}\n else {\n  attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 191,
        "startColumnNumber" : 74,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static Attribute addAttrValue(Attribute attr,String attrValue){\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 32
      },
      "nodeContext" : "attrType == Type.INTEGER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.google.devtools.build.lib.packages.Type<net.starlark.java.eval.StarlarkInt>"
  }, {
    "nodeContext" : "Type.INTEGER",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 198,
      "startColumnNumber" : 38,
      "endLineNumber" : 198,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 198,
        "startColumnNumber" : 20,
        "endLineNumber" : 198,
        "endColumnNumber" : 51
      },
      "nodeContext" : "attr.cloneBuilder(Type.INTEGER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 198,
        "startColumnNumber" : 20,
        "endLineNumber" : 198,
        "endColumnNumber" : 84
      },
      "nodeContext" : "attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 198,
        "startColumnNumber" : 6,
        "endLineNumber" : 198,
        "endColumnNumber" : 84
      },
      "nodeContext" : "attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 198,
        "startColumnNumber" : 6,
        "endLineNumber" : 198,
        "endColumnNumber" : 85
      },
      "nodeContext" : "attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 196,
        "startColumnNumber" : 34,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  castedValue=StarlarkInt.parse(attrValue,0);\n  attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (attrType == Type.INTEGER) {\n  castedValue=StarlarkInt.parse(attrValue,0);\n  attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n}\n else if (attrType == Type.BOOLEAN) {\n  castedValue=Boolean.parseBoolean(attrValue);\n  attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n}\n else {\n  attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 191,
        "startColumnNumber" : 74,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static Attribute addAttrValue(Attribute attr,String attrValue){\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 198,
        "startColumnNumber" : 6,
        "endLineNumber" : 198,
        "endColumnNumber" : 85
      },
      "nodeContext" : "attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.google.devtools.build.lib.packages.Type<net.starlark.java.eval.StarlarkInt>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 196,
    "startColumnNumber" : 20,
    "endLineNumber" : 196,
    "endColumnNumber" : 32
  }, {
    "charLength" : 12,
    "startLineNumber" : 198,
    "startColumnNumber" : 38,
    "endLineNumber" : 198,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}