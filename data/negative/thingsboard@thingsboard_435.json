{
  "id" : 435,
  "expression" : "log",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/common/transport/coap/src/main/java/org/thingsboard/server/transport/coap/client/NoSecObserveClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 61,
      "startColumnNumber" : 24,
      "endLineNumber" : 61,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 40
      },
      "nodeContext" : "log.info(\"CoAP Response received! \" + \"responseText: {}, \" + \"code: {}, \"+ \"observe seq number: {}\",responseText,code,observe)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 41
      },
      "nodeContext" : "log.info(\"CoAP Response received! \" + \"responseText: {}, \" + \"code: {}, \"+ \"observe seq number: {}\",responseText,code,observe);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 57,
        "startColumnNumber" : 62,
        "endLineNumber" : 69,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String responseText=response.getResponseText();\n  CoAP.ResponseCode code=response.getCode();\n  Integer observe=response.getOptions().getObserve();\n  log.info(\"CoAP Response received! \" + \"responseText: {}, \" + \"code: {}, \"+ \"observe seq number: {}\",responseText,code,observe);\n  latch.countDown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 56,
        "startColumnNumber" : 20,
        "endLineNumber" : 69,
        "endColumnNumber" : 21
      },
      "nodeContext" : "@Override public void onLoad(CoapResponse response){\n  String responseText=response.getResponseText();\n  CoAP.ResponseCode code=response.getCode();\n  Integer observe=response.getOptions().getObserve();\n  log.info(\"CoAP Response received! \" + \"responseText: {}, \" + \"code: {}, \"+ \"observe seq number: {}\",responseText,code,observe);\n  latch.countDown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 40
      },
      "nodeContext" : "log.info(\"CoAP Response received! \" + \"responseText: {}, \" + \"code: {}, \"+ \"observe seq number: {}\",responseText,code,observe)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 61,
    "startColumnNumber" : 24,
    "endLineNumber" : 61,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}