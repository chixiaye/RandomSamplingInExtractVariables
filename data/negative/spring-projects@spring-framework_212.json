{
  "id" : 212,
  "expression" : "holder.getNrOfElements() == 3",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-beans/src/test/java/org/springframework/beans/support/PagedListHolderTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "holder.getNrOfElements() == 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 58,
      "startColumnNumber" : 43,
      "endLineNumber" : 58,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5984,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assume.group(TestGroup.LONG_RUNNING);\n  TestBean tb1=new TestBean();\n  tb1.setName(\"eva\");\n  tb1.setAge(25);\n  TestBean tb2=new TestBean();\n  tb2.setName(\"juergen\");\n  tb2.setAge(99);\n  TestBean tb3=new TestBean();\n  tb3.setName(\"Rod\");\n  tb3.setAge(32);\n  List tbs=new ArrayList();\n  tbs.add(tb1);\n  tbs.add(tb2);\n  tbs.add(tb3);\n  PagedListHolder holder=new PagedListHolder(tbs);\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == PagedListHolder.DEFAULT_PAGE_SIZE);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct first element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(2) == tb3);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  holder.setPage(1);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  holder.setPageSize(3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 3);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPage(1);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPageSize(2);\n  holder.setPage(1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(false);\n  holder.resort();\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  holder.setPage(1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"age\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(true);\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 919,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6025,
        "startLineNumber" : 38,
        "startColumnNumber" : 1,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testPagedListHolder(){\n  Assume.group(TestGroup.LONG_RUNNING);\n  TestBean tb1=new TestBean();\n  tb1.setName(\"eva\");\n  tb1.setAge(25);\n  TestBean tb2=new TestBean();\n  tb2.setName(\"juergen\");\n  tb2.setAge(99);\n  TestBean tb3=new TestBean();\n  tb3.setName(\"Rod\");\n  tb3.setAge(32);\n  List tbs=new ArrayList();\n  tbs.add(tb1);\n  tbs.add(tb2);\n  tbs.add(tb3);\n  PagedListHolder holder=new PagedListHolder(tbs);\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == PagedListHolder.DEFAULT_PAGE_SIZE);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct first element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(2) == tb3);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  holder.setPage(1);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  holder.setPageSize(3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 3);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPage(1);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPageSize(2);\n  holder.setPage(1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(false);\n  holder.resort();\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  holder.setPage(1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"age\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(true);\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 925,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  }, {
    "nodeContext" : "holder.getNrOfElements() == 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 117,
      "startColumnNumber" : 43,
      "endLineNumber" : 117,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5984,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assume.group(TestGroup.LONG_RUNNING);\n  TestBean tb1=new TestBean();\n  tb1.setName(\"eva\");\n  tb1.setAge(25);\n  TestBean tb2=new TestBean();\n  tb2.setName(\"juergen\");\n  tb2.setAge(99);\n  TestBean tb3=new TestBean();\n  tb3.setName(\"Rod\");\n  tb3.setAge(32);\n  List tbs=new ArrayList();\n  tbs.add(tb1);\n  tbs.add(tb2);\n  tbs.add(tb3);\n  PagedListHolder holder=new PagedListHolder(tbs);\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == PagedListHolder.DEFAULT_PAGE_SIZE);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct first element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(2) == tb3);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  holder.setPage(1);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  holder.setPageSize(3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 3);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPage(1);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPageSize(2);\n  holder.setPage(1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(false);\n  holder.resort();\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  holder.setPage(1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"age\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(true);\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 919,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6025,
        "startLineNumber" : 38,
        "startColumnNumber" : 1,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testPagedListHolder(){\n  Assume.group(TestGroup.LONG_RUNNING);\n  TestBean tb1=new TestBean();\n  tb1.setName(\"eva\");\n  tb1.setAge(25);\n  TestBean tb2=new TestBean();\n  tb2.setName(\"juergen\");\n  tb2.setAge(99);\n  TestBean tb3=new TestBean();\n  tb3.setName(\"Rod\");\n  tb3.setAge(32);\n  List tbs=new ArrayList();\n  tbs.add(tb1);\n  tbs.add(tb2);\n  tbs.add(tb3);\n  PagedListHolder holder=new PagedListHolder(tbs);\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == PagedListHolder.DEFAULT_PAGE_SIZE);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct first element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(2) == tb3);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb2);\n  holder.setPage(1);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  holder.setPageSize(3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 1);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 3);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPage(1);\n  holder.setPageSize(2);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 1);\n  assertFalse(\"First page\",holder.isFirstPage());\n  assertTrue(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 2);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 2);\n  holder.setPageSize(2);\n  holder.setPage(1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(false);\n  holder.resort();\n  assertTrue(\"Correct source\",holder.getSource() == tbs);\n  assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n  assertTrue(\"Correct number of pages\",holder.getPageCount() == 2);\n  assertTrue(\"Correct page size\",holder.getPageSize() == 2);\n  assertTrue(\"Correct page number\",holder.getPage() == 0);\n  assertTrue(\"First page\",holder.isFirstPage());\n  assertFalse(\"Last page\",holder.isLastPage());\n  assertTrue(\"Correct first element\",holder.getFirstElementOnPage() == 0);\n  assertTrue(\"Correct last element\",holder.getLastElementOnPage() == 1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"name\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb3);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb1);\n  holder.setPage(1);\n  assertTrue(\"Correct page list size\",holder.getPageList().size() == 1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb2);\n  ((MutableSortDefinition)holder.getSort()).setProperty(\"age\");\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  ((MutableSortDefinition)holder.getSort()).setIgnoreCase(true);\n  holder.resort();\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(0) == tb1);\n  assertTrue(\"Correct page list contents\",holder.getPageList().get(1) == tb3);\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.nextPage();\n  assertEquals(1,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n  holder.previousPage();\n  assertEquals(0,holder.getPage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 925,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(\"Correct number of elements\",holder.getNrOfElements() == 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 58,
    "startColumnNumber" : 43,
    "endLineNumber" : 58,
    "endColumnNumber" : 72
  }, {
    "charLength" : 29,
    "startLineNumber" : 117,
    "startColumnNumber" : 43,
    "endLineNumber" : 117,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}