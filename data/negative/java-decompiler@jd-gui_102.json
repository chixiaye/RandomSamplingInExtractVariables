{
  "id" : 102,
  "expression" : "DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\")",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/test/java/org/jd/gui/util/matcher/DescriptorMatcherTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 12,
      "startColumnNumber" : 26,
      "endLineNumber" : 12,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 12,
    "startColumnNumber" : 26,
    "endLineNumber" : 12,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}