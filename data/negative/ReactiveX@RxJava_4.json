{
  "id" : 4,
  "expression" : "Math.random() * 20",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableWindowWithSizeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.random() * 20",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 255,
      "startColumnNumber" : 40,
      "endLineNumber" : 255,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 255,
        "startColumnNumber" : 36,
        "endLineNumber" : 255,
        "endColumnNumber" : 58
      },
      "nodeContext" : "i < Math.random() * 20",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 255,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int i=0; i < Math.random() * 20; i++) {\n  s.onNext(i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 253,
        "startColumnNumber" : 42,
        "endLineNumber" : 265,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int i=0; i < Math.random() * 20; i++) {\n    s.onNext(i);\n  }\n  try {\n    Thread.sleep((long)(Math.random() * 200));\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 253,
        "startColumnNumber" : 16,
        "endLineNumber" : 265,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (!bs.isCancelled()) {\n  for (int i=0; i < Math.random() * 20; i++) {\n    s.onNext(i);\n  }\n  try {\n    Thread.sleep((long)(Math.random() * 200));\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 250,
        "startColumnNumber" : 65,
        "endLineNumber" : 267,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BooleanSubscription bs=new BooleanSubscription();\n  s.onSubscribe(bs);\n  while (!bs.isCancelled()) {\n    for (int i=0; i < Math.random() * 20; i++) {\n      s.onNext(i);\n    }\n    try {\n      Thread.sleep((long)(Math.random() * 200));\n    }\n catch (    Exception e) {\n    }\n  }\n  System.out.println(\"Hot done.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 267,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void subscribe(Subscriber<? super Integer> s){\n  BooleanSubscription bs=new BooleanSubscription();\n  s.onSubscribe(bs);\n  while (!bs.isCancelled()) {\n    for (int i=0; i < Math.random() * 20; i++) {\n      s.onNext(i);\n    }\n    try {\n      Thread.sleep((long)(Math.random() * 200));\n    }\n catch (    Exception e) {\n    }\n  }\n  System.out.println(\"Hot done.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 255,
        "startColumnNumber" : 36,
        "endLineNumber" : 255,
        "endColumnNumber" : 58
      },
      "nodeContext" : "i < Math.random() * 20",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 255,
    "startColumnNumber" : 40,
    "endLineNumber" : 255,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}