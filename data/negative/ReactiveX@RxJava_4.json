{
  "id" : 4,
  "expression" : "o == null",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/observable/ObservableWindowBoundarySelector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 203,
      "startColumnNumber" : 36,
      "endLineNumber" : 203,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 203,
        "startColumnNumber" : 28,
        "endLineNumber" : 203,
        "endColumnNumber" : 45
      },
      "nodeContext" : "empty=o == null",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 203,
        "startColumnNumber" : 20,
        "endLineNumber" : 203,
        "endColumnNumber" : 46
      },
      "nodeContext" : "boolean empty=o == null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3338,
        "startLineNumber" : 199,
        "startColumnNumber" : 25,
        "endLineNumber" : 282,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  boolean d=done;\n  Object o=q.poll();\n  boolean empty=o == null;\n  if (d && empty) {\n    disposeBoundary();\n    Throwable e=error;\n    if (e != null) {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n else {\n      for (      UnicastSubject<T> w : ws) {\n        w.onComplete();\n      }\n    }\n    ws.clear();\n    return;\n  }\n  if (empty) {\n    break;\n  }\n  if (o instanceof WindowOperation) {\n    @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n    UnicastSubject<T> w=wo.w;\n    if (w != null) {\n      if (ws.remove(wo.w)) {\n        wo.w.onComplete();\n        if (windows.decrementAndGet() == 0) {\n          disposeBoundary();\n          return;\n        }\n      }\n      continue;\n    }\n    if (cancelled) {\n      continue;\n    }\n    w=UnicastSubject.create(bufferSize);\n    ws.add(w);\n    a.onNext(w);\n    ObservableConsumable<V> p;\n    try {\n      p=close.apply(wo.open);\n    }\n catch (    Throwable e) {\n      cancelled=true;\n      a.onError(e);\n      continue;\n    }\n    if (p == null) {\n      cancelled=true;\n      a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n      continue;\n    }\n    OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n    if (resources.add(cl)) {\n      windows.getAndIncrement();\n      p.subscribe(cl);\n    }\n    continue;\n  }\n  for (  UnicastSubject<T> w : ws) {\n    w.onNext(NotificationLite.<T>getValue(o));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3347,
        "startLineNumber" : 199,
        "startColumnNumber" : 16,
        "endLineNumber" : 282,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (; ; ) {\n  boolean d=done;\n  Object o=q.poll();\n  boolean empty=o == null;\n  if (d && empty) {\n    disposeBoundary();\n    Throwable e=error;\n    if (e != null) {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n else {\n      for (      UnicastSubject<T> w : ws) {\n        w.onComplete();\n      }\n    }\n    ws.clear();\n    return;\n  }\n  if (empty) {\n    break;\n  }\n  if (o instanceof WindowOperation) {\n    @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n    UnicastSubject<T> w=wo.w;\n    if (w != null) {\n      if (ws.remove(wo.w)) {\n        wo.w.onComplete();\n        if (windows.decrementAndGet() == 0) {\n          disposeBoundary();\n          return;\n        }\n      }\n      continue;\n    }\n    if (cancelled) {\n      continue;\n    }\n    w=UnicastSubject.create(bufferSize);\n    ws.add(w);\n    a.onNext(w);\n    ObservableConsumable<V> p;\n    try {\n      p=close.apply(wo.open);\n    }\n catch (    Throwable e) {\n      cancelled=true;\n      a.onError(e);\n      continue;\n    }\n    if (p == null) {\n      cancelled=true;\n      a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n      continue;\n    }\n    OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n    if (resources.add(cl)) {\n      windows.getAndIncrement();\n      p.subscribe(cl);\n    }\n    continue;\n  }\n  for (  UnicastSubject<T> w : ws) {\n    w.onNext(NotificationLite.<T>getValue(o));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 280,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3542,
        "startLineNumber" : 197,
        "startColumnNumber" : 21,
        "endLineNumber" : 288,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (; ; ) {\n    boolean d=done;\n    Object o=q.poll();\n    boolean empty=o == null;\n    if (d && empty) {\n      disposeBoundary();\n      Throwable e=error;\n      if (e != null) {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n else {\n        for (        UnicastSubject<T> w : ws) {\n          w.onComplete();\n        }\n      }\n      ws.clear();\n      return;\n    }\n    if (empty) {\n      break;\n    }\n    if (o instanceof WindowOperation) {\n      @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n      UnicastSubject<T> w=wo.w;\n      if (w != null) {\n        if (ws.remove(wo.w)) {\n          wo.w.onComplete();\n          if (windows.decrementAndGet() == 0) {\n            disposeBoundary();\n            return;\n          }\n        }\n        continue;\n      }\n      if (cancelled) {\n        continue;\n      }\n      w=UnicastSubject.create(bufferSize);\n      ws.add(w);\n      a.onNext(w);\n      ObservableConsumable<V> p;\n      try {\n        p=close.apply(wo.open);\n      }\n catch (      Throwable e) {\n        cancelled=true;\n        a.onError(e);\n        continue;\n      }\n      if (p == null) {\n        cancelled=true;\n        a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n        continue;\n      }\n      OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n      if (resources.add(cl)) {\n        windows.getAndIncrement();\n        p.subscribe(cl);\n      }\n      continue;\n    }\n    for (    UnicastSubject<T> w : ws) {\n      w.onNext(NotificationLite.<T>getValue(o));\n    }\n  }\n  missed=leave(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3551,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 288,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    boolean d=done;\n    Object o=q.poll();\n    boolean empty=o == null;\n    if (d && empty) {\n      disposeBoundary();\n      Throwable e=error;\n      if (e != null) {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n else {\n        for (        UnicastSubject<T> w : ws) {\n          w.onComplete();\n        }\n      }\n      ws.clear();\n      return;\n    }\n    if (empty) {\n      break;\n    }\n    if (o instanceof WindowOperation) {\n      @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n      UnicastSubject<T> w=wo.w;\n      if (w != null) {\n        if (ws.remove(wo.w)) {\n          wo.w.onComplete();\n          if (windows.decrementAndGet() == 0) {\n            disposeBoundary();\n            return;\n          }\n        }\n        continue;\n      }\n      if (cancelled) {\n        continue;\n      }\n      w=UnicastSubject.create(bufferSize);\n      ws.add(w);\n      a.onNext(w);\n      ObservableConsumable<V> p;\n      try {\n        p=close.apply(wo.open);\n      }\n catch (      Throwable e) {\n        cancelled=true;\n        a.onError(e);\n        continue;\n      }\n      if (p == null) {\n        cancelled=true;\n        a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n        continue;\n      }\n      OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n      if (resources.add(cl)) {\n        windows.getAndIncrement();\n        p.subscribe(cl);\n      }\n      continue;\n    }\n    for (    UnicastSubject<T> w : ws) {\n      w.onNext(NotificationLite.<T>getValue(o));\n    }\n  }\n  missed=leave(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 295,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3784,
        "startLineNumber" : 191,
        "startColumnNumber" : 25,
        "endLineNumber" : 289,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Queue<Object> q=queue;\n  final Observer<? super Observable<T>> a=actual;\n  final List<UnicastSubject<T>> ws=this.ws;\n  int missed=1;\n  for (; ; ) {\n    for (; ; ) {\n      boolean d=done;\n      Object o=q.poll();\n      boolean empty=o == null;\n      if (d && empty) {\n        disposeBoundary();\n        Throwable e=error;\n        if (e != null) {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n else {\n          for (          UnicastSubject<T> w : ws) {\n            w.onComplete();\n          }\n        }\n        ws.clear();\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (o instanceof WindowOperation) {\n        @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n        UnicastSubject<T> w=wo.w;\n        if (w != null) {\n          if (ws.remove(wo.w)) {\n            wo.w.onComplete();\n            if (windows.decrementAndGet() == 0) {\n              disposeBoundary();\n              return;\n            }\n          }\n          continue;\n        }\n        if (cancelled) {\n          continue;\n        }\n        w=UnicastSubject.create(bufferSize);\n        ws.add(w);\n        a.onNext(w);\n        ObservableConsumable<V> p;\n        try {\n          p=close.apply(wo.open);\n        }\n catch (        Throwable e) {\n          cancelled=true;\n          a.onError(e);\n          continue;\n        }\n        if (p == null) {\n          cancelled=true;\n          a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n          continue;\n        }\n        OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n        if (resources.add(cl)) {\n          windows.getAndIncrement();\n          p.subscribe(cl);\n        }\n        continue;\n      }\n      for (      UnicastSubject<T> w : ws) {\n        w.onNext(NotificationLite.<T>getValue(o));\n      }\n    }\n    missed=leave(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 340,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3801,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void drainLoop(){\n  final Queue<Object> q=queue;\n  final Observer<? super Observable<T>> a=actual;\n  final List<UnicastSubject<T>> ws=this.ws;\n  int missed=1;\n  for (; ; ) {\n    for (; ; ) {\n      boolean d=done;\n      Object o=q.poll();\n      boolean empty=o == null;\n      if (d && empty) {\n        disposeBoundary();\n        Throwable e=error;\n        if (e != null) {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n else {\n          for (          UnicastSubject<T> w : ws) {\n            w.onComplete();\n          }\n        }\n        ws.clear();\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (o instanceof WindowOperation) {\n        @SuppressWarnings(\"unchecked\") WindowOperation<T,B> wo=(WindowOperation<T,B>)o;\n        UnicastSubject<T> w=wo.w;\n        if (w != null) {\n          if (ws.remove(wo.w)) {\n            wo.w.onComplete();\n            if (windows.decrementAndGet() == 0) {\n              disposeBoundary();\n              return;\n            }\n          }\n          continue;\n        }\n        if (cancelled) {\n          continue;\n        }\n        w=UnicastSubject.create(bufferSize);\n        ws.add(w);\n        a.onNext(w);\n        ObservableConsumable<V> p;\n        try {\n          p=close.apply(wo.open);\n        }\n catch (        Throwable e) {\n          cancelled=true;\n          a.onError(e);\n          continue;\n        }\n        if (p == null) {\n          cancelled=true;\n          a.onError(new NullPointerException(\"The NbpObservable supplied is null\"));\n          continue;\n        }\n        OperatorWindowBoundaryCloseSubscriber<T,V> cl=new OperatorWindowBoundaryCloseSubscriber<T,V>(this,w);\n        if (resources.add(cl)) {\n          windows.getAndIncrement();\n          p.subscribe(cl);\n        }\n        continue;\n      }\n      for (      UnicastSubject<T> w : ws) {\n        w.onNext(NotificationLite.<T>getValue(o));\n      }\n    }\n    missed=leave(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 343,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 203,
        "startColumnNumber" : 20,
        "endLineNumber" : 203,
        "endColumnNumber" : 46
      },
      "nodeContext" : "boolean empty=o == null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 203,
    "startColumnNumber" : 36,
    "endLineNumber" : 203,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}