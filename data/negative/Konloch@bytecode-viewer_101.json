{
  "id" : 101,
  "expression" : "BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/SettingsSerializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 69,
      "startLineNumber" : 262,
      "startColumnNumber" : 35,
      "endLineNumber" : 262,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 11,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 262,
        "startColumnNumber" : 20,
        "endLineNumber" : 262,
        "endColumnNumber" : 105
      },
      "nodeContext" : "String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 262,
        "endColumnNumber" : 113
      },
      "nodeContext" : "DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 262,
        "endColumnNumber" : 114
      },
      "nodeContext" : "DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 18843,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 317,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DiskWriter.replaceFile(settingsName,\"BCV: \" + VERSION,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rbr.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rsy.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.din.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dc4.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.das.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hes.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hdc.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dgs.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ner.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.den.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rgn.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.bto.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.nns.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.uto.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.udv.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rer.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fdi.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.asc.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeEnumSwitch.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarEnums.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeStringSwitch.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.arrayiter.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.collectioniter.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.innerClasses.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBoilerPlate.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeInnerClassSynthetics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeLambdas.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideBridgeMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.liftConstructorInit.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeDeadMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBadGenerics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarAsserts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarBoxing.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showVersion.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeFinally.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.tidyMonitors.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.lenient.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dumpClassPath.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.comments.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSort.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSortAggress.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuffer.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuilder.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.silent.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recover.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.eclipse.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.override.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showInferrable.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.aexagg.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceCondPropagate.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideUTF.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLongStrings.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.commentMonitor.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.allowCorrecting.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.labelledBlocks.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.j14ClassOBJ.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLangImports.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypeClash.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypehInts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTurningIFs.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forLoopAGGCapture.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExceptionPrune.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showDebugLineNumbers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyMemberReferences.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.mergeVariables.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainPointlessSwitches.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainRedunantCasts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showSyntheticMembers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitImports.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.excludeNestedTypes.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.appendBracketsToLabels.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.updateCheck.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.isMaximized),false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,Configuration.lastDirectory,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.python,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.rt,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.library,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.pingback),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJD().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getJD().getJava().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getJD().getJava().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fontSpinner.getValue()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.deleteForeignLibraries),false);\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   DiskWriter.writeNewLine(settingsName,\"0\",false);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   DiskWriter.writeNewLine(settingsName,\"1\",false);\n  DiskWriter.writeNewLine(settingsName,Configuration.python3,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.javac,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.java,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.compileOnSave.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.warnForEditing),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showFileInTabTitle.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forcePureAsciiAsText.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.synchronizedViewing.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showClassMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ren.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJADX().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.lafTheme.name(),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.rstaTheme.name(),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyNameInTabTitle.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.language.name(),false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2095,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18926,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 319,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  DiskWriter.replaceFile(settingsName,\"BCV: \" + VERSION,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rbr.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rsy.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.din.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dc4.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.das.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hes.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hdc.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dgs.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ner.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.den.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rgn.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.bto.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.nns.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.uto.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.udv.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rer.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fdi.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.asc.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeEnumSwitch.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarEnums.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeStringSwitch.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.arrayiter.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.collectioniter.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.innerClasses.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBoilerPlate.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeInnerClassSynthetics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeLambdas.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideBridgeMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.liftConstructorInit.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeDeadMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBadGenerics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarAsserts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarBoxing.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showVersion.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeFinally.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.tidyMonitors.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.lenient.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dumpClassPath.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.comments.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSort.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSortAggress.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuffer.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuilder.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.silent.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recover.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.eclipse.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.override.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showInferrable.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.aexagg.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceCondPropagate.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideUTF.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLongStrings.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.commentMonitor.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.allowCorrecting.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.labelledBlocks.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.j14ClassOBJ.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLangImports.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypeClash.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypehInts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTurningIFs.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forLoopAGGCapture.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExceptionPrune.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showDebugLineNumbers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyMemberReferences.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.mergeVariables.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainPointlessSwitches.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainRedunantCasts.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showSyntheticMembers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitImports.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.excludeNestedTypes.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.appendBracketsToLabels.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.updateCheck.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSelectedDecompiler().ordinal()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.isMaximized),false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n  DiskWriter.writeNewLine(settingsName,Configuration.lastDirectory,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.python,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.rt,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getProcyon().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getCFR().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getFern().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getKrakatau().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.library,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.pingback),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJD().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getJD().getJava().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getJD().getJava().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fontSpinner.getValue()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.deleteForeignLibraries),false);\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   DiskWriter.writeNewLine(settingsName,\"0\",false);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   DiskWriter.writeNewLine(settingsName,\"1\",false);\n  DiskWriter.writeNewLine(settingsName,Configuration.python3,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.javac,false);\n  DiskWriter.writeNewLine(settingsName,Configuration.java,false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.compileOnSave.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.warnForEditing),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showFileInTabTitle.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forcePureAsciiAsText.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.synchronizedViewing.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showClassMethods.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ren.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJADX().getEditable().isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.lafTheme.name(),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.rstaTheme.name(),false);\n  DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyNameInTabTitle.isSelected()),false);\n  DiskWriter.writeNewLine(settingsName,Configuration.language.name(),false);\n}\n catch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 2107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 18942,
        "startLineNumber" : 50,
        "startColumnNumber" : 51,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    DiskWriter.replaceFile(settingsName,\"BCV: \" + VERSION,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rbr.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rsy.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.din.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dc4.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.das.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hes.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hdc.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dgs.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ner.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.den.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rgn.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.bto.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.nns.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.uto.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.udv.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rer.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fdi.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.asc.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeEnumSwitch.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarEnums.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeStringSwitch.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.arrayiter.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.collectioniter.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.innerClasses.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBoilerPlate.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeInnerClassSynthetics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeLambdas.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideBridgeMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.liftConstructorInit.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeDeadMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBadGenerics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarAsserts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarBoxing.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showVersion.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeFinally.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.tidyMonitors.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.lenient.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dumpClassPath.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.comments.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSort.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSortAggress.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuffer.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuilder.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.silent.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recover.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.eclipse.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.override.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showInferrable.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.aexagg.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceCondPropagate.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideUTF.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLongStrings.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.commentMonitor.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.allowCorrecting.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.labelledBlocks.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.j14ClassOBJ.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLangImports.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypeClash.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypehInts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTurningIFs.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forLoopAGGCapture.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExceptionPrune.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showDebugLineNumbers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyMemberReferences.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.mergeVariables.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainPointlessSwitches.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainRedunantCasts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showSyntheticMembers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitImports.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.excludeNestedTypes.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.appendBracketsToLabels.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.updateCheck.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.isMaximized),false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,Configuration.lastDirectory,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.python,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.rt,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.library,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.pingback),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJD().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getJD().getJava().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getJD().getJava().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fontSpinner.getValue()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.deleteForeignLibraries),false);\n    if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))     DiskWriter.writeNewLine(settingsName,\"0\",false);\n else     if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))     DiskWriter.writeNewLine(settingsName,\"1\",false);\n    DiskWriter.writeNewLine(settingsName,Configuration.python3,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.javac,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.java,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.compileOnSave.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.warnForEditing),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showFileInTabTitle.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forcePureAsciiAsText.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.synchronizedViewing.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showClassMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ren.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJADX().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.lafTheme.name(),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.rstaTheme.name(),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyNameInTabTitle.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.language.name(),false);\n  }\n catch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 18989,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static synchronized void saveSettings(){\n  try {\n    DiskWriter.replaceFile(settingsName,\"BCV: \" + VERSION,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rbr.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rsy.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.din.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dc4.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.das.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hes.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hdc.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dgs.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ner.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.den.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rgn.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.bto.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.nns.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.uto.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.udv.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.rer.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fdi.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.asc.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeEnumSwitch.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarEnums.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeStringSwitch.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.arrayiter.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.collectioniter.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.innerClasses.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBoilerPlate.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeInnerClassSynthetics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeLambdas.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideBridgeMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.liftConstructorInit.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeDeadMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.removeBadGenerics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarAsserts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.sugarBoxing.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showVersion.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeFinally.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.tidyMonitors.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.lenient.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.dumpClassPath.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.comments.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSort.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTopSortAggress.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuffer.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.stringBuilder.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.silent.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recover.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.eclipse.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.override.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showInferrable.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.aexagg.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceCondPropagate.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideUTF.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLongStrings.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.commentMonitor.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.allowCorrecting.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.labelledBlocks.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.j14ClassOBJ.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.hideLangImports.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypeClash.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.recoveryTypehInts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceTurningIFs.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forLoopAGGCapture.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExceptionPrune.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showDebugLineNumbers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyMemberReferences.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.mergeVariables.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.unicodeOutputEnabled.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainPointlessSwitches.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeLineNumbersInBytecode.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.includeErrorDiagnostics.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.retainRedunantCasts.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.alwaysGenerateExceptionVars.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showSyntheticMembers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitTypeArguments.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forceExplicitImports.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.flattenSwitchBlocks.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.excludeNestedTypes.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.appendBracketsToLabels.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.debugHelpers.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.updateCheck.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSelectedDecompiler().ordinal()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.refreshOnChange.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.isMaximized),false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,\"deprecated\",false);\n    DiskWriter.writeNewLine(settingsName,Configuration.lastDirectory,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.python,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.rt,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getProcyon().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getCFR().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getFern().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getKrakatau().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.decodeAPKResources.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.library,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.pingback),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJD().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane2.getJD().getJava().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane3.getJD().getJava().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.fontSpinner.getValue()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.deleteForeignLibraries),false);\n    if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))     DiskWriter.writeNewLine(settingsName,\"0\",false);\n else     if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))     DiskWriter.writeNewLine(settingsName,\"1\",false);\n    DiskWriter.writeNewLine(settingsName,Configuration.python3,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.javac,false);\n    DiskWriter.writeNewLine(settingsName,Configuration.java,false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.compileOnSave.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.autoCompileOnRefresh.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(Configuration.warnForEditing),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showFileInTabTitle.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.forcePureAsciiAsText.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.synchronizedViewing.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.showClassMethods.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.ren.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.viewPane1.getJADX().getEditable().isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.lafTheme.name(),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.rstaTheme.name(),false);\n    DiskWriter.writeNewLine(settingsName,String.valueOf(BytecodeViewer.viewer.simplifyNameInTabTitle.isSelected()),false);\n    DiskWriter.writeNewLine(settingsName,Configuration.language.name(),false);\n  }\n catch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2114,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 262,
        "startColumnNumber" : 20,
        "endLineNumber" : 262,
        "endColumnNumber" : 105
      },
      "nodeContext" : "String.valueOf(BytecodeViewer.viewer.viewPane3.getSmali().getEditable().isSelected())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 69,
    "startLineNumber" : 262,
    "startColumnNumber" : 35,
    "endLineNumber" : 262,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}