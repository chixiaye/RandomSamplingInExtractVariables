{
  "id" : 368,
  "expression" : "((Item<?>)item).off",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/dexpatcher/algorithms/diff/DexSectionDiffAlgorithm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((Item<?>)item).off",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 206,
      "startColumnNumber" : 19,
      "endLineNumber" : 206,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 9,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 206,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return ((Item<?>)item).off;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 205,
        "startColumnNumber" : 34,
        "endLineNumber" : 207,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return ((Item<?>)item).off;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (item instanceof Item) {\n  return ((Item<?>)item).off;\n}\n else {\n  return index;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 204,
        "startColumnNumber" : 56,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (item instanceof Item) {\n    return ((Item<?>)item).off;\n  }\n else {\n    return index;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Adapter method for item's offset fetching, if an item is not inherited from  {@code Item} (which means it is a simple item in dex sectionthat doesn't need multiple members to describe), this method return  {@code index} instead.\n */\nprivate int getItemOffsetOrIndex(int index,T item){\n  if (item instanceof Item) {\n    return ((Item<?>)item).off;\n  }\n else {\n    return index;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 32,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 206,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return ((Item<?>)item).off;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 206,
    "startColumnNumber" : 19,
    "endLineNumber" : 206,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}