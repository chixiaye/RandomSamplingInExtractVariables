{
  "id" : 204,
  "expression" : "response",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/controller/CapacityController.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 58,
      "startColumnNumber" : 12,
      "endLineNumber" : 58,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 35
      },
      "nodeContext" : "response.setStatus(400)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(400);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 56,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  response.setStatus(400);\n  restResult.setCode(400);\n  restResult.setMessage(\"参数group和tenant不能同时为空\");\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (group == null && tenant == null) {\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  response.setStatus(400);\n  restResult.setCode(400);\n  restResult.setMessage(\"参数group和tenant不能同时为空\");\n  return restResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@GetMapping public RestResult<Capacity> getCapacity(HttpServletResponse response,@RequestParam(required=false) String group,@RequestParam(required=false) String tenant){\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(400);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.config.server.controller.HttpServletResponse"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 65,
      "startColumnNumber" : 12,
      "endLineNumber" : 65,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 35
      },
      "nodeContext" : "response.setStatus(400)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(400);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 63,
        "startColumnNumber" : 58,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  response.setStatus(400);\n  restResult.setCode(400);\n  restResult.setMessage(\"tenant不能为空字符串\");\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (group == null && StringUtils.isBlank(tenant)) {\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  response.setStatus(400);\n  restResult.setCode(400);\n  restResult.setMessage(\"tenant不能为空字符串\");\n  return restResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@GetMapping public RestResult<Capacity> getCapacity(HttpServletResponse response,@RequestParam(required=false) String group,@RequestParam(required=false) String tenant){\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(400);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.config.server.controller.HttpServletResponse"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 72,
      "startColumnNumber" : 12,
      "endLineNumber" : 72,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 35
      },
      "nodeContext" : "response.setStatus(200)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(200);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  response.setStatus(200);\n  restResult.setCode(200);\n  Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n  if (capacity == null) {\n    LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n    capacityService.initCapacity(group,tenant);\n    capacity=capacityService.getCapacityWithDefault(group,tenant);\n  }\n  if (capacity != null) {\n    restResult.setData(capacity);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  response.setStatus(200);\n  restResult.setCode(200);\n  Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n  if (capacity == null) {\n    LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n    capacityService.initCapacity(group,tenant);\n    capacity=capacityService.getCapacityWithDefault(group,tenant);\n  }\n  if (capacity != null) {\n    restResult.setData(capacity);\n  }\n}\n catch (Exception e) {\n  LOGGER.error(\"[getCapacity] \",e);\n  response.setStatus(500);\n  restResult.setCode(500);\n  restResult.setMessage(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@GetMapping public RestResult<Capacity> getCapacity(HttpServletResponse response,@RequestParam(required=false) String group,@RequestParam(required=false) String tenant){\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(200);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.config.server.controller.HttpServletResponse"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 85,
      "startColumnNumber" : 12,
      "endLineNumber" : 85,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 35
      },
      "nodeContext" : "response.setStatus(500)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(500);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 83,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOGGER.error(\"[getCapacity] \",e);\n  response.setStatus(500);\n  restResult.setCode(500);\n  restResult.setMessage(e.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 83,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  LOGGER.error(\"[getCapacity] \",e);\n  response.setStatus(500);\n  restResult.setCode(500);\n  restResult.setMessage(e.getMessage());\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  response.setStatus(200);\n  restResult.setCode(200);\n  Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n  if (capacity == null) {\n    LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n    capacityService.initCapacity(group,tenant);\n    capacity=capacityService.getCapacityWithDefault(group,tenant);\n  }\n  if (capacity != null) {\n    restResult.setData(capacity);\n  }\n}\n catch (Exception e) {\n  LOGGER.error(\"[getCapacity] \",e);\n  response.setStatus(500);\n  restResult.setCode(500);\n  restResult.setMessage(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@GetMapping public RestResult<Capacity> getCapacity(HttpServletResponse response,@RequestParam(required=false) String group,@RequestParam(required=false) String tenant){\n  if (group == null && tenant == null) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"参数group和tenant不能同时为空\");\n    return restResult;\n  }\n  if (group == null && StringUtils.isBlank(tenant)) {\n    RestResult<Capacity> restResult=new RestResult<Capacity>();\n    response.setStatus(400);\n    restResult.setCode(400);\n    restResult.setMessage(\"tenant不能为空字符串\");\n    return restResult;\n  }\n  RestResult<Capacity> restResult=new RestResult<Capacity>();\n  try {\n    response.setStatus(200);\n    restResult.setCode(200);\n    Capacity capacity=capacityService.getCapacityWithDefault(group,tenant);\n    if (capacity == null) {\n      LOGGER.warn(\"[getCapacity] capacity不存在，需初始化 group: {}, tenant: {}\",group,tenant);\n      capacityService.initCapacity(group,tenant);\n      capacity=capacityService.getCapacityWithDefault(group,tenant);\n    }\n    if (capacity != null) {\n      restResult.setData(capacity);\n    }\n  }\n catch (  Exception e) {\n    LOGGER.error(\"[getCapacity] \",e);\n    response.setStatus(500);\n    restResult.setCode(500);\n    restResult.setMessage(e.getMessage());\n  }\n  return restResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 36
      },
      "nodeContext" : "response.setStatus(500);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.config.server.controller.HttpServletResponse"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 58,
    "startColumnNumber" : 12,
    "endLineNumber" : 58,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 65,
    "startColumnNumber" : 12,
    "endLineNumber" : 65,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 72,
    "startColumnNumber" : 12,
    "endLineNumber" : 72,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 85,
    "startColumnNumber" : 12,
    "endLineNumber" : 85,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}