{
  "id" : 467,
  "expression" : "a.isShareable()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/actions/Actions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a.isShareable()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 87,
      "startColumnNumber" : 11,
      "endLineNumber" : 87,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 97,
        "endColumnNumber" : 69
      },
      "nodeContext" : "a.isShareable() && b.isShareable() && a.getMnemonic().equals(b.getMnemonic())&& a instanceof Action&& b instanceof Action&& a.getKey(actionKeyContext,null).equals(b.getKey(actionKeyContext,null))&& artifactsEqualWithoutOwner(a.getMandatoryInputs().toList(),b.getMandatoryInputs().toList())&& artifactsEqualWithoutOwner(a.getOutputs(),b.getOutputs())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 55,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 70
      },
      "nodeContext" : "return a.isShareable() && b.isShareable() && a.getMnemonic().equals(b.getMnemonic())&& a instanceof Action&& b instanceof Action&& a.getKey(actionKeyContext,null).equals(b.getKey(actionKeyContext,null))&& artifactsEqualWithoutOwner(a.getMandatoryInputs().toList(),b.getMandatoryInputs().toList())&& artifactsEqualWithoutOwner(a.getOutputs(),b.getOutputs());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 86,
        "startColumnNumber" : 34,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return a.isShareable() && b.isShareable() && a.getMnemonic().equals(b.getMnemonic())&& a instanceof Action&& b instanceof Action&& a.getKey(actionKeyContext,null).equals(b.getKey(actionKeyContext,null))&& artifactsEqualWithoutOwner(a.getMandatoryInputs().toList(),b.getMandatoryInputs().toList())&& artifactsEqualWithoutOwner(a.getOutputs(),b.getOutputs());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Checks if the two actions are equivalent. This method exists to support sharing actions between configured targets for cases where there is no canonical target that could own the action. In the action graph construction this case shows up as two actions generating the same output file. <p>This method implements an equivalence relationship across actions, based on the action class, the key, and the list of inputs and outputs.\n */\npublic static boolean canBeShared(ActionKeyContext actionKeyContext,ActionAnalysisMetadata a,ActionAnalysisMetadata b) throws InterruptedException {\n  return a.isShareable() && b.isShareable() && a.getMnemonic().equals(b.getMnemonic())&& a instanceof Action&& b instanceof Action&& a.getKey(actionKeyContext,null).equals(b.getKey(actionKeyContext,null))&& artifactsEqualWithoutOwner(a.getMandatoryInputs().toList(),b.getMandatoryInputs().toList())&& artifactsEqualWithoutOwner(a.getOutputs(),b.getOutputs());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 97,
        "endColumnNumber" : 69
      },
      "nodeContext" : "a.isShareable() && b.isShareable() && a.getMnemonic().equals(b.getMnemonic())&& a instanceof Action&& b instanceof Action&& a.getKey(actionKeyContext,null).equals(b.getKey(actionKeyContext,null))&& artifactsEqualWithoutOwner(a.getMandatoryInputs().toList(),b.getMandatoryInputs().toList())&& artifactsEqualWithoutOwner(a.getOutputs(),b.getOutputs())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 55,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 87,
    "startColumnNumber" : 11,
    "endLineNumber" : 87,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}