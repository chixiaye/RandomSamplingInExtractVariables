{
  "id" : 18,
  "expression" : "\"SELECT sum(rand()) FROM source\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-verifier/src/test/java/com/facebook/presto/verifier/resolver/TestIgnoredFunctionsMismatchResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"SELECT sum(rand()) FROM source\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 55,
      "startColumnNumber" : 36,
      "endLineNumber" : 55,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 55,
        "endColumnNumber" : 69
      },
      "nodeContext" : "createBundle(\"SELECT sum(rand()) FROM source\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertResolved(createBundle(\"SELECT sum(rand()) FROM source\"),mismatchedColumn)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertResolved(createBundle(\"SELECT sum(rand()) FROM source\"),mismatchedColumn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ColumnMatchResult<?> mismatchedColumn=createMismatchedColumn(VARCHAR,new SimpleColumnChecksum(binary(0xa)),new SimpleColumnChecksum(binary(0xb)));\n  assertResolved(createBundle(\"CREATE TABLE test AS SELECT rand() x FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"CREATE TABLE test AS SELECT presto.default.rand() x FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT arbitrary(x) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"INSERT INTO target SELECT presto.default.arbitrary(x) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT arbitrary(rand()) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT sum(rand()) FROM source\"),mismatchedColumn);\n  assertNotResolved(createBundle(\"SELECT count() FROM source\"),mismatchedColumn);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDefault(){\n  ColumnMatchResult<?> mismatchedColumn=createMismatchedColumn(VARCHAR,new SimpleColumnChecksum(binary(0xa)),new SimpleColumnChecksum(binary(0xb)));\n  assertResolved(createBundle(\"CREATE TABLE test AS SELECT rand() x FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"CREATE TABLE test AS SELECT presto.default.rand() x FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT arbitrary(x) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"INSERT INTO target SELECT presto.default.arbitrary(x) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT arbitrary(rand()) FROM source\"),mismatchedColumn);\n  assertResolved(createBundle(\"SELECT sum(rand()) FROM source\"),mismatchedColumn);\n  assertNotResolved(createBundle(\"SELECT count() FROM source\"),mismatchedColumn);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertResolved(createBundle(\"SELECT sum(rand()) FROM source\"),mismatchedColumn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 55,
    "startColumnNumber" : 36,
    "endLineNumber" : 55,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}