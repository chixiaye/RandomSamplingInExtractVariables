{
  "id" : 484,
  "expression" : "invoker1.isAvailable()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/loadbalance/LoadBalanceBaseTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "invoker1.isAvailable()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 94,
      "startColumnNumber" : 14,
      "endLineNumber" : 94,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 37
      },
      "nodeContext" : "given(invoker1.isAvailable())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "given(invoker1.isAvailable()).willReturn(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "given(invoker1.isAvailable()).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1831,
        "startLineNumber" : 76,
        "startColumnNumber" : 41,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  invocation=mock(Invocation.class);\n  given(invocation.getMethodName()).willReturn(\"method1\");\n  given(invocation.getArguments()).willReturn(new Object[]{\"arg1\",\"arg2\",\"arg3\"});\n  invoker1=mock(Invoker.class);\n  invoker2=mock(Invoker.class);\n  invoker3=mock(Invoker.class);\n  invoker4=mock(Invoker.class);\n  invoker5=mock(Invoker.class);\n  URL url1=URL.valueOf(\"test://127.0.0.1:1/DemoService\");\n  URL url2=URL.valueOf(\"test://127.0.0.1:2/DemoService\");\n  URL url3=URL.valueOf(\"test://127.0.0.1:3/DemoService\");\n  URL url4=URL.valueOf(\"test://127.0.0.1:4/DemoService\");\n  URL url5=URL.valueOf(\"test://127.0.0.1:5/DemoService\");\n  given(invoker1.isAvailable()).willReturn(true);\n  given(invoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker1.getUrl()).willReturn(url1);\n  given(invoker2.isAvailable()).willReturn(true);\n  given(invoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker2.getUrl()).willReturn(url2);\n  given(invoker3.isAvailable()).willReturn(true);\n  given(invoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker3.getUrl()).willReturn(url3);\n  given(invoker4.isAvailable()).willReturn(true);\n  given(invoker4.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker4.getUrl()).willReturn(url4);\n  given(invoker5.isAvailable()).willReturn(true);\n  given(invoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker5.getUrl()).willReturn(url5);\n  invokers.add(invoker1);\n  invokers.add(invoker2);\n  invokers.add(invoker3);\n  invokers.add(invoker4);\n  invokers.add(invoker5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @throws java.lang.Exception\n */\n@BeforeEach public void setUp() throws Exception {\n  invocation=mock(Invocation.class);\n  given(invocation.getMethodName()).willReturn(\"method1\");\n  given(invocation.getArguments()).willReturn(new Object[]{\"arg1\",\"arg2\",\"arg3\"});\n  invoker1=mock(Invoker.class);\n  invoker2=mock(Invoker.class);\n  invoker3=mock(Invoker.class);\n  invoker4=mock(Invoker.class);\n  invoker5=mock(Invoker.class);\n  URL url1=URL.valueOf(\"test://127.0.0.1:1/DemoService\");\n  URL url2=URL.valueOf(\"test://127.0.0.1:2/DemoService\");\n  URL url3=URL.valueOf(\"test://127.0.0.1:3/DemoService\");\n  URL url4=URL.valueOf(\"test://127.0.0.1:4/DemoService\");\n  URL url5=URL.valueOf(\"test://127.0.0.1:5/DemoService\");\n  given(invoker1.isAvailable()).willReturn(true);\n  given(invoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker1.getUrl()).willReturn(url1);\n  given(invoker2.isAvailable()).willReturn(true);\n  given(invoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker2.getUrl()).willReturn(url2);\n  given(invoker3.isAvailable()).willReturn(true);\n  given(invoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker3.getUrl()).willReturn(url3);\n  given(invoker4.isAvailable()).willReturn(true);\n  given(invoker4.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker4.getUrl()).willReturn(url4);\n  given(invoker5.isAvailable()).willReturn(true);\n  given(invoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);\n  given(invoker5.getUrl()).willReturn(url5);\n  invokers.add(invoker1);\n  invokers.add(invoker2);\n  invokers.add(invoker3);\n  invokers.add(invoker4);\n  invokers.add(invoker5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "given(invoker1.isAvailable()).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 94,
    "startColumnNumber" : 14,
    "endLineNumber" : 94,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}