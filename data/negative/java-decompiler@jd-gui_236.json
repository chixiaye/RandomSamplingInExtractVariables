{
  "id" : 236,
  "expression" : "child3.getPath()",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/sourceloader/MavenOrgSourceLoaderProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "child3.getPath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 245,
      "startColumnNumber" : 73,
      "endLineNumber" : 245,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 245,
        "startColumnNumber" : 73,
        "endLineNumber" : 245,
        "endColumnNumber" : 117
      },
      "nodeContext" : "child3.getPath().endsWith(\"/pom.properties\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 245,
        "startColumnNumber" : 48,
        "endLineNumber" : 245,
        "endColumnNumber" : 117
      },
      "nodeContext" : "!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 245,
        "startColumnNumber" : 44,
        "endLineNumber" : 254,
        "endColumnNumber" : 45
      },
      "nodeContext" : "if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n  try (InputStream is=child3.getInputStream()){\n    Properties properties=new Properties();\n    properties.load(is);\n    return properties;\n  }\n catch (  Exception e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 244,
        "startColumnNumber" : 91,
        "endLineNumber" : 255,
        "endColumnNumber" : 41
      },
      "nodeContext" : "{\n  if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n    try (InputStream is=child3.getInputStream()){\n      Properties properties=new Properties();\n      properties.load(is);\n      return properties;\n    }\n catch (    Exception e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 244,
        "startColumnNumber" : 40,
        "endLineNumber" : 255,
        "endColumnNumber" : 41
      },
      "nodeContext" : "for (Container.Entry child3 : entry.getChildren()) {\n  if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n    try (InputStream is=child3.getInputStream()){\n      Properties properties=new Properties();\n      properties.load(is);\n      return properties;\n    }\n catch (    Exception e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 242,
        "startColumnNumber" : 62,
        "endLineNumber" : 256,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{\n  entry=children.iterator().next();\n  for (  Container.Entry child3 : entry.getChildren()) {\n    if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n      try (InputStream is=child3.getInputStream()){\n        Properties properties=new Properties();\n        properties.load(is);\n        return properties;\n      }\n catch (      Exception e) {\n        assert ExceptionUtil.printStackTrace(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 242,
        "startColumnNumber" : 36,
        "endLineNumber" : 256,
        "endColumnNumber" : 37
      },
      "nodeContext" : "if (children.size() == 1) {\n  entry=children.iterator().next();\n  for (  Container.Entry child3 : entry.getChildren()) {\n    if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n      try (InputStream is=child3.getInputStream()){\n        Properties properties=new Properties();\n        properties.load(is);\n        return properties;\n      }\n catch (      Exception e) {\n        assert ExceptionUtil.printStackTrace(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 240,
        "startColumnNumber" : 57,
        "endLineNumber" : 257,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  children=entry.getChildren();\n  if (children.size() == 1) {\n    entry=children.iterator().next();\n    for (    Container.Entry child3 : entry.getChildren()) {\n      if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n        try (InputStream is=child3.getInputStream()){\n          Properties properties=new Properties();\n          properties.load(is);\n          return properties;\n        }\n catch (        Exception e) {\n          assert ExceptionUtil.printStackTrace(e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1242,
        "startLineNumber" : 240,
        "startColumnNumber" : 32,
        "endLineNumber" : 257,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (entry.isDirectory()) {\n  children=entry.getChildren();\n  if (children.size() == 1) {\n    entry=children.iterator().next();\n    for (    Container.Entry child3 : entry.getChildren()) {\n      if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n        try (InputStream is=child3.getInputStream()){\n          Properties properties=new Properties();\n          properties.load(is);\n          return properties;\n        }\n catch (        Exception e) {\n          assert ExceptionUtil.printStackTrace(e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1393,
        "startLineNumber" : 238,
        "startColumnNumber" : 54,
        "endLineNumber" : 258,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  Container.Entry entry=children.iterator().next();\n  if (entry.isDirectory()) {\n    children=entry.getChildren();\n    if (children.size() == 1) {\n      entry=children.iterator().next();\n      for (      Container.Entry child3 : entry.getChildren()) {\n        if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n          try (InputStream is=child3.getInputStream()){\n            Properties properties=new Properties();\n            properties.load(is);\n            return properties;\n          }\n catch (          Exception e) {\n            assert ExceptionUtil.printStackTrace(e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 238,
        "startColumnNumber" : 28,
        "endLineNumber" : 258,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (children.size() == 1) {\n  Container.Entry entry=children.iterator().next();\n  if (entry.isDirectory()) {\n    children=entry.getChildren();\n    if (children.size() == 1) {\n      entry=children.iterator().next();\n      for (      Container.Entry child3 : entry.getChildren()) {\n        if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n          try (InputStream is=child3.getInputStream()){\n            Properties properties=new Properties();\n            properties.load(is);\n            return properties;\n          }\n catch (          Exception e) {\n            assert ExceptionUtil.printStackTrace(e);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 105,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1567,
        "startLineNumber" : 236,
        "startColumnNumber" : 50,
        "endLineNumber" : 259,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  Collection<Container.Entry> children=child2.getChildren();\n  if (children.size() == 1) {\n    Container.Entry entry=children.iterator().next();\n    if (entry.isDirectory()) {\n      children=entry.getChildren();\n      if (children.size() == 1) {\n        entry=children.iterator().next();\n        for (        Container.Entry child3 : entry.getChildren()) {\n          if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n            try (InputStream is=child3.getInputStream()){\n              Properties properties=new Properties();\n              properties.load(is);\n              return properties;\n            }\n catch (            Exception e) {\n              assert ExceptionUtil.printStackTrace(e);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1593,
        "startLineNumber" : 236,
        "startColumnNumber" : 24,
        "endLineNumber" : 259,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (child2.isDirectory()) {\n  Collection<Container.Entry> children=child2.getChildren();\n  if (children.size() == 1) {\n    Container.Entry entry=children.iterator().next();\n    if (entry.isDirectory()) {\n      children=entry.getChildren();\n      if (children.size() == 1) {\n        entry=children.iterator().next();\n        for (        Container.Entry child3 : entry.getChildren()) {\n          if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n            try (InputStream is=child3.getInputStream()){\n              Properties properties=new Properties();\n              properties.load(is);\n              return properties;\n            }\n catch (            Exception e) {\n              assert ExceptionUtil.printStackTrace(e);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 123,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 235,
        "startColumnNumber" : 91,
        "endLineNumber" : 260,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (child2.isDirectory()) {\n    Collection<Container.Entry> children=child2.getChildren();\n    if (children.size() == 1) {\n      Container.Entry entry=children.iterator().next();\n      if (entry.isDirectory()) {\n        children=entry.getChildren();\n        if (children.size() == 1) {\n          entry=children.iterator().next();\n          for (          Container.Entry child3 : entry.getChildren()) {\n            if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n              try (InputStream is=child3.getInputStream()){\n                Properties properties=new Properties();\n                properties.load(is);\n                return properties;\n              }\n catch (              Exception e) {\n                assert ExceptionUtil.printStackTrace(e);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1714,
        "startLineNumber" : 235,
        "startColumnNumber" : 20,
        "endLineNumber" : 260,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n  if (child2.isDirectory()) {\n    Collection<Container.Entry> children=child2.getChildren();\n    if (children.size() == 1) {\n      Container.Entry entry=children.iterator().next();\n      if (entry.isDirectory()) {\n        children=entry.getChildren();\n        if (children.size() == 1) {\n          entry=children.iterator().next();\n          for (          Container.Entry child3 : entry.getChildren()) {\n            if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n              try (InputStream is=child3.getInputStream()){\n                Properties properties=new Properties();\n                properties.load(is);\n                return properties;\n              }\n catch (              Exception e) {\n                assert ExceptionUtil.printStackTrace(e);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1756,
        "startLineNumber" : 234,
        "startColumnNumber" : 68,
        "endLineNumber" : 261,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n    if (child2.isDirectory()) {\n      Collection<Container.Entry> children=child2.getChildren();\n      if (children.size() == 1) {\n        Container.Entry entry=children.iterator().next();\n        if (entry.isDirectory()) {\n          children=entry.getChildren();\n          if (children.size() == 1) {\n            entry=children.iterator().next();\n            for (            Container.Entry child3 : entry.getChildren()) {\n              if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                try (InputStream is=child3.getInputStream()){\n                  Properties properties=new Properties();\n                  properties.load(is);\n                  return properties;\n                }\n catch (                Exception e) {\n                  assert ExceptionUtil.printStackTrace(e);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 234,
        "startColumnNumber" : 16,
        "endLineNumber" : 261,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Container.Entry child2 : child1.getChildren()) {\n  if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n    if (child2.isDirectory()) {\n      Collection<Container.Entry> children=child2.getChildren();\n      if (children.size() == 1) {\n        Container.Entry entry=children.iterator().next();\n        if (entry.isDirectory()) {\n          children=entry.getChildren();\n          if (children.size() == 1) {\n            entry=children.iterator().next();\n            for (            Container.Entry child3 : entry.getChildren()) {\n              if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                try (InputStream is=child3.getInputStream()){\n                  Properties properties=new Properties();\n                  properties.load(is);\n                  return properties;\n                }\n catch (                Exception e) {\n                  assert ExceptionUtil.printStackTrace(e);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 146,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 233,
        "startColumnNumber" : 77,
        "endLineNumber" : 262,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Container.Entry child2 : child1.getChildren()) {\n    if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n      if (child2.isDirectory()) {\n        Collection<Container.Entry> children=child2.getChildren();\n        if (children.size() == 1) {\n          Container.Entry entry=children.iterator().next();\n          if (entry.isDirectory()) {\n            children=entry.getChildren();\n            if (children.size() == 1) {\n              entry=children.iterator().next();\n              for (              Container.Entry child3 : entry.getChildren()) {\n                if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                  try (InputStream is=child3.getInputStream()){\n                    Properties properties=new Properties();\n                    properties.load(is);\n                    return properties;\n                  }\n catch (                  Exception e) {\n                    assert ExceptionUtil.printStackTrace(e);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1907,
        "startLineNumber" : 233,
        "startColumnNumber" : 12,
        "endLineNumber" : 262,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (child1.isDirectory() && child1.getPath().equals(\"META-INF\")) {\n  for (  Container.Entry child2 : child1.getChildren()) {\n    if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n      if (child2.isDirectory()) {\n        Collection<Container.Entry> children=child2.getChildren();\n        if (children.size() == 1) {\n          Container.Entry entry=children.iterator().next();\n          if (entry.isDirectory()) {\n            children=entry.getChildren();\n            if (children.size() == 1) {\n              entry=children.iterator().next();\n              for (              Container.Entry child3 : entry.getChildren()) {\n                if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                  try (InputStream is=child3.getInputStream()){\n                    Properties properties=new Properties();\n                    properties.load(is);\n                    return properties;\n                  }\n catch (                  Exception e) {\n                    assert ExceptionUtil.printStackTrace(e);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 158,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1933,
        "startLineNumber" : 232,
        "startColumnNumber" : 60,
        "endLineNumber" : 263,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (child1.isDirectory() && child1.getPath().equals(\"META-INF\")) {\n    for (    Container.Entry child2 : child1.getChildren()) {\n      if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n        if (child2.isDirectory()) {\n          Collection<Container.Entry> children=child2.getChildren();\n          if (children.size() == 1) {\n            Container.Entry entry=children.iterator().next();\n            if (entry.isDirectory()) {\n              children=entry.getChildren();\n              if (children.size() == 1) {\n                entry=children.iterator().next();\n                for (                Container.Entry child3 : entry.getChildren()) {\n                  if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                    try (InputStream is=child3.getInputStream()){\n                      Properties properties=new Properties();\n                      properties.load(is);\n                      return properties;\n                    }\n catch (                    Exception e) {\n                      assert ExceptionUtil.printStackTrace(e);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 232,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Container.Entry child1 : parent.getChildren()) {\n  if (child1.isDirectory() && child1.getPath().equals(\"META-INF\")) {\n    for (    Container.Entry child2 : child1.getChildren()) {\n      if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n        if (child2.isDirectory()) {\n          Collection<Container.Entry> children=child2.getChildren();\n          if (children.size() == 1) {\n            Container.Entry entry=children.iterator().next();\n            if (entry.isDirectory()) {\n              children=entry.getChildren();\n              if (children.size() == 1) {\n                entry=children.iterator().next();\n                for (                Container.Entry child3 : entry.getChildren()) {\n                  if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                    try (InputStream is=child3.getInputStream()){\n                      Properties properties=new Properties();\n                      properties.load(is);\n                      return properties;\n                    }\n catch (                    Exception e) {\n                      assert ExceptionUtil.printStackTrace(e);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2082,
        "startLineNumber" : 230,
        "startColumnNumber" : 71,
        "endLineNumber" : 266,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Container.Entry child1 : parent.getChildren()) {\n    if (child1.isDirectory() && child1.getPath().equals(\"META-INF\")) {\n      for (      Container.Entry child2 : child1.getChildren()) {\n        if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n          if (child2.isDirectory()) {\n            Collection<Container.Entry> children=child2.getChildren();\n            if (children.size() == 1) {\n              Container.Entry entry=children.iterator().next();\n              if (entry.isDirectory()) {\n                children=entry.getChildren();\n                if (children.size() == 1) {\n                  entry=children.iterator().next();\n                  for (                  Container.Entry child3 : entry.getChildren()) {\n                    if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                      try (InputStream is=child3.getInputStream()){\n                        Properties properties=new Properties();\n                        properties.load(is);\n                        return properties;\n                      }\n catch (                      Exception e) {\n                        assert ExceptionUtil.printStackTrace(e);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2149,
        "startLineNumber" : 230,
        "startColumnNumber" : 4,
        "endLineNumber" : 266,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Properties getPomProperties(Container.Entry parent){\n  for (  Container.Entry child1 : parent.getChildren()) {\n    if (child1.isDirectory() && child1.getPath().equals(\"META-INF\")) {\n      for (      Container.Entry child2 : child1.getChildren()) {\n        if (child2.isDirectory() && child2.getPath().equals(\"META-INF/maven\")) {\n          if (child2.isDirectory()) {\n            Collection<Container.Entry> children=child2.getChildren();\n            if (children.size() == 1) {\n              Container.Entry entry=children.iterator().next();\n              if (entry.isDirectory()) {\n                children=entry.getChildren();\n                if (children.size() == 1) {\n                  entry=children.iterator().next();\n                  for (                  Container.Entry child3 : entry.getChildren()) {\n                    if (!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")) {\n                      try (InputStream is=child3.getInputStream()){\n                        Properties properties=new Properties();\n                        properties.load(is);\n                        return properties;\n                      }\n catch (                      Exception e) {\n                        assert ExceptionUtil.printStackTrace(e);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 245,
        "startColumnNumber" : 48,
        "endLineNumber" : 245,
        "endColumnNumber" : 117
      },
      "nodeContext" : "!child3.isDirectory() && child3.getPath().endsWith(\"/pom.properties\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 245,
    "startColumnNumber" : 73,
    "endLineNumber" : 245,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}