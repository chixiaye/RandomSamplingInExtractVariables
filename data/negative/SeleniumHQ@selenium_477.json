{
  "id" : 477,
  "expression" : "uri.indexOf(\"/\",sessionIndex)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/remote/HttpSessionId.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "uri.indexOf(\"/\",sessionIndex)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 38,
      "startColumnNumber" : 22,
      "endLineNumber" : 38,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 38,
        "startColumnNumber" : 10,
        "endLineNumber" : 38,
        "endColumnNumber" : 52
      },
      "nodeContext" : "nextSlash=uri.indexOf(\"/\",sessionIndex)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int nextSlash=uri.indexOf(\"/\",sessionIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 36,
        "startColumnNumber" : 28,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sessionIndex+=\"/session/\".length();\n  int nextSlash=uri.indexOf(\"/\",sessionIndex);\n  if (nextSlash != -1) {\n    return Optional.of(uri.substring(sessionIndex,nextSlash));\n  }\n  return Optional.of(uri.substring(sessionIndex));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (sessionIndex != -1) {\n  sessionIndex+=\"/session/\".length();\n  int nextSlash=uri.indexOf(\"/\",sessionIndex);\n  if (nextSlash != -1) {\n    return Optional.of(uri.substring(sessionIndex,nextSlash));\n  }\n  return Optional.of(uri.substring(sessionIndex));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 34,
        "startColumnNumber" : 58,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int sessionIndex=uri.indexOf(\"/session/\");\n  if (sessionIndex != -1) {\n    sessionIndex+=\"/session/\".length();\n    int nextSlash=uri.indexOf(\"/\",sessionIndex);\n    if (nextSlash != -1) {\n      return Optional.of(uri.substring(sessionIndex,nextSlash));\n    }\n    return Optional.of(uri.substring(sessionIndex));\n  }\n  return Optional.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Scan  {@code uri} for a session ID. This is identified by scanning for \"{code /session/}\" andthen extracting the next fragment of the URL. This means that both \" {@code /session/foo}\" and \" {@code /wd/hub/session/foo/bar}\" would both identify the session id as being \"foo\".\n */\npublic static Optional<String> getSessionId(String uri){\n  int sessionIndex=uri.indexOf(\"/session/\");\n  if (sessionIndex != -1) {\n    sessionIndex+=\"/session/\".length();\n    int nextSlash=uri.indexOf(\"/\",sessionIndex);\n    if (nextSlash != -1) {\n      return Optional.of(uri.substring(sessionIndex,nextSlash));\n    }\n    return Optional.of(uri.substring(sessionIndex));\n  }\n  return Optional.empty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int nextSlash=uri.indexOf(\"/\",sessionIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 38,
    "startColumnNumber" : 22,
    "endLineNumber" : 38,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}