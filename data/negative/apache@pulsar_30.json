{
  "id" : 30,
  "expression" : "0",
  "projectName" : "apache@pulsar",
  "commitID" : "b5d219add8857a51be0a88fac6f957d0144d949c",
  "filePath" : "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/RackAwareTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 101,
      "startColumnNumber" : 21,
      "endLineNumber" : 101,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 101,
        "startColumnNumber" : 17,
        "endLineNumber" : 101,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 101,
        "startColumnNumber" : 13,
        "endLineNumber" : 101,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < NUM_BOOKIES; i++) {\n  String bookie=bookies.get(i).getLocalAddress().toString();\n  int rackId=i == 0 ? 1 : 2;\n  BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n  log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n  admin.bookies().updateBookieRackInfo(bookie,group,bi);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 101,
        "startColumnNumber" : 13,
        "endLineNumber" : 101,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 105,
      "startColumnNumber" : 30,
      "endLineNumber" : 105,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 105,
        "startColumnNumber" : 25,
        "endLineNumber" : 105,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 105,
        "startColumnNumber" : 25,
        "endLineNumber" : 105,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i == 0 ? 1 : 2",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 105,
        "startColumnNumber" : 16,
        "endLineNumber" : 105,
        "endColumnNumber" : 39
      },
      "nodeContext" : "rackId=i == 0 ? 1 : 2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 40
      },
      "nodeContext" : "int rackId=i == 0 ? 1 : 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 101,
        "startColumnNumber" : 46,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String bookie=bookies.get(i).getLocalAddress().toString();\n  int rackId=i == 0 ? 1 : 2;\n  BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n  log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n  admin.bookies().updateBookieRackInfo(bookie,group,bi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < NUM_BOOKIES; i++) {\n  String bookie=bookies.get(i).getLocalAddress().toString();\n  int rackId=i == 0 ? 1 : 2;\n  BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n  log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n  admin.bookies().updateBookieRackInfo(bookie,group,bi);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 40
      },
      "nodeContext" : "int rackId=i == 0 ? 1 : 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 131,
      "startColumnNumber" : 43,
      "endLineNumber" : 131,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 131,
        "endColumnNumber" : 45
      },
      "nodeContext" : "bookies.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 131,
        "endColumnNumber" : 59
      },
      "nodeContext" : "bookies.get(0).getBookieId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 131,
        "startColumnNumber" : 17,
        "endLineNumber" : 131,
        "endColumnNumber" : 59
      },
      "nodeContext" : "firstBookie=bookies.get(0).getBookieId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 60
      },
      "nodeContext" : "BookieId firstBookie=bookies.get(0).getBookieId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 60
      },
      "nodeContext" : "BookieId firstBookie=bookies.get(0).getBookieId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 132,
      "startColumnNumber" : 21,
      "endLineNumber" : 132,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 132,
        "startColumnNumber" : 17,
        "endLineNumber" : 132,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 132,
        "startColumnNumber" : 13,
        "endLineNumber" : 132,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 132,
        "startColumnNumber" : 13,
        "endLineNumber" : 132,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 133,
      "startColumnNumber" : 80,
      "endLineNumber" : 133,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 133,
        "startColumnNumber" : 71,
        "endLineNumber" : 133,
        "endColumnNumber" : 82
      },
      "nodeContext" : "new byte[0]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 133,
        "startColumnNumber" : 30,
        "endLineNumber" : 133,
        "endColumnNumber" : 83
      },
      "nodeContext" : "bkc.createLedger(2,2,DigestType.DUMMY,new byte[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 133,
        "startColumnNumber" : 25,
        "endLineNumber" : 133,
        "endColumnNumber" : 83
      },
      "nodeContext" : "lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 84
      },
      "nodeContext" : "LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 132,
        "startColumnNumber" : 38,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 84
      },
      "nodeContext" : "LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 134,
      "startColumnNumber" : 91,
      "endLineNumber" : 134,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 134,
        "startColumnNumber" : 54,
        "endLineNumber" : 134,
        "endColumnNumber" : 93
      },
      "nodeContext" : "lh.getLedgerMetadata().getEnsembleAt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 94
      },
      "nodeContext" : "log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 95
      },
      "nodeContext" : "log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 132,
        "startColumnNumber" : 38,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 95
      },
      "nodeContext" : "log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 135,
      "startColumnNumber" : 60,
      "endLineNumber" : 135,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 135,
        "startColumnNumber" : 23,
        "endLineNumber" : 135,
        "endColumnNumber" : 62
      },
      "nodeContext" : "lh.getLedgerMetadata().getEnsembleAt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 135,
        "startColumnNumber" : 23,
        "endLineNumber" : 135,
        "endColumnNumber" : 84
      },
      "nodeContext" : "lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 132,
        "startColumnNumber" : 38,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n  log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n  assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n  lh.close();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 135,
        "startColumnNumber" : 23,
        "endLineNumber" : 135,
        "endColumnNumber" : 84
      },
      "nodeContext" : "lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 101,
    "startColumnNumber" : 21,
    "endLineNumber" : 101,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 105,
    "startColumnNumber" : 30,
    "endLineNumber" : 105,
    "endColumnNumber" : 31
  }, {
    "charLength" : 1,
    "startLineNumber" : 131,
    "startColumnNumber" : 43,
    "endLineNumber" : 131,
    "endColumnNumber" : 44
  }, {
    "charLength" : 1,
    "startLineNumber" : 132,
    "startColumnNumber" : 21,
    "endLineNumber" : 132,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 133,
    "startColumnNumber" : 80,
    "endLineNumber" : 133,
    "endColumnNumber" : 81
  }, {
    "charLength" : 1,
    "startLineNumber" : 134,
    "startColumnNumber" : 91,
    "endLineNumber" : 134,
    "endColumnNumber" : 92
  }, {
    "charLength" : 1,
    "startLineNumber" : 135,
    "startColumnNumber" : 60,
    "endLineNumber" : 135,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  } ]
}