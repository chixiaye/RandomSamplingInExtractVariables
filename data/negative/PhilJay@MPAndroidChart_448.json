{
  "id" : 448,
  "expression" : "i",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/utils/DefaultValueFormatter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 26,
      "startColumnNumber" : 24,
      "endLineNumber" : 26,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 26,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < digits",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < digits; i++) {\n  if (i == 0)   b.append(\".\");\n  b.append(\"0\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 23,
        "startColumnNumber" : 45,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuffer b=new StringBuffer();\n  for (int i=0; i < digits; i++) {\n    if (i == 0)     b.append(\".\");\n    b.append(\"0\");\n  }\n  mFormat=new DecimalFormat(\"###,###,###,##0\" + b.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor that specifies to how many digits the value should be formatted.\n * @param digits\n */\npublic DefaultValueFormatter(int digits){\n  StringBuffer b=new StringBuffer();\n  for (int i=0; i < digits; i++) {\n    if (i == 0)     b.append(\".\");\n    b.append(\"0\");\n  }\n  mFormat=new DecimalFormat(\"###,###,###,##0\" + b.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 26,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < digits",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 27,
      "startColumnNumber" : 16,
      "endLineNumber" : 27,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 27,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "if (i == 0) b.append(\".\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 26,
        "startColumnNumber" : 41,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (i == 0)   b.append(\".\");\n  b.append(\"0\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < digits; i++) {\n  if (i == 0)   b.append(\".\");\n  b.append(\"0\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 23,
        "startColumnNumber" : 45,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuffer b=new StringBuffer();\n  for (int i=0; i < digits; i++) {\n    if (i == 0)     b.append(\".\");\n    b.append(\"0\");\n  }\n  mFormat=new DecimalFormat(\"###,###,###,##0\" + b.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor that specifies to how many digits the value should be formatted.\n * @param digits\n */\npublic DefaultValueFormatter(int digits){\n  StringBuffer b=new StringBuffer();\n  for (int i=0; i < digits; i++) {\n    if (i == 0)     b.append(\".\");\n    b.append(\"0\");\n  }\n  mFormat=new DecimalFormat(\"###,###,###,##0\" + b.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 26,
    "startColumnNumber" : 24,
    "endLineNumber" : 26,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 27,
    "startColumnNumber" : 16,
    "endLineNumber" : 27,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}