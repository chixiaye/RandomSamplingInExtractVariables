{
  "id" : 30,
  "expression" : "neededActiveTaskMovements",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "neededActiveTaskMovements",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 94,
      "startColumnNumber" : 47,
      "endLineNumber" : 94,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 94,
        "startColumnNumber" : 47,
        "endLineNumber" : 94,
        "endColumnNumber" : 101
      },
      "nodeContext" : "neededActiveTaskMovements + neededStandbyTaskMovements",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 94,
        "startColumnNumber" : 47,
        "endLineNumber" : 94,
        "endColumnNumber" : 105
      },
      "nodeContext" : "neededActiveTaskMovements + neededStandbyTaskMovements > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 94,
        "startColumnNumber" : 22,
        "endLineNumber" : 94,
        "endColumnNumber" : 105
      },
      "nodeContext" : "probingRebalanceNeeded=neededActiveTaskMovements + neededStandbyTaskMovements > 0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 106
      },
      "nodeContext" : "final boolean probingRebalanceNeeded=neededActiveTaskMovements + neededStandbyTaskMovements > 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2017,
        "startLineNumber" : 50,
        "startColumnNumber" : 59,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SortedSet<TaskId> statefulTasks=new TreeSet<>(statefulTaskIds);\n  final TreeMap<UUID,ClientState> clientStates=new TreeMap<>(clients);\n  assignActiveStatefulTasks(clientStates,statefulTasks);\n  assignStandbyReplicaTasks(clientStates,allTaskIds,statefulTasks,configs);\n  final AtomicInteger remainingWarmupReplicas=new AtomicInteger(configs.maxWarmupReplicas);\n  final Map<TaskId,SortedSet<UUID>> tasksToCaughtUpClients=tasksToCaughtUpClients(statefulTasks,clientStates,configs.acceptableRecoveryLag);\n  final Map<UUID,Set<TaskId>> warmups=new TreeMap<>();\n  final int neededActiveTaskMovements=assignActiveTaskMovements(tasksToCaughtUpClients,clientStates,warmups,remainingWarmupReplicas);\n  final int neededStandbyTaskMovements=assignStandbyTaskMovements(tasksToCaughtUpClients,clientStates,remainingWarmupReplicas,warmups);\n  assignStatelessActiveTasks(clientStates,diff(TreeSet::new,allTaskIds,statefulTasks));\n  final boolean probingRebalanceNeeded=neededActiveTaskMovements + neededStandbyTaskMovements > 0;\n  log.info(\"Decided on assignment: \" + clientStates + \" with\"+ (probingRebalanceNeeded ? \"\" : \" no\")+ \" followup probing rebalance.\");\n  return probingRebalanceNeeded;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2267,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean assign(final Map<UUID,ClientState> clients,final Set<TaskId> allTaskIds,final Set<TaskId> statefulTaskIds,final AssignmentConfigs configs){\n  final SortedSet<TaskId> statefulTasks=new TreeSet<>(statefulTaskIds);\n  final TreeMap<UUID,ClientState> clientStates=new TreeMap<>(clients);\n  assignActiveStatefulTasks(clientStates,statefulTasks);\n  assignStandbyReplicaTasks(clientStates,allTaskIds,statefulTasks,configs);\n  final AtomicInteger remainingWarmupReplicas=new AtomicInteger(configs.maxWarmupReplicas);\n  final Map<TaskId,SortedSet<UUID>> tasksToCaughtUpClients=tasksToCaughtUpClients(statefulTasks,clientStates,configs.acceptableRecoveryLag);\n  final Map<UUID,Set<TaskId>> warmups=new TreeMap<>();\n  final int neededActiveTaskMovements=assignActiveTaskMovements(tasksToCaughtUpClients,clientStates,warmups,remainingWarmupReplicas);\n  final int neededStandbyTaskMovements=assignStandbyTaskMovements(tasksToCaughtUpClients,clientStates,remainingWarmupReplicas,warmups);\n  assignStatelessActiveTasks(clientStates,diff(TreeSet::new,allTaskIds,statefulTasks));\n  final boolean probingRebalanceNeeded=neededActiveTaskMovements + neededStandbyTaskMovements > 0;\n  log.info(\"Decided on assignment: \" + clientStates + \" with\"+ (probingRebalanceNeeded ? \"\" : \" no\")+ \" followup probing rebalance.\");\n  return probingRebalanceNeeded;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 106
      },
      "nodeContext" : "final boolean probingRebalanceNeeded=neededActiveTaskMovements + neededStandbyTaskMovements > 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 94,
    "startColumnNumber" : 47,
    "endLineNumber" : 94,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}