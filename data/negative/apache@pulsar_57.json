{
  "id" : 57,
  "expression" : "admin.bookies()",
  "projectName" : "apache@pulsar",
  "commitID" : "b5d219add8857a51be0a88fac6f957d0144d949c",
  "filePath" : "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/RackAwareTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "admin.bookies()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 111,
      "startColumnNumber" : 12,
      "endLineNumber" : 111,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 67
      },
      "nodeContext" : "admin.bookies().updateBookieRackInfo(bookie,group,bi)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 68
      },
      "nodeContext" : "admin.bookies().updateBookieRackInfo(bookie,group,bi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 101,
        "startColumnNumber" : 46,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String bookie=bookies.get(i).getLocalAddress().toString();\n  int rackId=i == 0 ? 1 : 2;\n  BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n  log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n  admin.bookies().updateBookieRackInfo(bookie,group,bi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < NUM_BOOKIES; i++) {\n  String bookie=bookies.get(i).getLocalAddress().toString();\n  int rackId=i == 0 ? 1 : 2;\n  BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n  log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n  admin.bookies().updateBookieRackInfo(bookie,group,bi);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2060,
        "startLineNumber" : 99,
        "startColumnNumber" : 49,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPlacement() throws Exception {\n  final String group=\"default\";\n  for (int i=0; i < NUM_BOOKIES; i++) {\n    String bookie=bookies.get(i).getLocalAddress().toString();\n    int rackId=i == 0 ? 1 : 2;\n    BookieInfo bi=BookieInfo.builder().rack(\"rack-\" + rackId).hostname(\"bookie-\" + (i + 1)).build();\n    log.info(\"setting rack for bookie at {} -- {}\",bookie,bi);\n    admin.bookies().updateBookieRackInfo(bookie,group,bi);\n  }\n  Awaitility.await().untilAsserted(() -> {\n    byte[] data=bkEnsemble.getZkClient().getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH,false,null);\n    TreeMap<String,Map<String,Map<String,String>>> rackInfoMap=new Gson().fromJson(new String(data),TreeMap.class);\n    assertTrue(rackInfoMap.get(group).size() == NUM_BOOKIES);\n    Set<String> racks=rackInfoMap.values().stream().map(Map::values).flatMap(bookieId -> bookieId.stream().map(rackInfo -> rackInfo.get(\"rack\"))).collect(Collectors.toSet());\n    assertTrue(racks.containsAll(Lists.newArrayList(\"rack-1\",\"rack-2\")));\n  }\n);\n  BookKeeper bkc=this.pulsar.getBookKeeperClient();\n  BookieId firstBookie=bookies.get(0).getBookieId();\n  for (int i=0; i < 100; i++) {\n    LedgerHandle lh=bkc.createLedger(2,2,DigestType.DUMMY,new byte[0]);\n    log.info(\"Ledger: {} -- Ensemble: {}\",i,lh.getLedgerMetadata().getEnsembleAt(0));\n    assertTrue(lh.getLedgerMetadata().getEnsembleAt(0).contains(firstBookie),\"first bookie in rack 0 not included in ensemble\");\n    lh.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 288,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 68
      },
      "nodeContext" : "admin.bookies().updateBookieRackInfo(bookie,group,bi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.pulsar.client.admin.Bookies"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 111,
    "startColumnNumber" : 12,
    "endLineNumber" : 111,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}