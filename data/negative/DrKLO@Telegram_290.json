{
  "id" : 290,
  "expression" : "\"ResendCode\"",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationSetupActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ResendCode\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 253,
      "startColumnNumber" : 68,
      "endLineNumber" : 253,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 253,
        "startColumnNumber" : 41,
        "endLineNumber" : 253,
        "endColumnNumber" : 102
      },
      "nodeContext" : "LocaleController.getString(\"ResendCode\",R.string.ResendCode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 103
      },
      "nodeContext" : "item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 104
      },
      "nodeContext" : "item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 250,
        "startColumnNumber" : 47,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ActionBarMenu menu=actionBar.createMenu();\n  ActionBarMenuItem item=menu.addItem(0,R.drawable.ic_ab_other);\n  item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n  item.addSubItem(item_abort,LocaleController.getString(\"AbortPasswordMenu\",R.string.AbortPasswordMenu));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 250,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (currentType == TYPE_EMAIL_CONFIRM) {\n  ActionBarMenu menu=actionBar.createMenu();\n  ActionBarMenuItem item=menu.addItem(0,R.drawable.ic_ab_other);\n  item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n  item.addSubItem(item_abort,LocaleController.getString(\"AbortPasswordMenu\",R.string.AbortPasswordMenu));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 56683,
        "startLineNumber" : 199,
        "startColumnNumber" : 44,
        "endLineNumber" : 1072,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  actionBar.setBackgroundDrawable(null);\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(false);\n  actionBar.setTitleColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  actionBar.setItemsColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText2),false);\n  actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_actionBarWhiteSelector),false);\n  actionBar.setCastShadows(false);\n  actionBar.setAddToContainer(false);\n  if (!AndroidUtilities.isTablet()) {\n    actionBar.showActionModeTop();\n  }\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == item_resend) {\n        TLRPC.TL_account_resendPasswordEmail req=new TLRPC.TL_account_resendPasswordEmail();\n        ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n        }\n);\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setMessage(LocaleController.getString(\"ResendCodeInfo\",R.string.ResendCodeInfo));\n        builder.setTitle(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\n        builder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),null);\n        showDialog(builder.create());\n      }\n else       if (id == item_abort) {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        String text;\n        if (currentPassword != null && currentPassword.has_password) {\n          text=LocaleController.getString(\"CancelEmailQuestion\",R.string.CancelEmailQuestion);\n        }\n else {\n          text=LocaleController.getString(\"CancelPasswordQuestion\",R.string.CancelPasswordQuestion);\n        }\n        String title=LocaleController.getString(\"CancelEmailQuestionTitle\",R.string.CancelEmailQuestionTitle);\n        String buttonText=LocaleController.getString(\"Abort\",R.string.Abort);\n        builder.setMessage(text);\n        builder.setTitle(title);\n        builder.setPositiveButton(buttonText,(dialogInterface,i) -> setNewPassword(true));\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog alertDialog=builder.create();\n        showDialog(alertDialog);\n        TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n);\n  if (currentType == TYPE_EMAIL_CONFIRM) {\n    ActionBarMenu menu=actionBar.createMenu();\n    ActionBarMenuItem item=menu.addItem(0,R.drawable.ic_ab_other);\n    item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n    item.addSubItem(item_abort,LocaleController.getString(\"AbortPasswordMenu\",R.string.AbortPasswordMenu));\n  }\n  topButton=new TextView(context);\n  topButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlueText2));\n  topButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  topButton.setGravity(Gravity.CENTER_VERTICAL);\n  topButton.setVisibility(View.GONE);\n  actionBar.addView(topButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.MATCH_PARENT,Gravity.TOP | Gravity.RIGHT,0,0,22,0));\n  topButton.setOnClickListener(v -> {\n    if (currentType == TYPE_ENTER_EMAIL) {\n      AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n      builder.setMessage(LocaleController.getString(\"YourEmailSkipWarningText\",R.string.YourEmailSkipWarningText));\n      builder.setTitle(LocaleController.getString(\"YourEmailSkipWarning\",R.string.YourEmailSkipWarning));\n      builder.setPositiveButton(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip),(dialogInterface,i) -> {\n        email=\"\";\n        setNewPassword(false);\n      }\n);\n      builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n      AlertDialog alertDialog=builder.create();\n      showDialog(alertDialog);\n      TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n      if (button != null) {\n        button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n      }\n    }\n else     if (currentType == TYPE_ENTER_HINT) {\n      onHintDone();\n    }\n  }\n);\n  imageView=new RLottieImageView(context);\n  imageView.setScaleType(ImageView.ScaleType.CENTER);\n  titleTextView=new TextView(context);\n  titleTextView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  titleTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n  titleTextView.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,24);\n  descriptionText=new TextView(context);\n  descriptionText.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText6));\n  descriptionText.setGravity(Gravity.CENTER_HORIZONTAL);\n  descriptionText.setLineSpacing(AndroidUtilities.dp(2),1);\n  descriptionText.setTextSize(TypedValue.COMPLEX_UNIT_DIP,15);\n  descriptionText.setVisibility(View.GONE);\n  descriptionText.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  descriptionText2=new TextView(context);\n  descriptionText2.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText6));\n  descriptionText2.setGravity(Gravity.CENTER_HORIZONTAL);\n  descriptionText2.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  descriptionText2.setLineSpacing(AndroidUtilities.dp(2),1);\n  descriptionText2.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  descriptionText2.setVisibility(View.GONE);\n  buttonTextView=new TextView(context);\n  buttonTextView.setMinWidth(AndroidUtilities.dp(220));\n  buttonTextView.setPadding(AndroidUtilities.dp(34),0,AndroidUtilities.dp(34),0);\n  buttonTextView.setGravity(Gravity.CENTER);\n  buttonTextView.setTextColor(Theme.getColor(Theme.key_featuredStickers_buttonText));\n  buttonTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  buttonTextView.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  buttonTextView.setBackgroundDrawable(Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(4),Theme.getColor(Theme.key_featuredStickers_addButton),Theme.getColor(Theme.key_featuredStickers_addButtonPressed)));\n  buttonTextView.setOnClickListener(v -> {\n    if (getParentActivity() == null) {\n      return;\n    }\nswitch (currentType) {\ncase TYPE_INTRO:{\n        if (currentPassword == null) {\n          needShowProgress();\n          doneAfterPasswordLoad=true;\n          return;\n        }\n        TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_FIRST,currentPassword);\n        fragment.closeAfterSet=closeAfterSet;\n        presentFragment(fragment,true);\n        break;\n      }\ncase TYPE_PASSWORD_SET:{\n      if (closeAfterSet) {\n        finishFragment();\n      }\n else {\n        TwoStepVerificationActivity fragment=new TwoStepVerificationActivity();\n        fragment.setCurrentPasswordParams(currentPassword,currentPasswordHash,currentSecretId,currentSecret);\n        presentFragment(fragment,true);\n      }\n      break;\n    }\ncase TYPE_ENTER_FIRST:{\n    if (passwordEditText.length() == 0) {\n      onFieldError(passwordEditText,false);\n      return;\n    }\n    TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_SECOND,currentPassword);\n    fragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\n    fragment.firstPassword=passwordEditText.getText().toString();\n    fragment.fragmentsToClose.addAll(fragmentsToClose);\n    fragment.fragmentsToClose.add(this);\n    fragment.closeAfterSet=closeAfterSet;\n    presentFragment(fragment);\n    break;\n  }\ncase TYPE_ENTER_SECOND:{\n  if (!firstPassword.equals(passwordEditText.getText().toString())) {\n    try {\n      Toast.makeText(getParentActivity(),LocaleController.getString(\"PasswordDoNotMatch\",R.string.PasswordDoNotMatch),Toast.LENGTH_SHORT).show();\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    onFieldError(passwordEditText,false);\n    return;\n  }\n  TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_HINT,currentPassword);\n  fragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\n  fragment.firstPassword=firstPassword;\n  fragment.fragmentsToClose.addAll(fragmentsToClose);\n  fragment.fragmentsToClose.add(this);\n  fragment.closeAfterSet=closeAfterSet;\n  presentFragment(fragment);\n  break;\n}\ncase TYPE_ENTER_HINT:{\nString hint=passwordEditText.getText().toString();\nif (hint.toLowerCase().equals(firstPassword.toLowerCase())) {\n  try {\n    Toast.makeText(getParentActivity(),LocaleController.getString(\"PasswordAsHintError\",R.string.PasswordAsHintError),Toast.LENGTH_SHORT).show();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  onFieldError(passwordEditText,false);\n  return;\n}\nonHintDone();\nbreak;\n}\ncase TYPE_ENTER_EMAIL:{\nemail=passwordEditText.getText().toString();\nif (!isValidEmail(email)) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nsetNewPassword(false);\nbreak;\n}\ncase TYPE_EMAIL_RECOVERY:{\nString code=passwordEditText.getText().toString();\nif (code.length() == 0) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nTLRPC.TL_auth_recoverPassword req=new TLRPC.TL_auth_recoverPassword();\nreq.code=code;\nConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\nif (error == null) {\nAlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\nbuilder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),(dialogInterface,i) -> {\n  for (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n    fragmentsToClose.get(a).removeSelfFromStack();\n  }\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged);\n  finishFragment();\n}\n);\nbuilder.setMessage(LocaleController.getString(\"PasswordReset\",R.string.PasswordReset));\nbuilder.setTitle(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\nDialog dialog=showDialog(builder.create());\nif (dialog != null) {\n  dialog.setCanceledOnTouchOutside(false);\n  dialog.setCancelable(false);\n}\n}\n else {\nif (error.text.startsWith(\"CODE_INVALID\")) {\n  onFieldError(passwordEditText,true);\n}\n else if (error.text.startsWith(\"FLOOD_WAIT\")) {\n  int time=Utilities.parseInt(error.text);\n  String timeString;\n  if (time < 60) {\n    timeString=LocaleController.formatPluralString(\"Seconds\",time);\n  }\n else {\n    timeString=LocaleController.formatPluralString(\"Minutes\",time / 60);\n  }\n  showAlertWithText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle),LocaleController.formatString(\"FloodWaitTime\",R.string.FloodWaitTime,timeString));\n}\n else {\n  showAlertWithText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle),error.text);\n}\n}\n}\n),ConnectionsManager.RequestFlagFailOnServerErrors | ConnectionsManager.RequestFlagWithoutLogin);\nbreak;\n}\ncase TYPE_EMAIL_CONFIRM:{\nif (passwordEditText.length() == 0) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nTLRPC.TL_account_confirmPasswordEmail req=new TLRPC.TL_account_confirmPasswordEmail();\nreq.code=passwordEditText.getText().toString();\nConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\nneedHideProgress();\nif (error == null) {\nif (getParentActivity() == null) {\nreturn;\n}\nif (currentPassword.has_password) {\nAlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\nbuilder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),(dialogInterface,i) -> {\n  for (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n    fragmentsToClose.get(a).removeSelfFromStack();\n  }\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged,currentPasswordHash,currentPassword.new_algo,currentPassword.new_secure_algo,currentPassword.secure_random,email,hint,null,firstPassword);\n  TwoStepVerificationActivity fragment=new TwoStepVerificationActivity();\n  currentPassword.has_password=true;\n  currentPassword.has_recovery=true;\n  currentPassword.email_unconfirmed_pattern=\"\";\n  fragment.setCurrentPasswordParams(currentPassword,currentPasswordHash,currentSecretId,currentSecret);\n  presentFragment(fragment,true);\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.didSetOrRemoveTwoStepPassword,currentPassword);\n}\n);\nif (currentPassword.has_recovery) {\n  builder.setMessage(LocaleController.getString(\"YourEmailSuccessChangedText\",R.string.YourEmailSuccessChangedText));\n}\n else {\n  builder.setMessage(LocaleController.getString(\"YourEmailSuccessText\",R.string.YourEmailSuccessText));\n}\nbuilder.setTitle(LocaleController.getString(\"YourPasswordSuccess\",R.string.YourPasswordSuccess));\nDialog dialog=showDialog(builder.create());\nif (dialog != null) {\n  dialog.setCanceledOnTouchOutside(false);\n  dialog.setCancelable(false);\n}\n}\n else {\nfor (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n  fragmentsToClose.get(a).removeSelfFromStack();\n}\ncurrentPassword.has_password=true;\ncurrentPassword.has_recovery=true;\ncurrentPassword.email_unconfirmed_pattern=\"\";\nTwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(TYPE_PASSWORD_SET,currentPassword);\nfragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\nfragment.closeAfterSet=closeAfterSet;\npresentFragment(fragment,true);\nNotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged,currentPasswordHash,currentPassword.new_algo,currentPassword.new_secure_algo,currentPassword.secure_random,email,hint,null,firstPassword);\nNotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.didSetOrRemoveTwoStepPassword,currentPassword);\n}\n}\n else {\nif (error.text.startsWith(\"CODE_INVALID\")) {\nonFieldError(passwordEditText,true);\n}\n else if (error.text.startsWith(\"FLOOD_WAIT\")) {\nint time=Utilities.parseInt(error.text);\nString timeString;\nif (time < 60) {\n  timeString=LocaleController.formatPluralString(\"Seconds\",time);\n}\n else {\n  timeString=LocaleController.formatPluralString(\"Minutes\",time / 60);\n}\nshowAlertWithText(LocaleController.getString(\"AppName\",R.string.AppName),LocaleController.formatString(\"FloodWaitTime\",R.string.FloodWaitTime,timeString));\n}\n else {\nshowAlertWithText(LocaleController.getString(\"AppName\",R.string.AppName),error.text);\n}\n}\n}\n),ConnectionsManager.RequestFlagFailOnServerErrors | ConnectionsManager.RequestFlagWithoutLogin);\nneedShowProgress();\n}\n}\n}\n);\nswitch (currentType) {\ncase TYPE_INTRO:case TYPE_PASSWORD_SET:{\nViewGroup container=new ViewGroup(context){\n@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\nint width=MeasureSpec.getSize(widthMeasureSpec);\nint height=MeasureSpec.getSize(heightMeasureSpec);\nactionBar.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nif (width > height) {\nimageView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.45f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec((int)(height * 0.68f),MeasureSpec.EXACTLY));\ntitleTextView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText2.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\nbuttonTextView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(42),MeasureSpec.EXACTLY));\n}\n else {\nimageView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec((int)(height * 0.399f),MeasureSpec.EXACTLY));\ntitleTextView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText2.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\nbuttonTextView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(42),MeasureSpec.EXACTLY));\n}\nsetMeasuredDimension(width,height);\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nactionBar.layout(0,0,r,actionBar.getMeasuredHeight());\nint width=r - l;\nint height=b - t;\nif (r > b) {\nint y=(height - imageView.getMeasuredHeight()) / 2;\nimageView.layout(0,y,imageView.getMeasuredWidth(),y + imageView.getMeasuredHeight());\nint x=(int)(width * 0.4f);\ny=(int)(height * 0.22f);\ntitleTextView.layout(x,y,x + titleTextView.getMeasuredWidth(),y + titleTextView.getMeasuredHeight());\nx=(int)(width * 0.4f);\ny=(int)(height * 0.39f);\ndescriptionText.layout(x,y,x + descriptionText.getMeasuredWidth(),y + descriptionText.getMeasuredHeight());\nx=(int)(width * 0.4f + (width * 0.6f - buttonTextView.getMeasuredWidth()) / 2);\ny=(int)(height * 0.64f);\nbuttonTextView.layout(x,y,x + buttonTextView.getMeasuredWidth(),y + buttonTextView.getMeasuredHeight());\n}\n else {\nint y=(int)(height * 0.148f);\nimageView.layout(0,y,imageView.getMeasuredWidth(),y + imageView.getMeasuredHeight());\ny=(int)(height * 0.458f);\ntitleTextView.layout(0,y,titleTextView.getMeasuredWidth(),y + titleTextView.getMeasuredHeight());\ny+=titleTextView.getMeasuredHeight() + AndroidUtilities.dp(12);\ndescriptionText.layout(0,y,descriptionText.getMeasuredWidth(),y + descriptionText.getMeasuredHeight());\nint x=(width - buttonTextView.getMeasuredWidth()) / 2;\ny=(int)(height * 0.791f);\nbuttonTextView.layout(x,y,x + buttonTextView.getMeasuredWidth(),y + buttonTextView.getMeasuredHeight());\n}\n}\n}\n;\ncontainer.setOnTouchListener((v,event) -> true);\ncontainer.addView(actionBar);\ncontainer.addView(imageView);\ncontainer.addView(titleTextView);\ncontainer.addView(descriptionText);\ncontainer.addView(buttonTextView);\nfragmentView=container;\nbreak;\n}\ncase TYPE_ENTER_FIRST:case TYPE_ENTER_SECOND:case TYPE_EMAIL_CONFIRM:case TYPE_EMAIL_RECOVERY:case TYPE_ENTER_HINT:case TYPE_ENTER_EMAIL:{\nViewGroup container=new ViewGroup(context){\n@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\nint width=MeasureSpec.getSize(widthMeasureSpec);\nint height=MeasureSpec.getSize(heightMeasureSpec);\nif (topButton != null) {\nFrameLayout.LayoutParams layoutParams=(FrameLayout.LayoutParams)topButton.getLayoutParams();\nlayoutParams.topMargin=AndroidUtilities.statusBarHeight;\n}\nactionBar.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nactionBarBackground.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(actionBar.getMeasuredHeight() + AndroidUtilities.dp(3),MeasureSpec.EXACTLY));\nscrollView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nsetMeasuredDimension(width,height);\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nactionBar.layout(0,0,actionBar.getMeasuredWidth(),actionBar.getMeasuredHeight());\nactionBarBackground.layout(0,0,actionBarBackground.getMeasuredWidth(),actionBarBackground.getMeasuredHeight());\nscrollView.layout(0,0,scrollView.getMeasuredWidth(),scrollView.getMeasuredHeight());\n}\n}\n;\nscrollView=new ScrollView(context){\nprivate int[] location=new int[2];\nprivate Rect tempRect=new Rect();\nprivate boolean isLayoutDirty=true;\nprivate int scrollingUp;\n@Override protected void onScrollChanged(int l,int t,int oldl,int oldt){\nsuper.onScrollChanged(l,t,oldl,oldt);\nif (titleTextView == null) {\nreturn;\n}\ntitleTextView.getLocationOnScreen(location);\nboolean show=location[1] + titleTextView.getMeasuredHeight() < actionBar.getBottom();\nboolean visible=titleTextView.getTag() == null;\nif (show != visible) {\ntitleTextView.setTag(show ? null : 1);\nif (actionBarAnimator != null) {\nactionBarAnimator.cancel();\nactionBarAnimator=null;\n}\nactionBarAnimator=new AnimatorSet();\nactionBarAnimator.playTogether(ObjectAnimator.ofFloat(actionBarBackground,View.ALPHA,show ? 1.0f : 0.0f),ObjectAnimator.ofFloat(actionBar.getTitleTextView(),View.ALPHA,show ? 1.0f : 0.0f));\nactionBarAnimator.setDuration(150);\nactionBarAnimator.addListener(new AnimatorListenerAdapter(){\n@Override public void onAnimationEnd(Animator animation){\nif (animation.equals(actionBarAnimator)) {\nactionBarAnimator=null;\n}\n}\n}\n);\nactionBarAnimator.start();\n}\n}\n@Override public void scrollToDescendant(View child){\nchild.getDrawingRect(tempRect);\noffsetDescendantRectToMyCoords(child,tempRect);\ntempRect.bottom+=AndroidUtilities.dp(120);\nint scrollDelta=computeScrollDeltaToGetChildRectOnScreen(tempRect);\nif (scrollDelta < 0) {\nscrollDelta-=(scrollingUp=(getMeasuredHeight() - child.getMeasuredHeight()) / 2);\n}\n else {\nscrollingUp=0;\n}\nif (scrollDelta != 0) {\nsmoothScrollBy(0,scrollDelta);\n}\n}\n@Override public void requestChildFocus(View child,View focused){\nif (Build.VERSION.SDK_INT < 29) {\nif (focused != null && !isLayoutDirty) {\nscrollToDescendant(focused);\n}\n}\nsuper.requestChildFocus(child,focused);\n}\n@Override public boolean requestChildRectangleOnScreen(View child,Rect rectangle,boolean immediate){\nif (Build.VERSION.SDK_INT < 23) {\nrectangle.bottom+=AndroidUtilities.dp(120);\nif (scrollingUp != 0) {\nrectangle.top-=scrollingUp;\nrectangle.bottom-=scrollingUp;\nscrollingUp=0;\n}\n}\nreturn super.requestChildRectangleOnScreen(child,rectangle,immediate);\n}\n@Override public void requestLayout(){\nisLayoutDirty=true;\nsuper.requestLayout();\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nisLayoutDirty=false;\nsuper.onLayout(changed,l,t,r,b);\n}\n}\n;\nscrollView.setVerticalScrollBarEnabled(false);\ncontainer.addView(scrollView);\nLinearLayout scrollViewLinearLayout=new LinearLayout(context);\nscrollViewLinearLayout.setOrientation(LinearLayout.VERTICAL);\nscrollView.addView(scrollViewLinearLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\nscrollViewLinearLayout.addView(imageView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,69,0,0));\nscrollViewLinearLayout.addView(titleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,8,0,0));\nscrollViewLinearLayout.addView(descriptionText,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,9,0,0));\nFrameLayout frameLayout=new FrameLayout(context);\nscrollViewLinearLayout.addView(frameLayout,LayoutHelper.createLinear(220,36,Gravity.TOP | Gravity.CENTER_HORIZONTAL,40,32,40,0));\npasswordEditText=new EditTextBoldCursor(context);\npasswordEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP,17);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),0,0);\npasswordEditText.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\npasswordEditText.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\npasswordEditText.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\npasswordEditText.setHintColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\npasswordEditText.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\npasswordEditText.setMaxLines(1);\npasswordEditText.setLines(1);\npasswordEditText.setGravity(Gravity.LEFT);\npasswordEditText.setCursorSize(AndroidUtilities.dp(20));\npasswordEditText.setSingleLine(true);\npasswordEditText.setCursorWidth(1.5f);\nframeLayout.addView(passwordEditText,LayoutHelper.createFrame(220,36,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\npasswordEditText.setOnEditorActionListener((textView,i,keyEvent) -> {\nif (i == EditorInfo.IME_ACTION_NEXT || i == EditorInfo.IME_ACTION_DONE) {\nbuttonTextView.callOnClick();\nreturn true;\n}\nreturn false;\n}\n);\npasswordEditText.setCustomSelectionActionModeCallback(new ActionMode.Callback(){\npublic boolean onPrepareActionMode(ActionMode mode,Menu menu){\nreturn false;\n}\npublic void onDestroyActionMode(ActionMode mode){\n}\npublic boolean onCreateActionMode(ActionMode mode,Menu menu){\nreturn false;\n}\npublic boolean onActionItemClicked(ActionMode mode,MenuItem item){\nreturn false;\n}\n}\n);\nshowPasswordButton=new ImageView(context);\nshowPasswordButton.setImageResource(R.drawable.msg_message);\nshowPasswordButton.setScaleType(ImageView.ScaleType.CENTER);\nif (Build.VERSION.SDK_INT >= 21) {\nshowPasswordButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_listSelector)));\n}\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons),PorterDuff.Mode.MULTIPLY));\nshowPasswordButton.setVisibility(View.GONE);\nframeLayout.addView(showPasswordButton,LayoutHelper.createFrame(36,36,Gravity.RIGHT | Gravity.TOP,0,-5,0,0));\nshowPasswordButton.setOnClickListener(v -> {\nignoreTextChange=true;\nif (passwordEditText.getTransformationMethod() == null) {\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons),PorterDuff.Mode.MULTIPLY));\nif (currentType == TYPE_ENTER_FIRST) {\nif (passwordEditText.length() > 0) {\nanimationDrawables[3].setCustomEndFrame(-1);\nif (imageView.getAnimatedDrawable() != animationDrawables[3]) {\nimageView.setAnimation(animationDrawables[3]);\nanimationDrawables[3].setCurrentFrame(18,false);\n}\nimageView.playAnimation();\n}\n}\n}\n else {\npasswordEditText.setTransformationMethod(null);\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelSend),PorterDuff.Mode.MULTIPLY));\nif (currentType == TYPE_ENTER_FIRST) {\nif (passwordEditText.length() > 0) {\nanimationDrawables[3].setCustomEndFrame(18);\nif (imageView.getAnimatedDrawable() != animationDrawables[3]) {\nimageView.setAnimation(animationDrawables[3]);\n}\nanimationDrawables[3].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n}\n}\npasswordEditText.setSelection(passwordEditText.length());\nignoreTextChange=false;\n}\n);\nFrameLayout frameLayout2=new FrameLayout(context);\nscrollViewLinearLayout.addView(frameLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP,0,36,0,22));\nframeLayout2.addView(buttonTextView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,42,Gravity.CENTER_HORIZONTAL | Gravity.TOP));\nframeLayout2.addView(descriptionText2,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP));\nif (currentType == TYPE_EMAIL_RECOVERY) {\ndescriptionText3=new TextView(context);\ndescriptionText3.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteLinkText));\ndescriptionText3.setGravity(Gravity.CENTER_HORIZONTAL);\ndescriptionText3.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\ndescriptionText3.setLineSpacing(AndroidUtilities.dp(2),1);\ndescriptionText3.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\ndescriptionText3.setText(LocaleController.getString(\"RestoreEmailTroubleNoEmail\",R.string.RestoreEmailTroubleNoEmail));\nscrollViewLinearLayout.addView(descriptionText3,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,0,0,25));\ndescriptionText3.setOnClickListener(v -> showAlertWithText(LocaleController.getString(\"RestorePasswordNoEmailTitle\",R.string.RestorePasswordNoEmailTitle),LocaleController.getString(\"RestoreEmailTroubleText\",R.string.RestoreEmailTroubleText)));\n}\nfragmentView=container;\nactionBarBackground=new View(context){\nprivate Paint paint=new Paint();\n@Override protected void onDraw(Canvas canvas){\npaint.setColor(Theme.getColor(Theme.key_windowBackgroundWhite));\nint h=getMeasuredHeight() - AndroidUtilities.dp(3);\ncanvas.drawRect(0,0,getMeasuredWidth(),h,paint);\nparentLayout.drawHeaderShadow(canvas,h);\n}\n}\n;\nactionBarBackground.setAlpha(0.0f);\ncontainer.addView(actionBarBackground);\ncontainer.addView(actionBar);\nbreak;\n}\n}\nfragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));\nswitch (currentType) {\ncase TYPE_INTRO:{\ntitleTextView.setText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\ndescriptionText.setText(LocaleController.getString(\"SetAdditionalPasswordInfo\",R.string.SetAdditionalPasswordInfo));\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationSetPassword\",R.string.TwoStepVerificationSetPassword));\ndescriptionText.setVisibility(View.VISIBLE);\nimageView.setAnimation(R.raw.tsv_setup_intro,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_PASSWORD_SET:{\ntitleTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordSet\",R.string.TwoStepVerificationPasswordSet));\ndescriptionText.setText(LocaleController.getString(\"TwoStepVerificationPasswordSetInfo\",R.string.TwoStepVerificationPasswordSetInfo));\nif (closeAfterSet) {\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordReturnPassport\",R.string.TwoStepVerificationPasswordReturnPassport));\n}\n else {\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordReturnSettings\",R.string.TwoStepVerificationPasswordReturnSettings));\n}\ndescriptionText.setVisibility(View.VISIBLE);\nimageView.setAnimation(R.raw.wallet_allset,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_FIRST:{\nif (currentPassword.has_password) {\nactionBar.setTitle(LocaleController.getString(\"PleaseEnterNewFirstPassword\",R.string.PleaseEnterNewFirstPassword));\ntitleTextView.setText(LocaleController.getString(\"PleaseEnterNewFirstPassword\",R.string.PleaseEnterNewFirstPassword));\n}\n else {\nactionBar.setTitle(LocaleController.getString(\"PleaseEnterFirstPassword\",R.string.PleaseEnterFirstPassword));\ntitleTextView.setText(LocaleController.getString(\"PleaseEnterFirstPassword\",R.string.PleaseEnterFirstPassword));\n}\nactionBar.getTitleTextView().setAlpha(0.0f);\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"LoginPassword\",R.string.LoginPassword));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\npasswordEditText.setTypeface(Typeface.DEFAULT);\nshowPasswordButton.setVisibility(View.VISIBLE);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),AndroidUtilities.dp(36),0);\nanimationDrawables=new RLottieDrawable[6];\nanimationDrawables[0]=new RLottieDrawable(R.raw.tsv_setup_monkey_idle1,\"\" + R.raw.tsv_setup_monkey_idle1,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[1]=new RLottieDrawable(R.raw.tsv_setup_monkey_idle2,\"\" + R.raw.tsv_setup_monkey_idle2,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[2]=new RLottieDrawable(R.raw.tsv_monkey_close,\"\" + R.raw.tsv_monkey_close,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[3]=new RLottieDrawable(R.raw.tsv_setup_monkey_peek,\"\" + R.raw.tsv_setup_monkey_peek,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[4]=new RLottieDrawable(R.raw.tsv_setup_monkey_close_and_peek_to_idle,\"\" + R.raw.tsv_setup_monkey_close_and_peek_to_idle,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[5]=new RLottieDrawable(R.raw.tsv_setup_monkey_close_and_peek,\"\" + R.raw.tsv_setup_monkey_close_and_peek,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[2].setOnFinishCallback(finishCallback,97);\nsetRandomMonkeyIdleAnimation(true);\nbreak;\n}\ncase TYPE_ENTER_SECOND:{\nactionBar.setTitle(LocaleController.getString(\"PleaseReEnterPassword\",R.string.PleaseReEnterPassword));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"PleaseReEnterPassword\",R.string.PleaseReEnterPassword));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"LoginPassword\",R.string.LoginPassword));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\npasswordEditText.setTypeface(Typeface.DEFAULT);\nshowPasswordButton.setVisibility(View.VISIBLE);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),AndroidUtilities.dp(36),0);\nanimationDrawables=new RLottieDrawable[1];\nanimationDrawables[0]=new RLottieDrawable(R.raw.tsv_setup_monkey_tracking,\"\" + R.raw.tsv_setup_monkey_tracking,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[0].setPlayInDirectionOfCustomEndFrame(true);\nanimationDrawables[0].setCustomEndFrame(19);\nimageView.setAnimation(animationDrawables[0]);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_HINT:{\nactionBar.setTitle(LocaleController.getString(\"PasswordHint\",R.string.PasswordHint));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntopButton.setVisibility(View.VISIBLE);\ntopButton.setText(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip));\ntitleTextView.setText(LocaleController.getString(\"PasswordHint\",R.string.PasswordHint));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"PasswordHintPlaceholder\",R.string.PasswordHintPlaceholder));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\nimageView.setAnimation(R.raw.tsv_setup_hint,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_EMAIL:{\nactionBar.setTitle(LocaleController.getString(\"RecoveryEmailTitle\",R.string.RecoveryEmailTitle));\nactionBar.getTitleTextView().setAlpha(0.0f);\nif (!emailOnly) {\ntopButton.setVisibility(View.VISIBLE);\ntopButton.setText(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip));\n}\ntitleTextView.setText(LocaleController.getString(\"RecoveryEmailTitle\",R.string.RecoveryEmailTitle));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"PaymentShippingEmailPlaceholder\",R.string.PaymentShippingEmailPlaceholder));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(EditorInfo.TYPE_CLASS_TEXT | EditorInfo.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);\nimageView.setAnimation(R.raw.tsv_setup_email_sent,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_EMAIL_CONFIRM:{\nactionBar.setTitle(LocaleController.getString(\"VerificationCode\",R.string.VerificationCode));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"VerificationCode\",R.string.VerificationCode));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"EnterCode\",R.string.EnterCode));\npasswordEditText.setInputType(InputType.TYPE_CLASS_PHONE);\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\ndescriptionText2.setText(LocaleController.formatString(\"EmailPasswordConfirmText2\",R.string.EmailPasswordConfirmText2,currentPassword.email_unconfirmed_pattern != null ? currentPassword.email_unconfirmed_pattern : \"\"));\ndescriptionText2.setVisibility(View.VISIBLE);\nbuttonTextView.setVisibility(View.INVISIBLE);\nbuttonTextView.setAlpha(0.0f);\nbuttonTextView.setScaleX(0.9f);\nbuttonTextView.setScaleY(0.9f);\nimageView.setAnimation(R.raw.tsv_setup_mail,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_EMAIL_RECOVERY:{\nactionBar.setTitle(LocaleController.getString(\"PasswordRecovery\",R.string.PasswordRecovery));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"PasswordRecovery\",R.string.PasswordRecovery));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"EnterCode\",R.string.EnterCode));\npasswordEditText.setInputType(InputType.TYPE_CLASS_PHONE);\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\ndescriptionText2.setText(LocaleController.formatString(\"RestoreEmailSent\",R.string.RestoreEmailSent,currentPassword.email_unconfirmed_pattern != null ? currentPassword.email_unconfirmed_pattern : \"\"));\ndescriptionText2.setVisibility(View.VISIBLE);\nbuttonTextView.setVisibility(View.INVISIBLE);\nbuttonTextView.setAlpha(0.0f);\nbuttonTextView.setScaleX(0.9f);\nbuttonTextView.setScaleY(0.9f);\nimageView.setAnimation(R.raw.tsv_setup_mail,120,120);\nimageView.playAnimation();\nbreak;\n}\n}\nif (passwordEditText != null) {\npasswordEditText.addTextChangedListener(new TextWatcher(){\n@Override public void beforeTextChanged(CharSequence s,int start,int count,int after){\n}\n@Override public void onTextChanged(CharSequence s,int start,int before,int count){\n}\n@Override public void afterTextChanged(Editable s){\nif (ignoreTextChange) {\nreturn;\n}\nif (currentType == TYPE_ENTER_FIRST) {\nRLottieDrawable currentDrawable=imageView.getAnimatedDrawable();\nif (passwordEditText.length() > 0) {\nif (passwordEditText.getTransformationMethod() == null) {\nif (currentDrawable != animationDrawables[3] && currentDrawable != animationDrawables[5]) {\nimageView.setAnimation(animationDrawables[5]);\nanimationDrawables[5].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n}\n else {\nif (currentDrawable != animationDrawables[3]) {\nif (currentDrawable != animationDrawables[2]) {\nimageView.setAnimation(animationDrawables[2]);\nanimationDrawables[2].setCustomEndFrame(49);\nanimationDrawables[2].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n else {\nif (animationDrawables[2].getCurrentFrame() < 49) {\nanimationDrawables[2].setCustomEndFrame(49);\n}\n}\n}\n}\n}\n else {\nif (currentDrawable == animationDrawables[3] && passwordEditText.getTransformationMethod() == null || currentDrawable == animationDrawables[5]) {\nimageView.setAnimation(animationDrawables[4]);\nanimationDrawables[4].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n else {\nanimationDrawables[2].setCustomEndFrame(-1);\nif (currentDrawable != animationDrawables[2]) {\nimageView.setAnimation(animationDrawables[2]);\nanimationDrawables[2].setCurrentFrame(49,false);\n}\nimageView.playAnimation();\n}\n}\n}\n else if (currentType == TYPE_ENTER_SECOND) {\ntry {\nfloat progress=Math.min(1.0f,passwordEditText.getLayout().getLineWidth(0) / passwordEditText.getWidth());\nanimationDrawables[0].setCustomEndFrame((int)(18 + progress * (160 - 18)));\nimageView.playAnimation();\n}\n catch (Exception e) {\nFileLog.e(e);\n}\n}\n else if (currentType == TYPE_EMAIL_CONFIRM || currentType == TYPE_EMAIL_RECOVERY) {\nif (emailCodeLength != 0 && s.length() == emailCodeLength) {\nbuttonTextView.callOnClick();\n}\nshowDoneButton(s.length() > 0);\n}\n}\n}\n);\n}\nreturn fragmentView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5781,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 56737,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 1072,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public View createView(Context context){\n  actionBar.setBackgroundDrawable(null);\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(false);\n  actionBar.setTitleColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  actionBar.setItemsColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText2),false);\n  actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_actionBarWhiteSelector),false);\n  actionBar.setCastShadows(false);\n  actionBar.setAddToContainer(false);\n  if (!AndroidUtilities.isTablet()) {\n    actionBar.showActionModeTop();\n  }\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == item_resend) {\n        TLRPC.TL_account_resendPasswordEmail req=new TLRPC.TL_account_resendPasswordEmail();\n        ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n        }\n);\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setMessage(LocaleController.getString(\"ResendCodeInfo\",R.string.ResendCodeInfo));\n        builder.setTitle(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\n        builder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),null);\n        showDialog(builder.create());\n      }\n else       if (id == item_abort) {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        String text;\n        if (currentPassword != null && currentPassword.has_password) {\n          text=LocaleController.getString(\"CancelEmailQuestion\",R.string.CancelEmailQuestion);\n        }\n else {\n          text=LocaleController.getString(\"CancelPasswordQuestion\",R.string.CancelPasswordQuestion);\n        }\n        String title=LocaleController.getString(\"CancelEmailQuestionTitle\",R.string.CancelEmailQuestionTitle);\n        String buttonText=LocaleController.getString(\"Abort\",R.string.Abort);\n        builder.setMessage(text);\n        builder.setTitle(title);\n        builder.setPositiveButton(buttonText,(dialogInterface,i) -> setNewPassword(true));\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog alertDialog=builder.create();\n        showDialog(alertDialog);\n        TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n);\n  if (currentType == TYPE_EMAIL_CONFIRM) {\n    ActionBarMenu menu=actionBar.createMenu();\n    ActionBarMenuItem item=menu.addItem(0,R.drawable.ic_ab_other);\n    item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n    item.addSubItem(item_abort,LocaleController.getString(\"AbortPasswordMenu\",R.string.AbortPasswordMenu));\n  }\n  topButton=new TextView(context);\n  topButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlueText2));\n  topButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  topButton.setGravity(Gravity.CENTER_VERTICAL);\n  topButton.setVisibility(View.GONE);\n  actionBar.addView(topButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.MATCH_PARENT,Gravity.TOP | Gravity.RIGHT,0,0,22,0));\n  topButton.setOnClickListener(v -> {\n    if (currentType == TYPE_ENTER_EMAIL) {\n      AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n      builder.setMessage(LocaleController.getString(\"YourEmailSkipWarningText\",R.string.YourEmailSkipWarningText));\n      builder.setTitle(LocaleController.getString(\"YourEmailSkipWarning\",R.string.YourEmailSkipWarning));\n      builder.setPositiveButton(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip),(dialogInterface,i) -> {\n        email=\"\";\n        setNewPassword(false);\n      }\n);\n      builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n      AlertDialog alertDialog=builder.create();\n      showDialog(alertDialog);\n      TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n      if (button != null) {\n        button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n      }\n    }\n else     if (currentType == TYPE_ENTER_HINT) {\n      onHintDone();\n    }\n  }\n);\n  imageView=new RLottieImageView(context);\n  imageView.setScaleType(ImageView.ScaleType.CENTER);\n  titleTextView=new TextView(context);\n  titleTextView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  titleTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n  titleTextView.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,24);\n  descriptionText=new TextView(context);\n  descriptionText.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText6));\n  descriptionText.setGravity(Gravity.CENTER_HORIZONTAL);\n  descriptionText.setLineSpacing(AndroidUtilities.dp(2),1);\n  descriptionText.setTextSize(TypedValue.COMPLEX_UNIT_DIP,15);\n  descriptionText.setVisibility(View.GONE);\n  descriptionText.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  descriptionText2=new TextView(context);\n  descriptionText2.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayText6));\n  descriptionText2.setGravity(Gravity.CENTER_HORIZONTAL);\n  descriptionText2.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  descriptionText2.setLineSpacing(AndroidUtilities.dp(2),1);\n  descriptionText2.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\n  descriptionText2.setVisibility(View.GONE);\n  buttonTextView=new TextView(context);\n  buttonTextView.setMinWidth(AndroidUtilities.dp(220));\n  buttonTextView.setPadding(AndroidUtilities.dp(34),0,AndroidUtilities.dp(34),0);\n  buttonTextView.setGravity(Gravity.CENTER);\n  buttonTextView.setTextColor(Theme.getColor(Theme.key_featuredStickers_buttonText));\n  buttonTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  buttonTextView.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  buttonTextView.setBackgroundDrawable(Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(4),Theme.getColor(Theme.key_featuredStickers_addButton),Theme.getColor(Theme.key_featuredStickers_addButtonPressed)));\n  buttonTextView.setOnClickListener(v -> {\n    if (getParentActivity() == null) {\n      return;\n    }\nswitch (currentType) {\ncase TYPE_INTRO:{\n        if (currentPassword == null) {\n          needShowProgress();\n          doneAfterPasswordLoad=true;\n          return;\n        }\n        TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_FIRST,currentPassword);\n        fragment.closeAfterSet=closeAfterSet;\n        presentFragment(fragment,true);\n        break;\n      }\ncase TYPE_PASSWORD_SET:{\n      if (closeAfterSet) {\n        finishFragment();\n      }\n else {\n        TwoStepVerificationActivity fragment=new TwoStepVerificationActivity();\n        fragment.setCurrentPasswordParams(currentPassword,currentPasswordHash,currentSecretId,currentSecret);\n        presentFragment(fragment,true);\n      }\n      break;\n    }\ncase TYPE_ENTER_FIRST:{\n    if (passwordEditText.length() == 0) {\n      onFieldError(passwordEditText,false);\n      return;\n    }\n    TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_SECOND,currentPassword);\n    fragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\n    fragment.firstPassword=passwordEditText.getText().toString();\n    fragment.fragmentsToClose.addAll(fragmentsToClose);\n    fragment.fragmentsToClose.add(this);\n    fragment.closeAfterSet=closeAfterSet;\n    presentFragment(fragment);\n    break;\n  }\ncase TYPE_ENTER_SECOND:{\n  if (!firstPassword.equals(passwordEditText.getText().toString())) {\n    try {\n      Toast.makeText(getParentActivity(),LocaleController.getString(\"PasswordDoNotMatch\",R.string.PasswordDoNotMatch),Toast.LENGTH_SHORT).show();\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    onFieldError(passwordEditText,false);\n    return;\n  }\n  TwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(currentAccount,TYPE_ENTER_HINT,currentPassword);\n  fragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\n  fragment.firstPassword=firstPassword;\n  fragment.fragmentsToClose.addAll(fragmentsToClose);\n  fragment.fragmentsToClose.add(this);\n  fragment.closeAfterSet=closeAfterSet;\n  presentFragment(fragment);\n  break;\n}\ncase TYPE_ENTER_HINT:{\nString hint=passwordEditText.getText().toString();\nif (hint.toLowerCase().equals(firstPassword.toLowerCase())) {\n  try {\n    Toast.makeText(getParentActivity(),LocaleController.getString(\"PasswordAsHintError\",R.string.PasswordAsHintError),Toast.LENGTH_SHORT).show();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  onFieldError(passwordEditText,false);\n  return;\n}\nonHintDone();\nbreak;\n}\ncase TYPE_ENTER_EMAIL:{\nemail=passwordEditText.getText().toString();\nif (!isValidEmail(email)) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nsetNewPassword(false);\nbreak;\n}\ncase TYPE_EMAIL_RECOVERY:{\nString code=passwordEditText.getText().toString();\nif (code.length() == 0) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nTLRPC.TL_auth_recoverPassword req=new TLRPC.TL_auth_recoverPassword();\nreq.code=code;\nConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\nif (error == null) {\nAlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\nbuilder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),(dialogInterface,i) -> {\n  for (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n    fragmentsToClose.get(a).removeSelfFromStack();\n  }\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged);\n  finishFragment();\n}\n);\nbuilder.setMessage(LocaleController.getString(\"PasswordReset\",R.string.PasswordReset));\nbuilder.setTitle(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\nDialog dialog=showDialog(builder.create());\nif (dialog != null) {\n  dialog.setCanceledOnTouchOutside(false);\n  dialog.setCancelable(false);\n}\n}\n else {\nif (error.text.startsWith(\"CODE_INVALID\")) {\n  onFieldError(passwordEditText,true);\n}\n else if (error.text.startsWith(\"FLOOD_WAIT\")) {\n  int time=Utilities.parseInt(error.text);\n  String timeString;\n  if (time < 60) {\n    timeString=LocaleController.formatPluralString(\"Seconds\",time);\n  }\n else {\n    timeString=LocaleController.formatPluralString(\"Minutes\",time / 60);\n  }\n  showAlertWithText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle),LocaleController.formatString(\"FloodWaitTime\",R.string.FloodWaitTime,timeString));\n}\n else {\n  showAlertWithText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle),error.text);\n}\n}\n}\n),ConnectionsManager.RequestFlagFailOnServerErrors | ConnectionsManager.RequestFlagWithoutLogin);\nbreak;\n}\ncase TYPE_EMAIL_CONFIRM:{\nif (passwordEditText.length() == 0) {\nonFieldError(passwordEditText,false);\nreturn;\n}\nTLRPC.TL_account_confirmPasswordEmail req=new TLRPC.TL_account_confirmPasswordEmail();\nreq.code=passwordEditText.getText().toString();\nConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\nneedHideProgress();\nif (error == null) {\nif (getParentActivity() == null) {\nreturn;\n}\nif (currentPassword.has_password) {\nAlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\nbuilder.setPositiveButton(LocaleController.getString(\"OK\",R.string.OK),(dialogInterface,i) -> {\n  for (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n    fragmentsToClose.get(a).removeSelfFromStack();\n  }\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged,currentPasswordHash,currentPassword.new_algo,currentPassword.new_secure_algo,currentPassword.secure_random,email,hint,null,firstPassword);\n  TwoStepVerificationActivity fragment=new TwoStepVerificationActivity();\n  currentPassword.has_password=true;\n  currentPassword.has_recovery=true;\n  currentPassword.email_unconfirmed_pattern=\"\";\n  fragment.setCurrentPasswordParams(currentPassword,currentPasswordHash,currentSecretId,currentSecret);\n  presentFragment(fragment,true);\n  NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.didSetOrRemoveTwoStepPassword,currentPassword);\n}\n);\nif (currentPassword.has_recovery) {\n  builder.setMessage(LocaleController.getString(\"YourEmailSuccessChangedText\",R.string.YourEmailSuccessChangedText));\n}\n else {\n  builder.setMessage(LocaleController.getString(\"YourEmailSuccessText\",R.string.YourEmailSuccessText));\n}\nbuilder.setTitle(LocaleController.getString(\"YourPasswordSuccess\",R.string.YourPasswordSuccess));\nDialog dialog=showDialog(builder.create());\nif (dialog != null) {\n  dialog.setCanceledOnTouchOutside(false);\n  dialog.setCancelable(false);\n}\n}\n else {\nfor (int a=0, N=fragmentsToClose.size(); a < N; a++) {\n  fragmentsToClose.get(a).removeSelfFromStack();\n}\ncurrentPassword.has_password=true;\ncurrentPassword.has_recovery=true;\ncurrentPassword.email_unconfirmed_pattern=\"\";\nTwoStepVerificationSetupActivity fragment=new TwoStepVerificationSetupActivity(TYPE_PASSWORD_SET,currentPassword);\nfragment.setCurrentPasswordParams(currentPasswordHash,currentSecretId,currentSecret,emailOnly);\nfragment.closeAfterSet=closeAfterSet;\npresentFragment(fragment,true);\nNotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.twoStepPasswordChanged,currentPasswordHash,currentPassword.new_algo,currentPassword.new_secure_algo,currentPassword.secure_random,email,hint,null,firstPassword);\nNotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.didSetOrRemoveTwoStepPassword,currentPassword);\n}\n}\n else {\nif (error.text.startsWith(\"CODE_INVALID\")) {\nonFieldError(passwordEditText,true);\n}\n else if (error.text.startsWith(\"FLOOD_WAIT\")) {\nint time=Utilities.parseInt(error.text);\nString timeString;\nif (time < 60) {\n  timeString=LocaleController.formatPluralString(\"Seconds\",time);\n}\n else {\n  timeString=LocaleController.formatPluralString(\"Minutes\",time / 60);\n}\nshowAlertWithText(LocaleController.getString(\"AppName\",R.string.AppName),LocaleController.formatString(\"FloodWaitTime\",R.string.FloodWaitTime,timeString));\n}\n else {\nshowAlertWithText(LocaleController.getString(\"AppName\",R.string.AppName),error.text);\n}\n}\n}\n),ConnectionsManager.RequestFlagFailOnServerErrors | ConnectionsManager.RequestFlagWithoutLogin);\nneedShowProgress();\n}\n}\n}\n);\nswitch (currentType) {\ncase TYPE_INTRO:case TYPE_PASSWORD_SET:{\nViewGroup container=new ViewGroup(context){\n@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\nint width=MeasureSpec.getSize(widthMeasureSpec);\nint height=MeasureSpec.getSize(heightMeasureSpec);\nactionBar.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nif (width > height) {\nimageView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.45f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec((int)(height * 0.68f),MeasureSpec.EXACTLY));\ntitleTextView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText2.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\nbuttonTextView.measure(MeasureSpec.makeMeasureSpec((int)(width * 0.6f),MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(42),MeasureSpec.EXACTLY));\n}\n else {\nimageView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec((int)(height * 0.399f),MeasureSpec.EXACTLY));\ntitleTextView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\ndescriptionText2.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.UNSPECIFIED));\nbuttonTextView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(42),MeasureSpec.EXACTLY));\n}\nsetMeasuredDimension(width,height);\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nactionBar.layout(0,0,r,actionBar.getMeasuredHeight());\nint width=r - l;\nint height=b - t;\nif (r > b) {\nint y=(height - imageView.getMeasuredHeight()) / 2;\nimageView.layout(0,y,imageView.getMeasuredWidth(),y + imageView.getMeasuredHeight());\nint x=(int)(width * 0.4f);\ny=(int)(height * 0.22f);\ntitleTextView.layout(x,y,x + titleTextView.getMeasuredWidth(),y + titleTextView.getMeasuredHeight());\nx=(int)(width * 0.4f);\ny=(int)(height * 0.39f);\ndescriptionText.layout(x,y,x + descriptionText.getMeasuredWidth(),y + descriptionText.getMeasuredHeight());\nx=(int)(width * 0.4f + (width * 0.6f - buttonTextView.getMeasuredWidth()) / 2);\ny=(int)(height * 0.64f);\nbuttonTextView.layout(x,y,x + buttonTextView.getMeasuredWidth(),y + buttonTextView.getMeasuredHeight());\n}\n else {\nint y=(int)(height * 0.148f);\nimageView.layout(0,y,imageView.getMeasuredWidth(),y + imageView.getMeasuredHeight());\ny=(int)(height * 0.458f);\ntitleTextView.layout(0,y,titleTextView.getMeasuredWidth(),y + titleTextView.getMeasuredHeight());\ny+=titleTextView.getMeasuredHeight() + AndroidUtilities.dp(12);\ndescriptionText.layout(0,y,descriptionText.getMeasuredWidth(),y + descriptionText.getMeasuredHeight());\nint x=(width - buttonTextView.getMeasuredWidth()) / 2;\ny=(int)(height * 0.791f);\nbuttonTextView.layout(x,y,x + buttonTextView.getMeasuredWidth(),y + buttonTextView.getMeasuredHeight());\n}\n}\n}\n;\ncontainer.setOnTouchListener((v,event) -> true);\ncontainer.addView(actionBar);\ncontainer.addView(imageView);\ncontainer.addView(titleTextView);\ncontainer.addView(descriptionText);\ncontainer.addView(buttonTextView);\nfragmentView=container;\nbreak;\n}\ncase TYPE_ENTER_FIRST:case TYPE_ENTER_SECOND:case TYPE_EMAIL_CONFIRM:case TYPE_EMAIL_RECOVERY:case TYPE_ENTER_HINT:case TYPE_ENTER_EMAIL:{\nViewGroup container=new ViewGroup(context){\n@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\nint width=MeasureSpec.getSize(widthMeasureSpec);\nint height=MeasureSpec.getSize(heightMeasureSpec);\nif (topButton != null) {\nFrameLayout.LayoutParams layoutParams=(FrameLayout.LayoutParams)topButton.getLayoutParams();\nlayoutParams.topMargin=AndroidUtilities.statusBarHeight;\n}\nactionBar.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nactionBarBackground.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(actionBar.getMeasuredHeight() + AndroidUtilities.dp(3),MeasureSpec.EXACTLY));\nscrollView.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),heightMeasureSpec);\nsetMeasuredDimension(width,height);\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nactionBar.layout(0,0,actionBar.getMeasuredWidth(),actionBar.getMeasuredHeight());\nactionBarBackground.layout(0,0,actionBarBackground.getMeasuredWidth(),actionBarBackground.getMeasuredHeight());\nscrollView.layout(0,0,scrollView.getMeasuredWidth(),scrollView.getMeasuredHeight());\n}\n}\n;\nscrollView=new ScrollView(context){\nprivate int[] location=new int[2];\nprivate Rect tempRect=new Rect();\nprivate boolean isLayoutDirty=true;\nprivate int scrollingUp;\n@Override protected void onScrollChanged(int l,int t,int oldl,int oldt){\nsuper.onScrollChanged(l,t,oldl,oldt);\nif (titleTextView == null) {\nreturn;\n}\ntitleTextView.getLocationOnScreen(location);\nboolean show=location[1] + titleTextView.getMeasuredHeight() < actionBar.getBottom();\nboolean visible=titleTextView.getTag() == null;\nif (show != visible) {\ntitleTextView.setTag(show ? null : 1);\nif (actionBarAnimator != null) {\nactionBarAnimator.cancel();\nactionBarAnimator=null;\n}\nactionBarAnimator=new AnimatorSet();\nactionBarAnimator.playTogether(ObjectAnimator.ofFloat(actionBarBackground,View.ALPHA,show ? 1.0f : 0.0f),ObjectAnimator.ofFloat(actionBar.getTitleTextView(),View.ALPHA,show ? 1.0f : 0.0f));\nactionBarAnimator.setDuration(150);\nactionBarAnimator.addListener(new AnimatorListenerAdapter(){\n@Override public void onAnimationEnd(Animator animation){\nif (animation.equals(actionBarAnimator)) {\nactionBarAnimator=null;\n}\n}\n}\n);\nactionBarAnimator.start();\n}\n}\n@Override public void scrollToDescendant(View child){\nchild.getDrawingRect(tempRect);\noffsetDescendantRectToMyCoords(child,tempRect);\ntempRect.bottom+=AndroidUtilities.dp(120);\nint scrollDelta=computeScrollDeltaToGetChildRectOnScreen(tempRect);\nif (scrollDelta < 0) {\nscrollDelta-=(scrollingUp=(getMeasuredHeight() - child.getMeasuredHeight()) / 2);\n}\n else {\nscrollingUp=0;\n}\nif (scrollDelta != 0) {\nsmoothScrollBy(0,scrollDelta);\n}\n}\n@Override public void requestChildFocus(View child,View focused){\nif (Build.VERSION.SDK_INT < 29) {\nif (focused != null && !isLayoutDirty) {\nscrollToDescendant(focused);\n}\n}\nsuper.requestChildFocus(child,focused);\n}\n@Override public boolean requestChildRectangleOnScreen(View child,Rect rectangle,boolean immediate){\nif (Build.VERSION.SDK_INT < 23) {\nrectangle.bottom+=AndroidUtilities.dp(120);\nif (scrollingUp != 0) {\nrectangle.top-=scrollingUp;\nrectangle.bottom-=scrollingUp;\nscrollingUp=0;\n}\n}\nreturn super.requestChildRectangleOnScreen(child,rectangle,immediate);\n}\n@Override public void requestLayout(){\nisLayoutDirty=true;\nsuper.requestLayout();\n}\n@Override protected void onLayout(boolean changed,int l,int t,int r,int b){\nisLayoutDirty=false;\nsuper.onLayout(changed,l,t,r,b);\n}\n}\n;\nscrollView.setVerticalScrollBarEnabled(false);\ncontainer.addView(scrollView);\nLinearLayout scrollViewLinearLayout=new LinearLayout(context);\nscrollViewLinearLayout.setOrientation(LinearLayout.VERTICAL);\nscrollView.addView(scrollViewLinearLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\nscrollViewLinearLayout.addView(imageView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,69,0,0));\nscrollViewLinearLayout.addView(titleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,8,0,0));\nscrollViewLinearLayout.addView(descriptionText,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,9,0,0));\nFrameLayout frameLayout=new FrameLayout(context);\nscrollViewLinearLayout.addView(frameLayout,LayoutHelper.createLinear(220,36,Gravity.TOP | Gravity.CENTER_HORIZONTAL,40,32,40,0));\npasswordEditText=new EditTextBoldCursor(context);\npasswordEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP,17);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),0,0);\npasswordEditText.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\npasswordEditText.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\npasswordEditText.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\npasswordEditText.setHintColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\npasswordEditText.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\npasswordEditText.setMaxLines(1);\npasswordEditText.setLines(1);\npasswordEditText.setGravity(Gravity.LEFT);\npasswordEditText.setCursorSize(AndroidUtilities.dp(20));\npasswordEditText.setSingleLine(true);\npasswordEditText.setCursorWidth(1.5f);\nframeLayout.addView(passwordEditText,LayoutHelper.createFrame(220,36,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\npasswordEditText.setOnEditorActionListener((textView,i,keyEvent) -> {\nif (i == EditorInfo.IME_ACTION_NEXT || i == EditorInfo.IME_ACTION_DONE) {\nbuttonTextView.callOnClick();\nreturn true;\n}\nreturn false;\n}\n);\npasswordEditText.setCustomSelectionActionModeCallback(new ActionMode.Callback(){\npublic boolean onPrepareActionMode(ActionMode mode,Menu menu){\nreturn false;\n}\npublic void onDestroyActionMode(ActionMode mode){\n}\npublic boolean onCreateActionMode(ActionMode mode,Menu menu){\nreturn false;\n}\npublic boolean onActionItemClicked(ActionMode mode,MenuItem item){\nreturn false;\n}\n}\n);\nshowPasswordButton=new ImageView(context);\nshowPasswordButton.setImageResource(R.drawable.msg_message);\nshowPasswordButton.setScaleType(ImageView.ScaleType.CENTER);\nif (Build.VERSION.SDK_INT >= 21) {\nshowPasswordButton.setBackgroundDrawable(Theme.createSelectorDrawable(Theme.getColor(Theme.key_listSelector)));\n}\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons),PorterDuff.Mode.MULTIPLY));\nshowPasswordButton.setVisibility(View.GONE);\nframeLayout.addView(showPasswordButton,LayoutHelper.createFrame(36,36,Gravity.RIGHT | Gravity.TOP,0,-5,0,0));\nshowPasswordButton.setOnClickListener(v -> {\nignoreTextChange=true;\nif (passwordEditText.getTransformationMethod() == null) {\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelIcons),PorterDuff.Mode.MULTIPLY));\nif (currentType == TYPE_ENTER_FIRST) {\nif (passwordEditText.length() > 0) {\nanimationDrawables[3].setCustomEndFrame(-1);\nif (imageView.getAnimatedDrawable() != animationDrawables[3]) {\nimageView.setAnimation(animationDrawables[3]);\nanimationDrawables[3].setCurrentFrame(18,false);\n}\nimageView.playAnimation();\n}\n}\n}\n else {\npasswordEditText.setTransformationMethod(null);\nshowPasswordButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chat_messagePanelSend),PorterDuff.Mode.MULTIPLY));\nif (currentType == TYPE_ENTER_FIRST) {\nif (passwordEditText.length() > 0) {\nanimationDrawables[3].setCustomEndFrame(18);\nif (imageView.getAnimatedDrawable() != animationDrawables[3]) {\nimageView.setAnimation(animationDrawables[3]);\n}\nanimationDrawables[3].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n}\n}\npasswordEditText.setSelection(passwordEditText.length());\nignoreTextChange=false;\n}\n);\nFrameLayout frameLayout2=new FrameLayout(context);\nscrollViewLinearLayout.addView(frameLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP,0,36,0,22));\nframeLayout2.addView(buttonTextView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,42,Gravity.CENTER_HORIZONTAL | Gravity.TOP));\nframeLayout2.addView(descriptionText2,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP));\nif (currentType == TYPE_EMAIL_RECOVERY) {\ndescriptionText3=new TextView(context);\ndescriptionText3.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteLinkText));\ndescriptionText3.setGravity(Gravity.CENTER_HORIZONTAL);\ndescriptionText3.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\ndescriptionText3.setLineSpacing(AndroidUtilities.dp(2),1);\ndescriptionText3.setPadding(AndroidUtilities.dp(32),0,AndroidUtilities.dp(32),0);\ndescriptionText3.setText(LocaleController.getString(\"RestoreEmailTroubleNoEmail\",R.string.RestoreEmailTroubleNoEmail));\nscrollViewLinearLayout.addView(descriptionText3,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_HORIZONTAL | Gravity.TOP,0,0,0,25));\ndescriptionText3.setOnClickListener(v -> showAlertWithText(LocaleController.getString(\"RestorePasswordNoEmailTitle\",R.string.RestorePasswordNoEmailTitle),LocaleController.getString(\"RestoreEmailTroubleText\",R.string.RestoreEmailTroubleText)));\n}\nfragmentView=container;\nactionBarBackground=new View(context){\nprivate Paint paint=new Paint();\n@Override protected void onDraw(Canvas canvas){\npaint.setColor(Theme.getColor(Theme.key_windowBackgroundWhite));\nint h=getMeasuredHeight() - AndroidUtilities.dp(3);\ncanvas.drawRect(0,0,getMeasuredWidth(),h,paint);\nparentLayout.drawHeaderShadow(canvas,h);\n}\n}\n;\nactionBarBackground.setAlpha(0.0f);\ncontainer.addView(actionBarBackground);\ncontainer.addView(actionBar);\nbreak;\n}\n}\nfragmentView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhite));\nswitch (currentType) {\ncase TYPE_INTRO:{\ntitleTextView.setText(LocaleController.getString(\"TwoStepVerificationTitle\",R.string.TwoStepVerificationTitle));\ndescriptionText.setText(LocaleController.getString(\"SetAdditionalPasswordInfo\",R.string.SetAdditionalPasswordInfo));\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationSetPassword\",R.string.TwoStepVerificationSetPassword));\ndescriptionText.setVisibility(View.VISIBLE);\nimageView.setAnimation(R.raw.tsv_setup_intro,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_PASSWORD_SET:{\ntitleTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordSet\",R.string.TwoStepVerificationPasswordSet));\ndescriptionText.setText(LocaleController.getString(\"TwoStepVerificationPasswordSetInfo\",R.string.TwoStepVerificationPasswordSetInfo));\nif (closeAfterSet) {\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordReturnPassport\",R.string.TwoStepVerificationPasswordReturnPassport));\n}\n else {\nbuttonTextView.setText(LocaleController.getString(\"TwoStepVerificationPasswordReturnSettings\",R.string.TwoStepVerificationPasswordReturnSettings));\n}\ndescriptionText.setVisibility(View.VISIBLE);\nimageView.setAnimation(R.raw.wallet_allset,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_FIRST:{\nif (currentPassword.has_password) {\nactionBar.setTitle(LocaleController.getString(\"PleaseEnterNewFirstPassword\",R.string.PleaseEnterNewFirstPassword));\ntitleTextView.setText(LocaleController.getString(\"PleaseEnterNewFirstPassword\",R.string.PleaseEnterNewFirstPassword));\n}\n else {\nactionBar.setTitle(LocaleController.getString(\"PleaseEnterFirstPassword\",R.string.PleaseEnterFirstPassword));\ntitleTextView.setText(LocaleController.getString(\"PleaseEnterFirstPassword\",R.string.PleaseEnterFirstPassword));\n}\nactionBar.getTitleTextView().setAlpha(0.0f);\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"LoginPassword\",R.string.LoginPassword));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\npasswordEditText.setTypeface(Typeface.DEFAULT);\nshowPasswordButton.setVisibility(View.VISIBLE);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),AndroidUtilities.dp(36),0);\nanimationDrawables=new RLottieDrawable[6];\nanimationDrawables[0]=new RLottieDrawable(R.raw.tsv_setup_monkey_idle1,\"\" + R.raw.tsv_setup_monkey_idle1,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[1]=new RLottieDrawable(R.raw.tsv_setup_monkey_idle2,\"\" + R.raw.tsv_setup_monkey_idle2,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[2]=new RLottieDrawable(R.raw.tsv_monkey_close,\"\" + R.raw.tsv_monkey_close,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[3]=new RLottieDrawable(R.raw.tsv_setup_monkey_peek,\"\" + R.raw.tsv_setup_monkey_peek,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[4]=new RLottieDrawable(R.raw.tsv_setup_monkey_close_and_peek_to_idle,\"\" + R.raw.tsv_setup_monkey_close_and_peek_to_idle,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[5]=new RLottieDrawable(R.raw.tsv_setup_monkey_close_and_peek,\"\" + R.raw.tsv_setup_monkey_close_and_peek,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[2].setOnFinishCallback(finishCallback,97);\nsetRandomMonkeyIdleAnimation(true);\nbreak;\n}\ncase TYPE_ENTER_SECOND:{\nactionBar.setTitle(LocaleController.getString(\"PleaseReEnterPassword\",R.string.PleaseReEnterPassword));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"PleaseReEnterPassword\",R.string.PleaseReEnterPassword));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"LoginPassword\",R.string.LoginPassword));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\npasswordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());\npasswordEditText.setTypeface(Typeface.DEFAULT);\nshowPasswordButton.setVisibility(View.VISIBLE);\npasswordEditText.setPadding(0,AndroidUtilities.dp(2),AndroidUtilities.dp(36),0);\nanimationDrawables=new RLottieDrawable[1];\nanimationDrawables[0]=new RLottieDrawable(R.raw.tsv_setup_monkey_tracking,\"\" + R.raw.tsv_setup_monkey_tracking,AndroidUtilities.dp(120),AndroidUtilities.dp(120),true,null);\nanimationDrawables[0].setPlayInDirectionOfCustomEndFrame(true);\nanimationDrawables[0].setCustomEndFrame(19);\nimageView.setAnimation(animationDrawables[0]);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_HINT:{\nactionBar.setTitle(LocaleController.getString(\"PasswordHint\",R.string.PasswordHint));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntopButton.setVisibility(View.VISIBLE);\ntopButton.setText(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip));\ntitleTextView.setText(LocaleController.getString(\"PasswordHint\",R.string.PasswordHint));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"PasswordHintPlaceholder\",R.string.PasswordHintPlaceholder));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\nimageView.setAnimation(R.raw.tsv_setup_hint,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_ENTER_EMAIL:{\nactionBar.setTitle(LocaleController.getString(\"RecoveryEmailTitle\",R.string.RecoveryEmailTitle));\nactionBar.getTitleTextView().setAlpha(0.0f);\nif (!emailOnly) {\ntopButton.setVisibility(View.VISIBLE);\ntopButton.setText(LocaleController.getString(\"YourEmailSkip\",R.string.YourEmailSkip));\n}\ntitleTextView.setText(LocaleController.getString(\"RecoveryEmailTitle\",R.string.RecoveryEmailTitle));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"PaymentShippingEmailPlaceholder\",R.string.PaymentShippingEmailPlaceholder));\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\npasswordEditText.setInputType(EditorInfo.TYPE_CLASS_TEXT | EditorInfo.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);\nimageView.setAnimation(R.raw.tsv_setup_email_sent,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_EMAIL_CONFIRM:{\nactionBar.setTitle(LocaleController.getString(\"VerificationCode\",R.string.VerificationCode));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"VerificationCode\",R.string.VerificationCode));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"EnterCode\",R.string.EnterCode));\npasswordEditText.setInputType(InputType.TYPE_CLASS_PHONE);\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\ndescriptionText2.setText(LocaleController.formatString(\"EmailPasswordConfirmText2\",R.string.EmailPasswordConfirmText2,currentPassword.email_unconfirmed_pattern != null ? currentPassword.email_unconfirmed_pattern : \"\"));\ndescriptionText2.setVisibility(View.VISIBLE);\nbuttonTextView.setVisibility(View.INVISIBLE);\nbuttonTextView.setAlpha(0.0f);\nbuttonTextView.setScaleX(0.9f);\nbuttonTextView.setScaleY(0.9f);\nimageView.setAnimation(R.raw.tsv_setup_mail,120,120);\nimageView.playAnimation();\nbreak;\n}\ncase TYPE_EMAIL_RECOVERY:{\nactionBar.setTitle(LocaleController.getString(\"PasswordRecovery\",R.string.PasswordRecovery));\nactionBar.getTitleTextView().setAlpha(0.0f);\ntitleTextView.setText(LocaleController.getString(\"PasswordRecovery\",R.string.PasswordRecovery));\nbuttonTextView.setText(LocaleController.getString(\"Continue\",R.string.Continue));\npasswordEditText.setHint(LocaleController.getString(\"EnterCode\",R.string.EnterCode));\npasswordEditText.setInputType(InputType.TYPE_CLASS_PHONE);\npasswordEditText.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\ndescriptionText2.setText(LocaleController.formatString(\"RestoreEmailSent\",R.string.RestoreEmailSent,currentPassword.email_unconfirmed_pattern != null ? currentPassword.email_unconfirmed_pattern : \"\"));\ndescriptionText2.setVisibility(View.VISIBLE);\nbuttonTextView.setVisibility(View.INVISIBLE);\nbuttonTextView.setAlpha(0.0f);\nbuttonTextView.setScaleX(0.9f);\nbuttonTextView.setScaleY(0.9f);\nimageView.setAnimation(R.raw.tsv_setup_mail,120,120);\nimageView.playAnimation();\nbreak;\n}\n}\nif (passwordEditText != null) {\npasswordEditText.addTextChangedListener(new TextWatcher(){\n@Override public void beforeTextChanged(CharSequence s,int start,int count,int after){\n}\n@Override public void onTextChanged(CharSequence s,int start,int before,int count){\n}\n@Override public void afterTextChanged(Editable s){\nif (ignoreTextChange) {\nreturn;\n}\nif (currentType == TYPE_ENTER_FIRST) {\nRLottieDrawable currentDrawable=imageView.getAnimatedDrawable();\nif (passwordEditText.length() > 0) {\nif (passwordEditText.getTransformationMethod() == null) {\nif (currentDrawable != animationDrawables[3] && currentDrawable != animationDrawables[5]) {\nimageView.setAnimation(animationDrawables[5]);\nanimationDrawables[5].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n}\n else {\nif (currentDrawable != animationDrawables[3]) {\nif (currentDrawable != animationDrawables[2]) {\nimageView.setAnimation(animationDrawables[2]);\nanimationDrawables[2].setCustomEndFrame(49);\nanimationDrawables[2].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n else {\nif (animationDrawables[2].getCurrentFrame() < 49) {\nanimationDrawables[2].setCustomEndFrame(49);\n}\n}\n}\n}\n}\n else {\nif (currentDrawable == animationDrawables[3] && passwordEditText.getTransformationMethod() == null || currentDrawable == animationDrawables[5]) {\nimageView.setAnimation(animationDrawables[4]);\nanimationDrawables[4].setProgress(0.0f,false);\nimageView.playAnimation();\n}\n else {\nanimationDrawables[2].setCustomEndFrame(-1);\nif (currentDrawable != animationDrawables[2]) {\nimageView.setAnimation(animationDrawables[2]);\nanimationDrawables[2].setCurrentFrame(49,false);\n}\nimageView.playAnimation();\n}\n}\n}\n else if (currentType == TYPE_ENTER_SECOND) {\ntry {\nfloat progress=Math.min(1.0f,passwordEditText.getLayout().getLineWidth(0) / passwordEditText.getWidth());\nanimationDrawables[0].setCustomEndFrame((int)(18 + progress * (160 - 18)));\nimageView.playAnimation();\n}\n catch (Exception e) {\nFileLog.e(e);\n}\n}\n else if (currentType == TYPE_EMAIL_CONFIRM || currentType == TYPE_EMAIL_RECOVERY) {\nif (emailCodeLength != 0 && s.length() == emailCodeLength) {\nbuttonTextView.callOnClick();\n}\nshowDoneButton(s.length() > 0);\n}\n}\n}\n);\n}\nreturn fragmentView;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 5792,
      "astHeight" : 28
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 104
      },
      "nodeContext" : "item.addSubItem(item_resend,LocaleController.getString(\"ResendCode\",R.string.ResendCode));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 253,
    "startColumnNumber" : 68,
    "endLineNumber" : 253,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}