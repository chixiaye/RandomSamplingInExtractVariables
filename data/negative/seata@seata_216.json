{
  "id" : 216,
  "expression" : "beforeRows",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/undo/mysql/MySQLUndoInsertExecutorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "beforeRows",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 52,
      "startColumnNumber" : 8,
      "endLineNumber" : 52,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 28
      },
      "nodeContext" : "beforeRows.add(row0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 29
      },
      "nodeContext" : "beforeRows.add(row0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 40,
        "startColumnNumber" : 29,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@BeforeAll public static void init(){\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 29
      },
      "nodeContext" : "beforeRows.add(row0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<io.seata.rm.datasource.sql.struct.Row>"
  }, {
    "nodeContext" : "beforeRows",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 56,
      "startColumnNumber" : 8,
      "endLineNumber" : 56,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 28
      },
      "nodeContext" : "beforeRows.add(row1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 29
      },
      "nodeContext" : "beforeRows.add(row1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 40,
        "startColumnNumber" : 29,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@BeforeAll public static void init(){\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 29
      },
      "nodeContext" : "beforeRows.add(row1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<io.seata.rm.datasource.sql.struct.Row>"
  }, {
    "nodeContext" : "beforeRows",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 57,
      "startColumnNumber" : 28,
      "endLineNumber" : 57,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "beforeImage.setRows(beforeRows)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "beforeImage.setRows(beforeRows);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 40,
        "startColumnNumber" : 29,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@BeforeAll public static void init(){\n  TableMeta tableMeta=Mockito.mock(TableMeta.class);\n  Mockito.when(tableMeta.getPkName()).thenReturn(\"id\");\n  Mockito.when(tableMeta.getTableName()).thenReturn(\"table_name\");\n  TableRecords beforeImage=new TableRecords();\n  beforeImage.setTableName(\"table_name\");\n  beforeImage.setTableMeta(tableMeta);\n  List<Row> beforeRows=new ArrayList<>();\n  Row row0=new Row();\n  addField(row0,\"id\",1,\"12345\");\n  addField(row0,\"age\",1,\"1\");\n  beforeRows.add(row0);\n  Row row1=new Row();\n  addField(row1,\"id\",1,\"12346\");\n  addField(row1,\"age\",1,\"1\");\n  beforeRows.add(row1);\n  beforeImage.setRows(beforeRows);\n  TableRecords afterImage=new TableRecords();\n  afterImage.setTableName(\"table_name\");\n  afterImage.setTableMeta(tableMeta);\n  List<Row> afterRows=new ArrayList<>();\n  Row row2=new Row();\n  addField(row2,\"id\",1,\"12345\");\n  addField(row2,\"age\",1,\"2\");\n  afterRows.add(row2);\n  Row row3=new Row();\n  addField(row3,\"id\",1,\"12346\");\n  addField(row3,\"age\",1,\"2\");\n  afterRows.add(row3);\n  afterImage.setRows(afterRows);\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  sqlUndoLog.setTableMeta(tableMeta);\n  sqlUndoLog.setTableName(\"table_name\");\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  executor=new MySQLUndoInsertExecutor(sqlUndoLog);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "beforeImage.setRows(beforeRows);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<io.seata.rm.datasource.sql.struct.Row>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 52,
    "startColumnNumber" : 8,
    "endLineNumber" : 52,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 56,
    "startColumnNumber" : 8,
    "endLineNumber" : 56,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 57,
    "startColumnNumber" : 28,
    "endLineNumber" : 57,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}