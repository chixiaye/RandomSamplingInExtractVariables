{
  "id" : 63,
  "expression" : "DynamicPropertyFactory",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "07460fba3d51e5b32c3d512b2cf149976316a2dd",
  "filePath" : "hystrix-core/src/main/java/com/netflix/hystrix/strategy/HystrixPlugins.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DynamicPropertyFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 271,
      "startColumnNumber" : 35,
      "endLineNumber" : 271,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 271,
        "startColumnNumber" : 35,
        "endLineNumber" : 271,
        "endColumnNumber" : 71
      },
      "nodeContext" : "DynamicPropertyFactory.getInstance()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 271,
        "startColumnNumber" : 35,
        "endLineNumber" : 271,
        "endColumnNumber" : 109
      },
      "nodeContext" : "DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 271,
        "startColumnNumber" : 35,
        "endLineNumber" : 271,
        "endColumnNumber" : 115
      },
      "nodeContext" : "DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 271,
        "startColumnNumber" : 15,
        "endLineNumber" : 271,
        "endColumnNumber" : 115
      },
      "nodeContext" : "implementingClass=DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 271,
        "startColumnNumber" : 8,
        "endLineNumber" : 271,
        "endColumnNumber" : 116
      },
      "nodeContext" : "String implementingClass=DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 267,
        "startColumnNumber" : 83,
        "endLineNumber" : 290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String classSimpleName=pluginClass.getSimpleName();\n  String propertyName=\"hystrix.plugin.\" + classSimpleName + \".implementation\";\n  String implementingClass=DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get();\n  if (implementingClass != null) {\n    try {\n      Class<?> cls=Class.forName(implementingClass);\n      cls=cls.asSubclass(pluginClass);\n      return cls.newInstance();\n    }\n catch (    ClassCastException e) {\n      throw new RuntimeException(classSimpleName + \" implementation is not an instance of \" + classSimpleName+ \": \"+ implementingClass);\n    }\ncatch (    ClassNotFoundException e) {\n      throw new RuntimeException(classSimpleName + \" implementation class not found: \" + implementingClass,e);\n    }\ncatch (    InstantiationException e) {\n      throw new RuntimeException(classSimpleName + \" implementation not able to be instantiated: \" + implementingClass,e);\n    }\ncatch (    IllegalAccessException e) {\n      throw new RuntimeException(classSimpleName + \" implementation not able to be accessed: \" + implementingClass,e);\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1477,
        "startLineNumber" : 267,
        "startColumnNumber" : 4,
        "endLineNumber" : 290,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Object getPluginImplementationViaArchaius(Class<?> pluginClass){\n  String classSimpleName=pluginClass.getSimpleName();\n  String propertyName=\"hystrix.plugin.\" + classSimpleName + \".implementation\";\n  String implementingClass=DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get();\n  if (implementingClass != null) {\n    try {\n      Class<?> cls=Class.forName(implementingClass);\n      cls=cls.asSubclass(pluginClass);\n      return cls.newInstance();\n    }\n catch (    ClassCastException e) {\n      throw new RuntimeException(classSimpleName + \" implementation is not an instance of \" + classSimpleName+ \": \"+ implementingClass);\n    }\ncatch (    ClassNotFoundException e) {\n      throw new RuntimeException(classSimpleName + \" implementation class not found: \" + implementingClass,e);\n    }\ncatch (    InstantiationException e) {\n      throw new RuntimeException(classSimpleName + \" implementation not able to be instantiated: \" + implementingClass,e);\n    }\ncatch (    IllegalAccessException e) {\n      throw new RuntimeException(classSimpleName + \" implementation not able to be accessed: \" + implementingClass,e);\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 271,
        "startColumnNumber" : 8,
        "endLineNumber" : 271,
        "endColumnNumber" : 116
      },
      "nodeContext" : "String implementingClass=DynamicPropertyFactory.getInstance().getStringProperty(propertyName,null).get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 271,
    "startColumnNumber" : 35,
    "endLineNumber" : 271,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}