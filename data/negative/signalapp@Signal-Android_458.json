{
  "id" : 458,
  "expression" : "pendingUuids",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/libsignal/service/src/test/java/org/whispersystems/signalservice/api/groupsv2/DecryptedGroupUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pendingUuids",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 111,
      "startColumnNumber" : 15,
      "endLineNumber" : 111,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(pendingUuids,is(asList(uuid1,uuid2,UuidUtil.UNKNOWN_UUID)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(pendingUuids,is(asList(uuid1,uuid2,UuidUtil.UNKNOWN_UUID)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1581,
        "startLineNumber" : 90,
        "startColumnNumber" : 72,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  UUID uuid1=UUID.randomUUID();\n  UUID uuid2=UUID.randomUUID();\n  DecryptedPendingMember decryptedMember1=DecryptedPendingMember.newBuilder().setUuid(UuidUtil.toByteString(uuid1)).build();\n  DecryptedPendingMember decryptedMember2=DecryptedPendingMember.newBuilder().setUuid(UuidUtil.toByteString(uuid2)).build();\n  DecryptedPendingMember decryptedMember3=DecryptedPendingMember.newBuilder().setUuid(ByteString.copyFrom(Util.getSecretBytes(17))).build();\n  DecryptedGroupChange groupChange=DecryptedGroupChange.newBuilder().addNewPendingMembers(decryptedMember1).addNewPendingMembers(decryptedMember2).addNewPendingMembers(decryptedMember3).build();\n  List<UUID> pendingUuids=DecryptedGroupUtil.pendingToUuidList(groupChange.getNewPendingMembersList());\n  assertThat(pendingUuids,is(asList(uuid1,uuid2,UuidUtil.UNKNOWN_UUID)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1659,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void can_extract_uuids_for_all_pending_including_bad_entries(){\n  UUID uuid1=UUID.randomUUID();\n  UUID uuid2=UUID.randomUUID();\n  DecryptedPendingMember decryptedMember1=DecryptedPendingMember.newBuilder().setUuid(UuidUtil.toByteString(uuid1)).build();\n  DecryptedPendingMember decryptedMember2=DecryptedPendingMember.newBuilder().setUuid(UuidUtil.toByteString(uuid2)).build();\n  DecryptedPendingMember decryptedMember3=DecryptedPendingMember.newBuilder().setUuid(ByteString.copyFrom(Util.getSecretBytes(17))).build();\n  DecryptedGroupChange groupChange=DecryptedGroupChange.newBuilder().addNewPendingMembers(decryptedMember1).addNewPendingMembers(decryptedMember2).addNewPendingMembers(decryptedMember3).build();\n  List<UUID> pendingUuids=DecryptedGroupUtil.pendingToUuidList(groupChange.getNewPendingMembersList());\n  assertThat(pendingUuids,is(asList(uuid1,uuid2,UuidUtil.UNKNOWN_UUID)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(pendingUuids,is(asList(uuid1,uuid2,UuidUtil.UNKNOWN_UUID)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.util.UUID>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 111,
    "startColumnNumber" : 15,
    "endLineNumber" : 111,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}