{
  "id" : 424,
  "expression" : "v",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/dp/LongestCommonSubstring.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "v",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 38,
      "endLineNumber" : 52,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 52,
        "endColumnNumber" : 39
      },
      "nodeContext" : "dp[i - 1][j] == v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 52,
        "startColumnNumber" : 13,
        "endLineNumber" : 52,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i > 1 && dp[i - 1][j] == v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 45
      },
      "nodeContext" : "while (i > 1 && dp[i - 1][j] == v) i--;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 47,
        "startColumnNumber" : 29,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (i >= 1 && j >= 1) {\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 15,
        "startColumnNumber" : 47,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static String lcs(char[] A,char[] B){\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 265,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 45
      },
      "nodeContext" : "while (i > 1 && dp[i - 1][j] == v) i--;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "v",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 53,
      "startColumnNumber" : 38,
      "endLineNumber" : 53,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 53,
        "startColumnNumber" : 22,
        "endLineNumber" : 53,
        "endColumnNumber" : 39
      },
      "nodeContext" : "dp[i][j - 1] == v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 53,
        "startColumnNumber" : 13,
        "endLineNumber" : 53,
        "endColumnNumber" : 39
      },
      "nodeContext" : "j > 1 && dp[i][j - 1] == v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 45
      },
      "nodeContext" : "while (j > 1 && dp[i][j - 1] == v) j--;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 47,
        "startColumnNumber" : 29,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (i >= 1 && j >= 1) {\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 15,
        "startColumnNumber" : 47,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static String lcs(char[] A,char[] B){\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 265,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 45
      },
      "nodeContext" : "while (j > 1 && dp[i][j - 1] == v) j--;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "v",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 10,
      "endLineNumber" : 56,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 56,
        "endColumnNumber" : 15
      },
      "nodeContext" : "v > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "if (v > 0) lcs[lcsLen - index++ - 1]=A[i - 1];\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 47,
        "startColumnNumber" : 29,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (i >= 1 && j >= 1) {\n  int v=dp[i][j];\n  while (i > 1 && dp[i - 1][j] == v)   i--;\n  while (j > 1 && dp[i][j - 1] == v)   j--;\n  if (v > 0)   lcs[lcsLen - index++ - 1]=A[i - 1];\n  i--;\n  j--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 15,
        "startColumnNumber" : 47,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static String lcs(char[] A,char[] B){\n  if (A == null || B == null)   return null;\n  final int n=A.length;\n  final int m=B.length;\n  if (n == 0 || m == 0)   return null;\n  int[][] dp=new int[n + 1][m + 1];\n  for (int i=1; i <= n; i++) {\n    for (int j=1; j <= m; j++) {\n      if (A[i - 1] == B[j - 1])       dp[i][j]=dp[i - 1][j - 1] + 1;\n else       dp[i][j]=Math.max(dp[i - 1][j],dp[i][j - 1]);\n    }\n  }\n  int lcsLen=dp[n][m];\n  char[] lcs=new char[lcsLen];\n  int index=0;\n  int i=n, j=m;\n  while (i >= 1 && j >= 1) {\n    int v=dp[i][j];\n    while (i > 1 && dp[i - 1][j] == v)     i--;\n    while (j > 1 && dp[i][j - 1] == v)     j--;\n    if (v > 0)     lcs[lcsLen - index++ - 1]=A[i - 1];\n    i--;\n    j--;\n  }\n  return new String(lcs,0,lcsLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 265,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "if (v > 0) lcs[lcsLen - index++ - 1]=A[i - 1];\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 38,
    "endLineNumber" : 52,
    "endColumnNumber" : 39
  }, {
    "charLength" : 1,
    "startLineNumber" : 53,
    "startColumnNumber" : 38,
    "endLineNumber" : 53,
    "endColumnNumber" : 39
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 10,
    "endLineNumber" : 56,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}