{
  "id" : 55,
  "expression" : "result",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/flume/src/main/java/org/apache/pulsar/io/flume/source/SinkOfFlume.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 110,
      "startColumnNumber" : 15,
      "endLineNumber" : 110,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2170,
        "startLineNumber" : 54,
        "startColumnNumber" : 58,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Status result=Status.READY;\n  Channel channel=getChannel();\n  Transaction transaction=null;\n  Event event=null;\n  try {\n    transaction=channel.getTransaction();\n    transaction.begin();\n    long processedEvents=0;\n    for (; processedEvents < batchSize; processedEvents+=1) {\n      event=channel.take();\n      if (event == null) {\n        break;\n      }\n      if (processedEvents == 0) {\n        result=Status.BACKOFF;\n        counter.incrementBatchEmptyCount();\n      }\n else       if (processedEvents < batchSize) {\n        counter.incrementBatchUnderflowCount();\n      }\n else {\n        counter.incrementBatchCompleteCount();\n      }\n      event.getHeaders();\n      event.getBody();\n      Map<String,Object> m=new HashMap();\n      m.put(\"headers\",event.getHeaders());\n      m.put(\"body\",event.getBody());\n      records.put(m);\n    }\n    transaction.commit();\n  }\n catch (  Exception ex) {\n    String errorMsg=\"Failed to publish events\";\n    LOG.error(\"Failed to publish events\",ex);\n    counter.incrementEventWriteOrChannelFail(ex);\n    result=Status.BACKOFF;\n    if (transaction != null) {\n      try {\n        transaction.rollback();\n      }\n catch (      RuntimeException e) {\n        LOG.error(\"Transaction rollback failed: \" + e.getLocalizedMessage());\n        LOG.debug(\"Exception follows.\",e);\n      }\n finally {\n        transaction.close();\n        transaction=null;\n      }\n    }\n  }\n finally {\n    if (transaction != null) {\n      transaction.close();\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2238,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Status process() throws EventDeliveryException {\n  Status result=Status.READY;\n  Channel channel=getChannel();\n  Transaction transaction=null;\n  Event event=null;\n  try {\n    transaction=channel.getTransaction();\n    transaction.begin();\n    long processedEvents=0;\n    for (; processedEvents < batchSize; processedEvents+=1) {\n      event=channel.take();\n      if (event == null) {\n        break;\n      }\n      if (processedEvents == 0) {\n        result=Status.BACKOFF;\n        counter.incrementBatchEmptyCount();\n      }\n else       if (processedEvents < batchSize) {\n        counter.incrementBatchUnderflowCount();\n      }\n else {\n        counter.incrementBatchCompleteCount();\n      }\n      event.getHeaders();\n      event.getBody();\n      Map<String,Object> m=new HashMap();\n      m.put(\"headers\",event.getHeaders());\n      m.put(\"body\",event.getBody());\n      records.put(m);\n    }\n    transaction.commit();\n  }\n catch (  Exception ex) {\n    String errorMsg=\"Failed to publish events\";\n    LOG.error(\"Failed to publish events\",ex);\n    counter.incrementEventWriteOrChannelFail(ex);\n    result=Status.BACKOFF;\n    if (transaction != null) {\n      try {\n        transaction.rollback();\n      }\n catch (      RuntimeException e) {\n        LOG.error(\"Transaction rollback failed: \" + e.getLocalizedMessage());\n        LOG.debug(\"Exception follows.\",e);\n      }\n finally {\n        transaction.close();\n        transaction=null;\n      }\n    }\n  }\n finally {\n    if (transaction != null) {\n      transaction.close();\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.io.flume.source.Status"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 110,
    "startColumnNumber" : 15,
    "endLineNumber" : 110,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}