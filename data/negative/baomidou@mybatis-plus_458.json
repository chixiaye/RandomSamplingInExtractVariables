{
  "id" : 458,
  "expression" : "SqlMethod.UPDATE_ALL_COLUMN_BY_ID",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "1e00211f3510beefdc5b2d7ab735df7853d8df0d",
  "filePath" : "src/main/java/com/baomidou/mybatisplus/service/impl/ServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SqlMethod.UPDATE_ALL_COLUMN_BY_ID",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 314,
      "startColumnNumber" : 71,
      "endLineNumber" : 314,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 314,
        "startColumnNumber" : 34,
        "endLineNumber" : 314,
        "endColumnNumber" : 104
      },
      "nodeContext" : "selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 314,
        "startColumnNumber" : 22,
        "endLineNumber" : 314,
        "endColumnNumber" : 104
      },
      "nodeContext" : "sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 314,
        "startColumnNumber" : 12,
        "endLineNumber" : 314,
        "endColumnNumber" : 105
      },
      "nodeContext" : "SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 312,
        "startColumnNumber" : 61,
        "endLineNumber" : 325,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (SqlSession batchSqlSession=sqlSessionBatch()){\n  int size=entityList.size();\n  SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n  String sqlStatement=sqlStatement(sqlMethod);\n  for (int i=0; i < size; i++) {\n    MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n    param.put(\"et\",entityList.get(i));\n    batchSqlSession.update(sqlStatement,param);\n    if (i >= 1 && i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Throwable e) {\n  throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 308,
        "startColumnNumber" : 90,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 301,
        "startColumnNumber" : 4,
        "endLineNumber" : 329,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 根据主键ID进行批量修改\n * @param entityList 实体对象列表\n * @param batchSize 批量刷新个数\n * @param selective 是否滤掉空字段\n * @return boolean\n */\nprivate boolean updateBatchById(List<T> entityList,int batchSize,boolean selective){\n  if (CollectionUtils.isEmpty(entityList)) {\n    throw new IllegalArgumentException(\"Error: entityList must not be empty\");\n  }\n  try (SqlSession batchSqlSession=sqlSessionBatch()){\n    int size=entityList.size();\n    SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n    String sqlStatement=sqlStatement(sqlMethod);\n    for (int i=0; i < size; i++) {\n      MapperMethod.ParamMap<T> param=new MapperMethod.ParamMap<>();\n      param.put(\"et\",entityList.get(i));\n      batchSqlSession.update(sqlStatement,param);\n      if (i >= 1 && i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Throwable e) {\n    throw new MybatisPlusException(\"Error: Cannot execute updateBatchById Method. Cause\",e);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 314,
        "startColumnNumber" : 12,
        "endLineNumber" : 314,
        "endColumnNumber" : 105
      },
      "nodeContext" : "SqlMethod sqlMethod=selective ? SqlMethod.UPDATE_BY_ID : SqlMethod.UPDATE_ALL_COLUMN_BY_ID;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "com.baomidou.mybatisplus.enums.SqlMethod"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 314,
    "startColumnNumber" : 71,
    "endLineNumber" : 314,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}