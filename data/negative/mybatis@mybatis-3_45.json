{
  "id" : 45,
  "expression" : "(Double)5.8d",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Double)5.8d",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 21,
      "startColumnNumber" : 17,
      "endLineNumber" : 21,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals((Double)5.8d,parser.evalDouble(\"/employee/height\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals((Double)5.8d,parser.evalDouble(\"/employee/height\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 13,
        "startColumnNumber" : 62,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String resource=\"resources/nodelet_test.xml\";\n  InputStream inputStream=Resources.getResourceAsStream(resource);\n  XPathParser parser=new XPathParser(inputStream,false,null,null);\n  assertEquals((Long)1970l,parser.evalLong(\"/employee/birth_date/year\"));\n  assertEquals((short)6,(short)parser.evalShort(\"/employee/birth_date/month\"));\n  assertEquals((Integer)15,parser.evalInteger(\"/employee/birth_date/day\"));\n  assertEquals((Float)5.8f,parser.evalFloat(\"/employee/height\"));\n  assertEquals((Double)5.8d,parser.evalDouble(\"/employee/height\"));\n  assertEquals(\"${id_var}\",parser.evalString(\"/employee/@id\"));\n  assertEquals(Boolean.TRUE,parser.evalBoolean(\"/employee/active\"));\n  assertEquals(\"<id>${id_var}</id>\",parser.evalNode(\"/employee/@id\").toString().trim());\n  assertEquals(7,parser.evalNodes(\"/employee/*\").size());\n  XNode node=parser.evalNode(\"/employee/height\");\n  assertEquals(\"employee/height\",node.getPath());\n  assertEquals(\"employee[${id_var}]_height\",node.getValueBasedIdentifier());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldTestXPathParserMethods() throws Exception {\n  String resource=\"resources/nodelet_test.xml\";\n  InputStream inputStream=Resources.getResourceAsStream(resource);\n  XPathParser parser=new XPathParser(inputStream,false,null,null);\n  assertEquals((Long)1970l,parser.evalLong(\"/employee/birth_date/year\"));\n  assertEquals((short)6,(short)parser.evalShort(\"/employee/birth_date/month\"));\n  assertEquals((Integer)15,parser.evalInteger(\"/employee/birth_date/day\"));\n  assertEquals((Float)5.8f,parser.evalFloat(\"/employee/height\"));\n  assertEquals((Double)5.8d,parser.evalDouble(\"/employee/height\"));\n  assertEquals(\"${id_var}\",parser.evalString(\"/employee/@id\"));\n  assertEquals(Boolean.TRUE,parser.evalBoolean(\"/employee/active\"));\n  assertEquals(\"<id>${id_var}</id>\",parser.evalNode(\"/employee/@id\").toString().trim());\n  assertEquals(7,parser.evalNodes(\"/employee/*\").size());\n  XNode node=parser.evalNode(\"/employee/height\");\n  assertEquals(\"employee/height\",node.getPath());\n  assertEquals(\"employee[${id_var}]_height\",node.getValueBasedIdentifier());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals((Double)5.8d,parser.evalDouble(\"/employee/height\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Double"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 21,
    "startColumnNumber" : 17,
    "endLineNumber" : 21,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}