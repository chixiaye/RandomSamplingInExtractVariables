{
  "id" : 339,
  "expression" : "concurrencyStrategy",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "hystrix-core/src/main/java/com/netflix/hystrix/HystrixRequestCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "concurrencyStrategy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 153,
      "startColumnNumber" : 117,
      "endLineNumber" : 153,
      "endColumnNumber" : 136
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 153,
        "startColumnNumber" : 89,
        "endLineNumber" : 153,
        "endColumnNumber" : 137
      },
      "nodeContext" : "requestVariableForCache.get(concurrencyStrategy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 153,
        "startColumnNumber" : 73,
        "endLineNumber" : 153,
        "endColumnNumber" : 137
      },
      "nodeContext" : "cacheInstance=requestVariableForCache.get(concurrencyStrategy)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 138
      },
      "nodeContext" : "ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 152,
        "startColumnNumber" : 25,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n  if (cacheInstance == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  cacheInstance.remove(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key != null) {\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n  if (cacheInstance == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  cacheInstance.remove(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Clear the cache for a given cacheKey.\n * @param cacheKey key as defined by  {@link HystrixCommand#getCacheKey()}\n */\npublic void clear(String cacheKey){\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 138
      },
      "nodeContext" : "ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 153,
    "startColumnNumber" : 117,
    "endLineNumber" : 153,
    "endColumnNumber" : 136
  } ],
  "layoutRelationDataList" : [ ]
}