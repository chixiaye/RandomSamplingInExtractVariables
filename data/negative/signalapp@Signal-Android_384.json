{
  "id" : 384,
  "expression" : "new ByteArrayOutputStream()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/libsignal/service/src/main/java/org/whispersystems/signalservice/api/SignalServiceMessageReceiver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ByteArrayOutputStream()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 175,
      "startColumnNumber" : 41,
      "endLineNumber" : 175,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 175,
        "startColumnNumber" : 26,
        "endLineNumber" : 175,
        "endColumnNumber" : 68
      },
      "nodeContext" : "outputStream=new ByteArrayOutputStream()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 171,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] manifestBytes=socket.retrieveStickerManifest(packId);\n  InputStream cipherStream=AttachmentCipherInputStream.createForStickerData(manifestBytes,packKey);\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  Util.copy(cipherStream,outputStream);\n  StickerProtos.Pack pack=StickerProtos.Pack.parseFrom(outputStream.toByteArray());\n  List<SignalServiceStickerManifest.StickerInfo> stickers=new ArrayList<>(pack.getStickersCount());\n  SignalServiceStickerManifest.StickerInfo cover=pack.hasCover() ? new SignalServiceStickerManifest.StickerInfo(pack.getCover().getId(),pack.getCover().getEmoji(),pack.getCover().getContentType()) : null;\n  for (  StickerProtos.Pack.Sticker sticker : pack.getStickersList()) {\n    stickers.add(new SignalServiceStickerManifest.StickerInfo(sticker.getId(),sticker.getEmoji(),sticker.getContentType()));\n  }\n  return new SignalServiceStickerManifest(pack.getTitle(),pack.getAuthor(),cover,stickers);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1633,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Retrieves a  {@link SignalServiceStickerManifest}.\n * @param packId The 16-byte packId that identifies the sticker pack.\n * @param packKey The 32-byte packKey that decrypts the sticker pack.\n * @return The {@link SignalServiceStickerManifest} representing the sticker pack.\n * @throws IOException\n * @throws InvalidMessageException\n */\npublic SignalServiceStickerManifest retrieveStickerManifest(byte[] packId,byte[] packKey) throws IOException, InvalidMessageException {\n  byte[] manifestBytes=socket.retrieveStickerManifest(packId);\n  InputStream cipherStream=AttachmentCipherInputStream.createForStickerData(manifestBytes,packKey);\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  Util.copy(cipherStream,outputStream);\n  StickerProtos.Pack pack=StickerProtos.Pack.parseFrom(outputStream.toByteArray());\n  List<SignalServiceStickerManifest.StickerInfo> stickers=new ArrayList<>(pack.getStickersCount());\n  SignalServiceStickerManifest.StickerInfo cover=pack.hasCover() ? new SignalServiceStickerManifest.StickerInfo(pack.getCover().getId(),pack.getCover().getEmoji(),pack.getCover().getContentType()) : null;\n  for (  StickerProtos.Pack.Sticker sticker : pack.getStickersList()) {\n    stickers.add(new SignalServiceStickerManifest.StickerInfo(sticker.getId(),sticker.getEmoji(),sticker.getContentType()));\n  }\n  return new SignalServiceStickerManifest(pack.getTitle(),pack.getAuthor(),cover,stickers);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.ByteArrayOutputStream"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 175,
    "startColumnNumber" : 41,
    "endLineNumber" : 175,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}