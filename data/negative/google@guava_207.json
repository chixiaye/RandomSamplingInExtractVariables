{
  "id" : 207,
  "expression" : "elements::add",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/testers/CollectionForEachTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "elements::add",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 42,
      "startColumnNumber" : 23,
      "endLineNumber" : 42,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 37
      },
      "nodeContext" : "collection.forEach(elements::add)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 38
      },
      "nodeContext" : "collection.forEach(elements::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 40,
        "startColumnNumber" : 40,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<E> elements=new ArrayList<>();\n  collection.forEach(elements::add);\n  Helpers.assertEqualIgnoringOrder(Arrays.asList(createSamplesArray()),elements);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@CollectionFeature.Require(absent=KNOWN_ORDER) public void testForEachUnknownOrder(){\n  List<E> elements=new ArrayList<>();\n  collection.forEach(elements::add);\n  Helpers.assertEqualIgnoringOrder(Arrays.asList(createSamplesArray()),elements);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 38
      },
      "nodeContext" : "collection.forEach(elements::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Consumer<? super E>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 42,
    "startColumnNumber" : 23,
    "endLineNumber" : 42,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}