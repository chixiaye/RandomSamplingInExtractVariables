{
  "id" : 332,
  "expression" : "future.get()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/MoreExecutorsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "future.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 165,
      "startColumnNumber" : 22,
      "endLineNumber" : 165,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 165,
        "startColumnNumber" : 22,
        "endLineNumber" : 165,
        "endColumnNumber" : 45
      },
      "nodeContext" : "future.get().intValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(i,future.get().intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(i,future.get().intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 162,
        "startColumnNumber" : 33,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Future<Integer> future=futures.get(i);\n  assertTrue(\"Task should have been run before being returned\",future.isDone());\n  assertEquals(i,future.get().intValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  Future<Integer> future=futures.get(i);\n  assertTrue(\"Task should have been run before being returned\",future.isDone());\n  assertEquals(i,future.get().intValue());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 937,
        "startLineNumber" : 140,
        "startColumnNumber" : 68,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ExecutorService executor=newDirectExecutorService();\n  final ThreadLocal<Integer> threadLocalCount=new ThreadLocal<Integer>(){\n    @Override protected Integer initialValue(){\n      return 0;\n    }\n  }\n;\n  final Callable<Integer> incrementTask=new Callable<Integer>(){\n    @Override public Integer call(){\n      int i=threadLocalCount.get();\n      threadLocalCount.set(i + 1);\n      return i;\n    }\n  }\n;\n  List<Future<Integer>> futures=executor.invokeAll(Collections.nCopies(10,incrementTask));\n  for (int i=0; i < 10; i++) {\n    Future<Integer> future=futures.get(i);\n    assertTrue(\"Task should have been run before being returned\",future.isDone());\n    assertEquals(i,future.get().intValue());\n  }\n  assertEquals(10,threadLocalCount.get().intValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1003,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testDirectExecutorServiceInvokeAll() throws Exception {\n  final ExecutorService executor=newDirectExecutorService();\n  final ThreadLocal<Integer> threadLocalCount=new ThreadLocal<Integer>(){\n    @Override protected Integer initialValue(){\n      return 0;\n    }\n  }\n;\n  final Callable<Integer> incrementTask=new Callable<Integer>(){\n    @Override public Integer call(){\n      int i=threadLocalCount.get();\n      threadLocalCount.set(i + 1);\n      return i;\n    }\n  }\n;\n  List<Future<Integer>> futures=executor.invokeAll(Collections.nCopies(10,incrementTask));\n  for (int i=0; i < 10; i++) {\n    Future<Integer> future=futures.get(i);\n    assertTrue(\"Task should have been run before being returned\",future.isDone());\n    assertEquals(i,future.get().intValue());\n  }\n  assertEquals(10,threadLocalCount.get().intValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(i,future.get().intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 165,
    "startColumnNumber" : 22,
    "endLineNumber" : 165,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}