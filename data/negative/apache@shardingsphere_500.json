{
  "id" : 500,
  "expression" : "new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i))",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/metadata/schema/builder/loader/common/ColumnMetaDataLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 116,
      "startLineNumber" : 79,
      "startColumnNumber" : 27,
      "endLineNumber" : 79,
      "endColumnNumber" : 143
    },
    "astNodeNumber" : 20,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 144
      },
      "nodeContext" : "result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 145
      },
      "nodeContext" : "result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 76,
        "startColumnNumber" : 57,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n  isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n  result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < columnNames.size(); i++) {\n  boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n  isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n  result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 75,
        "startColumnNumber" : 167,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < columnNames.size(); i++) {\n    boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n    isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n    result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Statement statement=connection.createStatement();ResultSet resultSet=statement.executeQuery(generateEmptyResultSQL(tableNamePattern,databaseType))){\n  for (int i=0; i < columnNames.size(); i++) {\n    boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n    isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n    result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1635,
        "startLineNumber" : 57,
        "startColumnNumber" : 163,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<ColumnMetaData> result=new LinkedList<>();\n  Collection<String> primaryKeys=loadPrimaryKeys(connection,tableNamePattern);\n  List<String> columnNames=new ArrayList<>();\n  List<Integer> columnTypes=new ArrayList<>();\n  List<Boolean> isPrimaryKeys=new ArrayList<>();\n  List<Boolean> isCaseSensitives=new ArrayList<>();\n  try (ResultSet resultSet=connection.getMetaData().getColumns(connection.getCatalog(),connection.getSchema(),tableNamePattern,\"%\")){\n    while (resultSet.next()) {\n      String tableName=resultSet.getString(TABLE_NAME);\n      if (Objects.equals(tableNamePattern,tableName)) {\n        String columnName=resultSet.getString(COLUMN_NAME);\n        columnTypes.add(resultSet.getInt(DATA_TYPE));\n        isPrimaryKeys.add(primaryKeys.contains(columnName));\n        columnNames.add(columnName);\n      }\n    }\n  }\n   try (Statement statement=connection.createStatement();ResultSet resultSet=statement.executeQuery(generateEmptyResultSQL(tableNamePattern,databaseType))){\n    for (int i=0; i < columnNames.size(); i++) {\n      boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n      isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n      result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n    }\n  }\n   return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2058,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Load column meta data list.\n * @param connection connection\n * @param tableNamePattern table name pattern\n * @param databaseType database type\n * @return column meta data list\n * @throws SQLException SQL exception\n */\npublic static Collection<ColumnMetaData> load(final Connection connection,final String tableNamePattern,final DatabaseType databaseType) throws SQLException {\n  Collection<ColumnMetaData> result=new LinkedList<>();\n  Collection<String> primaryKeys=loadPrimaryKeys(connection,tableNamePattern);\n  List<String> columnNames=new ArrayList<>();\n  List<Integer> columnTypes=new ArrayList<>();\n  List<Boolean> isPrimaryKeys=new ArrayList<>();\n  List<Boolean> isCaseSensitives=new ArrayList<>();\n  try (ResultSet resultSet=connection.getMetaData().getColumns(connection.getCatalog(),connection.getSchema(),tableNamePattern,\"%\")){\n    while (resultSet.next()) {\n      String tableName=resultSet.getString(TABLE_NAME);\n      if (Objects.equals(tableNamePattern,tableName)) {\n        String columnName=resultSet.getString(COLUMN_NAME);\n        columnTypes.add(resultSet.getInt(DATA_TYPE));\n        isPrimaryKeys.add(primaryKeys.contains(columnName));\n        columnNames.add(columnName);\n      }\n    }\n  }\n   try (Statement statement=connection.createStatement();ResultSet resultSet=statement.executeQuery(generateEmptyResultSQL(tableNamePattern,databaseType))){\n    for (int i=0; i < columnNames.size(); i++) {\n      boolean generated=resultSet.getMetaData().isAutoIncrement(i + 1);\n      isCaseSensitives.add(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(columnNames.get(i))));\n      result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n    }\n  }\n   return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 145
      },
      "nodeContext" : "result.add(new ColumnMetaData(columnNames.get(i),columnTypes.get(i),isPrimaryKeys.get(i),generated,isCaseSensitives.get(i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    },
    "tokenLength" : 14,
    "type" : "org.apache.shardingsphere.infra.metadata.schema.model.ColumnMetaData"
  } ],
  "positionList" : [ {
    "charLength" : 116,
    "startLineNumber" : 79,
    "startColumnNumber" : 27,
    "endLineNumber" : 79,
    "endColumnNumber" : 143
  } ],
  "layoutRelationDataList" : [ ]
}