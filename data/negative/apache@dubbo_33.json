{
  "id" : 33,
  "expression" : "testInfo",
  "projectName" : "apache@dubbo",
  "commitID" : "a7fb614c13fe18af5fda8c8bebd543a831c0c72c",
  "filePath" : "dubbo-metadata/dubbo-metadata-report-redis/src/test/java/org/apache/dubbo/metadata/store/redis/RedisMetadataReportTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 63,
      "startColumnNumber" : 62,
      "endLineNumber" : 63,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 63,
        "startColumnNumber" : 43,
        "endLineNumber" : 63,
        "endColumnNumber" : 71
      },
      "nodeContext" : "usesAuthentication(testInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 71
      },
      "nodeContext" : "usesAuthentication=usesAuthentication(testInfo)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final boolean usesAuthentication=usesAuthentication(testInfo);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1388,
        "startLineNumber" : 62,
        "startColumnNumber" : 72,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final boolean usesAuthentication=usesAuthentication(testInfo);\n  int redisPort=0;\n  IOException exception=null;\n  for (int i=0; i < 10; i++) {\n    try {\n      redisPort=NetUtils.getAvailablePort(30000 + new Random().nextInt(10000));\n      redisServer=newRedisServer().port(redisPort).settingIf(SystemUtils.IS_OS_WINDOWS,\"maxheap 128mb\").settingIf(usesAuthentication,\"requirepass \" + REDIS_PASSWORD).build();\n      this.redisServer.start();\n      exception=null;\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n      exception=e;\n    }\n    if (exception == null) {\n      break;\n    }\n  }\n  Assertions.assertNull(exception);\n  registryUrl=newRedisUrl(usesAuthentication,redisPort);\n  redisMetadataReport=(RedisMetadataReport)new RedisMetadataReportFactory().createMetadataReport(registryUrl);\n  URL syncRegistryUrl=registryUrl.addParameter(SYNC_REPORT_KEY,\"true\");\n  syncRedisMetadataReport=(RedisMetadataReport)new RedisMetadataReportFactory().createMetadataReport(syncRegistryUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@BeforeEach public void constructor(final TestInfo testInfo) throws IOException {\n  final boolean usesAuthentication=usesAuthentication(testInfo);\n  int redisPort=0;\n  IOException exception=null;\n  for (int i=0; i < 10; i++) {\n    try {\n      redisPort=NetUtils.getAvailablePort(30000 + new Random().nextInt(10000));\n      redisServer=newRedisServer().port(redisPort).settingIf(SystemUtils.IS_OS_WINDOWS,\"maxheap 128mb\").settingIf(usesAuthentication,\"requirepass \" + REDIS_PASSWORD).build();\n      this.redisServer.start();\n      exception=null;\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n      exception=e;\n    }\n    if (exception == null) {\n      break;\n    }\n  }\n  Assertions.assertNull(exception);\n  registryUrl=newRedisUrl(usesAuthentication,redisPort);\n  redisMetadataReport=(RedisMetadataReport)new RedisMetadataReportFactory().createMetadataReport(registryUrl);\n  URL syncRegistryUrl=registryUrl.addParameter(SYNC_REPORT_KEY,\"true\");\n  syncRedisMetadataReport=(RedisMetadataReport)new RedisMetadataReportFactory().createMetadataReport(syncRegistryUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final boolean usesAuthentication=usesAuthentication(testInfo);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.metadata.store.redis.TestInfo"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 63,
    "startColumnNumber" : 62,
    "endLineNumber" : 63,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}