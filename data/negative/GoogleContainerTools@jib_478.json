{
  "id" : 478,
  "expression" : "ex.getMessage() != null",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/RetrieveRegistryCredentialsStep.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ex.getMessage() != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 155,
      "startColumnNumber" : 16,
      "endLineNumber" : 155,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ex.getMessage() != null) {\n  buildLogger.warn(ex.getMessage());\n  if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n    buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 154,
        "startColumnNumber" : 66,
        "endLineNumber" : 163,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  if (ex.getMessage() != null) {\n    buildLogger.warn(ex.getMessage());\n    if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n      buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 154,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 11
      },
      "nodeContext" : "catch (NonexistentDockerCredentialHelperException ex) {\n  if (ex.getMessage() != null) {\n    buildLogger.warn(ex.getMessage());\n    if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n      buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n    }\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 46,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 144,
        "startColumnNumber" : 10,
        "endLineNumber" : 163,
        "endColumnNumber" : 11
      },
      "nodeContext" : "try {\n  String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n  if (commonCredentialHelper == null) {\n    throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n  }\n  Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n  if (authorization != null) {\n    return authorization;\n  }\n}\n catch (NonexistentDockerCredentialHelperException ex) {\n  if (ex.getMessage() != null) {\n    buildLogger.warn(ex.getMessage());\n    if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n      buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 949,
        "startLineNumber" : 143,
        "startColumnNumber" : 47,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n    if (commonCredentialHelper == null) {\n      throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n    }\n    Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n catch (  NonexistentDockerCredentialHelperException ex) {\n    if (ex.getMessage() != null) {\n      buildLogger.warn(ex.getMessage());\n      if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n        buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (registry.endsWith(registrySuffix)) {\n  try {\n    String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n    if (commonCredentialHelper == null) {\n      throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n    }\n    Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n catch (  NonexistentDockerCredentialHelperException ex) {\n    if (ex.getMessage() != null) {\n      buildLogger.warn(ex.getMessage());\n      if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n        buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 142,
        "startColumnNumber" : 71,
        "endLineNumber" : 165,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (registry.endsWith(registrySuffix)) {\n    try {\n      String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n      if (commonCredentialHelper == null) {\n        throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n      }\n      Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n catch (    NonexistentDockerCredentialHelperException ex) {\n      if (ex.getMessage() != null) {\n        buildLogger.warn(ex.getMessage());\n        if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n          buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n  if (registry.endsWith(registrySuffix)) {\n    try {\n      String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n      if (commonCredentialHelper == null) {\n        throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n      }\n      Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n catch (    NonexistentDockerCredentialHelperException ex) {\n      if (ex.getMessage() != null) {\n        buildLogger.warn(ex.getMessage());\n        if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n          buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 97,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2484,
        "startLineNumber" : 126,
        "startColumnNumber" : 87,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (credentialHelperSuffix != null) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  if (knownRegistryCredentials != null) {\n    logGotCredentialsFrom(knownRegistryCredentials.getCredentialSource());\n    return knownRegistryCredentials.getAuthorization();\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildLogger.warn(ex.getMessage());\n          if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n            buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n          }\n        }\n      }\n    }\n  }\n  try {\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildLogger.info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n  }\n catch (  IOException ex) {\n    buildLogger.info(\"Unable to parse Docker config\");\n  }\n  buildLogger.info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2567,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Timer ignored=new Timer(buildLogger,String.format(DESCRIPTION,registry))){\n  if (credentialHelperSuffix != null) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  if (knownRegistryCredentials != null) {\n    logGotCredentialsFrom(knownRegistryCredentials.getCredentialSource());\n    return knownRegistryCredentials.getAuthorization();\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildLogger.warn(ex.getMessage());\n          if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n            buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n          }\n        }\n      }\n    }\n  }\n  try {\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildLogger.info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n  }\n catch (  IOException ex) {\n    buildLogger.info(\"Unable to parse Docker config\");\n  }\n  buildLogger.info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 192,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2651,
        "startLineNumber" : 123,
        "startColumnNumber" : 93,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  buildLogger.lifecycle(String.format(DESCRIPTION,registry) + \"...\");\n  try (Timer ignored=new Timer(buildLogger,String.format(DESCRIPTION,registry))){\n    if (credentialHelperSuffix != null) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    if (knownRegistryCredentials != null) {\n      logGotCredentialsFrom(knownRegistryCredentials.getCredentialSource());\n      return knownRegistryCredentials.getAuthorization();\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildLogger.warn(ex.getMessage());\n            if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n              buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n            }\n          }\n        }\n      }\n    }\n    try {\n      Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n      if (dockerConfigAuthorization != null) {\n        buildLogger.info(\"Using credentials from Docker config for \" + registry);\n        return dockerConfigAuthorization;\n      }\n    }\n catch (    IOException ex) {\n      buildLogger.info(\"Unable to parse Docker config\");\n    }\n    buildLogger.info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2766,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable public Authorization call() throws IOException, NonexistentDockerCredentialHelperException {\n  buildLogger.lifecycle(String.format(DESCRIPTION,registry) + \"...\");\n  try (Timer ignored=new Timer(buildLogger,String.format(DESCRIPTION,registry))){\n    if (credentialHelperSuffix != null) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    if (knownRegistryCredentials != null) {\n      logGotCredentialsFrom(knownRegistryCredentials.getCredentialSource());\n      return knownRegistryCredentials.getAuthorization();\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildLogger.warn(ex.getMessage());\n            if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n              buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n            }\n          }\n        }\n      }\n    }\n    try {\n      Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n      if (dockerConfigAuthorization != null) {\n        buildLogger.info(\"Using credentials from Docker config for \" + registry);\n        return dockerConfigAuthorization;\n      }\n    }\n catch (    IOException ex) {\n      buildLogger.info(\"Unable to parse Docker config\");\n    }\n    buildLogger.info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ex.getMessage() != null) {\n  buildLogger.warn(ex.getMessage());\n  if (ex.getCause() != null && ex.getCause().getMessage() != null) {\n    buildLogger.info(\"  Caused by: \" + ex.getCause().getMessage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 155,
    "startColumnNumber" : 16,
    "endLineNumber" : 155,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}