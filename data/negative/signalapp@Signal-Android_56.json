{
  "id" : 56,
  "expression" : "new ByteArrayOutputStream()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/util/StringUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ByteArrayOutputStream()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 61,
      "startColumnNumber" : 40,
      "endLineNumber" : 61,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 61,
        "startColumnNumber" : 31,
        "endLineNumber" : 61,
        "endColumnNumber" : 67
      },
      "nodeContext" : "stream=new ByteArrayOutputStream()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 9,
        "endLineNumber" : 61,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ByteArrayOutputStream stream=new ByteArrayOutputStream()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (ByteArrayOutputStream stream=new ByteArrayOutputStream()){\n  for (  String graphemeCharacter : new CharacterIterable(name)) {\n    byte[] bytes=graphemeCharacter.getBytes(StandardCharsets.UTF_8);\n    if (stream.size() + bytes.length <= maxByteLength) {\n      stream.write(bytes);\n    }\n else {\n      break;\n    }\n  }\n  return stream.toString();\n}\n catch (IOException e) {\n  throw new AssertionError(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 52,
        "startColumnNumber" : 84,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (TextUtils.isEmpty(name)) {\n    return \"\";\n  }\n  if (name.getBytes(StandardCharsets.UTF_8).length <= maxByteLength) {\n    return name;\n  }\n  try (ByteArrayOutputStream stream=new ByteArrayOutputStream()){\n    for (    String graphemeCharacter : new CharacterIterable(name)) {\n      byte[] bytes=graphemeCharacter.getBytes(StandardCharsets.UTF_8);\n      if (stream.size() + bytes.length <= maxByteLength) {\n        stream.write(bytes);\n      }\n else {\n        break;\n      }\n    }\n    return stream.toString();\n  }\n catch (  IOException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Trims a name string to fit into the byte length requirement. <p> This method treats a surrogate pair and a grapheme cluster a single character See examples in tests defined in StringUtilText_trimToFit.\n */\npublic static @NonNull String trimToFit(@Nullable String name,int maxByteLength){\n  if (TextUtils.isEmpty(name)) {\n    return \"\";\n  }\n  if (name.getBytes(StandardCharsets.UTF_8).length <= maxByteLength) {\n    return name;\n  }\n  try (ByteArrayOutputStream stream=new ByteArrayOutputStream()){\n    for (    String graphemeCharacter : new CharacterIterable(name)) {\n      byte[] bytes=graphemeCharacter.getBytes(StandardCharsets.UTF_8);\n      if (stream.size() + bytes.length <= maxByteLength) {\n        stream.write(bytes);\n      }\n else {\n        break;\n      }\n    }\n    return stream.toString();\n  }\n catch (  IOException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 9,
        "endLineNumber" : 61,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ByteArrayOutputStream stream=new ByteArrayOutputStream()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.ByteArrayOutputStream"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 61,
    "startColumnNumber" : 40,
    "endLineNumber" : 61,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}