{
  "id" : 323,
  "expression" : "bigDecimal",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lang-math/src/main/java/com/baeldung/doubles/SplitFloatingPointNumbers.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bigDecimal",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 35,
      "startColumnNumber" : 23,
      "endLineNumber" : 35,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 35,
        "endColumnNumber" : 44
      },
      "nodeContext" : "bigDecimal.intValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 44
      },
      "nodeContext" : "intValue=bigDecimal.intValue()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int intValue=bigDecimal.intValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 32,
        "startColumnNumber" : 66,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void splitUsingBigDecimal(double doubleNumber){\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int intValue=bigDecimal.intValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.math.BigDecimal"
  }, {
    "nodeContext" : "bigDecimal",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 36,
      "startColumnNumber" : 45,
      "endLineNumber" : 36,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 36,
        "startColumnNumber" : 45,
        "endLineNumber" : 36,
        "endColumnNumber" : 71
      },
      "nodeContext" : "bigDecimal.toPlainString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 71
      },
      "nodeContext" : "\"Double Number: \" + bigDecimal.toPlainString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 72
      },
      "nodeContext" : "System.out.println(\"Double Number: \" + bigDecimal.toPlainString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 32,
        "startColumnNumber" : 66,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void splitUsingBigDecimal(double doubleNumber){\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.math.BigDecimal"
  }, {
    "nodeContext" : "bigDecimal",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 38,
      "startColumnNumber" : 44,
      "endLineNumber" : 38,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 38,
        "startColumnNumber" : 44,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "bigDecimal.subtract(new BigDecimal(intValue))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 38,
        "startColumnNumber" : 44,
        "endLineNumber" : 38,
        "endColumnNumber" : 105
      },
      "nodeContext" : "bigDecimal.subtract(new BigDecimal(intValue)).toPlainString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 38,
        "startColumnNumber" : 27,
        "endLineNumber" : 38,
        "endColumnNumber" : 105
      },
      "nodeContext" : "\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 106
      },
      "nodeContext" : "System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 107
      },
      "nodeContext" : "System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 32,
        "startColumnNumber" : 66,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void splitUsingBigDecimal(double doubleNumber){\n  System.out.println(\"Using BigDecimal Operations:\");\n  BigDecimal bigDecimal=new BigDecimal(String.valueOf(doubleNumber));\n  int intValue=bigDecimal.intValue();\n  System.out.println(\"Double Number: \" + bigDecimal.toPlainString());\n  System.out.println(\"Integer Part: \" + intValue);\n  System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 107
      },
      "nodeContext" : "System.out.println(\"Decimal Part: \" + bigDecimal.subtract(new BigDecimal(intValue)).toPlainString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 35,
    "startColumnNumber" : 23,
    "endLineNumber" : 35,
    "endColumnNumber" : 33
  }, {
    "charLength" : 10,
    "startLineNumber" : 36,
    "startColumnNumber" : 45,
    "endLineNumber" : 36,
    "endColumnNumber" : 55
  }, {
    "charLength" : 10,
    "startLineNumber" : 38,
    "startColumnNumber" : 44,
    "endLineNumber" : 38,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}