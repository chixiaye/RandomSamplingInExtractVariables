{
  "id" : 76,
  "expression" : "at + 1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/other/CombinationsWithRepetition.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "at + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 49,
      "startColumnNumber" : 56,
      "endLineNumber" : 49,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 81
      },
      "nodeContext" : "combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 82
      },
      "nodeContext" : "combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 44,
        "startColumnNumber" : 59,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  usedCount[at]=itemCount;\n  combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int itemCount=0; itemCount <= k; itemCount++) {\n  usedCount[at]=itemCount;\n  combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 41,
        "startColumnNumber" : 11,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int itemCount=0; itemCount <= k; itemCount++) {\n    usedCount[at]=itemCount;\n    combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (at == N) {\n  if (r == 0) {\n    System.out.print(\"{ \");\n    for (int i=0; i < N; i++)     for (int j=0; j < usedCount[i]; j++)     System.out.print(sequence[i] + \" \");\n    System.out.println(\"}\");\n  }\n}\n else {\n  for (int itemCount=0; itemCount <= k; itemCount++) {\n    usedCount[at]=itemCount;\n    combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 24,
        "startColumnNumber" : 61,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int N=sequence.length;\n  if (at == N) {\n    if (r == 0) {\n      System.out.print(\"{ \");\n      for (int i=0; i < N; i++)       for (int j=0; j < usedCount[i]; j++)       System.out.print(sequence[i] + \" \");\n      System.out.println(\"}\");\n    }\n  }\n else {\n    for (int itemCount=0; itemCount <= k; itemCount++) {\n      usedCount[at]=itemCount;\n      combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1388,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Computes all combinations of elements of 'r' elements which can be repeated at most 'k' times each.\n * @param sequence - The sequence containing all the elements we wish to take combinations from\n * @param usedCount - Tracks how many of each element we currently have selected\n * @param at - The current position we're at in the sequence\n * @param r - The number of elements we're choosing\n * @param k - The maximum number of times each element is allowed to be picked\n */\nprivate static void combinationsWithRepetition(int[] sequence,int[] usedCount,int at,int r,int k){\n  final int N=sequence.length;\n  if (at == N) {\n    if (r == 0) {\n      System.out.print(\"{ \");\n      for (int i=0; i < N; i++)       for (int j=0; j < usedCount[i]; j++)       System.out.print(sequence[i] + \" \");\n      System.out.println(\"}\");\n    }\n  }\n else {\n    for (int itemCount=0; itemCount <= k; itemCount++) {\n      usedCount[at]=itemCount;\n      combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 82
      },
      "nodeContext" : "combinationsWithRepetition(sequence,usedCount,at + 1,r - itemCount,k);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 49,
    "startColumnNumber" : 56,
    "endLineNumber" : 49,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}