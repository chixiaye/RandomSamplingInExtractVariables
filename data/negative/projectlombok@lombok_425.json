{
  "id" : 425,
  "expression" : "new File(p,getIniName())",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/installer/lombok/installer/eclipse/EclipseLocationProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(p,getIniName())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 84,
      "startColumnNumber" : 12,
      "endLineNumber" : 84,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 37
      },
      "nodeContext" : "f=new File(p,getIniName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 84,
        "startColumnNumber" : 3,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "File f=new File(p,getIniName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 78,
        "startColumnNumber" : 23,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  String possibleExeName : getEclipseExecutableNames()) {\n    File f=new File(p,possibleExeName);\n    if (f.exists())     return findEclipseIniFromExe(f,0);\n  }\n  File f=new File(p,getIniName());\n  if (f.exists())   return new EclipseLocation(canonical(p),f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (p.isDirectory()) {\n  for (  String possibleExeName : getEclipseExecutableNames()) {\n    File f=new File(p,possibleExeName);\n    if (f.exists())     return findEclipseIniFromExe(f,0);\n  }\n  File f=new File(p,getIniName());\n  if (f.exists())   return new EclipseLocation(canonical(p),f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 73,
        "startColumnNumber" : 81,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (path == null)   throw new NullPointerException(\"path\");\n  File p=new File(path);\n  if (!p.exists())   return null;\n  if (p.isDirectory()) {\n    for (    String possibleExeName : getEclipseExecutableNames()) {\n      File f=new File(p,possibleExeName);\n      if (f.exists())       return findEclipseIniFromExe(f,0);\n    }\n    File f=new File(p,getIniName());\n    if (f.exists())     return new EclipseLocation(canonical(p),f);\n  }\n  if (p.isFile()) {\n    if (p.getName().equalsIgnoreCase(getIniName())) {\n      return new EclipseLocation(canonical(p.getParentFile()),p);\n    }\n  }\n  if (getEclipseExecutableNames().contains(p.getName().toLowerCase())) {\n    return findEclipseIniFromExe(p,0);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1117,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Create a new EclipseLocation by pointing at either the directory contains the Eclipse executable, or the executable itself, or an eclipse.ini file.\n * @throws NotAnIdeLocationException If this isn't an Eclipse executable or a directory with an Eclipse executable.\n */\nprotected IdeLocation create0(String path) throws CorruptedIdeLocationException {\n  if (path == null)   throw new NullPointerException(\"path\");\n  File p=new File(path);\n  if (!p.exists())   return null;\n  if (p.isDirectory()) {\n    for (    String possibleExeName : getEclipseExecutableNames()) {\n      File f=new File(p,possibleExeName);\n      if (f.exists())       return findEclipseIniFromExe(f,0);\n    }\n    File f=new File(p,getIniName());\n    if (f.exists())     return new EclipseLocation(canonical(p),f);\n  }\n  if (p.isFile()) {\n    if (p.getName().equalsIgnoreCase(getIniName())) {\n      return new EclipseLocation(canonical(p.getParentFile()),p);\n    }\n  }\n  if (getEclipseExecutableNames().contains(p.getName().toLowerCase())) {\n    return findEclipseIniFromExe(p,0);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 84,
        "startColumnNumber" : 3,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "File f=new File(p,getIniName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 84,
    "startColumnNumber" : 12,
    "endLineNumber" : 84,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}