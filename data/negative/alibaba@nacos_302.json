{
  "id" : 302,
  "expression" : "1",
  "projectName" : "alibaba@nacos",
  "commitID" : "daf593823a8896f1bff7d52d4f0dec762faff026",
  "filePath" : "api/src/main/java/com/alibaba/nacos/api/naming/pojo/ServiceInfo.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 78,
      "startColumnNumber" : 31,
      "endLineNumber" : 78,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 32
      },
      "nodeContext" : "serviceNameIndex=1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 33
      },
      "nodeContext" : "int serviceNameIndex=1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 75,
        "startColumnNumber" : 35,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int maxIndex=2;\n  int clusterIndex=2;\n  int serviceNameIndex=1;\n  int groupIndex=0;\n  String[] keys=key.split(Constants.SERVICE_INFO_SPLITER);\n  if (keys.length >= maxIndex + 1) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n    this.clusters=keys[clusterIndex];\n  }\n else   if (keys.length == maxIndex) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n  }\n else {\n    throw new IllegalArgumentException(\"Cann't parse out 'groupName',but it must not be null!\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * There is only one form of the key:groupName@@name@clusters. This constuctor used by DiskCache.read(String) and FailoverReactor.FailoverFileReader,you should know that 'groupName' must not be null,and 'clusters' can be null.\n */\npublic ServiceInfo(String key){\n  int maxIndex=2;\n  int clusterIndex=2;\n  int serviceNameIndex=1;\n  int groupIndex=0;\n  String[] keys=key.split(Constants.SERVICE_INFO_SPLITER);\n  if (keys.length >= maxIndex + 1) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n    this.clusters=keys[clusterIndex];\n  }\n else   if (keys.length == maxIndex) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n  }\n else {\n    throw new IllegalArgumentException(\"Cann't parse out 'groupName',but it must not be null!\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 33
      },
      "nodeContext" : "int serviceNameIndex=1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 82,
      "startColumnNumber" : 38,
      "endLineNumber" : 82,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 82,
        "startColumnNumber" : 27,
        "endLineNumber" : 82,
        "endColumnNumber" : 39
      },
      "nodeContext" : "maxIndex + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 39
      },
      "nodeContext" : "keys.length >= maxIndex + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (keys.length >= maxIndex + 1) {\n  this.groupName=keys[groupIndex];\n  this.name=keys[serviceNameIndex];\n  this.clusters=keys[clusterIndex];\n}\n else if (keys.length == maxIndex) {\n  this.groupName=keys[groupIndex];\n  this.name=keys[serviceNameIndex];\n}\n else {\n  throw new IllegalArgumentException(\"Cann't parse out 'groupName',but it must not be null!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 75,
        "startColumnNumber" : 35,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int maxIndex=2;\n  int clusterIndex=2;\n  int serviceNameIndex=1;\n  int groupIndex=0;\n  String[] keys=key.split(Constants.SERVICE_INFO_SPLITER);\n  if (keys.length >= maxIndex + 1) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n    this.clusters=keys[clusterIndex];\n  }\n else   if (keys.length == maxIndex) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n  }\n else {\n    throw new IllegalArgumentException(\"Cann't parse out 'groupName',but it must not be null!\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * There is only one form of the key:groupName@@name@clusters. This constuctor used by DiskCache.read(String) and FailoverReactor.FailoverFileReader,you should know that 'groupName' must not be null,and 'clusters' can be null.\n */\npublic ServiceInfo(String key){\n  int maxIndex=2;\n  int clusterIndex=2;\n  int serviceNameIndex=1;\n  int groupIndex=0;\n  String[] keys=key.split(Constants.SERVICE_INFO_SPLITER);\n  if (keys.length >= maxIndex + 1) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n    this.clusters=keys[clusterIndex];\n  }\n else   if (keys.length == maxIndex) {\n    this.groupName=keys[groupIndex];\n    this.name=keys[serviceNameIndex];\n  }\n else {\n    throw new IllegalArgumentException(\"Cann't parse out 'groupName',but it must not be null!\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 39
      },
      "nodeContext" : "keys.length >= maxIndex + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 78,
    "startColumnNumber" : 31,
    "endLineNumber" : 78,
    "endColumnNumber" : 32
  }, {
    "charLength" : 1,
    "startLineNumber" : 82,
    "startColumnNumber" : 38,
    "endLineNumber" : 82,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}