{
  "id" : 189,
  "expression" : "Assert",
  "projectName" : "eugenp@tutorials",
  "commitID" : "8ccec9a413ee3e36eb73d0d1e2294596b2b3681f",
  "filePath" : "spring-boot/src/test/java/org/baeldung/properties/ConfigPropertiesIntegrationTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 32,
      "startColumnNumber" : 8,
      "endLineNumber" : 32,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 30,
        "startColumnNumber" : 78,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenListPropertyQueriedthenReturnsProperty() throws Exception {\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 33,
      "startColumnNumber" : 8,
      "endLineNumber" : 33,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 112
      },
      "nodeContext" : "Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 30,
        "startColumnNumber" : 78,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenListPropertyQueriedthenReturnsProperty() throws Exception {\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 34,
      "startColumnNumber" : 8,
      "endLineNumber" : 34,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 30,
        "startColumnNumber" : 78,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenListPropertyQueriedthenReturnsProperty() throws Exception {\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 35,
      "startColumnNumber" : 8,
      "endLineNumber" : 35,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 30,
        "startColumnNumber" : 78,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenListPropertyQueriedthenReturnsProperty() throws Exception {\n  List<String> defaultRecipients=properties.getDefaultRecipients();\n  Assert.assertTrue(\"Couldn't bind list property!\",defaultRecipients.size() == 2);\n  Assert.assertTrue(\"Incorrectly bound list property. Expected 2 entries!\",defaultRecipients.size() == 2);\n  Assert.assertEquals(\"Incorrectly bound list[0] property\",\"admin@mail.com\",defaultRecipients.get(0));\n  Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"Incorrectly bound list[1] property\",\"owner@mail.com\",defaultRecipients.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 32,
    "startColumnNumber" : 8,
    "endLineNumber" : 32,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 33,
    "startColumnNumber" : 8,
    "endLineNumber" : 33,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 34,
    "startColumnNumber" : 8,
    "endLineNumber" : 34,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 35,
    "startColumnNumber" : 8,
    "endLineNumber" : 35,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}