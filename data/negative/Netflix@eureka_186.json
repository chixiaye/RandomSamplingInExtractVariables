{
  "id" : 186,
  "expression" : "connection",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-dashboard/src/main/java/com/netflix/eureka2/WebSocketServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 47,
      "startColumnNumber" : 23,
      "endLineNumber" : 47,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 47,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "connection.getInput()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 47,
        "startColumnNumber" : 23,
        "endLineNumber" : 66,
        "endColumnNumber" : 18
      },
      "nodeContext" : "connection.getInput().flatMap(new Func1<WebSocketFrame,Observable<Void>>(){\n  @Override public Observable<Void> call(  WebSocketFrame wsFrame){\n    final SocketAddress socketAddress=connection.getChannel().remoteAddress();\n    if (wsFrame instanceof TextWebSocketFrame) {\n      TextWebSocketFrame textFrame=(TextWebSocketFrame)wsFrame;\n      logger.info(\"Got ws-message: \" + textFrame.text());\n      final String cmd=textFrame.text();\n      if (cmd.equals(\"get status\")) {\n        return streamEurekaStatus(connection);\n      }\n else {\n        return streamEurekaRegistryData(connection);\n      }\n    }\n else {\n      return Observable.empty();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return connection.getInput().flatMap(new Func1<WebSocketFrame,Observable<Void>>(){\n  @Override public Observable<Void> call(  WebSocketFrame wsFrame){\n    final SocketAddress socketAddress=connection.getChannel().remoteAddress();\n    if (wsFrame instanceof TextWebSocketFrame) {\n      TextWebSocketFrame textFrame=(TextWebSocketFrame)wsFrame;\n      logger.info(\"Got ws-message: \" + textFrame.text());\n      final String cmd=textFrame.text();\n      if (cmd.equals(\"get status\")) {\n        return streamEurekaStatus(connection);\n      }\n else {\n        return streamEurekaRegistryData(connection);\n      }\n    }\n else {\n      return Observable.empty();\n    }\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 46,
        "startColumnNumber" : 114,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return connection.getInput().flatMap(new Func1<WebSocketFrame,Observable<Void>>(){\n    @Override public Observable<Void> call(    WebSocketFrame wsFrame){\n      final SocketAddress socketAddress=connection.getChannel().remoteAddress();\n      if (wsFrame instanceof TextWebSocketFrame) {\n        TextWebSocketFrame textFrame=(TextWebSocketFrame)wsFrame;\n        logger.info(\"Got ws-message: \" + textFrame.text());\n        final String cmd=textFrame.text();\n        if (cmd.equals(\"get status\")) {\n          return streamEurekaStatus(connection);\n        }\n else {\n          return streamEurekaRegistryData(connection);\n        }\n      }\n else {\n        return Observable.empty();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Observable<Void> handle(final ObservableConnection<WebSocketFrame,WebSocketFrame> connection){\n  return connection.getInput().flatMap(new Func1<WebSocketFrame,Observable<Void>>(){\n    @Override public Observable<Void> call(    WebSocketFrame wsFrame){\n      final SocketAddress socketAddress=connection.getChannel().remoteAddress();\n      if (wsFrame instanceof TextWebSocketFrame) {\n        TextWebSocketFrame textFrame=(TextWebSocketFrame)wsFrame;\n        logger.info(\"Got ws-message: \" + textFrame.text());\n        final String cmd=textFrame.text();\n        if (cmd.equals(\"get status\")) {\n          return streamEurekaStatus(connection);\n        }\n else {\n          return streamEurekaRegistryData(connection);\n        }\n      }\n else {\n        return Observable.empty();\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 47,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "connection.getInput()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.ObservableConnection<com.netflix.eureka2.WebSocketFrame,com.netflix.eureka2.WebSocketFrame>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 47,
    "startColumnNumber" : 23,
    "endLineNumber" : 47,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}