{
  "id" : 351,
  "expression" : "i",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/TarjanSccSolverAdjacencyList.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 20,
      "endLineNumber" : 55,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 55,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 40,
      "endLineNumber" : 55,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 55,
        "startColumnNumber" : 36,
        "endLineNumber" : 55,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ids[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 55,
        "startColumnNumber" : 36,
        "endLineNumber" : 55,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ids[i] == UNVISITED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 55,
        "startColumnNumber" : 32,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 61,
      "endLineNumber" : 55,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 55,
        "startColumnNumber" : 57,
        "endLineNumber" : 55,
        "endColumnNumber" : 63
      },
      "nodeContext" : "dfs(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 55,
        "startColumnNumber" : 57,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "dfs(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 55,
        "startColumnNumber" : 32,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  if (solved)   return;\n  ids=new int[n];\n  low=new int[n];\n  onStack=new boolean[n];\n  stack=new ArrayDeque<>();\n  Arrays.fill(ids,UNVISITED);\n  for (int i=0; i < n; i++)   if (ids[i] == UNVISITED)   dfs(i);\n  solved=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 64
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (ids[i] == UNVISITED) dfs(i);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 20,
    "endLineNumber" : 55,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 40,
    "endLineNumber" : 55,
    "endColumnNumber" : 41
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 61,
    "endLineNumber" : 55,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}