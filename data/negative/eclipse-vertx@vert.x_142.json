{
  "id" : 142,
  "expression" : "500",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/EventBusFlowControlTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "500",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 103,
      "startColumnNumber" : 19,
      "endLineNumber" : 103,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 46
      },
      "nodeContext" : "vertx.setTimer(500,tid -> testComplete())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 47
      },
      "nodeContext" : "vertx.setTimer(500,tid -> testComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MessageProducer<String> prod=eb.sender(\"some-address\");\n  int wqms=2000;\n  prod.setWriteQueueMaxSize(wqms);\n  boolean drainHandlerSet=false;\n  for (int i=0; i < wqms * 2; i++) {\n    prod.send(\"message-\" + i);\n    if (prod.writeQueueFull() && !drainHandlerSet) {\n      prod.drainHandler(v -> {\n        fail(\"Should not be called\");\n      }\n);\n      drainHandlerSet=true;\n    }\n  }\n  assertTrue(drainHandlerSet);\n  vertx.setTimer(500,tid -> testComplete());\n  await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFlowControlNoConsumer(){\n  MessageProducer<String> prod=eb.sender(\"some-address\");\n  int wqms=2000;\n  prod.setWriteQueueMaxSize(wqms);\n  boolean drainHandlerSet=false;\n  for (int i=0; i < wqms * 2; i++) {\n    prod.send(\"message-\" + i);\n    if (prod.writeQueueFull() && !drainHandlerSet) {\n      prod.drainHandler(v -> {\n        fail(\"Should not be called\");\n      }\n);\n      drainHandlerSet=true;\n    }\n  }\n  assertTrue(drainHandlerSet);\n  vertx.setTimer(500,tid -> testComplete());\n  await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 47
      },
      "nodeContext" : "vertx.setTimer(500,tid -> testComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 103,
    "startColumnNumber" : 19,
    "endLineNumber" : 103,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}