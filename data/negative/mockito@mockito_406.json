{
  "id" : 406,
  "expression" : "\"Most generic method chosen for matcher \"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/jls/JLS_15_12_2_5Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Most generic method chosen for matcher \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 62,
      "startColumnNumber" : 28,
      "endLineNumber" : 62,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 62,
        "startColumnNumber" : 28,
        "endLineNumber" : 64,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(mock.oneArg(null)).describedAs(\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(mock.oneArg(null)).describedAs(\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\").isEqualTo(null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertThat(mock.oneArg(null)).describedAs(\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\").isEqualTo(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 55,
        "startColumnNumber" : 55,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SingleOverload mock=mock(SingleOverload.class);\n  when(mock.oneArg(isNull())).thenReturn(\"ok\");\n  assertThat(mock.oneArg(null)).describedAs(\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\").isEqualTo(null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Test public void with_single_arg() throws Exception {\n  SingleOverload mock=mock(SingleOverload.class);\n  when(mock.oneArg(isNull())).thenReturn(\"ok\");\n  assertThat(mock.oneArg(null)).describedAs(\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\").isEqualTo(null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 62,
        "startColumnNumber" : 28,
        "endLineNumber" : 64,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"Most generic method chosen for matcher \" + \"(isNull generic upper bound is Object), but null applies \" + \"to select most specific method\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 62,
    "startColumnNumber" : 28,
    "endLineNumber" : 62,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}