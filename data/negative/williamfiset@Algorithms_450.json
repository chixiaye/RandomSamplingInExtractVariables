{
  "id" : 450,
  "expression" : "new long[numChunks]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/CompressedPrimeSieve.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new long[numChunks]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 52,
      "startColumnNumber" : 20,
      "endLineNumber" : 52,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 52,
        "startColumnNumber" : 11,
        "endLineNumber" : 52,
        "endColumnNumber" : 39
      },
      "nodeContext" : "chunks=new long[numChunks]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 40
      },
      "nodeContext" : "long[] chunks=new long[numChunks];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 47,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int numChunks=(int)Math.ceil(limit / NUM_BITS);\n  final int sqrtLimit=(int)Math.sqrt(limit);\n  long[] chunks=new long[numChunks];\n  chunks[0]=1;\n  for (int i=3; i <= sqrtLimit; i+=2)   if (isNotSet(chunks,i))   for (int j=i * i; j <= limit; j+=i)   if (isNotSet(chunks,j)) {\n    setBit(chunks,j);\n  }\n  return chunks;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static long[] primeSieve(int limit){\n  final int numChunks=(int)Math.ceil(limit / NUM_BITS);\n  final int sqrtLimit=(int)Math.sqrt(limit);\n  long[] chunks=new long[numChunks];\n  chunks[0]=1;\n  for (int i=3; i <= sqrtLimit; i+=2)   if (isNotSet(chunks,i))   for (int j=i * i; j <= limit; j+=i)   if (isNotSet(chunks,j)) {\n    setBit(chunks,j);\n  }\n  return chunks;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 40
      },
      "nodeContext" : "long[] chunks=new long[numChunks];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long[]"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 52,
    "startColumnNumber" : 20,
    "endLineNumber" : 52,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}