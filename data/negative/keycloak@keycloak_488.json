{
  "id" : 488,
  "expression" : "0",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/common/src/main/java/org/keycloak/common/util/StreamUtil.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 65,
      "startColumnNumber" : 42,
      "endLineNumber" : 65,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 22,
        "endLineNumber" : 65,
        "endColumnNumber" : 59
      },
      "nodeContext" : "reader.read(buffer,0,BUFFER_LENGTH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 59
      },
      "nodeContext" : "wasRead=reader.read(buffer,0,BUFFER_LENGTH)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 29
      },
      "nodeContext" : "do {\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n while (wasRead > -1);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads string from byte input stream.\n * @param in InputStream to build the String from\n * @param charset Charset used to decode the input stream\n * @return String representation of the input stream contents decoded using given charset\n * @throws IOException\n */\npublic static String readString(InputStream in,Charset charset) throws IOException {\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 66,
      "startColumnNumber" : 26,
      "endLineNumber" : 66,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 27
      },
      "nodeContext" : "wasRead > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (wasRead > 0) {\n  builder.append(buffer,0,wasRead);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 29
      },
      "nodeContext" : "do {\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n while (wasRead > -1);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads string from byte input stream.\n * @param in InputStream to build the String from\n * @param charset Charset used to decode the input stream\n * @return String representation of the input stream contents decoded using given charset\n * @throws IOException\n */\npublic static String readString(InputStream in,Charset charset) throws IOException {\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 27
      },
      "nodeContext" : "wasRead > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 68,
      "startColumnNumber" : 39,
      "endLineNumber" : 68,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 50
      },
      "nodeContext" : "builder.append(buffer,0,wasRead)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 51
      },
      "nodeContext" : "builder.append(buffer,0,wasRead);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  builder.append(buffer,0,wasRead);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (wasRead > 0) {\n  builder.append(buffer,0,wasRead);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 29
      },
      "nodeContext" : "do {\n  wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n  if (wasRead > 0) {\n    builder.append(buffer,0,wasRead);\n  }\n}\n while (wasRead > -1);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads string from byte input stream.\n * @param in InputStream to build the String from\n * @param charset Charset used to decode the input stream\n * @return String representation of the input stream contents decoded using given charset\n * @throws IOException\n */\npublic static String readString(InputStream in,Charset charset) throws IOException {\n  char[] buffer=new char[BUFFER_LENGTH];\n  StringBuilder builder=new StringBuilder();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(in,charset));\n  int wasRead;\n  do {\n    wasRead=reader.read(buffer,0,BUFFER_LENGTH);\n    if (wasRead > 0) {\n      builder.append(buffer,0,wasRead);\n    }\n  }\n while (wasRead > -1);\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 51
      },
      "nodeContext" : "builder.append(buffer,0,wasRead);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 65,
    "startColumnNumber" : 42,
    "endLineNumber" : 65,
    "endColumnNumber" : 43
  }, {
    "charLength" : 1,
    "startLineNumber" : 66,
    "startColumnNumber" : 26,
    "endLineNumber" : 66,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 68,
    "startColumnNumber" : 39,
    "endLineNumber" : 68,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}