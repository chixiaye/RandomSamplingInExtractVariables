{
  "id" : 190,
  "expression" : "Notification.error(exception)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableNotificationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Notification.error(exception)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 67,
      "startColumnNumber" : 53,
      "endLineNumber" : 67,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 67,
        "startColumnNumber" : 31,
        "endLineNumber" : 67,
        "endColumnNumber" : 82
      },
      "nodeContext" : "onErrorNotification=Notification.error(exception)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 65,
        "startColumnNumber" : 55,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final Exception exception=new Exception();\n  final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n  final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n  Assert.assertTrue(onErrorNotification.equals(onErrorNotification2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 64,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testOnErrorIntegerNotificationsWhenEqual(){\n  final Exception exception=new Exception();\n  final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n  final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n  Assert.assertTrue(onErrorNotification.equals(onErrorNotification2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.Try<io.reactivex.Optional<java.lang.Integer>>"
  }, {
    "nodeContext" : "Notification.error(exception)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 68,
      "startColumnNumber" : 54,
      "endLineNumber" : 68,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 68,
        "startColumnNumber" : 31,
        "endLineNumber" : 68,
        "endColumnNumber" : 83
      },
      "nodeContext" : "onErrorNotification2=Notification.error(exception)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 84
      },
      "nodeContext" : "final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 65,
        "startColumnNumber" : 55,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final Exception exception=new Exception();\n  final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n  final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n  Assert.assertTrue(onErrorNotification.equals(onErrorNotification2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 64,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testOnErrorIntegerNotificationsWhenEqual(){\n  final Exception exception=new Exception();\n  final Try<Optional<Integer>> onErrorNotification=Notification.error(exception);\n  final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n  Assert.assertTrue(onErrorNotification.equals(onErrorNotification2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 84
      },
      "nodeContext" : "final Try<Optional<Integer>> onErrorNotification2=Notification.error(exception);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.Try<io.reactivex.Optional<java.lang.Integer>>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 67,
    "startColumnNumber" : 53,
    "endLineNumber" : 67,
    "endColumnNumber" : 82
  }, {
    "charLength" : 29,
    "startLineNumber" : 68,
    "startColumnNumber" : 54,
    "endLineNumber" : 68,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}