{
  "id" : 5,
  "expression" : "key == 0",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/FilterCreateActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 613,
      "startColumnNumber" : 20,
      "endLineNumber" : 613,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 613,
        "startColumnNumber" : 16,
        "endLineNumber" : 615,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (key == 0) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 611,
        "startColumnNumber" : 62,
        "endLineNumber" : 617,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int key=(int)newPinned.keyAt(a);\n  if (key == 0) {\n    continue;\n  }\n  pinArray.add(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 611,
        "startColumnNumber" : 12,
        "endLineNumber" : 617,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0, N=newPinned.size(); a < N; a++) {\n  int key=(int)newPinned.keyAt(a);\n  if (key == 0) {\n    continue;\n  }\n  pinArray.add(key);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 610,
        "startColumnNumber" : 35,
        "endLineNumber" : 628,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0, N=newPinned.size(); a < N; a++) {\n    int key=(int)newPinned.keyAt(a);\n    if (key == 0) {\n      continue;\n    }\n    pinArray.add(key);\n  }\n  Collections.sort(pinArray,(o1,o2) -> {\n    int idx1=newPinned.get(o1);\n    int idx2=newPinned.get(o2);\n    if (idx1 > idx2) {\n      return 1;\n    }\n else     if (idx1 < idx2) {\n      return -1;\n    }\n    return 0;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 610,
        "startColumnNumber" : 8,
        "endLineNumber" : 628,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newPinned.size() != 0) {\n  for (int a=0, N=newPinned.size(); a < N; a++) {\n    int key=(int)newPinned.keyAt(a);\n    if (key == 0) {\n      continue;\n    }\n    pinArray.add(key);\n  }\n  Collections.sort(pinArray,(o1,o2) -> {\n    int idx1=newPinned.get(o1);\n    int idx2=newPinned.get(o2);\n    if (idx1 > idx2) {\n      return 1;\n    }\n else     if (idx1 < idx2) {\n      return -1;\n    }\n    return 0;\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5208,
        "startLineNumber" : 582,
        "startColumnNumber" : 377,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fragment == null || fragment.getParentActivity() == null) {\n    return;\n  }\n  AlertDialog progressDialog;\n  if (progress) {\n    progressDialog=new AlertDialog(fragment.getParentActivity(),3);\n    progressDialog.setCanCacnel(false);\n    progressDialog.show();\n  }\n else {\n    progressDialog=null;\n  }\n  TLRPC.TL_messages_updateDialogFilter req=new TLRPC.TL_messages_updateDialogFilter();\n  req.id=filter.id;\n  req.flags|=1;\n  req.filter=new TLRPC.TL_dialogFilter();\n  req.filter.contacts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_CONTACTS) != 0;\n  req.filter.non_contacts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS) != 0;\n  req.filter.groups=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_GROUPS) != 0;\n  req.filter.broadcasts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_CHANNELS) != 0;\n  req.filter.bots=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_BOTS) != 0;\n  req.filter.exclude_muted=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0;\n  req.filter.exclude_read=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_READ) != 0;\n  req.filter.exclude_archived=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED) != 0;\n  req.filter.id=filter.id;\n  req.filter.title=newFilterName;\n  MessagesController messagesController=fragment.getMessagesController();\n  ArrayList<Integer> pinArray=new ArrayList<>();\n  if (newPinned.size() != 0) {\n    for (int a=0, N=newPinned.size(); a < N; a++) {\n      int key=(int)newPinned.keyAt(a);\n      if (key == 0) {\n        continue;\n      }\n      pinArray.add(key);\n    }\n    Collections.sort(pinArray,(o1,o2) -> {\n      int idx1=newPinned.get(o1);\n      int idx2=newPinned.get(o2);\n      if (idx1 > idx2) {\n        return 1;\n      }\n else       if (idx1 < idx2) {\n        return -1;\n      }\n      return 0;\n    }\n);\n  }\n  for (int b=0; b < 3; b++) {\n    ArrayList<Integer> fromArray;\n    ArrayList<TLRPC.InputPeer> toArray;\n    if (b == 0) {\n      fromArray=newAlwaysShow;\n      toArray=req.filter.include_peers;\n    }\n else     if (b == 1) {\n      fromArray=newNeverShow;\n      toArray=req.filter.exclude_peers;\n    }\n else {\n      fromArray=pinArray;\n      toArray=req.filter.pinned_peers;\n    }\n    for (int a=0, N=fromArray.size(); a < N; a++) {\n      long did=fromArray.get(a);\n      if (b == 0 && newPinned.indexOfKey(did) >= 0) {\n        continue;\n      }\n      int lowerId=(int)did;\n      if (lowerId != 0) {\n        if (lowerId > 0) {\n          TLRPC.User user=messagesController.getUser(lowerId);\n          if (user != null) {\n            TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerUser();\n            inputPeer.user_id=lowerId;\n            inputPeer.access_hash=user.access_hash;\n            toArray.add(inputPeer);\n          }\n        }\n else {\n          TLRPC.Chat chat=messagesController.getChat(-lowerId);\n          if (chat != null) {\n            if (ChatObject.isChannel(chat)) {\n              TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerChannel();\n              inputPeer.channel_id=-lowerId;\n              inputPeer.access_hash=chat.access_hash;\n              toArray.add(inputPeer);\n            }\n else {\n              TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerChat();\n              inputPeer.chat_id=-lowerId;\n              toArray.add(inputPeer);\n            }\n          }\n        }\n      }\n    }\n  }\n  fragment.getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    if (progress) {\n      try {\n        if (progressDialog != null) {\n          progressDialog.dismiss();\n        }\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n      processAddFilter(filter,newFilterFlags,newFilterName,newAlwaysShow,newNeverShow,creatingNew,atBegin,hasUserChanged,resetUnreadCounter,fragment,onFinish);\n    }\n  }\n));\n  if (!progress) {\n    processAddFilter(filter,newFilterFlags,newFilterName,newAlwaysShow,newNeverShow,creatingNew,atBegin,hasUserChanged,resetUnreadCounter,fragment,onFinish);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 662,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5581,
        "startLineNumber" : 582,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void saveFilterToServer(MessagesController.DialogFilter filter,int newFilterFlags,String newFilterName,ArrayList<Integer> newAlwaysShow,ArrayList<Integer> newNeverShow,LongSparseArray<Integer> newPinned,boolean creatingNew,boolean atBegin,boolean hasUserChanged,boolean resetUnreadCounter,boolean progress,BaseFragment fragment,Runnable onFinish){\n  if (fragment == null || fragment.getParentActivity() == null) {\n    return;\n  }\n  AlertDialog progressDialog;\n  if (progress) {\n    progressDialog=new AlertDialog(fragment.getParentActivity(),3);\n    progressDialog.setCanCacnel(false);\n    progressDialog.show();\n  }\n else {\n    progressDialog=null;\n  }\n  TLRPC.TL_messages_updateDialogFilter req=new TLRPC.TL_messages_updateDialogFilter();\n  req.id=filter.id;\n  req.flags|=1;\n  req.filter=new TLRPC.TL_dialogFilter();\n  req.filter.contacts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_CONTACTS) != 0;\n  req.filter.non_contacts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS) != 0;\n  req.filter.groups=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_GROUPS) != 0;\n  req.filter.broadcasts=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_CHANNELS) != 0;\n  req.filter.bots=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_BOTS) != 0;\n  req.filter.exclude_muted=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0;\n  req.filter.exclude_read=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_READ) != 0;\n  req.filter.exclude_archived=(newFilterFlags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED) != 0;\n  req.filter.id=filter.id;\n  req.filter.title=newFilterName;\n  MessagesController messagesController=fragment.getMessagesController();\n  ArrayList<Integer> pinArray=new ArrayList<>();\n  if (newPinned.size() != 0) {\n    for (int a=0, N=newPinned.size(); a < N; a++) {\n      int key=(int)newPinned.keyAt(a);\n      if (key == 0) {\n        continue;\n      }\n      pinArray.add(key);\n    }\n    Collections.sort(pinArray,(o1,o2) -> {\n      int idx1=newPinned.get(o1);\n      int idx2=newPinned.get(o2);\n      if (idx1 > idx2) {\n        return 1;\n      }\n else       if (idx1 < idx2) {\n        return -1;\n      }\n      return 0;\n    }\n);\n  }\n  for (int b=0; b < 3; b++) {\n    ArrayList<Integer> fromArray;\n    ArrayList<TLRPC.InputPeer> toArray;\n    if (b == 0) {\n      fromArray=newAlwaysShow;\n      toArray=req.filter.include_peers;\n    }\n else     if (b == 1) {\n      fromArray=newNeverShow;\n      toArray=req.filter.exclude_peers;\n    }\n else {\n      fromArray=pinArray;\n      toArray=req.filter.pinned_peers;\n    }\n    for (int a=0, N=fromArray.size(); a < N; a++) {\n      long did=fromArray.get(a);\n      if (b == 0 && newPinned.indexOfKey(did) >= 0) {\n        continue;\n      }\n      int lowerId=(int)did;\n      if (lowerId != 0) {\n        if (lowerId > 0) {\n          TLRPC.User user=messagesController.getUser(lowerId);\n          if (user != null) {\n            TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerUser();\n            inputPeer.user_id=lowerId;\n            inputPeer.access_hash=user.access_hash;\n            toArray.add(inputPeer);\n          }\n        }\n else {\n          TLRPC.Chat chat=messagesController.getChat(-lowerId);\n          if (chat != null) {\n            if (ChatObject.isChannel(chat)) {\n              TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerChannel();\n              inputPeer.channel_id=-lowerId;\n              inputPeer.access_hash=chat.access_hash;\n              toArray.add(inputPeer);\n            }\n else {\n              TLRPC.InputPeer inputPeer=new TLRPC.TL_inputPeerChat();\n              inputPeer.chat_id=-lowerId;\n              toArray.add(inputPeer);\n            }\n          }\n        }\n      }\n    }\n  }\n  fragment.getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    if (progress) {\n      try {\n        if (progressDialog != null) {\n          progressDialog.dismiss();\n        }\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n      processAddFilter(filter,newFilterFlags,newFilterName,newAlwaysShow,newNeverShow,creatingNew,atBegin,hasUserChanged,resetUnreadCounter,fragment,onFinish);\n    }\n  }\n));\n  if (!progress) {\n    processAddFilter(filter,newFilterFlags,newFilterName,newAlwaysShow,newNeverShow,creatingNew,atBegin,hasUserChanged,resetUnreadCounter,fragment,onFinish);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 724,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 613,
        "startColumnNumber" : 16,
        "endLineNumber" : 615,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (key == 0) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 613,
    "startColumnNumber" : 20,
    "endLineNumber" : 613,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}