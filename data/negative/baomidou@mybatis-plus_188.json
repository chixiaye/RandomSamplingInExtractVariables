{
  "id" : 188,
  "expression" : "StringUtils",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "929f51022bbd8885d09831dd9f560f6779a2498e",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/plugins/OptimisticLockerInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 178,
      "startColumnNumber" : 6,
      "endLineNumber" : 178,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 178,
        "startColumnNumber" : 6,
        "endLineNumber" : 178,
        "endColumnNumber" : 49
      },
      "nodeContext" : "StringUtils.isNotEmpty(versionHandlerClazz)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(versionHandlerClazz)) {\n  try {\n    versionHandler=(VersionHandler)Class.forName(versionHandlerClazz).newInstance();\n  }\n catch (  Exception e) {\n    throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 176,
        "startColumnNumber" : 50,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String versionHandlerClazz=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(versionHandlerClazz)) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(versionHandlerClazz).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void setProperties(Properties properties){\n  String versionHandlerClazz=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(versionHandlerClazz)) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(versionHandlerClazz).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 178,
        "startColumnNumber" : 6,
        "endLineNumber" : 178,
        "endColumnNumber" : 49
      },
      "nodeContext" : "StringUtils.isNotEmpty(versionHandlerClazz)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.toolkit.StringUtils"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 178,
    "startColumnNumber" : 6,
    "endLineNumber" : 178,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}