{
  "id" : 134,
  "expression" : "Registration.RegCheck",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-cluster-plugin/cluster-consul-plugin/src/test/java/org/apache/skywalking/oap/server/cluster/plugin/consul/ConsulCoordinatorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Registration.RegCheck",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 161,
      "startColumnNumber" : 8,
      "endLineNumber" : 161,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Registration.RegCheck",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Registration.RegCheck regCheck=registration.getCheck().get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 152,
        "startColumnNumber" : 86,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(registration);\n  assertEquals(SERVICE_NAME,registration.getName());\n  assertEquals(remoteAddress.getHost() + \"_\" + remoteAddress.getPort(),registration.getId());\n  assertTrue(registration.getAddress().isPresent());\n  assertEquals(remoteAddress.getHost(),registration.getAddress().get());\n  assertTrue(registration.getPort().isPresent());\n  assertEquals(remoteAddress.getPort(),registration.getPort().get().intValue());\n  assertTrue(registration.getCheck().isPresent());\n  Registration.RegCheck regCheck=registration.getCheck().get();\n  assertTrue(regCheck.getGrpc().isPresent());\n  assertEquals(remoteAddress.getHost() + \":\" + remoteAddress.getPort(),regCheck.getGrpc().get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void verifyRegistration(Address remoteAddress,Registration registration){\n  assertNotNull(registration);\n  assertEquals(SERVICE_NAME,registration.getName());\n  assertEquals(remoteAddress.getHost() + \"_\" + remoteAddress.getPort(),registration.getId());\n  assertTrue(registration.getAddress().isPresent());\n  assertEquals(remoteAddress.getHost(),registration.getAddress().get());\n  assertTrue(registration.getPort().isPresent());\n  assertEquals(remoteAddress.getPort(),registration.getPort().get().intValue());\n  assertTrue(registration.getCheck().isPresent());\n  Registration.RegCheck regCheck=registration.getCheck().get();\n  assertTrue(regCheck.getGrpc().isPresent());\n  assertEquals(remoteAddress.getHost() + \":\" + remoteAddress.getPort(),regCheck.getGrpc().get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Registration.RegCheck regCheck=registration.getCheck().get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "Registration"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 161,
    "startColumnNumber" : 8,
    "endLineNumber" : 161,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}