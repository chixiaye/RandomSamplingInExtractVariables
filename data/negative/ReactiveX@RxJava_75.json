{
  "id" : 75,
  "expression" : "Flowable.just(1,2)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableFirstTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable.just(1,2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 149,
      "startColumnNumber" : 39,
      "endLineNumber" : 149,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 149,
        "startColumnNumber" : 39,
        "endLineNumber" : 155,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Flowable.just(1,2).filter(new Predicate<Integer>(){\n  @Override public boolean test(  Integer t1){\n    return t1 % 2 == 0;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 149,
        "startColumnNumber" : 39,
        "endLineNumber" : 156,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Flowable.just(1,2).filter(new Predicate<Integer>(){\n  @Override public boolean test(  Integer t1){\n    return t1 % 2 == 0;\n  }\n}\n).first()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 149,
        "startColumnNumber" : 26,
        "endLineNumber" : 156,
        "endColumnNumber" : 24
      },
      "nodeContext" : "observable=Flowable.just(1,2).filter(new Predicate<Integer>(){\n  @Override public boolean test(  Integer t1){\n    return t1 % 2 == 0;\n  }\n}\n).first()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 35,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Flowable<Integer> observable=Flowable.just(1,2).filter(new Predicate<Integer>(){\n  @Override public boolean test(  Integer t1){\n    return t1 % 2 == 0;\n  }\n}\n).first();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 41,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 148,
        "startColumnNumber" : 54,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Integer> observable=Flowable.just(1,2).filter(new Predicate<Integer>(){\n    @Override public boolean test(    Integer t1){\n      return t1 % 2 == 0;\n    }\n  }\n).first();\n  Subscriber<Integer> observer=TestHelper.mockSubscriber();\n  observable.subscribe(observer);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(2);\n  inOrder.verify(observer,times(1)).onComplete();\n  inOrder.verifyNoMoreInteractions();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 147,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFirstWithPredicateAndOneElement(){\n  Flowable<Integer> observable=Flowable.just(1,2).filter(new Predicate<Integer>(){\n    @Override public boolean test(    Integer t1){\n      return t1 % 2 == 0;\n    }\n  }\n).first();\n  Subscriber<Integer> observer=TestHelper.mockSubscriber();\n  observable.subscribe(observer);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer,times(1)).onNext(2);\n  inOrder.verify(observer,times(1)).onComplete();\n  inOrder.verifyNoMoreInteractions();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 149,
        "startColumnNumber" : 39,
        "endLineNumber" : 155,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Flowable.just(1,2).filter(new Predicate<Integer>(){\n  @Override public boolean test(  Integer t1){\n    return t1 % 2 == 0;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "io.reactivex.Flowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 149,
    "startColumnNumber" : 39,
    "endLineNumber" : 149,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}