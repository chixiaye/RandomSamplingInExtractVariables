{
  "id" : 154,
  "expression" : "allArguments.length",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/pulsar-plugin/src/main/java/org/apache/skywalking/apm/plugin/pulsar/PulsarProducerInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allArguments.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 80,
      "startColumnNumber" : 16,
      "endLineNumber" : 80,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 39
      },
      "nodeContext" : "allArguments.length > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (allArguments.length > 1) {\n  EnhancedInstance callbackInstance=(EnhancedInstance)allArguments[1];\n  if (callbackInstance != null) {\n    ContextSnapshot snapshot=ContextManager.capture();\n    if (null != snapshot) {\n      SendCallbackEnhanceRequiredInfo callbackRequiredInfo=new SendCallbackEnhanceRequiredInfo();\n      callbackRequiredInfo.setTopic(topicName);\n      callbackRequiredInfo.setContextSnapshot(snapshot);\n      callbackInstance.setSkyWalkingDynamicField(callbackRequiredInfo);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 60,
        "startColumnNumber" : 37,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ProducerEnhanceRequiredInfo requiredInfo=(ProducerEnhanceRequiredInfo)objInst.getSkyWalkingDynamicField();\n  ContextCarrier contextCarrier=new ContextCarrier();\n  String topicName=requiredInfo.getTopic();\n  AbstractSpan activeSpan=ContextManager.createExitSpan(OPERATE_NAME_PREFIX + topicName + PRODUCER_OPERATE_NAME_SUFFIX,contextCarrier,requiredInfo.getServiceUrl());\n  Tags.MQ_BROKER.set(activeSpan,requiredInfo.getServiceUrl());\n  Tags.MQ_TOPIC.set(activeSpan,topicName);\n  contextCarrier.extensionInjector().injectSendingTimestamp();\n  SpanLayer.asMQ(activeSpan);\n  activeSpan.setComponent(ComponentsDefine.PULSAR_PRODUCER);\n  CarrierItem next=contextCarrier.items();\n  MessageImpl msg=(MessageImpl)allArguments[0];\n  while (next.hasNext()) {\n    next=next.next();\n    msg.getMessageBuilder().addProperties(PulsarApi.KeyValue.newBuilder().setKey(next.getHeadKey()).setValue(next.getHeadValue()));\n  }\n  if (allArguments.length > 1) {\n    EnhancedInstance callbackInstance=(EnhancedInstance)allArguments[1];\n    if (callbackInstance != null) {\n      ContextSnapshot snapshot=ContextManager.capture();\n      if (null != snapshot) {\n        SendCallbackEnhanceRequiredInfo callbackRequiredInfo=new SendCallbackEnhanceRequiredInfo();\n        callbackRequiredInfo.setTopic(topicName);\n        callbackRequiredInfo.setContextSnapshot(snapshot);\n        callbackInstance.setSkyWalkingDynamicField(callbackRequiredInfo);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (allArguments[0] != null) {\n  ProducerEnhanceRequiredInfo requiredInfo=(ProducerEnhanceRequiredInfo)objInst.getSkyWalkingDynamicField();\n  ContextCarrier contextCarrier=new ContextCarrier();\n  String topicName=requiredInfo.getTopic();\n  AbstractSpan activeSpan=ContextManager.createExitSpan(OPERATE_NAME_PREFIX + topicName + PRODUCER_OPERATE_NAME_SUFFIX,contextCarrier,requiredInfo.getServiceUrl());\n  Tags.MQ_BROKER.set(activeSpan,requiredInfo.getServiceUrl());\n  Tags.MQ_TOPIC.set(activeSpan,topicName);\n  contextCarrier.extensionInjector().injectSendingTimestamp();\n  SpanLayer.asMQ(activeSpan);\n  activeSpan.setComponent(ComponentsDefine.PULSAR_PRODUCER);\n  CarrierItem next=contextCarrier.items();\n  MessageImpl msg=(MessageImpl)allArguments[0];\n  while (next.hasNext()) {\n    next=next.next();\n    msg.getMessageBuilder().addProperties(PulsarApi.KeyValue.newBuilder().setKey(next.getHeadKey()).setValue(next.getHeadValue()));\n  }\n  if (allArguments.length > 1) {\n    EnhancedInstance callbackInstance=(EnhancedInstance)allArguments[1];\n    if (callbackInstance != null) {\n      ContextSnapshot snapshot=ContextManager.capture();\n      if (null != snapshot) {\n        SendCallbackEnhanceRequiredInfo callbackRequiredInfo=new SendCallbackEnhanceRequiredInfo();\n        callbackRequiredInfo.setTopic(topicName);\n        callbackRequiredInfo.setContextSnapshot(snapshot);\n        callbackInstance.setSkyWalkingDynamicField(callbackRequiredInfo);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 196,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1980,
        "startLineNumber" : 59,
        "startColumnNumber" : 55,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (allArguments[0] != null) {\n    ProducerEnhanceRequiredInfo requiredInfo=(ProducerEnhanceRequiredInfo)objInst.getSkyWalkingDynamicField();\n    ContextCarrier contextCarrier=new ContextCarrier();\n    String topicName=requiredInfo.getTopic();\n    AbstractSpan activeSpan=ContextManager.createExitSpan(OPERATE_NAME_PREFIX + topicName + PRODUCER_OPERATE_NAME_SUFFIX,contextCarrier,requiredInfo.getServiceUrl());\n    Tags.MQ_BROKER.set(activeSpan,requiredInfo.getServiceUrl());\n    Tags.MQ_TOPIC.set(activeSpan,topicName);\n    contextCarrier.extensionInjector().injectSendingTimestamp();\n    SpanLayer.asMQ(activeSpan);\n    activeSpan.setComponent(ComponentsDefine.PULSAR_PRODUCER);\n    CarrierItem next=contextCarrier.items();\n    MessageImpl msg=(MessageImpl)allArguments[0];\n    while (next.hasNext()) {\n      next=next.next();\n      msg.getMessageBuilder().addProperties(PulsarApi.KeyValue.newBuilder().setKey(next.getHeadKey()).setValue(next.getHeadValue()));\n    }\n    if (allArguments.length > 1) {\n      EnhancedInstance callbackInstance=(EnhancedInstance)allArguments[1];\n      if (callbackInstance != null) {\n        ContextSnapshot snapshot=ContextManager.capture();\n        if (null != snapshot) {\n          SendCallbackEnhanceRequiredInfo callbackRequiredInfo=new SendCallbackEnhanceRequiredInfo();\n          callbackRequiredInfo.setTopic(topicName);\n          callbackRequiredInfo.setContextSnapshot(snapshot);\n          callbackInstance.setSkyWalkingDynamicField(callbackRequiredInfo);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2165,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void beforeMethod(EnhancedInstance objInst,Method method,Object[] allArguments,Class<?>[] argumentsTypes,MethodInterceptResult result) throws Throwable {\n  if (allArguments[0] != null) {\n    ProducerEnhanceRequiredInfo requiredInfo=(ProducerEnhanceRequiredInfo)objInst.getSkyWalkingDynamicField();\n    ContextCarrier contextCarrier=new ContextCarrier();\n    String topicName=requiredInfo.getTopic();\n    AbstractSpan activeSpan=ContextManager.createExitSpan(OPERATE_NAME_PREFIX + topicName + PRODUCER_OPERATE_NAME_SUFFIX,contextCarrier,requiredInfo.getServiceUrl());\n    Tags.MQ_BROKER.set(activeSpan,requiredInfo.getServiceUrl());\n    Tags.MQ_TOPIC.set(activeSpan,topicName);\n    contextCarrier.extensionInjector().injectSendingTimestamp();\n    SpanLayer.asMQ(activeSpan);\n    activeSpan.setComponent(ComponentsDefine.PULSAR_PRODUCER);\n    CarrierItem next=contextCarrier.items();\n    MessageImpl msg=(MessageImpl)allArguments[0];\n    while (next.hasNext()) {\n      next=next.next();\n      msg.getMessageBuilder().addProperties(PulsarApi.KeyValue.newBuilder().setKey(next.getHeadKey()).setValue(next.getHeadValue()));\n    }\n    if (allArguments.length > 1) {\n      EnhancedInstance callbackInstance=(EnhancedInstance)allArguments[1];\n      if (callbackInstance != null) {\n        ContextSnapshot snapshot=ContextManager.capture();\n        if (null != snapshot) {\n          SendCallbackEnhanceRequiredInfo callbackRequiredInfo=new SendCallbackEnhanceRequiredInfo();\n          callbackRequiredInfo.setTopic(topicName);\n          callbackRequiredInfo.setContextSnapshot(snapshot);\n          callbackInstance.setSkyWalkingDynamicField(callbackRequiredInfo);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 39
      },
      "nodeContext" : "allArguments.length > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 80,
    "startColumnNumber" : 16,
    "endLineNumber" : 80,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}