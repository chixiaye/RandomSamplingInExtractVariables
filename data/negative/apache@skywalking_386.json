{
  "id" : 386,
  "expression" : "\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\"",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/remote/RemoteSenderService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 112,
      "startLineNumber" : 70,
      "startColumnNumber" : 16,
      "endLineNumber" : 70,
      "endColumnNumber" : 128
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 129
      },
      "nodeContext" : "LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 130
      },
      "nodeContext" : "LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 68,
        "startColumnNumber" : 36,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (clientList.size() == 0) {\n  LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 61,
        "startColumnNumber" : 84,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RemoteClientManager clientManager=moduleManager.find(CoreModule.NAME).provider().getService(RemoteClientManager.class);\n  RemoteClient remoteClient=null;\n  List<RemoteClient> clientList=clientManager.getRemoteClient();\n  if (clientList.size() == 0) {\n    LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\");\n    return;\n  }\nswitch (selector) {\ncase HashCode:    remoteClient=hashCodeSelector.select(clientList,streamData);\n  break;\ncase Rolling:remoteClient=rollingSelector.select(clientList,streamData);\nbreak;\ncase ForeverFirst:remoteClient=foreverFirstSelector.select(clientList,streamData);\nbreak;\n}\nremoteClient.push(nextWorkName,streamData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1477,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Send data to the target based on the given selector\n * @param nextWorkName points to the worker to process the data when {@link RemoteServiceHandler} received.\n * @param streamData   data to be sent\n * @param selector     strategy implementation to choose suitable OAP node.\n */\npublic void send(String nextWorkName,StreamData streamData,Selector selector){\n  RemoteClientManager clientManager=moduleManager.find(CoreModule.NAME).provider().getService(RemoteClientManager.class);\n  RemoteClient remoteClient=null;\n  List<RemoteClient> clientList=clientManager.getRemoteClient();\n  if (clientList.size() == 0) {\n    LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\");\n    return;\n  }\nswitch (selector) {\ncase HashCode:    remoteClient=hashCodeSelector.select(clientList,streamData);\n  break;\ncase Rolling:remoteClient=rollingSelector.select(clientList,streamData);\nbreak;\ncase ForeverFirst:remoteClient=foreverFirstSelector.select(clientList,streamData);\nbreak;\n}\nremoteClient.push(nextWorkName,streamData);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 129
      },
      "nodeContext" : "LOGGER.warn(\"There is no available remote server for now, ignore the streaming data until the cluster metadata initialized.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 16,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 112,
    "startLineNumber" : 70,
    "startColumnNumber" : 16,
    "endLineNumber" : 70,
    "endColumnNumber" : 128
  } ],
  "layoutRelationDataList" : [ ]
}