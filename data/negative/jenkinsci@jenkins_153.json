{
  "id" : 153,
  "expression" : "x.getCause()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/ClassLoaderReflectionToolkit.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "x.getCause()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 36,
      "startColumnNumber" : 27,
      "endLineNumber" : 36,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 36,
        "startColumnNumber" : 22,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "x2=x.getCause()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Throwable x2=x.getCause();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 35,
        "startColumnNumber" : 46,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable x2=x.getCause();\n  if (x2 instanceof RuntimeException) {\n    throw (RuntimeException)x2;\n  }\n else   if (x2 instanceof Error) {\n    throw (Error)x2;\n  }\n else   if (exception.isInstance(x2)) {\n    throw exception.cast(x2);\n  }\n else {\n    throw new AssertionError(x2);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 35,
        "startColumnNumber" : 10,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InvocationTargetException x) {\n  Throwable x2=x.getCause();\n  if (x2 instanceof RuntimeException) {\n    throw (RuntimeException)x2;\n  }\n else   if (x2 instanceof Error) {\n    throw (Error)x2;\n  }\n else   if (exception.isInstance(x2)) {\n    throw exception.cast(x2);\n  }\n else {\n    throw new AssertionError(x2);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return method.invoke(obj,args);\n}\n catch (IllegalAccessException x) {\n  throw new AssertionError(x);\n}\ncatch (InvocationTargetException x) {\n  Throwable x2=x.getCause();\n  if (x2 instanceof RuntimeException) {\n    throw (RuntimeException)x2;\n  }\n else   if (x2 instanceof Error) {\n    throw (Error)x2;\n  }\n else   if (exception.isInstance(x2)) {\n    throw exception.cast(x2);\n  }\n else {\n    throw new AssertionError(x2);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 30,
        "startColumnNumber" : 127,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    return method.invoke(obj,args);\n  }\n catch (  IllegalAccessException x) {\n    throw new AssertionError(x);\n  }\ncatch (  InvocationTargetException x) {\n    Throwable x2=x.getCause();\n    if (x2 instanceof RuntimeException) {\n      throw (RuntimeException)x2;\n    }\n else     if (x2 instanceof Error) {\n      throw (Error)x2;\n    }\n else     if (exception.isInstance(x2)) {\n      throw exception.cast(x2);\n    }\n else {\n      throw new AssertionError(x2);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static <T extends Exception>Object invoke(Method method,Class<T> exception,Object obj,Object... args) throws T {\n  try {\n    return method.invoke(obj,args);\n  }\n catch (  IllegalAccessException x) {\n    throw new AssertionError(x);\n  }\ncatch (  InvocationTargetException x) {\n    Throwable x2=x.getCause();\n    if (x2 instanceof RuntimeException) {\n      throw (RuntimeException)x2;\n    }\n else     if (x2 instanceof Error) {\n      throw (Error)x2;\n    }\n else     if (exception.isInstance(x2)) {\n      throw exception.cast(x2);\n    }\n else {\n      throw new AssertionError(x2);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Throwable x2=x.getCause();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 36,
    "startColumnNumber" : 27,
    "endLineNumber" : 36,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}