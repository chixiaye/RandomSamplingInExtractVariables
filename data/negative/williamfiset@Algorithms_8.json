{
  "id" : 8,
  "expression" : "0 <= r",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/priorityqueue/MinDHeapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0 <= r",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 77,
      "startColumnNumber" : 12,
      "endLineNumber" : 77,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 29
      },
      "nodeContext" : "0 <= r && r <= p1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (0 <= r && r <= p1) {\n  pq.add(e);\n  pq2.add(e);\n}\n else if (p1 < r && r <= p2) {\n  if (!pq2.isEmpty())   assertEquals(pq.poll(),pq2.poll());\n}\n else {\n  pq.clear();\n  pq2.clear();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 86,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int e=ar[i];\n  double r=Math.random();\n  if (0 <= r && r <= p1) {\n    pq.add(e);\n    pq2.add(e);\n  }\n else   if (p1 < r && r <= p2) {\n    if (!pq2.isEmpty())     assertEquals(pq.poll(),pq2.poll());\n  }\n else {\n    pq.clear();\n    pq2.clear();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < LOOPS; i++) {\n  int e=ar[i];\n  double r=Math.random();\n  if (0 <= r && r <= p1) {\n    pq.add(e);\n    pq2.add(e);\n  }\n else   if (p1 < r && r <= p2) {\n    if (!pq2.isEmpty())     assertEquals(pq.poll(),pq2.poll());\n  }\n else {\n    pq.clear();\n    pq2.clear();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 59,
        "startColumnNumber" : 45,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  double p1=Math.random();\n  double p2=Math.random();\n  if (p2 < p1) {\n    double tmp=p1;\n    p1=p2;\n    p2=tmp;\n  }\n  Integer[] ar=genRandArray(LOOPS);\n  int d=2 + (int)(Math.random() * 6);\n  MinDHeap<Integer> pq=new MinDHeap<>(d,LOOPS);\n  PriorityQueue<Integer> pq2=new PriorityQueue<>(LOOPS);\n  for (int i=0; i < LOOPS; i++) {\n    int e=ar[i];\n    double r=Math.random();\n    if (0 <= r && r <= p1) {\n      pq.add(e);\n      pq2.add(e);\n    }\n else     if (p1 < r && r <= p2) {\n      if (!pq2.isEmpty())       assertEquals(pq.poll(),pq2.poll());\n    }\n else {\n      pq.clear();\n      pq2.clear();\n    }\n  }\n  assertEquals(pq.peek(),pq2.peek());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int loop=0; loop < LOOPS; loop++) {\n  double p1=Math.random();\n  double p2=Math.random();\n  if (p2 < p1) {\n    double tmp=p1;\n    p1=p2;\n    p2=tmp;\n  }\n  Integer[] ar=genRandArray(LOOPS);\n  int d=2 + (int)(Math.random() * 6);\n  MinDHeap<Integer> pq=new MinDHeap<>(d,LOOPS);\n  PriorityQueue<Integer> pq2=new PriorityQueue<>(LOOPS);\n  for (int i=0; i < LOOPS; i++) {\n    int e=ar[i];\n    double r=Math.random();\n    if (0 <= r && r <= p1) {\n      pq.add(e);\n      pq2.add(e);\n    }\n else     if (p1 < r && r <= p2) {\n      if (!pq2.isEmpty())       assertEquals(pq.poll(),pq2.poll());\n    }\n else {\n      pq.clear();\n      pq2.clear();\n    }\n  }\n  assertEquals(pq.peek(),pq2.peek());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 58,
        "startColumnNumber" : 45,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int loop=0; loop < LOOPS; loop++) {\n    double p1=Math.random();\n    double p2=Math.random();\n    if (p2 < p1) {\n      double tmp=p1;\n      p1=p2;\n      p2=tmp;\n    }\n    Integer[] ar=genRandArray(LOOPS);\n    int d=2 + (int)(Math.random() * 6);\n    MinDHeap<Integer> pq=new MinDHeap<>(d,LOOPS);\n    PriorityQueue<Integer> pq2=new PriorityQueue<>(LOOPS);\n    for (int i=0; i < LOOPS; i++) {\n      int e=ar[i];\n      double r=Math.random();\n      if (0 <= r && r <= p1) {\n        pq.add(e);\n        pq2.add(e);\n      }\n else       if (p1 < r && r <= p2) {\n        if (!pq2.isEmpty())         assertEquals(pq.poll(),pq2.poll());\n      }\n else {\n        pq.clear();\n        pq2.clear();\n      }\n    }\n    assertEquals(pq.peek(),pq2.peek());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPriorityRandomOperations(){\n  for (int loop=0; loop < LOOPS; loop++) {\n    double p1=Math.random();\n    double p2=Math.random();\n    if (p2 < p1) {\n      double tmp=p1;\n      p1=p2;\n      p2=tmp;\n    }\n    Integer[] ar=genRandArray(LOOPS);\n    int d=2 + (int)(Math.random() * 6);\n    MinDHeap<Integer> pq=new MinDHeap<>(d,LOOPS);\n    PriorityQueue<Integer> pq2=new PriorityQueue<>(LOOPS);\n    for (int i=0; i < LOOPS; i++) {\n      int e=ar[i];\n      double r=Math.random();\n      if (0 <= r && r <= p1) {\n        pq.add(e);\n        pq2.add(e);\n      }\n else       if (p1 < r && r <= p2) {\n        if (!pq2.isEmpty())         assertEquals(pq.poll(),pq2.poll());\n      }\n else {\n        pq.clear();\n        pq2.clear();\n      }\n    }\n    assertEquals(pq.peek(),pq2.peek());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 29
      },
      "nodeContext" : "0 <= r && r <= p1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 77,
    "startColumnNumber" : 12,
    "endLineNumber" : 77,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}