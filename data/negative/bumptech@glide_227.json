{
  "id" : 227,
  "expression" : "writeLocker",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "writeLocker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 93,
      "startColumnNumber" : 4,
      "endLineNumber" : 93,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 28
      },
      "nodeContext" : "writeLocker.acquire(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 29
      },
      "nodeContext" : "writeLocker.acquire(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 90,
        "startColumnNumber" : 42,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  writeLocker.acquire(key);\n  try {\n    String safeKey=safeKeyGenerator.getSafeKey(key);\n    if (Log.isLoggable(TAG,Log.VERBOSE)) {\n      Log.v(TAG,\"Put: Obtained: \" + safeKey + \" for for Key: \"+ key);\n    }\n    try {\n      DiskLruCache diskCache=getDiskCache();\n      Value current=diskCache.get(safeKey);\n      if (current != null) {\n        return;\n      }\n      DiskLruCache.Editor editor=diskCache.edit(safeKey);\n      if (editor == null) {\n        throw new IllegalStateException(\"Had two simultaneous puts for: \" + safeKey);\n      }\n      try {\n        File file=editor.getFile(0);\n        if (writer.write(file)) {\n          editor.commit();\n        }\n      }\n  finally {\n        editor.abortUnlessCommitted();\n      }\n    }\n catch (    IOException e) {\n      if (Log.isLoggable(TAG,Log.WARN)) {\n        Log.w(TAG,\"Unable to put to disk cache\",e);\n      }\n    }\n  }\n  finally {\n    writeLocker.release(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void put(Key key,Writer writer){\n  writeLocker.acquire(key);\n  try {\n    String safeKey=safeKeyGenerator.getSafeKey(key);\n    if (Log.isLoggable(TAG,Log.VERBOSE)) {\n      Log.v(TAG,\"Put: Obtained: \" + safeKey + \" for for Key: \"+ key);\n    }\n    try {\n      DiskLruCache diskCache=getDiskCache();\n      Value current=diskCache.get(safeKey);\n      if (current != null) {\n        return;\n      }\n      DiskLruCache.Editor editor=diskCache.edit(safeKey);\n      if (editor == null) {\n        throw new IllegalStateException(\"Had two simultaneous puts for: \" + safeKey);\n      }\n      try {\n        File file=editor.getFile(0);\n        if (writer.write(file)) {\n          editor.commit();\n        }\n      }\n  finally {\n        editor.abortUnlessCommitted();\n      }\n    }\n catch (    IOException e) {\n      if (Log.isLoggable(TAG,Log.WARN)) {\n        Log.w(TAG,\"Unable to put to disk cache\",e);\n      }\n    }\n  }\n  finally {\n    writeLocker.release(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 29
      },
      "nodeContext" : "writeLocker.acquire(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker"
  }, {
    "nodeContext" : "writeLocker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 126,
      "startColumnNumber" : 6,
      "endLineNumber" : 126,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 30
      },
      "nodeContext" : "writeLocker.release(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 31
      },
      "nodeContext" : "writeLocker.release(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  writeLocker.release(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1097,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  String safeKey=safeKeyGenerator.getSafeKey(key);\n  if (Log.isLoggable(TAG,Log.VERBOSE)) {\n    Log.v(TAG,\"Put: Obtained: \" + safeKey + \" for for Key: \"+ key);\n  }\n  try {\n    DiskLruCache diskCache=getDiskCache();\n    Value current=diskCache.get(safeKey);\n    if (current != null) {\n      return;\n    }\n    DiskLruCache.Editor editor=diskCache.edit(safeKey);\n    if (editor == null) {\n      throw new IllegalStateException(\"Had two simultaneous puts for: \" + safeKey);\n    }\n    try {\n      File file=editor.getFile(0);\n      if (writer.write(file)) {\n        editor.commit();\n      }\n    }\n  finally {\n      editor.abortUnlessCommitted();\n    }\n  }\n catch (  IOException e) {\n    if (Log.isLoggable(TAG,Log.WARN)) {\n      Log.w(TAG,\"Unable to put to disk cache\",e);\n    }\n  }\n}\n  finally {\n  writeLocker.release(key);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 90,
        "startColumnNumber" : 42,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  writeLocker.acquire(key);\n  try {\n    String safeKey=safeKeyGenerator.getSafeKey(key);\n    if (Log.isLoggable(TAG,Log.VERBOSE)) {\n      Log.v(TAG,\"Put: Obtained: \" + safeKey + \" for for Key: \"+ key);\n    }\n    try {\n      DiskLruCache diskCache=getDiskCache();\n      Value current=diskCache.get(safeKey);\n      if (current != null) {\n        return;\n      }\n      DiskLruCache.Editor editor=diskCache.edit(safeKey);\n      if (editor == null) {\n        throw new IllegalStateException(\"Had two simultaneous puts for: \" + safeKey);\n      }\n      try {\n        File file=editor.getFile(0);\n        if (writer.write(file)) {\n          editor.commit();\n        }\n      }\n  finally {\n        editor.abortUnlessCommitted();\n      }\n    }\n catch (    IOException e) {\n      if (Log.isLoggable(TAG,Log.WARN)) {\n        Log.w(TAG,\"Unable to put to disk cache\",e);\n      }\n    }\n  }\n  finally {\n    writeLocker.release(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void put(Key key,Writer writer){\n  writeLocker.acquire(key);\n  try {\n    String safeKey=safeKeyGenerator.getSafeKey(key);\n    if (Log.isLoggable(TAG,Log.VERBOSE)) {\n      Log.v(TAG,\"Put: Obtained: \" + safeKey + \" for for Key: \"+ key);\n    }\n    try {\n      DiskLruCache diskCache=getDiskCache();\n      Value current=diskCache.get(safeKey);\n      if (current != null) {\n        return;\n      }\n      DiskLruCache.Editor editor=diskCache.edit(safeKey);\n      if (editor == null) {\n        throw new IllegalStateException(\"Had two simultaneous puts for: \" + safeKey);\n      }\n      try {\n        File file=editor.getFile(0);\n        if (writer.write(file)) {\n          editor.commit();\n        }\n      }\n  finally {\n        editor.abortUnlessCommitted();\n      }\n    }\n catch (    IOException e) {\n      if (Log.isLoggable(TAG,Log.WARN)) {\n        Log.w(TAG,\"Unable to put to disk cache\",e);\n      }\n    }\n  }\n  finally {\n    writeLocker.release(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 31
      },
      "nodeContext" : "writeLocker.release(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 93,
    "startColumnNumber" : 4,
    "endLineNumber" : 93,
    "endColumnNumber" : 15
  }, {
    "charLength" : 11,
    "startLineNumber" : 126,
    "startColumnNumber" : 6,
    "endLineNumber" : 126,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}