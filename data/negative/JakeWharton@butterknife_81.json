{
  "id" : 81,
  "expression" : "'<'",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife-compiler/src/main/java/butterknife/compiler/BindingClass.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'<'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 405,
      "startColumnNumber" : 32,
      "endLineNumber" : 405,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 405,
        "startColumnNumber" : 19,
        "endLineNumber" : 405,
        "endColumnNumber" : 36
      },
      "nodeContext" : "type.indexOf('<')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 36
      },
      "nodeContext" : "left=type.indexOf('<')",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 405,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 37
      },
      "nodeContext" : "int left=type.indexOf('<');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 417,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (type) {\ncase \"void\":  return TypeName.VOID;\ncase \"boolean\":return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 393,
        "startColumnNumber" : 41,
        "endLineNumber" : 418,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (type) {\ncase \"void\":    return TypeName.VOID;\ncase \"boolean\":  return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 393,
        "startColumnNumber" : 2,
        "endLineNumber" : 418,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static TypeName bestGuess(String type){\nswitch (type) {\ncase \"void\":    return TypeName.VOID;\ncase \"boolean\":  return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 405,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 37
      },
      "nodeContext" : "int left=type.indexOf('<');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "char"
  }, {
    "nodeContext" : "'<'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 411,
      "startColumnNumber" : 32,
      "endLineNumber" : 411,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 411,
        "startColumnNumber" : 19,
        "endLineNumber" : 411,
        "endColumnNumber" : 46
      },
      "nodeContext" : "type.indexOf('<',left + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 411,
        "startColumnNumber" : 12,
        "endLineNumber" : 411,
        "endColumnNumber" : 46
      },
      "nodeContext" : "left=type.indexOf('<',left + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 411,
        "startColumnNumber" : 12,
        "endLineNumber" : 411,
        "endColumnNumber" : 47
      },
      "nodeContext" : "left=type.indexOf('<',left + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 409,
        "startColumnNumber" : 13,
        "endLineNumber" : 412,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  typeArguments.add(WildcardTypeName.subtypeOf(Object.class));\n  left=type.indexOf('<',left + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 409,
        "startColumnNumber" : 10,
        "endLineNumber" : 412,
        "endColumnNumber" : 31
      },
      "nodeContext" : "do {\n  typeArguments.add(WildcardTypeName.subtypeOf(Object.class));\n  left=type.indexOf('<',left + 1);\n}\n while (left != -1);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 406,
        "startColumnNumber" : 24,
        "endLineNumber" : 415,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\n  List<TypeName> typeArguments=new ArrayList<>();\n  do {\n    typeArguments.add(WildcardTypeName.subtypeOf(Object.class));\n    left=type.indexOf('<',left + 1);\n  }\n while (left != -1);\n  return ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 406,
        "startColumnNumber" : 8,
        "endLineNumber" : 415,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (left != -1) {\n  ClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\n  List<TypeName> typeArguments=new ArrayList<>();\n  do {\n    typeArguments.add(WildcardTypeName.subtypeOf(Object.class));\n    left=type.indexOf('<',left + 1);\n  }\n while (left != -1);\n  return ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 417,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (type) {\ncase \"void\":  return TypeName.VOID;\ncase \"boolean\":return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 393,
        "startColumnNumber" : 41,
        "endLineNumber" : 418,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (type) {\ncase \"void\":    return TypeName.VOID;\ncase \"boolean\":  return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 393,
        "startColumnNumber" : 2,
        "endLineNumber" : 418,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static TypeName bestGuess(String type){\nswitch (type) {\ncase \"void\":    return TypeName.VOID;\ncase \"boolean\":  return TypeName.BOOLEAN;\ncase \"byte\":return TypeName.BYTE;\ncase \"char\":return TypeName.CHAR;\ncase \"double\":return TypeName.DOUBLE;\ncase \"float\":return TypeName.FLOAT;\ncase \"int\":return TypeName.INT;\ncase \"long\":return TypeName.LONG;\ncase \"short\":return TypeName.SHORT;\ndefault:int left=type.indexOf('<');\nif (left != -1) {\nClassName typeClassName=ClassName.bestGuess(type.substring(0,left));\nList<TypeName> typeArguments=new ArrayList<>();\ndo {\ntypeArguments.add(WildcardTypeName.subtypeOf(Object.class));\nleft=type.indexOf('<',left + 1);\n}\n while (left != -1);\nreturn ParameterizedTypeName.get(typeClassName,typeArguments.toArray(new TypeName[typeArguments.size()]));\n}\nreturn ClassName.bestGuess(type);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 411,
        "startColumnNumber" : 12,
        "endLineNumber" : 411,
        "endColumnNumber" : 47
      },
      "nodeContext" : "left=type.indexOf('<',left + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 405,
    "startColumnNumber" : 32,
    "endLineNumber" : 405,
    "endColumnNumber" : 35
  }, {
    "charLength" : 3,
    "startLineNumber" : 411,
    "startColumnNumber" : 32,
    "endLineNumber" : 411,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}