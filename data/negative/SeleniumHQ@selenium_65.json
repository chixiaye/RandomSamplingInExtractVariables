{
  "id" : 65,
  "expression" : "listener",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/support/events/EventFiringDecoratorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "listener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 85,
      "startColumnNumber" : 51,
      "endLineNumber" : 85,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 85,
        "startColumnNumber" : 26,
        "endLineNumber" : 85,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new EventFiringDecorator(listener)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 26,
        "endLineNumber" : 85,
        "endColumnNumber" : 77
      },
      "nodeContext" : "new EventFiringDecorator(listener).decorate(driver)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 85,
        "startColumnNumber" : 14,
        "endLineNumber" : 85,
        "endColumnNumber" : 77
      },
      "nodeContext" : "decorated=new EventFiringDecorator(listener).decorate(driver)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 78
      },
      "nodeContext" : "WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 72,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WebDriver driver=mock(WebDriver.class);\n  CollectorListener listener=new CollectorListener(){\n    @Override public void beforeGet(    WebDriver driver,    String url){\n      acc.append(\"beforeGet\\n\");\n    }\n    @Override public void afterGet(    WebDriver driver,    String url){\n      acc.append(\"afterGet\\n\");\n    }\n  }\n;\n  WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n  decorated.get(\"http://example.com/\");\n  assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldFireWebDriverEvents(){\n  WebDriver driver=mock(WebDriver.class);\n  CollectorListener listener=new CollectorListener(){\n    @Override public void beforeGet(    WebDriver driver,    String url){\n      acc.append(\"beforeGet\\n\");\n    }\n    @Override public void afterGet(    WebDriver driver,    String url){\n      acc.append(\"afterGet\\n\");\n    }\n  }\n;\n  WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n  decorated.get(\"http://example.com/\");\n  assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 78
      },
      "nodeContext" : "WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.support.events.EventFiringDecoratorTest.CollectorListener"
  }, {
    "nodeContext" : "listener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 89,
      "startColumnNumber" : 15,
      "endLineNumber" : 89,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 89,
        "endColumnNumber" : 27
      },
      "nodeContext" : "listener.acc",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 89,
        "endColumnNumber" : 38
      },
      "nodeContext" : "listener.acc.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 89,
        "endColumnNumber" : 45
      },
      "nodeContext" : "listener.acc.toString().trim()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(listener.acc.toString().trim())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 72,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WebDriver driver=mock(WebDriver.class);\n  CollectorListener listener=new CollectorListener(){\n    @Override public void beforeGet(    WebDriver driver,    String url){\n      acc.append(\"beforeGet\\n\");\n    }\n    @Override public void afterGet(    WebDriver driver,    String url){\n      acc.append(\"afterGet\\n\");\n    }\n  }\n;\n  WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n  decorated.get(\"http://example.com/\");\n  assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldFireWebDriverEvents(){\n  WebDriver driver=mock(WebDriver.class);\n  CollectorListener listener=new CollectorListener(){\n    @Override public void beforeGet(    WebDriver driver,    String url){\n      acc.append(\"beforeGet\\n\");\n    }\n    @Override public void afterGet(    WebDriver driver,    String url){\n      acc.append(\"afterGet\\n\");\n    }\n  }\n;\n  WebDriver decorated=new EventFiringDecorator(listener).decorate(driver);\n  decorated.get(\"http://example.com/\");\n  assertThat(listener.acc.toString().trim()).isEqualTo(String.join(\"\\n\",\"beforeAnyCall get\",\"beforeAnyWebDriverCall get\",\"beforeGet\",\"afterGet\",\"afterAnyWebDriverCall get\",\"afterAnyCall get\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(listener.acc.toString().trim())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.support.events.EventFiringDecoratorTest.CollectorListener"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 85,
    "startColumnNumber" : 51,
    "endLineNumber" : 85,
    "endColumnNumber" : 59
  }, {
    "charLength" : 8,
    "startLineNumber" : 89,
    "startColumnNumber" : 15,
    "endLineNumber" : 89,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}