{
  "id" : 217,
  "expression" : "\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\"",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 122,
      "startLineNumber" : 171,
      "startColumnNumber" : 25,
      "endLineNumber" : 172,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 56
      },
      "nodeContext" : "LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 57
      },
      "nodeContext" : "LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 170,
        "startColumnNumber" : 16,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n  s.socket().close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 170,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n  s.socket().close();\n}\n catch (IOException e) {\n  LOG.warn(\"Ignoring exception when closing socket or trying to \" + \"reopen connection: \",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 169,
        "startColumnNumber" : 32,
        "endLineNumber" : 179,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n    s.socket().close();\n  }\n catch (  IOException e) {\n    LOG.warn(\"Ignoring exception when closing socket or trying to \" + \"reopen connection: \",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1362,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sid > self.getId()) {\n  try {\n    LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n    s.socket().close();\n  }\n catch (  IOException e) {\n    LOG.warn(\"Ignoring exception when closing socket or trying to \" + \"reopen connection: \",e);\n  }\n}\n else {\n  if (s != null) {\n    SendWorker sw=new SendWorker(s,sid);\n    RecvWorker rw=new RecvWorker(s,sid);\n    sw.setRecv(rw);\n    if (senderWorkerMap.containsKey(sid)) {\n      senderWorkerMap.get(sid).finish();\n    }\n    if (!queueSendMap.containsKey(sid)) {\n      queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n    }\n    senderWorkerMap.put(sid,sw);\n    sw.start();\n    rw.start();\n    return true;\n  }\n else {\n    LOG.warn(\"Channel null\");\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1883,
        "startLineNumber" : 155,
        "startColumnNumber" : 58,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    byte[] msgBytes=new byte[8];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    msgBuffer.putLong(self.getId());\n    msgBuffer.position(0);\n    s.write(msgBuffer);\n  }\n catch (  IOException e) {\n    LOG.warn(\"Exception reading or writing challenge: \",e);\n    return false;\n  }\n  if (sid > self.getId()) {\n    try {\n      LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n      s.socket().close();\n    }\n catch (    IOException e) {\n      LOG.warn(\"Ignoring exception when closing socket or trying to \" + \"reopen connection: \",e);\n    }\n  }\n else {\n    if (s != null) {\n      SendWorker sw=new SendWorker(s,sid);\n      RecvWorker rw=new RecvWorker(s,sid);\n      sw.setRecv(rw);\n      if (senderWorkerMap.containsKey(sid)) {\n        senderWorkerMap.get(sid).finish();\n      }\n      if (!queueSendMap.containsKey(sid)) {\n        queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n      }\n      senderWorkerMap.put(sid,sw);\n      sw.start();\n      rw.start();\n      return true;\n    }\n else {\n      LOG.warn(\"Channel null\");\n      return false;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2107,
        "startLineNumber" : 150,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If this server has initiated the connection, then it gives up on the connection if it loses challenge. Otherwise, it keeps the connection.\n */\nboolean initiateConnection(SocketChannel s,Long sid){\n  try {\n    byte[] msgBytes=new byte[8];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    msgBuffer.putLong(self.getId());\n    msgBuffer.position(0);\n    s.write(msgBuffer);\n  }\n catch (  IOException e) {\n    LOG.warn(\"Exception reading or writing challenge: \",e);\n    return false;\n  }\n  if (sid > self.getId()) {\n    try {\n      LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n      s.socket().close();\n    }\n catch (    IOException e) {\n      LOG.warn(\"Ignoring exception when closing socket or trying to \" + \"reopen connection: \",e);\n    }\n  }\n else {\n    if (s != null) {\n      SendWorker sw=new SendWorker(s,sid);\n      RecvWorker rw=new RecvWorker(s,sid);\n      sw.setRecv(rw);\n      if (senderWorkerMap.containsKey(sid)) {\n        senderWorkerMap.get(sid).finish();\n      }\n      if (!queueSendMap.containsKey(sid)) {\n        queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n      }\n      senderWorkerMap.put(sid,sw);\n      sw.start();\n      rw.start();\n      return true;\n    }\n else {\n      LOG.warn(\"Channel null\");\n      return false;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 57
      },
      "nodeContext" : "LOG.info(\"Have smaller server identifier, so dropping the connection: (\" + sid + \", \"+ self.getId()+ \")\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 15,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 122,
    "startLineNumber" : 171,
    "startColumnNumber" : 25,
    "endLineNumber" : 172,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}