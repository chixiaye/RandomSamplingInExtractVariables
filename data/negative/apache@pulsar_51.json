{
  "id" : 51,
  "expression" : "Sources.class",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/worker/src/test/java/org/apache/pulsar/functions/worker/FunctionRuntimeManagerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Sources.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 1049,
      "startColumnNumber" : 31,
      "endLineNumber" : 1049,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 1049,
        "startColumnNumber" : 26,
        "endLineNumber" : 1049,
        "endColumnNumber" : 45
      },
      "nodeContext" : "mock(Sources.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 1049,
        "startColumnNumber" : 16,
        "endLineNumber" : 1049,
        "endColumnNumber" : 45
      },
      "nodeContext" : "sources=mock(Sources.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 1049,
        "startColumnNumber" : 8,
        "endLineNumber" : 1049,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Sources sources=mock(Sources.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4133,
        "startLineNumber" : 1034,
        "startColumnNumber" : 70,
        "endLineNumber" : 1100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  WorkerConfig workerConfig=new WorkerConfig();\n  workerConfig.setWorkerId(\"worker-1\");\n  workerConfig.setFunctionRuntimeFactoryClassName(ThreadRuntimeFactory.class.getName());\n  workerConfig.setFunctionRuntimeFactoryConfigs(ObjectMapperFactory.getThreadLocal().convertValue(new ThreadRuntimeFactoryConfig().setThreadGroupName(\"test\"),Map.class));\n  workerConfig.setPulsarServiceUrl(\"pulsar://localhost:6650\");\n  workerConfig.setStateStorageServiceUrl(\"foo\");\n  workerConfig.setFunctionAssignmentTopicName(\"assignments\");\n  PulsarWorkerService workerService=mock(PulsarWorkerService.class);\n  PulsarAdmin pulsarAdmin=mock(PulsarAdmin.class);\n  Sources sources=mock(Sources.class);\n  doNothing().when(sources).restartSource(ArgumentMatchers.any(),ArgumentMatchers.any(),ArgumentMatchers.any());\n  doReturn(sources).when(pulsarAdmin).sources();\n  Sinks sinks=mock(Sinks.class);\n  doReturn(sinks).when(pulsarAdmin).sinks();\n  Functions functions=mock(Functions.class);\n  doNothing().when(functions).restartFunction(ArgumentMatchers.any(),ArgumentMatchers.any(),ArgumentMatchers.any());\n  doReturn(functions).when(pulsarAdmin).functions();\n  doReturn(pulsarAdmin).when(workerService).getFunctionAdmin();\n  mockStatic(RuntimeFactory.class);\n  List<WorkerInfo> workerInfos=new LinkedList<>();\n  workerInfos.add(WorkerInfo.of(\"worker-1\",\"localhost\",0));\n  workerInfos.add(WorkerInfo.of(\"worker-2\",\"localhost\",0));\n  PowerMockito.when(RuntimeFactory.getFuntionRuntimeFactory(eq(ThreadRuntimeFactory.class.getName()))).thenReturn(new ThreadRuntimeFactory());\n  MembershipManager membershipManager=mock(MembershipManager.class);\n  doReturn(workerInfos).when(membershipManager).getCurrentMembership();\n  Function.FunctionMetaData function=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"function\").setComponentType(Function.FunctionDetails.ComponentType.FUNCTION)).build();\n  Function.FunctionMetaData source=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"source\").setComponentType(Function.FunctionDetails.ComponentType.SOURCE)).build();\n  Function.FunctionMetaData sink=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"sink\").setComponentType(Function.FunctionDetails.ComponentType.SINK)).build();\n  FunctionRuntimeManager functionRuntimeManager=PowerMockito.spy(new FunctionRuntimeManager(workerConfig,workerService,mock(Namespace.class),membershipManager,mock(ConnectorsManager.class),mock(FunctionsManager.class),mock(FunctionMetaDataManager.class),mock(WorkerStatsManager.class),mock(ErrorNotifier.class)));\n  verifyRestart(functionRuntimeManager,function,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,function,\"worker-2\",false,true);\n  verifyRestart(functionRuntimeManager,source,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,source,\"worker-2\",false,true);\n  verifyRestart(functionRuntimeManager,sink,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,sink,\"worker-2\",false,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 461,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4209,
        "startLineNumber" : 1033,
        "startColumnNumber" : 4,
        "endLineNumber" : 1100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testThreadFunctionInstancesRestart() throws Exception {\n  WorkerConfig workerConfig=new WorkerConfig();\n  workerConfig.setWorkerId(\"worker-1\");\n  workerConfig.setFunctionRuntimeFactoryClassName(ThreadRuntimeFactory.class.getName());\n  workerConfig.setFunctionRuntimeFactoryConfigs(ObjectMapperFactory.getThreadLocal().convertValue(new ThreadRuntimeFactoryConfig().setThreadGroupName(\"test\"),Map.class));\n  workerConfig.setPulsarServiceUrl(\"pulsar://localhost:6650\");\n  workerConfig.setStateStorageServiceUrl(\"foo\");\n  workerConfig.setFunctionAssignmentTopicName(\"assignments\");\n  PulsarWorkerService workerService=mock(PulsarWorkerService.class);\n  PulsarAdmin pulsarAdmin=mock(PulsarAdmin.class);\n  Sources sources=mock(Sources.class);\n  doNothing().when(sources).restartSource(ArgumentMatchers.any(),ArgumentMatchers.any(),ArgumentMatchers.any());\n  doReturn(sources).when(pulsarAdmin).sources();\n  Sinks sinks=mock(Sinks.class);\n  doReturn(sinks).when(pulsarAdmin).sinks();\n  Functions functions=mock(Functions.class);\n  doNothing().when(functions).restartFunction(ArgumentMatchers.any(),ArgumentMatchers.any(),ArgumentMatchers.any());\n  doReturn(functions).when(pulsarAdmin).functions();\n  doReturn(pulsarAdmin).when(workerService).getFunctionAdmin();\n  mockStatic(RuntimeFactory.class);\n  List<WorkerInfo> workerInfos=new LinkedList<>();\n  workerInfos.add(WorkerInfo.of(\"worker-1\",\"localhost\",0));\n  workerInfos.add(WorkerInfo.of(\"worker-2\",\"localhost\",0));\n  PowerMockito.when(RuntimeFactory.getFuntionRuntimeFactory(eq(ThreadRuntimeFactory.class.getName()))).thenReturn(new ThreadRuntimeFactory());\n  MembershipManager membershipManager=mock(MembershipManager.class);\n  doReturn(workerInfos).when(membershipManager).getCurrentMembership();\n  Function.FunctionMetaData function=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"function\").setComponentType(Function.FunctionDetails.ComponentType.FUNCTION)).build();\n  Function.FunctionMetaData source=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"source\").setComponentType(Function.FunctionDetails.ComponentType.SOURCE)).build();\n  Function.FunctionMetaData sink=Function.FunctionMetaData.newBuilder().setFunctionDetails(Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-namespace\").setName(\"sink\").setComponentType(Function.FunctionDetails.ComponentType.SINK)).build();\n  FunctionRuntimeManager functionRuntimeManager=PowerMockito.spy(new FunctionRuntimeManager(workerConfig,workerService,mock(Namespace.class),membershipManager,mock(ConnectorsManager.class),mock(FunctionsManager.class),mock(FunctionMetaDataManager.class),mock(WorkerStatsManager.class),mock(ErrorNotifier.class)));\n  verifyRestart(functionRuntimeManager,function,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,function,\"worker-2\",false,true);\n  verifyRestart(functionRuntimeManager,source,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,source,\"worker-2\",false,true);\n  verifyRestart(functionRuntimeManager,sink,\"worker-1\",false,false);\n  verifyRestart(functionRuntimeManager,sink,\"worker-2\",false,true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 469,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 1049,
        "startColumnNumber" : 8,
        "endLineNumber" : 1049,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Sources sources=mock(Sources.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.pulsar.client.admin.Sources>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 1049,
    "startColumnNumber" : 31,
    "endLineNumber" : 1049,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}