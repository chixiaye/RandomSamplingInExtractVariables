{
  "id" : 134,
  "expression" : "AudioProcessor",
  "projectName" : "google@ExoPlayer",
  "commitID" : "a42d9f36b12033eb7accc3c08dbb365c66800e6f",
  "filePath" : "library/transformer/src/main/java/com/google/android/exoplayer2/transformer/TransformerAudioRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AudioProcessor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 348,
      "startColumnNumber" : 15,
      "endLineNumber" : 348,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 348,
        "endColumnNumber" : 59
      },
      "nodeContext" : "AudioProcessor.UnhandledAudioFormatException",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 348,
        "endColumnNumber" : 59
      },
      "nodeContext" : "AudioProcessor.UnhandledAudioFormatException",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,exception]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 348,
        "endColumnNumber" : 61
      },
      "nodeContext" : "AudioProcessor.UnhandledAudioFormatException e",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 348,
        "startColumnNumber" : 8,
        "endLineNumber" : 351,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (AudioProcessor.UnhandledAudioFormatException e) {\n  throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 345,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n  flushSonicAndSetSpeed(currentSpeed);\n}\n catch (AudioProcessor.UnhandledAudioFormatException e) {\n  throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 344,
        "startColumnNumber" : 45,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n    flushSonicAndSetSpeed(currentSpeed);\n  }\n catch (  AudioProcessor.UnhandledAudioFormatException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 344,
        "startColumnNumber" : 4,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (transformation.flattenForSlowMotion) {\n  try {\n    outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n    flushSonicAndSetSpeed(currentSpeed);\n  }\n catch (  AudioProcessor.UnhandledAudioFormatException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1687,
        "startLineNumber" : 330,
        "startColumnNumber" : 90,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (encoder != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=checkNotNull(this.decoder);\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String audioMimeType=transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1952,
        "startLineNumber" : 326,
        "startColumnNumber" : 2,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Attempts to configure the  {@link #encoder} and Sonic (if applicable), if they have not beenconfigured yet, and returns whether they have been configured.\n */\nprivate boolean ensureEncoderAndAudioProcessingConfigured() throws ExoPlaybackException {\n  if (encoder != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=checkNotNull(this.decoder);\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String audioMimeType=transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,exception]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 348,
        "endColumnNumber" : 61
      },
      "nodeContext" : "AudioProcessor.UnhandledAudioFormatException e",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.audio.AudioProcessor"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 348,
    "startColumnNumber" : 15,
    "endLineNumber" : 348,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}