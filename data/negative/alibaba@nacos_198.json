{
  "id" : 198,
  "expression" : "params",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/misc/ServerStatusSynchronizer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "params",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 44,
      "startColumnNumber" : 8,
      "endLineNumber" : 44,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "params.put(\"serverStatus\",msg.getData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 50
      },
      "nodeContext" : "params.put(\"serverStatus\",msg.getData());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1593,
        "startLineNumber" : 37,
        "startColumnNumber" : 57,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(serverIP)) {\n    return;\n  }\n  final Map<String,String> params=new HashMap<String,String>(2);\n  params.put(\"serverStatus\",msg.getData());\n  String url=\"http://\" + serverIP + \":\"+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  if (IPUtil.containsPort(serverIP)) {\n    url=\"http://\" + serverIP + EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  }\n  try {\n    HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1660,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void send(final String serverIP,Message msg){\n  if (StringUtils.isEmpty(serverIP)) {\n    return;\n  }\n  final Map<String,String> params=new HashMap<String,String>(2);\n  params.put(\"serverStatus\",msg.getData());\n  String url=\"http://\" + serverIP + \":\"+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  if (IPUtil.containsPort(serverIP)) {\n    url=\"http://\" + serverIP + EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  }\n  try {\n    HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 50
      },
      "nodeContext" : "params.put(\"serverStatus\",msg.getData());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "params",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 55,
      "startColumnNumber" : 47,
      "endLineNumber" : 55,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 15
      },
      "nodeContext" : "HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n catch (Exception e) {\n  Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 86,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1593,
        "startLineNumber" : 37,
        "startColumnNumber" : 57,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(serverIP)) {\n    return;\n  }\n  final Map<String,String> params=new HashMap<String,String>(2);\n  params.put(\"serverStatus\",msg.getData());\n  String url=\"http://\" + serverIP + \":\"+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  if (IPUtil.containsPort(serverIP)) {\n    url=\"http://\" + serverIP + EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  }\n  try {\n    HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1660,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void send(final String serverIP,Message msg){\n  if (StringUtils.isEmpty(serverIP)) {\n    return;\n  }\n  final Map<String,String> params=new HashMap<String,String>(2);\n  params.put(\"serverStatus\",msg.getData());\n  String url=\"http://\" + serverIP + \":\"+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  if (IPUtil.containsPort(serverIP)) {\n    url=\"http://\" + serverIP + EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/operator/server/status\";\n  }\n  try {\n    HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpGet(url,null,params,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP);\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.warn(\"[STATUS-SYNCHRONIZE] failed to request serverStatus, remote server: {}\",serverIP,throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 68,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 44,
    "startColumnNumber" : 8,
    "endLineNumber" : 44,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 55,
    "startColumnNumber" : 47,
    "endLineNumber" : 55,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}