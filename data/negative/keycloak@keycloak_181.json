{
  "id" : 181,
  "expression" : "1000",
  "projectName" : "keycloak@keycloak",
  "commitID" : "ebfc24d6c105971f00f86d1c96fc0dc2aed45bf9",
  "filePath" : "testsuite/model/src/test/java/org/keycloak/testsuite/model/infinispan/CacheExpirationTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 93,
      "startColumnNumber" : 39,
      "endLineNumber" : 93,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 93,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Thread.sleep(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 93,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Thread.sleep(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 93,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "{\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 92,
        "startColumnNumber" : 19,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 95
      },
      "nodeContext" : "do {\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 87,
        "startColumnNumber" : 45,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2334,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "session -> {\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 202,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 39,
      "endLineNumber" : 101,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 101,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Thread.sleep(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 101,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Thread.sleep(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 101,
        "startColumnNumber" : 24,
        "endLineNumber" : 101,
        "endColumnNumber" : 47
      },
      "nodeContext" : "{\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 100,
        "startColumnNumber" : 19,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 39
      },
      "nodeContext" : "do {\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 87,
        "startColumnNumber" : 45,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2334,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "session -> {\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 202,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 116,
      "startColumnNumber" : 39,
      "endLineNumber" : 116,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 116,
        "startColumnNumber" : 26,
        "endLineNumber" : 116,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Thread.sleep(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 116,
        "startColumnNumber" : 26,
        "endLineNumber" : 116,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Thread.sleep(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 116,
        "startColumnNumber" : 24,
        "endLineNumber" : 116,
        "endColumnNumber" : 47
      },
      "nodeContext" : "{\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 115,
        "startColumnNumber" : 19,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 129
      },
      "nodeContext" : "do {\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException ex) {\n    Thread.currentThread().interrupt();\n    throw new RuntimeException(ex);\n  }\n}\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 87,
        "startColumnNumber" : 45,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2334,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "session -> {\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 202,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 151
      },
      "nodeContext" : "try {\n  Thread.sleep(1000);\n}\n catch (InterruptedException ex) {\n  Thread.currentThread().interrupt();\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 93,
    "startColumnNumber" : 39,
    "endLineNumber" : 93,
    "endColumnNumber" : 43
  }, {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 39,
    "endLineNumber" : 101,
    "endColumnNumber" : 43
  }, {
    "charLength" : 4,
    "startLineNumber" : 116,
    "startColumnNumber" : 39,
    "endLineNumber" : 116,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}