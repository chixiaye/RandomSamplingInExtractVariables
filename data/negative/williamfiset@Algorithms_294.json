{
  "id" : 294,
  "expression" : "graph",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "0e291a44878a996bfc511cc71641b2e7bb842735",
  "filePath" : "com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDfsSolverAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "graph",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 60,
      "startColumnNumber" : 23,
      "endLineNumber" : 60,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 60,
        "startColumnNumber" : 23,
        "endLineNumber" : 60,
        "endColumnNumber" : 38
      },
      "nodeContext" : "graph.get(node)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 38
      },
      "nodeContext" : "edges=graph.get(node)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "List<Edge> edges=graph.get(node);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 56,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,cap));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long dfs(int node,long flow){\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,cap));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "List<Edge> edges=graph.get(node);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowBase.Edge>>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 60,
    "startColumnNumber" : 23,
    "endLineNumber" : 60,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}