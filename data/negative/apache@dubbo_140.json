{
  "id" : 140,
  "expression" : "meshRuleRouter",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/route/MeshRuleRouterTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "meshRuleRouter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 72,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 73
      },
      "nodeContext" : "meshRuleRouter.containMapKeyValue(originMap,inputMap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void containMapKeyValue(){\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleRouter"
  }, {
    "nodeContext" : "meshRuleRouter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 75,
      "startColumnNumber" : 20,
      "endLineNumber" : 75,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 74
      },
      "nodeContext" : "meshRuleRouter.containMapKeyValue(originMap,inputMap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void containMapKeyValue(){\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleRouter"
  }, {
    "nodeContext" : "meshRuleRouter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 78,
      "startColumnNumber" : 19,
      "endLineNumber" : 78,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 78,
        "startColumnNumber" : 19,
        "endLineNumber" : 78,
        "endColumnNumber" : 69
      },
      "nodeContext" : "meshRuleRouter.containMapKeyValue(originMap,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void containMapKeyValue(){\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleRouter"
  }, {
    "nodeContext" : "meshRuleRouter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 79,
      "startColumnNumber" : 19,
      "endLineNumber" : 79,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 79,
        "startColumnNumber" : 19,
        "endLineNumber" : 79,
        "endColumnNumber" : 80
      },
      "nodeContext" : "meshRuleRouter.containMapKeyValue(originMap,new HashMap<>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void containMapKeyValue(){\n  URL url=mock(URL.class);\n  when(url.getServiceKey()).thenReturn(\"test\");\n  MeshRuleRouter meshRuleRouter=new MeshRuleRouter(url);\n  Map<String,String> originMap=new HashMap<>();\n  originMap.put(\"key1\",\"value1\");\n  originMap.put(\"key2\",\"value2\");\n  originMap.put(\"key3\",\"value3\");\n  Map<String,String> inputMap=new HashMap<>();\n  inputMap.put(\"key1\",\"value1\");\n  inputMap.put(\"key2\",\"value2\");\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  inputMap.put(\"key4\",\"value4\");\n  assertFalse(meshRuleRouter.containMapKeyValue(originMap,inputMap));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,null));\n  assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertTrue(meshRuleRouter.containMapKeyValue(originMap,new HashMap<>()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.cluster.router.mesh.route.MeshRuleRouter"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 33
  }, {
    "charLength" : 14,
    "startLineNumber" : 75,
    "startColumnNumber" : 20,
    "endLineNumber" : 75,
    "endColumnNumber" : 34
  }, {
    "charLength" : 14,
    "startLineNumber" : 78,
    "startColumnNumber" : 19,
    "endLineNumber" : 78,
    "endColumnNumber" : 33
  }, {
    "charLength" : 14,
    "startLineNumber" : 79,
    "startColumnNumber" : 19,
    "endLineNumber" : 79,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}