{
  "id" : 411,
  "expression" : "new SketchCode(new File(folder,filename))",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/SketchData.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new SketchCode(new File(folder,filename))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 126,
      "startColumnNumber" : 20,
      "endLineNumber" : 126,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 63
      },
      "nodeContext" : "addCode(new SketchCode(new File(folder,filename)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 64
      },
      "nodeContext" : "addCode(new SketchCode(new File(folder,filename)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 125,
        "startColumnNumber" : 46,
        "endLineNumber" : 127,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  addCode(new SketchCode(new File(folder,filename)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 125,
        "startColumnNumber" : 10,
        "endLineNumber" : 129,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (BaseNoGui.isSanitaryName(base)) {\n  addCode(new SketchCode(new File(folder,filename)));\n}\n else {\n  System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 120,
        "startColumnNumber" : 58,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  base=base.substring(0,base.length() - (extension.length() + 1));\n  if (BaseNoGui.isSanitaryName(base)) {\n    addCode(new SketchCode(new File(folder,filename)));\n  }\n else {\n    System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (base.toLowerCase().endsWith(\".\" + extension)) {\n  base=base.substring(0,base.length() - (extension.length() + 1));\n  if (BaseNoGui.isSanitaryName(base)) {\n    addCode(new SketchCode(new File(folder,filename)));\n  }\n else {\n    System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 119,
        "startColumnNumber" : 42,
        "endLineNumber" : 131,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (base.toLowerCase().endsWith(\".\" + extension)) {\n    base=base.substring(0,base.length() - (extension.length() + 1));\n    if (BaseNoGui.isSanitaryName(base)) {\n      addCode(new SketchCode(new File(folder,filename)));\n    }\n else {\n      System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 119,
        "startColumnNumber" : 6,
        "endLineNumber" : 131,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String extension : extensions) {\n  if (base.toLowerCase().endsWith(\".\" + extension)) {\n    base=base.substring(0,base.length() - (extension.length() + 1));\n    if (BaseNoGui.isSanitaryName(base)) {\n      addCode(new SketchCode(new File(folder,filename)));\n    }\n else {\n      System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 107,
        "startColumnNumber" : 33,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (filename.startsWith(\".\"))   continue;\n  if (new File(folder,filename).isDirectory())   continue;\n  String base=filename;\n  for (  String extension : extensions) {\n    if (base.toLowerCase().endsWith(\".\" + extension)) {\n      base=base.substring(0,base.length() - (extension.length() + 1));\n      if (BaseNoGui.isSanitaryName(base)) {\n        addCode(new SketchCode(new File(folder,filename)));\n      }\n else {\n        System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String filename : list) {\n  if (filename.startsWith(\".\"))   continue;\n  if (new File(folder,filename).isDirectory())   continue;\n  String base=filename;\n  for (  String extension : extensions) {\n    if (base.toLowerCase().endsWith(\".\" + extension)) {\n      base=base.substring(0,base.length() - (extension.length() + 1));\n      if (BaseNoGui.isSanitaryName(base)) {\n        addCode(new SketchCode(new File(folder,filename)));\n      }\n else {\n        System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2047,
        "startLineNumber" : 92,
        "startColumnNumber" : 43,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  codeFolder=new File(folder,\"code\");\n  dataFolder=new File(folder,\"data\");\n  String list[]=folder.list();\n  clearCodeDocs();\n  List<String> extensions=getExtensions();\n  for (  String filename : list) {\n    if (filename.startsWith(\".\"))     continue;\n    if (new File(folder,filename).isDirectory())     continue;\n    String base=filename;\n    for (    String extension : extensions) {\n      if (base.toLowerCase().endsWith(\".\" + extension)) {\n        base=base.substring(0,base.length() - (extension.length() + 1));\n        if (BaseNoGui.isSanitaryName(base)) {\n          addCode(new SketchCode(new File(folder,filename)));\n        }\n else {\n          System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n        }\n      }\n    }\n  }\n  if (getCodeCount() == 0)   throw new IOException(_(\"No valid code files found\"));\n  for (  SketchCode code : getCodes()) {\n    if (code.getFile().equals(primaryFile)) {\n      moveCodeToFront(code);\n      break;\n    }\n  }\n  sortCode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2637,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Build the list of files. <P> Generally this is only done once, rather than each time a change is made, because otherwise it gets to be a nightmare to keep track of what files went where, because not all the data will be saved to disk. <P> This also gets called when the main sketch file is renamed, because the sketch has to be reloaded from a different folder. <P> Another exception is when an external editor is in use, in which case the load happens each time \"run\" is hit.\n */\nprotected void load() throws IOException {\n  codeFolder=new File(folder,\"code\");\n  dataFolder=new File(folder,\"data\");\n  String list[]=folder.list();\n  clearCodeDocs();\n  List<String> extensions=getExtensions();\n  for (  String filename : list) {\n    if (filename.startsWith(\".\"))     continue;\n    if (new File(folder,filename).isDirectory())     continue;\n    String base=filename;\n    for (    String extension : extensions) {\n      if (base.toLowerCase().endsWith(\".\" + extension)) {\n        base=base.substring(0,base.length() - (extension.length() + 1));\n        if (BaseNoGui.isSanitaryName(base)) {\n          addCode(new SketchCode(new File(folder,filename)));\n        }\n else {\n          System.err.println(I18n.format(\"File name {0} is invalid: ignored\",filename));\n        }\n      }\n    }\n  }\n  if (getCodeCount() == 0)   throw new IOException(_(\"No valid code files found\"));\n  for (  SketchCode code : getCodes()) {\n    if (code.getFile().equals(primaryFile)) {\n      moveCodeToFront(code);\n      break;\n    }\n  }\n  sortCode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 64
      },
      "nodeContext" : "addCode(new SketchCode(new File(folder,filename)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "processing.app.SketchCode"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 126,
    "startColumnNumber" : 20,
    "endLineNumber" : 126,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}