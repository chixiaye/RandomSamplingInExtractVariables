{
  "id" : 83,
  "expression" : "false",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/jenkins/util/JenkinsJVMTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 25,
      "startColumnNumber" : 37,
      "endLineNumber" : 25,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 25,
        "startColumnNumber" : 12,
        "endLineNumber" : 25,
        "endColumnNumber" : 43
      },
      "nodeContext" : "JenkinsJVM.setJenkinsJVM(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 25,
        "startColumnNumber" : 12,
        "endLineNumber" : 25,
        "endColumnNumber" : 44
      },
      "nodeContext" : "JenkinsJVM.setJenkinsJVM(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 24,
        "startColumnNumber" : 18,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JenkinsJVM.setJenkinsJVM(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertThrows(IllegalStateException.class,() -> JenkinsJVM.checkNotJenkinsJVM());\n}\n  finally {\n  JenkinsJVM.setJenkinsJVM(false);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 20,
        "startColumnNumber" : 55,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JenkinsJVM.setJenkinsJVM(true);\n  try {\n    assertThrows(IllegalStateException.class,() -> JenkinsJVM.checkNotJenkinsJVM());\n  }\n  finally {\n    JenkinsJVM.setJenkinsJVM(false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void checkNotJenkinsJVM_WhenInAJenkinsJVM(){\n  JenkinsJVM.setJenkinsJVM(true);\n  try {\n    assertThrows(IllegalStateException.class,() -> JenkinsJVM.checkNotJenkinsJVM());\n  }\n  finally {\n    JenkinsJVM.setJenkinsJVM(false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 25,
        "startColumnNumber" : 12,
        "endLineNumber" : 25,
        "endColumnNumber" : 44
      },
      "nodeContext" : "JenkinsJVM.setJenkinsJVM(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 25,
    "startColumnNumber" : 37,
    "endLineNumber" : 25,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}