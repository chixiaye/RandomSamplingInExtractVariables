{
  "id" : 243,
  "expression" : "!string.toLowerCase().contains(filter.toLowerCase())",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/cc/arduino/contributions/libraries/ui/LibrariesIndexTableModel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!string.toLowerCase().contains(filter.toLowerCase())",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 156,
      "startColumnNumber" : 10,
      "endLineNumber" : 156,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 156,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!string.toLowerCase().contains(filter.toLowerCase())) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 155,
        "startColumnNumber" : 34,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!string.toLowerCase().contains(filter.toLowerCase())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 155,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String filter : filters) {\n  if (!string.toLowerCase().contains(filter.toLowerCase())) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 146,
        "startColumnNumber" : 69,
        "endLineNumber" : 162,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (string == null) {\n    return false;\n  }\n  if (filters == null) {\n    return true;\n  }\n  for (  String filter : filters) {\n    if (!string.toLowerCase().contains(filter.toLowerCase())) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 162,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Check if <b>string</b> contains all the substrings in <b>set</b>. The compare is case insensitive.\n * @param string\n * @param filters\n * @return <b>true<b> if all the strings in <b>set</b> are contained in<b>string</b>.\n */\nprivate boolean stringContainsAll(String string,String filters[]){\n  if (string == null) {\n    return false;\n  }\n  if (filters == null) {\n    return true;\n  }\n  for (  String filter : filters) {\n    if (!string.toLowerCase().contains(filter.toLowerCase())) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 156,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!string.toLowerCase().contains(filter.toLowerCase())) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 156,
    "startColumnNumber" : 10,
    "endLineNumber" : 156,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}