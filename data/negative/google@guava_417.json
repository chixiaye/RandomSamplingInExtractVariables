{
  "id" : 417,
  "expression" : "\"foo\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/graph/MapCacheTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"foo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 84,
      "startColumnNumber" : 38,
      "endLineNumber" : 84,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 84,
        "startColumnNumber" : 27,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new String(\"foo\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fooReference1=new String(\"foo\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String fooReference1=new String(\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 83,
        "startColumnNumber" : 57,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String fooReference1=new String(\"foo\");\n  String fooReference2=new String(\"foo\");\n  assertThat(fooReference1).isNotSameInstanceAs(fooReference2);\n  assertThat(mapCache.put(fooReference1,\"bar\")).isNull();\n  assertThat(mapCache.get(fooReference1)).isEqualTo(\"bar\");\n  assertThat(mapCache.remove(fooReference2)).isEqualTo(\"bar\");\n  assertThat(mapCache.get(fooReference1)).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRemoveEqualKeyWithDifferentReference(){\n  String fooReference1=new String(\"foo\");\n  String fooReference2=new String(\"foo\");\n  assertThat(fooReference1).isNotSameInstanceAs(fooReference2);\n  assertThat(mapCache.put(fooReference1,\"bar\")).isNull();\n  assertThat(mapCache.get(fooReference1)).isEqualTo(\"bar\");\n  assertThat(mapCache.remove(fooReference2)).isEqualTo(\"bar\");\n  assertThat(mapCache.get(fooReference1)).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String fooReference1=new String(\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"foo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 85,
      "startColumnNumber" : 38,
      "endLineNumber" : 85,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 85,
        "startColumnNumber" : 27,
        "endLineNumber" : 85,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new String(\"foo\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 85,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fooReference2=new String(\"foo\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String fooReference2=new String(\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 83,
        "startColumnNumber" : 57,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String fooReference1=new String(\"foo\");\n  String fooReference2=new String(\"foo\");\n  assertThat(fooReference1).isNotSameInstanceAs(fooReference2);\n  assertThat(mapCache.put(fooReference1,\"bar\")).isNull();\n  assertThat(mapCache.get(fooReference1)).isEqualTo(\"bar\");\n  assertThat(mapCache.remove(fooReference2)).isEqualTo(\"bar\");\n  assertThat(mapCache.get(fooReference1)).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRemoveEqualKeyWithDifferentReference(){\n  String fooReference1=new String(\"foo\");\n  String fooReference2=new String(\"foo\");\n  assertThat(fooReference1).isNotSameInstanceAs(fooReference2);\n  assertThat(mapCache.put(fooReference1,\"bar\")).isNull();\n  assertThat(mapCache.get(fooReference1)).isEqualTo(\"bar\");\n  assertThat(mapCache.remove(fooReference2)).isEqualTo(\"bar\");\n  assertThat(mapCache.get(fooReference1)).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String fooReference2=new String(\"foo\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 84,
    "startColumnNumber" : 38,
    "endLineNumber" : 84,
    "endColumnNumber" : 43
  }, {
    "charLength" : 5,
    "startLineNumber" : 85,
    "startColumnNumber" : 38,
    "endLineNumber" : 85,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}