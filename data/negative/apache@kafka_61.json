{
  "id" : 61,
  "expression" : "targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/storage/src/test/java/org/apache/kafka/server/log/remote/storage/InmemoryRemoteLogMetadataManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 123,
      "startColumnNumber" : 12,
      "endLineNumber" : 123,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED) {\n  idToRemoteLogMetadataCache.remove(topicIdPartition);\n  idToPartitionDeleteMetadata.remove(topicIdPartition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 108,
        "startColumnNumber" : 42,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.debug(\"Adding delete state with: [{}]\",remotePartitionDeleteMetadata);\n  Objects.requireNonNull(remotePartitionDeleteMetadata,\"remotePartitionDeleteMetadata can not be null\");\n  TopicIdPartition topicIdPartition=remotePartitionDeleteMetadata.topicIdPartition();\n  RemotePartitionDeleteState targetState=remotePartitionDeleteMetadata.state();\n  RemotePartitionDeleteMetadata existingMetadata=idToPartitionDeleteMetadata.get(topicIdPartition);\n  RemotePartitionDeleteState existingState=existingMetadata != null ? existingMetadata.state() : null;\n  if (!RemotePartitionDeleteState.isValidTransition(existingState,targetState)) {\n    throw new IllegalStateException(\"Current state: \" + existingState + \", target state: \"+ targetState);\n  }\n  idToPartitionDeleteMetadata.put(topicIdPartition,remotePartitionDeleteMetadata);\n  if (targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED) {\n    idToRemoteLogMetadataCache.remove(topicIdPartition);\n    idToPartitionDeleteMetadata.remove(topicIdPartition);\n  }\n  return COMPLETED_FUTURE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1408,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public CompletableFuture<Void> putRemotePartitionDeleteMetadata(RemotePartitionDeleteMetadata remotePartitionDeleteMetadata) throws RemoteStorageException {\n  log.debug(\"Adding delete state with: [{}]\",remotePartitionDeleteMetadata);\n  Objects.requireNonNull(remotePartitionDeleteMetadata,\"remotePartitionDeleteMetadata can not be null\");\n  TopicIdPartition topicIdPartition=remotePartitionDeleteMetadata.topicIdPartition();\n  RemotePartitionDeleteState targetState=remotePartitionDeleteMetadata.state();\n  RemotePartitionDeleteMetadata existingMetadata=idToPartitionDeleteMetadata.get(topicIdPartition);\n  RemotePartitionDeleteState existingState=existingMetadata != null ? existingMetadata.state() : null;\n  if (!RemotePartitionDeleteState.isValidTransition(existingState,targetState)) {\n    throw new IllegalStateException(\"Current state: \" + existingState + \", target state: \"+ targetState);\n  }\n  idToPartitionDeleteMetadata.put(topicIdPartition,remotePartitionDeleteMetadata);\n  if (targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED) {\n    idToRemoteLogMetadataCache.remove(topicIdPartition);\n    idToPartitionDeleteMetadata.remove(topicIdPartition);\n  }\n  return COMPLETED_FUTURE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (targetState == RemotePartitionDeleteState.DELETE_PARTITION_FINISHED) {\n  idToRemoteLogMetadataCache.remove(topicIdPartition);\n  idToPartitionDeleteMetadata.remove(topicIdPartition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 67,
    "startLineNumber" : 123,
    "startColumnNumber" : 12,
    "endLineNumber" : 123,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}