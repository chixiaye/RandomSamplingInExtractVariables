{
  "id" : 359,
  "expression" : "ChannelOption",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketRstTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 58,
      "startColumnNumber" : 23,
      "endLineNumber" : 58,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 58,
        "endColumnNumber" : 46
      },
      "nodeContext" : "ChannelOption.SO_LINGER",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 50
      },
      "nodeContext" : "sb.childOption(ChannelOption.SO_LINGER,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 51
      },
      "nodeContext" : "sb.childOption(ChannelOption.SO_LINGER,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 52,
        "startColumnNumber" : 104,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicReference<Channel> serverChannelRef=new AtomicReference<>();\n  final AtomicReference<Throwable> throwableRef=new AtomicReference<>();\n  final CountDownLatch latch=new CountDownLatch(1);\n  final CountDownLatch latch2=new CountDownLatch(1);\n  sb.childOption(ChannelOption.SO_LINGER,0);\n  sb.childHandler(new ChannelInitializer<Channel>(){\n    @Override protected void initChannel(    Channel ch) throws Exception {\n      serverChannelRef.compareAndSet(null,ch);\n      latch.countDown();\n    }\n  }\n);\n  cb.handler(new ChannelInitializer<Channel>(){\n    @Override protected void initChannel(    Channel ch) throws Exception {\n      ch.pipeline().addLast(new ChannelHandler(){\n        @Override public void exceptionCaught(        ChannelHandlerContext ctx,        Throwable cause){\n          throwableRef.compareAndSet(null,cause);\n        }\n        @Override public void channelInactive(        ChannelHandlerContext ctx){\n          latch2.countDown();\n        }\n      }\n);\n    }\n  }\n);\n  Channel sc=sb.bind().get();\n  Channel cc=cb.connect(sc.localAddress()).get();\n  latch.await();\n  serverChannelRef.get().close();\n  latch2.await();\n  Throwable cause=throwableRef.get();\n  assertTrue(cause instanceof IOException,\"actual [type, message]: [\" + cause.getClass() + \", \"+ cause.getMessage()+ ']');\n  assertRstOnCloseException((IOException)cause,cc);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testSoLingerZeroCausesOnlyRstOnClose(ServerBootstrap sb,Bootstrap cb) throws Throwable {\n  final AtomicReference<Channel> serverChannelRef=new AtomicReference<>();\n  final AtomicReference<Throwable> throwableRef=new AtomicReference<>();\n  final CountDownLatch latch=new CountDownLatch(1);\n  final CountDownLatch latch2=new CountDownLatch(1);\n  sb.childOption(ChannelOption.SO_LINGER,0);\n  sb.childHandler(new ChannelInitializer<Channel>(){\n    @Override protected void initChannel(    Channel ch) throws Exception {\n      serverChannelRef.compareAndSet(null,ch);\n      latch.countDown();\n    }\n  }\n);\n  cb.handler(new ChannelInitializer<Channel>(){\n    @Override protected void initChannel(    Channel ch) throws Exception {\n      ch.pipeline().addLast(new ChannelHandler(){\n        @Override public void exceptionCaught(        ChannelHandlerContext ctx,        Throwable cause){\n          throwableRef.compareAndSet(null,cause);\n        }\n        @Override public void channelInactive(        ChannelHandlerContext ctx){\n          latch2.countDown();\n        }\n      }\n);\n    }\n  }\n);\n  Channel sc=sb.bind().get();\n  Channel cc=cb.connect(sc.localAddress()).get();\n  latch.await();\n  serverChannelRef.get().close();\n  latch2.await();\n  Throwable cause=throwableRef.get();\n  assertTrue(cause instanceof IOException,\"actual [type, message]: [\" + cause.getClass() + \", \"+ cause.getMessage()+ ']');\n  assertRstOnCloseException((IOException)cause,cc);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 51
      },
      "nodeContext" : "sb.childOption(ChannelOption.SO_LINGER,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.ChannelOption"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 58,
    "startColumnNumber" : 23,
    "endLineNumber" : 58,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}