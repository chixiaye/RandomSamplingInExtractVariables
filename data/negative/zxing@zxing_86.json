{
  "id" : 86,
  "expression" : "functionPattern",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/qrcode/decoder/BitMatrixParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "functionPattern",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 181,
      "startColumnNumber" : 15,
      "endLineNumber" : 181,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 181,
        "startColumnNumber" : 15,
        "endLineNumber" : 181,
        "endColumnNumber" : 46
      },
      "nodeContext" : "functionPattern.get(j - col,i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 181,
        "startColumnNumber" : 14,
        "endLineNumber" : 181,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!functionPattern.get(j - col,i)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 181,
        "startColumnNumber" : 10,
        "endLineNumber" : 194,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!functionPattern.get(j - col,i)) {\n  bitsRead++;\n  currentByte<<=1;\n  if (bitMatrix.get(j - col,i)) {\n    currentByte|=1;\n  }\n  if (bitsRead == 8) {\n    result[resultOffset++]=(byte)currentByte;\n    bitsRead=0;\n    currentByte=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 179,
        "startColumnNumber" : 42,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!functionPattern.get(j - col,i)) {\n    bitsRead++;\n    currentByte<<=1;\n    if (bitMatrix.get(j - col,i)) {\n      currentByte|=1;\n    }\n    if (bitsRead == 8) {\n      result[resultOffset++]=(byte)currentByte;\n      bitsRead=0;\n      currentByte=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int col=0; col < 2; col++) {\n  if (!functionPattern.get(j - col,i)) {\n    bitsRead++;\n    currentByte<<=1;\n    if (bitMatrix.get(j - col,i)) {\n      currentByte|=1;\n    }\n    if (bitsRead == 8) {\n      result[resultOffset++]=(byte)currentByte;\n      bitsRead=0;\n      currentByte=0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 177,
        "startColumnNumber" : 54,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int i=readingUp ? dimension - 1 - count : count;\n  for (int col=0; col < 2; col++) {\n    if (!functionPattern.get(j - col,i)) {\n      bitsRead++;\n      currentByte<<=1;\n      if (bitMatrix.get(j - col,i)) {\n        currentByte|=1;\n      }\n      if (bitsRead == 8) {\n        result[resultOffset++]=(byte)currentByte;\n        bitsRead=0;\n        currentByte=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int count=0; count < dimension; count++) {\n  int i=readingUp ? dimension - 1 - count : count;\n  for (int col=0; col < 2; col++) {\n    if (!functionPattern.get(j - col,i)) {\n      bitsRead++;\n      currentByte<<=1;\n      if (bitMatrix.get(j - col,i)) {\n        currentByte|=1;\n      }\n      if (bitsRead == 8) {\n        result[resultOffset++]=(byte)currentByte;\n        bitsRead=0;\n        currentByte=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 170,
        "startColumnNumber" : 47,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (j == 6) {\n    j--;\n  }\n  for (int count=0; count < dimension; count++) {\n    int i=readingUp ? dimension - 1 - count : count;\n    for (int col=0; col < 2; col++) {\n      if (!functionPattern.get(j - col,i)) {\n        bitsRead++;\n        currentByte<<=1;\n        if (bitMatrix.get(j - col,i)) {\n          currentByte|=1;\n        }\n        if (bitsRead == 8) {\n          result[resultOffset++]=(byte)currentByte;\n          bitsRead=0;\n          currentByte=0;\n        }\n      }\n    }\n  }\n  readingUp^=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=dimension - 1; j > 0; j-=2) {\n  if (j == 6) {\n    j--;\n  }\n  for (int count=0; count < dimension; count++) {\n    int i=readingUp ? dimension - 1 - count : count;\n    for (int col=0; col < 2; col++) {\n      if (!functionPattern.get(j - col,i)) {\n        bitsRead++;\n        currentByte<<=1;\n        if (bitMatrix.get(j - col,i)) {\n          currentByte|=1;\n        }\n        if (bitsRead == 8) {\n          result[resultOffset++]=(byte)currentByte;\n          bitsRead=0;\n          currentByte=0;\n        }\n      }\n    }\n  }\n  readingUp^=true;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 151,
        "startColumnNumber" : 48,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FormatInformation formatInfo=readFormatInformation();\n  Version version=readVersion();\n  DataMask dataMask=DataMask.forReference((int)formatInfo.getDataMask());\n  int dimension=bitMatrix.getHeight();\n  dataMask.unmaskBitMatrix(bitMatrix,dimension);\n  BitMatrix functionPattern=version.buildFunctionPattern();\n  boolean readingUp=true;\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int currentByte=0;\n  int bitsRead=0;\n  for (int j=dimension - 1; j > 0; j-=2) {\n    if (j == 6) {\n      j--;\n    }\n    for (int count=0; count < dimension; count++) {\n      int i=readingUp ? dimension - 1 - count : count;\n      for (int col=0; col < 2; col++) {\n        if (!functionPattern.get(j - col,i)) {\n          bitsRead++;\n          currentByte<<=1;\n          if (bitMatrix.get(j - col,i)) {\n            currentByte|=1;\n          }\n          if (bitsRead == 8) {\n            result[resultOffset++]=(byte)currentByte;\n            bitsRead=0;\n            currentByte=0;\n          }\n        }\n      }\n    }\n    readingUp^=true;\n  }\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2320,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Reads the bits in the  {@link BitMatrix} representing the finder pattern in thecorrect order in order to reconstitute the codewords bytes contained within the QR Code.</p>\n * @return bytes encoded within the QR Code\n * @throws FormatException if the exact number of bytes expected is not read\n */\nbyte[] readCodewords() throws FormatException {\n  FormatInformation formatInfo=readFormatInformation();\n  Version version=readVersion();\n  DataMask dataMask=DataMask.forReference((int)formatInfo.getDataMask());\n  int dimension=bitMatrix.getHeight();\n  dataMask.unmaskBitMatrix(bitMatrix,dimension);\n  BitMatrix functionPattern=version.buildFunctionPattern();\n  boolean readingUp=true;\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int currentByte=0;\n  int bitsRead=0;\n  for (int j=dimension - 1; j > 0; j-=2) {\n    if (j == 6) {\n      j--;\n    }\n    for (int count=0; count < dimension; count++) {\n      int i=readingUp ? dimension - 1 - count : count;\n      for (int col=0; col < 2; col++) {\n        if (!functionPattern.get(j - col,i)) {\n          bitsRead++;\n          currentByte<<=1;\n          if (bitMatrix.get(j - col,i)) {\n            currentByte|=1;\n          }\n          if (bitsRead == 8) {\n            result[resultOffset++]=(byte)currentByte;\n            bitsRead=0;\n            currentByte=0;\n          }\n        }\n      }\n    }\n    readingUp^=true;\n  }\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 181,
        "startColumnNumber" : 14,
        "endLineNumber" : 181,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!functionPattern.get(j - col,i)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.common.BitMatrix"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 181,
    "startColumnNumber" : 15,
    "endLineNumber" : 181,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}