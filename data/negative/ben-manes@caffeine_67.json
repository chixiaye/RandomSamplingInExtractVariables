{
  "id" : 67,
  "expression" : "'~'",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/jmh/java/com/github/benmanes/caffeine/generator/Utils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'~'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 44,
      "startColumnNumber" : 16,
      "endLineNumber" : 44,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 23
      },
      "nodeContext" : "'~' - ' '",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 25
      },
      "nodeContext" : "'~' - ' ' + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 44,
        "startColumnNumber" : 7,
        "endLineNumber" : 44,
        "endColumnNumber" : 25
      },
      "nodeContext" : "interval='~' - ' ' + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 44,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int interval='~' - ' ' + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int interval='~' - ' ' + 1;\n  byte[] buf=new byte[length];\n  random().nextBytes(buf);\n  for (int i=0; i < length; i++) {\n    if (buf[i] < 0) {\n      buf[i]=(byte)((-buf[i] % interval) + ' ');\n    }\n else {\n      buf[i]=(byte)((buf[i] % interval) + ' ');\n    }\n  }\n  return new String(buf);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "/** \n * Generate a random ASCII string of a given length.\n */\npublic static String ASCIIString(int length){\n  int interval='~' - ' ' + 1;\n  byte[] buf=new byte[length];\n  random().nextBytes(buf);\n  for (int i=0; i < length; i++) {\n    if (buf[i] < 0) {\n      buf[i]=(byte)((-buf[i] % interval) + ' ');\n    }\n else {\n      buf[i]=(byte)((buf[i] % interval) + ' ');\n    }\n  }\n  return new String(buf);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 44,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int interval='~' - ' ' + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 44,
    "startColumnNumber" : 16,
    "endLineNumber" : 44,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}