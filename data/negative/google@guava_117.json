{
  "id" : 117,
  "expression" : "new String[]{host,hostPortString.substring(closeBracketIndex + 2)}",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/net/HostAndPort.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[]{host,hostPortString.substring(closeBracketIndex + 2)}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 242,
      "startColumnNumber" : 13,
      "endLineNumber" : 242,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 13,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 242,
        "startColumnNumber" : 6,
        "endLineNumber" : 242,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 231,
        "startColumnNumber" : 11,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(hostPortString.charAt(closeBracketIndex + 1) == ':',\"Only a colon may follow a close bracket: %s\",hostPortString);\n  for (int i=closeBracketIndex + 2; i < hostPortString.length(); ++i) {\n    checkArgument(Character.isDigit(hostPortString.charAt(i)),\"Port must be numeric: %s\",hostPortString);\n  }\n  return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 229,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (closeBracketIndex + 1 == hostPortString.length()) {\n  return new String[]{host,\"\"};\n}\n else {\n  checkArgument(hostPortString.charAt(closeBracketIndex + 1) == ':',\"Only a colon may follow a close bracket: %s\",hostPortString);\n  for (int i=closeBracketIndex + 2; i < hostPortString.length(); ++i) {\n    checkArgument(Character.isDigit(hostPortString.charAt(i)),\"Port must be numeric: %s\",hostPortString);\n  }\n  return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1113,
        "startLineNumber" : 216,
        "startColumnNumber" : 81,
        "endLineNumber" : 244,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(hostPortString.charAt(0) == '[',\"Bracketed host-port string must start with a bracket: %s\",hostPortString);\n  int colonIndex=hostPortString.indexOf(':');\n  int closeBracketIndex=hostPortString.lastIndexOf(']');\n  checkArgument(colonIndex > -1 && closeBracketIndex > colonIndex,\"Invalid bracketed host/port: %s\",hostPortString);\n  String host=hostPortString.substring(1,closeBracketIndex);\n  if (closeBracketIndex + 1 == hostPortString.length()) {\n    return new String[]{host,\"\"};\n  }\n else {\n    checkArgument(hostPortString.charAt(closeBracketIndex + 1) == ':',\"Only a colon may follow a close bracket: %s\",hostPortString);\n    for (int i=closeBracketIndex + 2; i < hostPortString.length(); ++i) {\n      checkArgument(Character.isDigit(hostPortString.charAt(i)),\"Port must be numeric: %s\",hostPortString);\n    }\n    return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 244,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses a bracketed host-port string, throwing IllegalArgumentException if parsing fails.\n * @param hostPortString the full bracketed host-port specification. Post might not be specified.\n * @return an array with 2 strings: host and port, in that order.\n * @throws IllegalArgumentException if parsing the bracketed host-port string fails.\n */\nprivate static String[] getHostAndPortFromBracketedHost(String hostPortString){\n  checkArgument(hostPortString.charAt(0) == '[',\"Bracketed host-port string must start with a bracket: %s\",hostPortString);\n  int colonIndex=hostPortString.indexOf(':');\n  int closeBracketIndex=hostPortString.lastIndexOf(']');\n  checkArgument(colonIndex > -1 && closeBracketIndex > colonIndex,\"Invalid bracketed host/port: %s\",hostPortString);\n  String host=hostPortString.substring(1,closeBracketIndex);\n  if (closeBracketIndex + 1 == hostPortString.length()) {\n    return new String[]{host,\"\"};\n  }\n else {\n    checkArgument(hostPortString.charAt(closeBracketIndex + 1) == ':',\"Only a colon may follow a close bracket: %s\",hostPortString);\n    for (int i=closeBracketIndex + 2; i < hostPortString.length(); ++i) {\n      checkArgument(Character.isDigit(hostPortString.charAt(i)),\"Port must be numeric: %s\",hostPortString);\n    }\n    return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 242,
        "startColumnNumber" : 6,
        "endLineNumber" : 242,
        "endColumnNumber" : 82
      },
      "nodeContext" : "return new String[]{host,hostPortString.substring(closeBracketIndex + 2)};\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 242,
    "startColumnNumber" : 13,
    "endLineNumber" : 242,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}