{
  "id" : 13,
  "expression" : "new MockResponse()",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/android-test/src/androidTest/java/retrofit2/UriAndroidTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MockResponse()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 54,
      "startColumnNumber" : 20,
      "endLineNumber" : 54,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 54,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 52
      },
      "nodeContext" : "new MockResponse().setBody(\"Hi\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "server1.enqueue(new MockResponse().setBody(\"Hi\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "server1.enqueue(new MockResponse().setBody(\"Hi\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 53,
        "startColumnNumber" : 78,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  server1.enqueue(new MockResponse().setBody(\"Hi\"));\n  service.method(Uri.parse(\"foo/bar/\")).execute();\n  assertThat(server1.takeRequest().getRequestUrl()).isEqualTo(server1.url(\"foo/bar/\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void getWithAndroidUriUrl() throws IOException, InterruptedException {\n  server1.enqueue(new MockResponse().setBody(\"Hi\"));\n  service.method(Uri.parse(\"foo/bar/\")).execute();\n  assertThat(server1.takeRequest().getRequestUrl()).isEqualTo(server1.url(\"foo/bar/\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "server1.enqueue(new MockResponse().setBody(\"Hi\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "retrofit2.MockResponse"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 54,
    "startColumnNumber" : 20,
    "endLineNumber" : 54,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}