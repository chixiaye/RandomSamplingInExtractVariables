{
  "id" : 485,
  "expression" : "configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 60,
      "startColumnNumber" : 12,
      "endLineNumber" : 60,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {\n  configWindowSize=Long.parseLong((String)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG));\n}\n else {\n  configWindowSize=(Long)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2582,
        "startLineNumber" : 57,
        "startColumnNumber" : 77,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Long configWindowSize;\n  if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {\n    configWindowSize=Long.parseLong((String)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG));\n  }\n else {\n    configWindowSize=(Long)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG);\n  }\n  if (windowSize != null && configWindowSize != null) {\n    throw new IllegalArgumentException(\"Window size should not be set in both the time windowed deserializer constructor and the window.size.ms config\");\n  }\n else   if (windowSize == null && configWindowSize == null) {\n    throw new IllegalArgumentException(\"Window size needs to be set either through the time windowed deserializer \" + \"constructor or the window.size.ms config but not both\");\n  }\n else {\n    windowSize=windowSize == null ? configWindowSize : windowSize;\n  }\n  final String windowedInnerClassSerdeConfig=(String)configs.get(StreamsConfig.WINDOWED_INNER_CLASS_SERDE);\n  Serde<T> windowInnerClassSerde=null;\n  if (windowedInnerClassSerdeConfig != null) {\n    try {\n      windowInnerClassSerde=Utils.newInstance(windowedInnerClassSerdeConfig,Serde.class);\n    }\n catch (    final ClassNotFoundException e) {\n      throw new ConfigException(StreamsConfig.WINDOWED_INNER_CLASS_SERDE,windowedInnerClassSerdeConfig,\"Serde class \" + windowedInnerClassSerdeConfig + \" could not be found.\");\n    }\n  }\n  if (inner != null && windowedInnerClassSerdeConfig != null) {\n    if (!inner.getClass().getName().equals(windowInnerClassSerde.deserializer().getClass().getName())) {\n      throw new IllegalArgumentException(\"Inner class deserializer set using constructor \" + \"(\" + inner.getClass().getName() + \")\"+ \" is different from the one set in windowed.inner.class.serde config \"+ \"(\"+ windowInnerClassSerde.deserializer().getClass().getName()+ \").\");\n    }\n  }\n else   if (inner == null && windowedInnerClassSerdeConfig == null) {\n    throw new IllegalArgumentException(\"Inner class deserializer should be set either via  constructor \" + \"or via the windowed.inner.class.serde config\");\n  }\n else   if (inner == null)   inner=windowInnerClassSerde.deserializer();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2704,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public void configure(final Map<String,?> configs,final boolean isKey){\n  final Long configWindowSize;\n  if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {\n    configWindowSize=Long.parseLong((String)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG));\n  }\n else {\n    configWindowSize=(Long)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG);\n  }\n  if (windowSize != null && configWindowSize != null) {\n    throw new IllegalArgumentException(\"Window size should not be set in both the time windowed deserializer constructor and the window.size.ms config\");\n  }\n else   if (windowSize == null && configWindowSize == null) {\n    throw new IllegalArgumentException(\"Window size needs to be set either through the time windowed deserializer \" + \"constructor or the window.size.ms config but not both\");\n  }\n else {\n    windowSize=windowSize == null ? configWindowSize : windowSize;\n  }\n  final String windowedInnerClassSerdeConfig=(String)configs.get(StreamsConfig.WINDOWED_INNER_CLASS_SERDE);\n  Serde<T> windowInnerClassSerde=null;\n  if (windowedInnerClassSerdeConfig != null) {\n    try {\n      windowInnerClassSerde=Utils.newInstance(windowedInnerClassSerdeConfig,Serde.class);\n    }\n catch (    final ClassNotFoundException e) {\n      throw new ConfigException(StreamsConfig.WINDOWED_INNER_CLASS_SERDE,windowedInnerClassSerdeConfig,\"Serde class \" + windowedInnerClassSerdeConfig + \" could not be found.\");\n    }\n  }\n  if (inner != null && windowedInnerClassSerdeConfig != null) {\n    if (!inner.getClass().getName().equals(windowInnerClassSerde.deserializer().getClass().getName())) {\n      throw new IllegalArgumentException(\"Inner class deserializer set using constructor \" + \"(\" + inner.getClass().getName() + \")\"+ \" is different from the one set in windowed.inner.class.serde config \"+ \"(\"+ windowInnerClassSerde.deserializer().getClass().getName()+ \").\");\n    }\n  }\n else   if (inner == null && windowedInnerClassSerdeConfig == null) {\n    throw new IllegalArgumentException(\"Inner class deserializer should be set either via  constructor \" + \"or via the windowed.inner.class.serde config\");\n  }\n else   if (inner == null)   inner=windowInnerClassSerde.deserializer();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {\n  configWindowSize=Long.parseLong((String)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG));\n}\n else {\n  configWindowSize=(Long)configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 60,
    "startColumnNumber" : 12,
    "endLineNumber" : 60,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}