{
  "id" : 271,
  "expression" : "Calendar",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/date/DateModifier.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 42,
      "startColumnNumber" : 6,
      "endLineNumber" : 42,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Calendar.AM_PM",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Calendar.AM_PM == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Calendar.AM_PM == dateField) {\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Calendar.AM_PM == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 46,
      "startColumnNumber" : 17,
      "endLineNumber" : 46,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 46,
        "startColumnNumber" : 17,
        "endLineNumber" : 46,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Calendar.HOUR_OF_DAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 53
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 54
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 58,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (modifyType) {\ncase TRUNCATE:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\nbreak;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 42,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Calendar.AM_PM == dateField) {\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 54
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 49,
      "startColumnNumber" : 17,
      "endLineNumber" : 49,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 49,
        "startColumnNumber" : 17,
        "endLineNumber" : 49,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Calendar.HOUR_OF_DAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 54
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 58,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (modifyType) {\ncase TRUNCATE:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\nbreak;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 42,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Calendar.AM_PM == dateField) {\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 55,
      "startColumnNumber" : 29,
      "endLineNumber" : 55,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 29,
        "endLineNumber" : 55,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Calendar.HOUR_OF_DAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 50
      },
      "nodeContext" : "calendar.get(Calendar.HOUR_OF_DAY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 50
      },
      "nodeContext" : "value=calendar.get(Calendar.HOUR_OF_DAY)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 51
      },
      "nodeContext" : "int value=calendar.get(Calendar.HOUR_OF_DAY);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 58,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (modifyType) {\ncase TRUNCATE:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\nbreak;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 42,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Calendar.AM_PM == dateField) {\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 51
      },
      "nodeContext" : "int value=calendar.get(Calendar.HOUR_OF_DAY);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 56,
      "startColumnNumber" : 17,
      "endLineNumber" : 56,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 56,
        "startColumnNumber" : 17,
        "endLineNumber" : 56,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Calendar.HOUR_OF_DAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 66
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 67
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 58,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (modifyType) {\ncase TRUNCATE:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\nbreak;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 42,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Calendar.AM_PM == dateField) {\n  boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:    calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n  break;\ncase CEILING:calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 67
      },
      "nodeContext" : "calendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 64,
      "startColumnNumber" : 35,
      "endLineNumber" : 64,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 64,
        "startColumnNumber" : 35,
        "endLineNumber" : 64,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Calendar.MILLISECOND",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 64,
        "startColumnNumber" : 30,
        "endLineNumber" : 64,
        "endColumnNumber" : 55
      },
      "nodeContext" : "i <= Calendar.MILLISECOND",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 64,
        "startColumnNumber" : 30,
        "endLineNumber" : 64,
        "endColumnNumber" : 55
      },
      "nodeContext" : "i <= Calendar.MILLISECOND",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 71,
      "startColumnNumber" : 7,
      "endLineNumber" : 71,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n  if (Calendar.DAY_OF_MONTH == i) {\n    continue;\n  }\n}\n else {\n  if (Calendar.DAY_OF_WEEK == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 64,
        "startColumnNumber" : 62,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 71,
      "startColumnNumber" : 46,
      "endLineNumber" : 71,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 71,
        "startColumnNumber" : 46,
        "endLineNumber" : 71,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Calendar.WEEK_OF_YEAR",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 71,
        "startColumnNumber" : 46,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Calendar.WEEK_OF_YEAR == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n  if (Calendar.DAY_OF_MONTH == i) {\n    continue;\n  }\n}\n else {\n  if (Calendar.DAY_OF_WEEK == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 64,
        "startColumnNumber" : 62,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 7,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 72,
      "startColumnNumber" : 8,
      "endLineNumber" : 72,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Calendar.DAY_OF_MONTH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Calendar.DAY_OF_MONTH == i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Calendar.DAY_OF_MONTH == i) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 71,
        "startColumnNumber" : 82,
        "endLineNumber" : 75,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (Calendar.DAY_OF_MONTH == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n  if (Calendar.DAY_OF_MONTH == i) {\n    continue;\n  }\n}\n else {\n  if (Calendar.DAY_OF_WEEK == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 64,
        "startColumnNumber" : 62,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Calendar.DAY_OF_MONTH == i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  }, {
    "nodeContext" : "Calendar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 77,
      "startColumnNumber" : 8,
      "endLineNumber" : 77,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Calendar.DAY_OF_WEEK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Calendar.DAY_OF_WEEK == i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Calendar.DAY_OF_WEEK == i) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 75,
        "startColumnNumber" : 10,
        "endLineNumber" : 80,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (Calendar.DAY_OF_WEEK == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n  if (Calendar.DAY_OF_MONTH == i) {\n    continue;\n  }\n}\n else {\n  if (Calendar.DAY_OF_WEEK == i) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 64,
        "startColumnNumber" : 62,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\n  if (ArrayUtil.contains(IGNORE_FIELDS,i)) {\n    continue;\n  }\n  if (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\n    if (Calendar.DAY_OF_MONTH == i) {\n      continue;\n    }\n  }\n else {\n    if (Calendar.DAY_OF_WEEK == i) {\n      continue;\n    }\n  }\n  modifyField(calendar,i,modifyType);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 40,
        "startColumnNumber" : 88,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 32,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 修改日期\n * @param calendar {@link Calendar}\n * @param dateField 日期字段，即保留到哪个日期字段\n * @param modifyType 修改类型，包括舍去、四舍五入、进一等\n * @return 修改后的{@link Calendar}\n */\npublic static Calendar modify(Calendar calendar,int dateField,ModifyType modifyType){\n  if (Calendar.AM_PM == dateField) {\n    boolean isAM=DateUtil.isAM(calendar);\nswitch (modifyType) {\ncase TRUNCATE:      calendar.set(Calendar.HOUR_OF_DAY,isAM ? 0 : 12);\n    break;\ncase CEILING:  calendar.set(Calendar.HOUR_OF_DAY,isAM ? 11 : 23);\nbreak;\ncase ROUND:int min=isAM ? 0 : 12;\nint max=isAM ? 11 : 23;\nint href=(max - min) / 2 + 1;\nint value=calendar.get(Calendar.HOUR_OF_DAY);\ncalendar.set(Calendar.HOUR_OF_DAY,(value < href) ? min : max);\nbreak;\n}\nreturn modify(calendar,dateField + 1,modifyType);\n}\nfor (int i=dateField + 1; i <= Calendar.MILLISECOND; i++) {\nif (ArrayUtil.contains(IGNORE_FIELDS,i)) {\ncontinue;\n}\nif (Calendar.WEEK_OF_MONTH == dateField || Calendar.WEEK_OF_YEAR == dateField) {\nif (Calendar.DAY_OF_MONTH == i) {\ncontinue;\n}\n}\n else {\nif (Calendar.DAY_OF_WEEK == i) {\ncontinue;\n}\n}\nmodifyField(calendar,i,modifyType);\n}\nreturn calendar;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Calendar.DAY_OF_WEEK == i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Calendar"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 42,
    "startColumnNumber" : 6,
    "endLineNumber" : 42,
    "endColumnNumber" : 14
  }, {
    "charLength" : 8,
    "startLineNumber" : 46,
    "startColumnNumber" : 17,
    "endLineNumber" : 46,
    "endColumnNumber" : 25
  }, {
    "charLength" : 8,
    "startLineNumber" : 49,
    "startColumnNumber" : 17,
    "endLineNumber" : 49,
    "endColumnNumber" : 25
  }, {
    "charLength" : 8,
    "startLineNumber" : 55,
    "startColumnNumber" : 29,
    "endLineNumber" : 55,
    "endColumnNumber" : 37
  }, {
    "charLength" : 8,
    "startLineNumber" : 56,
    "startColumnNumber" : 17,
    "endLineNumber" : 56,
    "endColumnNumber" : 25
  }, {
    "charLength" : 8,
    "startLineNumber" : 64,
    "startColumnNumber" : 35,
    "endLineNumber" : 64,
    "endColumnNumber" : 43
  }, {
    "charLength" : 8,
    "startLineNumber" : 71,
    "startColumnNumber" : 7,
    "endLineNumber" : 71,
    "endColumnNumber" : 15
  }, {
    "charLength" : 8,
    "startLineNumber" : 71,
    "startColumnNumber" : 46,
    "endLineNumber" : 71,
    "endColumnNumber" : 54
  }, {
    "charLength" : 8,
    "startLineNumber" : 72,
    "startColumnNumber" : 8,
    "endLineNumber" : 72,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 77,
    "startColumnNumber" : 8,
    "endLineNumber" : 77,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 4
  } ]
}