{
  "id" : 107,
  "expression" : "result.drop() == null",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/BlockIndexer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result.drop() == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 383,
      "startColumnNumber" : 37,
      "endLineNumber" : 383,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 383,
        "startColumnNumber" : 19,
        "endLineNumber" : 383,
        "endColumnNumber" : 58
      },
      "nodeContext" : "result == null || result.drop() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 383,
        "startColumnNumber" : 19,
        "endLineNumber" : 383,
        "endColumnNumber" : 95
      },
      "nodeContext" : "result == null || result.drop() == null || !scanOres.contains(result.drop())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 383,
        "startColumnNumber" : 19,
        "endLineNumber" : 383,
        "endColumnNumber" : 127
      },
      "nodeContext" : "result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 383,
        "startColumnNumber" : 16,
        "endLineNumber" : 383,
        "endColumnNumber" : 138
      },
      "nodeContext" : "if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 381,
        "startColumnNumber" : 127,
        "endLineNumber" : 386,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Tile result=world.tile(x,y);\n  if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)   continue;\n  itemSet.add(result.drop());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 381,
        "startColumnNumber" : 12,
        "endLineNumber" : 386,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int y=Math.max(0,rounded.y - quadrantSize / 2); y < rounded.y + quadrantSize / 2 && y < world.height(); y++) {\n  Tile result=world.tile(x,y);\n  if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)   continue;\n  itemSet.add(result.drop());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 380,
        "startColumnNumber" : 122,
        "endLineNumber" : 387,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int y=Math.max(0,rounded.y - quadrantSize / 2); y < rounded.y + quadrantSize / 2 && y < world.height(); y++) {\n    Tile result=world.tile(x,y);\n    if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)     continue;\n    itemSet.add(result.drop());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 380,
        "startColumnNumber" : 8,
        "endLineNumber" : 387,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int x=Math.max(0,rounded.x - quadrantSize / 2); x < rounded.x + quadrantSize / 2 && x < world.width(); x++) {\n  for (int y=Math.max(0,rounded.y - quadrantSize / 2); y < rounded.y + quadrantSize / 2 && y < world.height(); y++) {\n    Tile result=world.tile(x,y);\n    if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)     continue;\n    itemSet.add(result.drop());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1948,
        "startLineNumber" : 347,
        "startColumnNumber" : 35,
        "endLineNumber" : 400,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tile.block().flags.size() > 0 && tile.team() != Team.derelict && tile.isCenter()) {\n    TileArray[] map=getFlagged(tile.team());\n    for (    BlockFlag flag : tile.block().flags) {\n      TileArray arr=map[flag.ordinal()];\n      arr.add(tile);\n      map[flag.ordinal()]=arr;\n    }\n    if (tile.block().flags.contains(BlockFlag.unitModifier)) {\n      updateCap(tile.team());\n    }\n    typeMap.put(tile.pos(),new TileIndex(tile.block().flags,tile.team()));\n  }\n  if (!activeTeams.contains(tile.team())) {\n    activeTeams.add(tile.team());\n  }\n  if (ores == null)   return;\n  int quadrantX=tile.x / quadrantSize;\n  int quadrantY=tile.y / quadrantSize;\n  itemSet.clear();\n  Tile rounded=world.rawTile(Mathf.clamp(quadrantX * quadrantSize + quadrantSize / 2,0,world.width() - 1),Mathf.clamp(quadrantY * quadrantSize + quadrantSize / 2,0,world.height() - 1));\n  for (int x=Math.max(0,rounded.x - quadrantSize / 2); x < rounded.x + quadrantSize / 2 && x < world.width(); x++) {\n    for (int y=Math.max(0,rounded.y - quadrantSize / 2); y < rounded.y + quadrantSize / 2 && y < world.height(); y++) {\n      Tile result=world.tile(x,y);\n      if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)       continue;\n      itemSet.add(result.drop());\n    }\n  }\n  for (  Item item : scanOres) {\n    TileArray set=ores.get(item);\n    if (!itemSet.contains(item)) {\n      set.remove(rounded);\n    }\n else {\n      set.add(rounded);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1979,
        "startLineNumber" : 347,
        "startColumnNumber" : 4,
        "endLineNumber" : 400,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void process(Tile tile){\n  if (tile.block().flags.size() > 0 && tile.team() != Team.derelict && tile.isCenter()) {\n    TileArray[] map=getFlagged(tile.team());\n    for (    BlockFlag flag : tile.block().flags) {\n      TileArray arr=map[flag.ordinal()];\n      arr.add(tile);\n      map[flag.ordinal()]=arr;\n    }\n    if (tile.block().flags.contains(BlockFlag.unitModifier)) {\n      updateCap(tile.team());\n    }\n    typeMap.put(tile.pos(),new TileIndex(tile.block().flags,tile.team()));\n  }\n  if (!activeTeams.contains(tile.team())) {\n    activeTeams.add(tile.team());\n  }\n  if (ores == null)   return;\n  int quadrantX=tile.x / quadrantSize;\n  int quadrantY=tile.y / quadrantSize;\n  itemSet.clear();\n  Tile rounded=world.rawTile(Mathf.clamp(quadrantX * quadrantSize + quadrantSize / 2,0,world.width() - 1),Mathf.clamp(quadrantY * quadrantSize + quadrantSize / 2,0,world.height() - 1));\n  for (int x=Math.max(0,rounded.x - quadrantSize / 2); x < rounded.x + quadrantSize / 2 && x < world.width(); x++) {\n    for (int y=Math.max(0,rounded.y - quadrantSize / 2); y < rounded.y + quadrantSize / 2 && y < world.height(); y++) {\n      Tile result=world.tile(x,y);\n      if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air)       continue;\n      itemSet.add(result.drop());\n    }\n  }\n  for (  Item item : scanOres) {\n    TileArray set=ores.get(item);\n    if (!itemSet.contains(item)) {\n      set.remove(rounded);\n    }\n else {\n      set.add(rounded);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 343,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 383,
        "startColumnNumber" : 16,
        "endLineNumber" : 383,
        "endColumnNumber" : 138
      },
      "nodeContext" : "if (result == null || result.drop() == null || !scanOres.contains(result.drop()) || result.block() != Blocks.air) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 383,
    "startColumnNumber" : 37,
    "endLineNumber" : 383,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}