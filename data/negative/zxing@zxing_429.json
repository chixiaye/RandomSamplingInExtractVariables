{
  "id" : 429,
  "expression" : "sourceFile.getName()",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/javase/src/com/google/zxing/HtmlAssetTranslator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sourceFile.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 128,
      "startColumnNumber" : 44,
      "endLineNumber" : 128,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 65
      },
      "nodeContext" : "new File(targetHtmlDir,sourceFile.getName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 128,
        "startColumnNumber" : 9,
        "endLineNumber" : 128,
        "endColumnNumber" : 65
      },
      "nodeContext" : "destFile=new File(targetHtmlDir,sourceFile.getName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 66
      },
      "nodeContext" : "File destFile=new File(targetHtmlDir,sourceFile.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2078,
        "startLineNumber" : 126,
        "startColumnNumber" : 92,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File destFile=new File(targetHtmlDir,sourceFile.getName());\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  Document document;\n  try {\n    DocumentBuilder builder=factory.newDocumentBuilder();\n    document=builder.parse(sourceFile);\n  }\n catch (  ParserConfigurationException pce) {\n    throw new IllegalStateException(pce);\n  }\ncatch (  SAXException sae) {\n    throw new IOException(sae);\n  }\n  Element rootElement=document.getDocumentElement();\n  rootElement.normalize();\n  Queue<Node> nodes=new LinkedList<Node>();\n  nodes.add(rootElement);\n  while (!nodes.isEmpty()) {\n    Node node=nodes.poll();\n    if (shouldTranslate(node)) {\n      NodeList children=node.getChildNodes();\n      for (int i=0; i < children.getLength(); i++) {\n        nodes.add(children.item(i));\n      }\n    }\n    if (node.getNodeType() == Node.TEXT_NODE) {\n      String text=node.getTextContent();\n      if (text.trim().length() > 0) {\n        text=StringsResourceTranslator.translateString(text,language);\n        node.setTextContent(' ' + text + ' ');\n      }\n    }\n  }\n  Node translateText=document.createTextNode(translationTextTranslated);\n  Node paragraph=document.createElement(\"p\");\n  paragraph.appendChild(translateText);\n  Node body=rootElement.getElementsByTagName(\"body\").item(0);\n  body.appendChild(paragraph);\n  DOMImplementationRegistry registry;\n  try {\n    registry=DOMImplementationRegistry.newInstance();\n  }\n catch (  ClassNotFoundException cnfe) {\n    throw new IllegalStateException(cnfe);\n  }\ncatch (  InstantiationException ie) {\n    throw new IllegalStateException(ie);\n  }\ncatch (  IllegalAccessException iae) {\n    throw new IllegalStateException(iae);\n  }\n  DOMImplementationLS impl=(DOMImplementationLS)registry.getDOMImplementation(\"LS\");\n  LSSerializer writer=impl.createLSSerializer();\n  writer.writeToURI(document,destFile.toURI().toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2342,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void translateOneFile(String language,File targetHtmlDir,File sourceFile,String translationTextTranslated) throws IOException {\n  File destFile=new File(targetHtmlDir,sourceFile.getName());\n  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();\n  Document document;\n  try {\n    DocumentBuilder builder=factory.newDocumentBuilder();\n    document=builder.parse(sourceFile);\n  }\n catch (  ParserConfigurationException pce) {\n    throw new IllegalStateException(pce);\n  }\ncatch (  SAXException sae) {\n    throw new IOException(sae);\n  }\n  Element rootElement=document.getDocumentElement();\n  rootElement.normalize();\n  Queue<Node> nodes=new LinkedList<Node>();\n  nodes.add(rootElement);\n  while (!nodes.isEmpty()) {\n    Node node=nodes.poll();\n    if (shouldTranslate(node)) {\n      NodeList children=node.getChildNodes();\n      for (int i=0; i < children.getLength(); i++) {\n        nodes.add(children.item(i));\n      }\n    }\n    if (node.getNodeType() == Node.TEXT_NODE) {\n      String text=node.getTextContent();\n      if (text.trim().length() > 0) {\n        text=StringsResourceTranslator.translateString(text,language);\n        node.setTextContent(' ' + text + ' ');\n      }\n    }\n  }\n  Node translateText=document.createTextNode(translationTextTranslated);\n  Node paragraph=document.createElement(\"p\");\n  paragraph.appendChild(translateText);\n  Node body=rootElement.getElementsByTagName(\"body\").item(0);\n  body.appendChild(paragraph);\n  DOMImplementationRegistry registry;\n  try {\n    registry=DOMImplementationRegistry.newInstance();\n  }\n catch (  ClassNotFoundException cnfe) {\n    throw new IllegalStateException(cnfe);\n  }\ncatch (  InstantiationException ie) {\n    throw new IllegalStateException(ie);\n  }\ncatch (  IllegalAccessException iae) {\n    throw new IllegalStateException(iae);\n  }\n  DOMImplementationLS impl=(DOMImplementationLS)registry.getDOMImplementation(\"LS\");\n  LSSerializer writer=impl.createLSSerializer();\n  writer.writeToURI(document,destFile.toURI().toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 326,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 66
      },
      "nodeContext" : "File destFile=new File(targetHtmlDir,sourceFile.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 128,
    "startColumnNumber" : 44,
    "endLineNumber" : 128,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}