{
  "id" : 100,
  "expression" : "bzlmodToolchains",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "cf35da2613efdefd97c6267d80054b85a38af462",
  "filePath" : "src/main/java/com/google/devtools/build/lib/skyframe/RegisteredToolchainsFunction.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bzlmodToolchains",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 75,
      "startColumnNumber" : 8,
      "endLineNumber" : 75,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 32
      },
      "nodeContext" : "bzlmodToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bzlmodToolchains == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 32
      },
      "nodeContext" : "bzlmodToolchains == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.skyframe.ImmutableList<java.lang.String>"
  }, {
    "nodeContext" : "bzlmodToolchains",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 78,
      "startColumnNumber" : 32,
      "endLineNumber" : 78,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "targetPatternBuilder.addAll(bzlmodToolchains)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 50
      },
      "nodeContext" : "targetPatternBuilder.addAll(bzlmodToolchains);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public SkyValue compute(SkyKey skyKey,Environment env) throws SkyFunctionException, InterruptedException {\n  BuildConfigurationValue buildConfigurationValue=(BuildConfigurationValue)env.getValue(((RegisteredToolchainsValue.Key)skyKey).getConfigurationKey());\n  if (env.valuesMissing()) {\n    return null;\n  }\n  BuildConfiguration configuration=buildConfigurationValue.getConfiguration();\n  ImmutableList.Builder<String> targetPatternBuilder=new ImmutableList.Builder<>();\n  PlatformConfiguration platformConfiguration=configuration.getFragment(PlatformConfiguration.class);\n  targetPatternBuilder.addAll(platformConfiguration.getExtraToolchains());\n  ImmutableList<String> bzlmodToolchains=getBzlmodToolchains(env);\n  if (bzlmodToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(bzlmodToolchains);\n  ImmutableList<String> workspaceToolchains=getWorkspaceToolchains(env);\n  if (workspaceToolchains == null) {\n    return null;\n  }\n  targetPatternBuilder.addAll(workspaceToolchains);\n  ImmutableList<String> targetPatterns=targetPatternBuilder.build();\n  ImmutableList<Label> toolchainLabels;\n  try {\n    toolchainLabels=TargetPatternUtil.expandTargetPatterns(env,targetPatterns,FilteringPolicies.ruleType(\"toolchain\",true));\n    if (env.valuesMissing()) {\n      return null;\n    }\n  }\n catch (  TargetPatternUtil.InvalidTargetPatternException e) {\n    throw new RegisteredToolchainsFunctionException(new InvalidToolchainLabelException(e),Transience.PERSISTENT);\n  }\n  ImmutableList<DeclaredToolchainInfo> registeredToolchains=configureRegisteredToolchains(env,configuration,toolchainLabels);\n  if (env.valuesMissing()) {\n    return null;\n  }\n  return RegisteredToolchainsValue.create(registeredToolchains);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 50
      },
      "nodeContext" : "targetPatternBuilder.addAll(bzlmodToolchains);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.skyframe.ImmutableList<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 75,
    "startColumnNumber" : 8,
    "endLineNumber" : 75,
    "endColumnNumber" : 24
  }, {
    "charLength" : 16,
    "startLineNumber" : 78,
    "startColumnNumber" : 32,
    "endLineNumber" : 78,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}