{
  "id" : 376,
  "expression" : "shootCone",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/defense/turrets/PointDefenseTurret.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "shootCone",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 84,
      "startColumnNumber" : 49,
      "endLineNumber" : 84,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 84,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Angles.within(rotation,dest,shootCone)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 84,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Angles.within(rotation,dest,shootCone) && reload >= reloadTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Angles.within(rotation,dest,shootCone) && reload >= reloadTime) {\n  if (target.damage() > bulletDamage) {\n    target.damage(target.damage() - bulletDamage);\n  }\n else {\n    target.remove();\n  }\n  Tmp.v1.trns(rotation,shootLength);\n  beamEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color,new Vec2().set(target));\n  shootEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color);\n  hitEffect.at(target.x,target.y,color);\n  shootSound.at(x + Tmp.v1.x,y + Tmp.v1.y,Mathf.random(0.9f,1.1f));\n  reload=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 125,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 78,
        "startColumnNumber" : 134,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float dest=angleTo(target);\n  rotation=Angles.moveToward(rotation,dest,rotateSpeed * edelta());\n  reload+=edelta();\n  if (Angles.within(rotation,dest,shootCone) && reload >= reloadTime) {\n    if (target.damage() > bulletDamage) {\n      target.damage(target.damage() - bulletDamage);\n    }\n else {\n      target.remove();\n    }\n    Tmp.v1.trns(rotation,shootLength);\n    beamEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color,new Vec2().set(target));\n    shootEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color);\n    hitEffect.at(target.x,target.y,color);\n    shootSound.at(x + Tmp.v1.x,y + Tmp.v1.y,Mathf.random(0.9f,1.1f));\n    reload=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (target != null && target.within(this,range) && target.team != team && target.type() != null && target.type().hittable) {\n  float dest=angleTo(target);\n  rotation=Angles.moveToward(rotation,dest,rotateSpeed * edelta());\n  reload+=edelta();\n  if (Angles.within(rotation,dest,shootCone) && reload >= reloadTime) {\n    if (target.damage() > bulletDamage) {\n      target.damage(target.damage() - bulletDamage);\n    }\n else {\n      target.remove();\n    }\n    Tmp.v1.trns(rotation,shootLength);\n    beamEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color,new Vec2().set(target));\n    shootEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color);\n    hitEffect.at(target.x,target.y,color);\n    shootSound.at(x + Tmp.v1.x,y + Tmp.v1.y,Mathf.random(0.9f,1.1f));\n    reload=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1594,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (timer(timerTarget,retargetTime)) {\n    target=Groups.bullet.intersect(x - range,y - range,range * 2,range * 2).min(b -> b.team != team && b.type().hittable,b -> b.dst2(this));\n  }\n  if (target != null && !target.isAdded()) {\n    target=null;\n  }\n  if (acceptCoolant) {\n    updateCooling();\n  }\n  if (target != null && target.within(this,range) && target.team != team && target.type() != null && target.type().hittable) {\n    float dest=angleTo(target);\n    rotation=Angles.moveToward(rotation,dest,rotateSpeed * edelta());\n    reload+=edelta();\n    if (Angles.within(rotation,dest,shootCone) && reload >= reloadTime) {\n      if (target.damage() > bulletDamage) {\n        target.damage(target.damage() - bulletDamage);\n      }\n else {\n        target.remove();\n      }\n      Tmp.v1.trns(rotation,shootLength);\n      beamEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color,new Vec2().set(target));\n      shootEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color);\n      hitEffect.at(target.x,target.y,color);\n      shootSound.at(x + Tmp.v1.x,y + Tmp.v1.y,Mathf.random(0.9f,1.1f));\n      reload=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  if (timer(timerTarget,retargetTime)) {\n    target=Groups.bullet.intersect(x - range,y - range,range * 2,range * 2).min(b -> b.team != team && b.type().hittable,b -> b.dst2(this));\n  }\n  if (target != null && !target.isAdded()) {\n    target=null;\n  }\n  if (acceptCoolant) {\n    updateCooling();\n  }\n  if (target != null && target.within(this,range) && target.team != team && target.type() != null && target.type().hittable) {\n    float dest=angleTo(target);\n    rotation=Angles.moveToward(rotation,dest,rotateSpeed * edelta());\n    reload+=edelta();\n    if (Angles.within(rotation,dest,shootCone) && reload >= reloadTime) {\n      if (target.damage() > bulletDamage) {\n        target.damage(target.damage() - bulletDamage);\n      }\n else {\n        target.remove();\n      }\n      Tmp.v1.trns(rotation,shootLength);\n      beamEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color,new Vec2().set(target));\n      shootEffect.at(x + Tmp.v1.x,y + Tmp.v1.y,rotation,color);\n      hitEffect.at(target.x,target.y,color);\n      shootSound.at(x + Tmp.v1.x,y + Tmp.v1.y,Mathf.random(0.9f,1.1f));\n      reload=0;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 84,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Angles.within(rotation,dest,shootCone) && reload >= reloadTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 84,
    "startColumnNumber" : 49,
    "endLineNumber" : 84,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}