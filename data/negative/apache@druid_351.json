{
  "id" : 351,
  "expression" : "this",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/test/java/org/apache/druid/indexing/overlord/config/RemoteTaskRunnerConfigTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 815,
      "startColumnNumber" : 4,
      "endLineNumber" : 815,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 815,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 26
      },
      "nodeContext" : "this.expectedException",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 815,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.expectedException.expect(ProvisionException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 815,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.expectedException.expect(ProvisionException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 810,
        "startColumnNumber" : 2,
        "endLineNumber" : 827,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Injector injector=GuiceInjectors.makeStartupInjectorWithModules(ImmutableList.of(binder -> IndexingServiceModuleHelper.configureTaskRunnerConfigs(binder)));\n  this.expectedException.expect(ProvisionException.class);\n  this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n  Properties props=new Properties();\n  props.put(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX + \".maxZnodeBytes\",\"9KiB\");\n  JsonConfigProvider<RemoteTaskRunnerConfig> configProvider=JsonConfigProvider.of(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX,RemoteTaskRunnerConfig.class);\n  configProvider.inject(props,injector.getBinding(JsonConfigurator.class).getProvider().get());\n  configProvider.get().get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 808,
        "startColumnNumber" : 2,
        "endLineNumber" : 827,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMaxZnodeBytesLowerThanExpected(){\n  final Injector injector=GuiceInjectors.makeStartupInjectorWithModules(ImmutableList.of(binder -> IndexingServiceModuleHelper.configureTaskRunnerConfigs(binder)));\n  this.expectedException.expect(ProvisionException.class);\n  this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n  Properties props=new Properties();\n  props.put(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX + \".maxZnodeBytes\",\"9KiB\");\n  JsonConfigProvider<RemoteTaskRunnerConfig> configProvider=JsonConfigProvider.of(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX,RemoteTaskRunnerConfig.class);\n  configProvider.inject(props,injector.getBinding(JsonConfigurator.class).getProvider().get());\n  configProvider.get().get();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 815,
        "startColumnNumber" : 4,
        "endLineNumber" : 815,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.expectedException.expect(ProvisionException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.overlord.config.RemoteTaskRunnerConfigTest"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 816,
      "startColumnNumber" : 4,
      "endLineNumber" : 816,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 816,
        "startColumnNumber" : 4,
        "endLineNumber" : 816,
        "endColumnNumber" : 26
      },
      "nodeContext" : "this.expectedException",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 816,
        "startColumnNumber" : 4,
        "endLineNumber" : 816,
        "endColumnNumber" : 95
      },
      "nodeContext" : "this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 816,
        "startColumnNumber" : 4,
        "endLineNumber" : 816,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 810,
        "startColumnNumber" : 2,
        "endLineNumber" : 827,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Injector injector=GuiceInjectors.makeStartupInjectorWithModules(ImmutableList.of(binder -> IndexingServiceModuleHelper.configureTaskRunnerConfigs(binder)));\n  this.expectedException.expect(ProvisionException.class);\n  this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n  Properties props=new Properties();\n  props.put(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX + \".maxZnodeBytes\",\"9KiB\");\n  JsonConfigProvider<RemoteTaskRunnerConfig> configProvider=JsonConfigProvider.of(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX,RemoteTaskRunnerConfig.class);\n  configProvider.inject(props,injector.getBinding(JsonConfigurator.class).getProvider().get());\n  configProvider.get().get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 808,
        "startColumnNumber" : 2,
        "endLineNumber" : 827,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMaxZnodeBytesLowerThanExpected(){\n  final Injector injector=GuiceInjectors.makeStartupInjectorWithModules(ImmutableList.of(binder -> IndexingServiceModuleHelper.configureTaskRunnerConfigs(binder)));\n  this.expectedException.expect(ProvisionException.class);\n  this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n  Properties props=new Properties();\n  props.put(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX + \".maxZnodeBytes\",\"9KiB\");\n  JsonConfigProvider<RemoteTaskRunnerConfig> configProvider=JsonConfigProvider.of(IndexingServiceModuleHelper.INDEXER_RUNNER_PROPERTY_PREFIX,RemoteTaskRunnerConfig.class);\n  configProvider.inject(props,injector.getBinding(JsonConfigurator.class).getProvider().get());\n  configProvider.get().get();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 816,
        "startColumnNumber" : 4,
        "endLineNumber" : 816,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.expectedException.expectMessage(\"maxZnodeBytes must be in the range of [10KiB, 2GiB)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.overlord.config.RemoteTaskRunnerConfigTest"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 815,
    "startColumnNumber" : 4,
    "endLineNumber" : 815,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 816,
    "startColumnNumber" : 4,
    "endLineNumber" : 816,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}