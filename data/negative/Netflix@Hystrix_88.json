{
  "id" : 88,
  "expression" : "false",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/utils/ajc/AjcUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 36,
      "endLineNumber" : 50,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 28,
        "endLineNumber" : 50,
        "endColumnNumber" : 41
      },
      "nodeContext" : "match=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 50,
        "startColumnNumber" : 28,
        "endLineNumber" : 50,
        "endColumnNumber" : 42
      },
      "nodeContext" : "match=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 49,
        "startColumnNumber" : 47,
        "endLineNumber" : 51,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  match=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (pType != expected) {\n  match=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 47,
        "startColumnNumber" : 58,
        "endLineNumber" : 52,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Class<?> expected=pTypes[index++];\n  if (pType != expected) {\n    match=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 47,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Class<?> pType : origParamTypes) {\n  Class<?> expected=pTypes[index++];\n  if (pType != expected) {\n    match=false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 43,
        "startColumnNumber" : 64,
        "endLineNumber" : 56,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  boolean match=true;\n  Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n  int index=0;\n  for (  Class<?> pType : origParamTypes) {\n    Class<?> expected=pTypes[index++];\n    if (pType != expected) {\n      match=false;\n    }\n  }\n  if (match) {\n    return method;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (pTypes.length == parameterTypes.length - 2) {\n  boolean match=true;\n  Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n  int index=0;\n  for (  Class<?> pType : origParamTypes) {\n    Class<?> expected=pTypes[index++];\n    if (pType != expected) {\n      match=false;\n    }\n  }\n  if (match) {\n    return method;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 38,
        "startColumnNumber" : 108,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  if (pTypes.length == 0 && parameterTypes.length == 0) {\n    return method;\n  }\n  if (pTypes.length == parameterTypes.length - 2) {\n    boolean match=true;\n    Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n    int index=0;\n    for (    Class<?> pType : origParamTypes) {\n      Class<?> expected=pTypes[index++];\n      if (pType != expected) {\n        match=false;\n      }\n    }\n    if (match) {\n      return method;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (method.getName().startsWith(methodName + adviceType.getPostfix()) && Modifier.isFinal(method.getModifiers()) && Modifier.isStatic(method.getModifiers())) {\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  if (pTypes.length == 0 && parameterTypes.length == 0) {\n    return method;\n  }\n  if (pTypes.length == parameterTypes.length - 2) {\n    boolean match=true;\n    Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n    int index=0;\n    for (    Class<?> pType : origParamTypes) {\n      Class<?> expected=pTypes[index++];\n      if (pType != expected) {\n        match=false;\n      }\n    }\n    if (match) {\n      return method;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 36,
        "startColumnNumber" : 58,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (method.getName().startsWith(methodName + adviceType.getPostfix()) && Modifier.isFinal(method.getModifiers()) && Modifier.isStatic(method.getModifiers())) {\n    Class<?>[] parameterTypes=method.getParameterTypes();\n    if (pTypes.length == 0 && parameterTypes.length == 0) {\n      return method;\n    }\n    if (pTypes.length == parameterTypes.length - 2) {\n      boolean match=true;\n      Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n      int index=0;\n      for (      Class<?> pType : origParamTypes) {\n        Class<?> expected=pTypes[index++];\n        if (pType != expected) {\n          match=false;\n        }\n      }\n      if (match) {\n        return method;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Method method : target.getDeclaredMethods()) {\n  if (method.getName().startsWith(methodName + adviceType.getPostfix()) && Modifier.isFinal(method.getModifiers()) && Modifier.isStatic(method.getModifiers())) {\n    Class<?>[] parameterTypes=method.getParameterTypes();\n    if (pTypes.length == 0 && parameterTypes.length == 0) {\n      return method;\n    }\n    if (pTypes.length == parameterTypes.length - 2) {\n      boolean match=true;\n      Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n      int index=0;\n      for (      Class<?> pType : origParamTypes) {\n        Class<?> expected=pTypes[index++];\n        if (pType != expected) {\n          match=false;\n        }\n      }\n      if (match) {\n        return method;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 35,
        "startColumnNumber" : 141,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Method method : target.getDeclaredMethods()) {\n    if (method.getName().startsWith(methodName + adviceType.getPostfix()) && Modifier.isFinal(method.getModifiers()) && Modifier.isStatic(method.getModifiers())) {\n      Class<?>[] parameterTypes=method.getParameterTypes();\n      if (pTypes.length == 0 && parameterTypes.length == 0) {\n        return method;\n      }\n      if (pTypes.length == parameterTypes.length - 2) {\n        boolean match=true;\n        Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n        int index=0;\n        for (        Class<?> pType : origParamTypes) {\n          Class<?> expected=pTypes[index++];\n          if (pType != expected) {\n            match=false;\n          }\n        }\n        if (match) {\n          return method;\n        }\n      }\n    }\n  }\n  if (target.getSuperclass() != null) {\n    return getAjcMethod(target.getSuperclass(),methodName,adviceType,pTypes);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method getAjcMethod(final Class<?> target,final String methodName,final AdviceType adviceType,final Class<?>... pTypes){\n  for (  Method method : target.getDeclaredMethods()) {\n    if (method.getName().startsWith(methodName + adviceType.getPostfix()) && Modifier.isFinal(method.getModifiers()) && Modifier.isStatic(method.getModifiers())) {\n      Class<?>[] parameterTypes=method.getParameterTypes();\n      if (pTypes.length == 0 && parameterTypes.length == 0) {\n        return method;\n      }\n      if (pTypes.length == parameterTypes.length - 2) {\n        boolean match=true;\n        Class<?>[] origParamTypes=removeAspectjArgs(parameterTypes);\n        int index=0;\n        for (        Class<?> pType : origParamTypes) {\n          Class<?> expected=pTypes[index++];\n          if (pType != expected) {\n            match=false;\n          }\n        }\n        if (match) {\n          return method;\n        }\n      }\n    }\n  }\n  if (target.getSuperclass() != null) {\n    return getAjcMethod(target.getSuperclass(),methodName,adviceType,pTypes);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 50,
        "startColumnNumber" : 28,
        "endLineNumber" : 50,
        "endColumnNumber" : 42
      },
      "nodeContext" : "match=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 36,
    "endLineNumber" : 50,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}