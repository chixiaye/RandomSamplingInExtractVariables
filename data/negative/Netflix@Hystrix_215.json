{
  "id" : 215,
  "expression" : "first",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-rx-netty-metrics-stream/src/test/java/com/netflix/hystrix/contrib/rxnetty/metricsstream/HystrixMetricsStreamHandlerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "first",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 105,
      "startColumnNumber" : 43,
      "endLineNumber" : 105,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 105,
        "startColumnNumber" : 43,
        "endLineNumber" : 105,
        "endColumnNumber" : 75
      },
      "nodeContext" : "first instanceof ServerSentEvent",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 92,
        "startColumnNumber" : 70,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  replayAll();\n  Observable<ServerSentEvent> objectObservable=client.submit(HttpClientRequest.createGet(DEFAULT_HYSTRIX_PREFIX)).flatMap(new Func1<HttpClientResponse<ServerSentEvent>,Observable<? extends ServerSentEvent>>(){\n    @Override public Observable<? extends ServerSentEvent> call(    HttpClientResponse<ServerSentEvent> httpClientResponse){\n      return httpClientResponse.getContent().take(1);\n    }\n  }\n);\n  Object first=Observable.amb(objectObservable,Observable.timer(5000,TimeUnit.MILLISECONDS)).toBlocking().first();\n  assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n  ServerSentEvent sse=(ServerSentEvent)first;\n  JsonNode jsonNode=mapper.readTree(sse.contentAsString());\n  assertEquals(\"Expected hystrix key name\",HystrixCommandMetricsSamples.SAMPLE_1.getCommandKey().name(),jsonNode.get(\"name\").asText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMetricsAreDeliveredAsSseStream() throws Exception {\n  replayAll();\n  Observable<ServerSentEvent> objectObservable=client.submit(HttpClientRequest.createGet(DEFAULT_HYSTRIX_PREFIX)).flatMap(new Func1<HttpClientResponse<ServerSentEvent>,Observable<? extends ServerSentEvent>>(){\n    @Override public Observable<? extends ServerSentEvent> call(    HttpClientResponse<ServerSentEvent> httpClientResponse){\n      return httpClientResponse.getContent().take(1);\n    }\n  }\n);\n  Object first=Observable.amb(objectObservable,Observable.timer(5000,TimeUnit.MILLISECONDS)).toBlocking().first();\n  assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n  ServerSentEvent sse=(ServerSentEvent)first;\n  JsonNode jsonNode=mapper.readTree(sse.contentAsString());\n  assertEquals(\"Expected hystrix key name\",HystrixCommandMetricsSamples.SAMPLE_1.getCommandKey().name(),jsonNode.get(\"name\").asText());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "first",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 48,
      "endLineNumber" : 106,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 106,
        "startColumnNumber" : 30,
        "endLineNumber" : 106,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(ServerSentEvent)first",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 53
      },
      "nodeContext" : "sse=(ServerSentEvent)first",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ServerSentEvent sse=(ServerSentEvent)first;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 92,
        "startColumnNumber" : 70,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  replayAll();\n  Observable<ServerSentEvent> objectObservable=client.submit(HttpClientRequest.createGet(DEFAULT_HYSTRIX_PREFIX)).flatMap(new Func1<HttpClientResponse<ServerSentEvent>,Observable<? extends ServerSentEvent>>(){\n    @Override public Observable<? extends ServerSentEvent> call(    HttpClientResponse<ServerSentEvent> httpClientResponse){\n      return httpClientResponse.getContent().take(1);\n    }\n  }\n);\n  Object first=Observable.amb(objectObservable,Observable.timer(5000,TimeUnit.MILLISECONDS)).toBlocking().first();\n  assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n  ServerSentEvent sse=(ServerSentEvent)first;\n  JsonNode jsonNode=mapper.readTree(sse.contentAsString());\n  assertEquals(\"Expected hystrix key name\",HystrixCommandMetricsSamples.SAMPLE_1.getCommandKey().name(),jsonNode.get(\"name\").asText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMetricsAreDeliveredAsSseStream() throws Exception {\n  replayAll();\n  Observable<ServerSentEvent> objectObservable=client.submit(HttpClientRequest.createGet(DEFAULT_HYSTRIX_PREFIX)).flatMap(new Func1<HttpClientResponse<ServerSentEvent>,Observable<? extends ServerSentEvent>>(){\n    @Override public Observable<? extends ServerSentEvent> call(    HttpClientResponse<ServerSentEvent> httpClientResponse){\n      return httpClientResponse.getContent().take(1);\n    }\n  }\n);\n  Object first=Observable.amb(objectObservable,Observable.timer(5000,TimeUnit.MILLISECONDS)).toBlocking().first();\n  assertTrue(\"Expected SSE message\",first instanceof ServerSentEvent);\n  ServerSentEvent sse=(ServerSentEvent)first;\n  JsonNode jsonNode=mapper.readTree(sse.contentAsString());\n  assertEquals(\"Expected hystrix key name\",HystrixCommandMetricsSamples.SAMPLE_1.getCommandKey().name(),jsonNode.get(\"name\").asText());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ServerSentEvent sse=(ServerSentEvent)first;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 105,
    "startColumnNumber" : 43,
    "endLineNumber" : 105,
    "endColumnNumber" : 48
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 48,
    "endLineNumber" : 106,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}