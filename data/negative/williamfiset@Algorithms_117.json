{
  "id" : 117,
  "expression" : "a < 0",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/GCD.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a < 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 15,
      "startColumnNumber" : 21,
      "endLineNumber" : 15,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 15,
        "startColumnNumber" : 21,
        "endLineNumber" : 15,
        "endColumnNumber" : 35
      },
      "nodeContext" : "a < 0 ? -a : a",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 15,
        "startColumnNumber" : 20,
        "endLineNumber" : 15,
        "endColumnNumber" : 36
      },
      "nodeContext" : "(a < 0 ? -a : a)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 15,
        "startColumnNumber" : 11,
        "endLineNumber" : 15,
        "endColumnNumber" : 52
      },
      "nodeContext" : "b == 0 ? (a < 0 ? -a : a) : gcd(b,a % b)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 53
      },
      "nodeContext" : "return b == 0 ? (a < 0 ? -a : a) : gcd(b,a % b);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 14,
        "startColumnNumber" : 41,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return b == 0 ? (a < 0 ? -a : a) : gcd(b,a % b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static long gcd(long a,long b){\n  return b == 0 ? (a < 0 ? -a : a) : gcd(b,a % b);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 53
      },
      "nodeContext" : "return b == 0 ? (a < 0 ? -a : a) : gcd(b,a % b);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 15,
    "startColumnNumber" : 21,
    "endLineNumber" : 15,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}