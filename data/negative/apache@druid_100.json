{
  "id" : 100,
  "expression" : "S3DataSegmentPuller.KEY",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3DataSegmentArchiverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "S3DataSegmentPuller.KEY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 113,
      "startColumnNumber" : 12,
      "endLineNumber" : 113,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 108,
        "startColumnNumber" : 22,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 107,
        "startColumnNumber" : 40,
        "endLineNumber" : 115,
        "endColumnNumber" : 10
      },
      "nodeContext" : "SOURCE_SEGMENT.withLoadSpec(ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 107,
        "startColumnNumber" : 22,
        "endLineNumber" : 115,
        "endColumnNumber" : 10
      },
      "nodeContext" : "archivedSegment=SOURCE_SEGMENT.withLoadSpec(ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final DataSegment archivedSegment=SOURCE_SEGMENT.withLoadSpec(ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DataSegment archivedSegment=SOURCE_SEGMENT.withLoadSpec(ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\"));\n  final S3DataSegmentArchiver archiver=new S3DataSegmentArchiver(MAPPER,S3_SERVICE,ARCHIVER_CONFIG,PUSHER_CONFIG){\n    @Override public DataSegment move(    DataSegment segment,    Map<String,Object> targetLoadSpec){\n      return archivedSegment;\n    }\n  }\n;\n  Assert.assertEquals(archivedSegment,archiver.archive(SOURCE_SEGMENT));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSimpleArchive() throws Exception {\n  final DataSegment archivedSegment=SOURCE_SEGMENT.withLoadSpec(ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\"));\n  final S3DataSegmentArchiver archiver=new S3DataSegmentArchiver(MAPPER,S3_SERVICE,ARCHIVER_CONFIG,PUSHER_CONFIG){\n    @Override public DataSegment move(    DataSegment segment,    Map<String,Object> targetLoadSpec){\n      return archivedSegment;\n    }\n  }\n;\n  Assert.assertEquals(archivedSegment,archiver.archive(SOURCE_SEGMENT));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 108,
        "startColumnNumber" : 22,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ImmutableMap.of(\"type\",S3StorageDruidModule.SCHEME_S3_ZIP,S3DataSegmentPuller.BUCKET,ARCHIVER_CONFIG.getArchiveBucket(),S3DataSegmentPuller.KEY,ARCHIVER_CONFIG.getArchiveBaseKey() + \"archived\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 113,
    "startColumnNumber" : 12,
    "endLineNumber" : 113,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}