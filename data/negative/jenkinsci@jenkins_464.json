{
  "id" : 464,
  "expression" : "out.toString()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/ProcTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "out.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 119,
      "startColumnNumber" : 29,
      "endLineNumber" : 119,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(\"Hello\",out.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertEquals(\"Hello\",out.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 114,
        "startColumnNumber" : 86,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] ECHO_BACK_CMD={\"cat\"};\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  l.launch().cmds(ECHO_BACK_CMD).stdin(new ByteArrayInputStream(\"Hello\".getBytes())).stdout(out).join();\n  assertEquals(\"Hello\",out.toString());\n  Proc p=l.launch().cmds(ECHO_BACK_CMD).stdin(new ByteArrayInputStream(\"Hello\".getBytes())).readStdout().start();\n  p.join();\n  assertEquals(\"Hello\",org.apache.commons.io.IOUtils.toString(p.getStdout()));\n  assertNull(p.getStderr());\n  assertNull(p.getStdin());\n  p=l.launch().cmds(ECHO_BACK_CMD).writeStdin().readStdout().start();\n  p.getStdin().write(\"Hello\".getBytes());\n  p.getStdin().close();\n  p.join();\n  assertEquals(\"Hello\",org.apache.commons.io.IOUtils.toString(p.getStdout()));\n  assertNull(p.getStderr());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void doIoPumpingTest(Launcher l) throws IOException, InterruptedException {\n  String[] ECHO_BACK_CMD={\"cat\"};\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  l.launch().cmds(ECHO_BACK_CMD).stdin(new ByteArrayInputStream(\"Hello\".getBytes())).stdout(out).join();\n  assertEquals(\"Hello\",out.toString());\n  Proc p=l.launch().cmds(ECHO_BACK_CMD).stdin(new ByteArrayInputStream(\"Hello\".getBytes())).readStdout().start();\n  p.join();\n  assertEquals(\"Hello\",org.apache.commons.io.IOUtils.toString(p.getStdout()));\n  assertNull(p.getStderr());\n  assertNull(p.getStdin());\n  p=l.launch().cmds(ECHO_BACK_CMD).writeStdin().readStdout().start();\n  p.getStdin().write(\"Hello\".getBytes());\n  p.getStdin().close();\n  p.join();\n  assertEquals(\"Hello\",org.apache.commons.io.IOUtils.toString(p.getStdout()));\n  assertNull(p.getStderr());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertEquals(\"Hello\",out.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 119,
    "startColumnNumber" : 29,
    "endLineNumber" : 119,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}