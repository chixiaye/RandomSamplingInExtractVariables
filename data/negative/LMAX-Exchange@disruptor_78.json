{
  "id" : 78,
  "expression" : "index",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "src/main/java/com/lmax/disruptor/OffHeapRingBuffer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 83,
      "startColumnNumber" : 12,
      "endLineNumber" : 83,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 22
      },
      "nodeContext" : "index == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (index == 0) {\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int index=memory.indexOf(sequence);\n  if (index == 0) {\n  }\n  entry.move(memory,index);\n  return entry;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private T getPreallocated(T entry,long sequence){\n  int index=memory.indexOf(sequence);\n  if (index == 0) {\n  }\n  entry.move(memory,index);\n  return entry;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 22
      },
      "nodeContext" : "index == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 88,
      "startColumnNumber" : 27,
      "endLineNumber" : 88,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 33
      },
      "nodeContext" : "entry.move(memory,index)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entry.move(memory,index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int index=memory.indexOf(sequence);\n  if (index == 0) {\n  }\n  entry.move(memory,index);\n  return entry;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private T getPreallocated(T entry,long sequence){\n  int index=memory.indexOf(sequence);\n  if (index == 0) {\n  }\n  entry.move(memory,index);\n  return entry;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entry.move(memory,index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 83,
    "startColumnNumber" : 12,
    "endLineNumber" : 83,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 88,
    "startColumnNumber" : 27,
    "endLineNumber" : 88,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}