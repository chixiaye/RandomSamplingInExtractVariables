{
  "id" : 235,
  "expression" : "TripleConstant.CONSUMER_APP_NAME_KEY",
  "projectName" : "apache@dubbo",
  "commitID" : "3318ba26374d57468b421d9c5d45aad79b18f149",
  "filePath" : "dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/ClientStream.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TripleConstant.CONSUMER_APP_NAME_KEY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 121,
      "startColumnNumber" : 24,
      "endLineNumber" : 121,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 66
      },
      "nodeContext" : "headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 67
      },
      "nodeContext" : "headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n  invocation.getObjectAttachments().remove(CommonConstants.APPLICATION_KEY);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (app != null) {\n  headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n  invocation.getObjectAttachments().remove(CommonConstants.APPLICATION_KEY);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3318,
        "startLineNumber" : 101,
        "startColumnNumber" : 77,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Http2StreamChannelBootstrap streamChannelBootstrap=new Http2StreamChannelBootstrap(getCtx().channel());\n  final Http2StreamChannel streamChannel=streamChannelBootstrap.open().syncUninterruptibly().getNow();\n  Http2Headers headers=new DefaultHttp2Headers().authority(authority).scheme(SCHEME).method(HttpMethod.POST.asciiName()).path(\"/\" + invocation.getObjectAttachment(CommonConstants.PATH_KEY) + \"/\"+ invocation.getMethodName()).set(HttpHeaderNames.CONTENT_TYPE,TripleConstant.CONTENT_PROTO).set(HttpHeaderNames.TE,HttpHeaderValues.TRAILERS);\n  final String version=(String)invocation.getObjectAttachment(CommonConstants.VERSION_KEY);\n  if (version != null) {\n    headers.set(TripleConstant.SERVICE_VERSION,version);\n    invocation.getObjectAttachments().remove(CommonConstants.VERSION_KEY);\n  }\n  final String app=(String)invocation.getObjectAttachment(CommonConstants.APPLICATION_KEY);\n  if (app != null) {\n    headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n    invocation.getObjectAttachments().remove(CommonConstants.APPLICATION_KEY);\n  }\n  final String group=(String)invocation.getObjectAttachment(CommonConstants.GROUP_KEY);\n  if (group != null) {\n    headers.set(TripleConstant.SERVICE_GROUP,group);\n    invocation.getObjectAttachments().remove(CommonConstants.GROUP_KEY);\n  }\n  final Map<String,Object> attachments=invocation.getObjectAttachments();\n  if (attachments != null) {\n    convertAttachment(headers,attachments);\n  }\n  DefaultHttp2HeadersFrame frame=new DefaultHttp2HeadersFrame(headers);\n  final TripleHttp2ClientResponseHandler responseHandler=new TripleHttp2ClientResponseHandler();\n  TripleUtil.setClientStream(streamChannel,this);\n  streamChannel.pipeline().addLast(responseHandler).addLast(new GrpcDataDecoder(Integer.MAX_VALUE)).addLast(new TripleClientInboundHandler());\n  streamChannel.write(frame).addListener(future -> {\n    if (!future.isSuccess()) {\n      if (future.cause() instanceof Http2NoMoreStreamIdsException) {\n        getCtx().close();\n      }\n      promise.setFailure(future.cause());\n    }\n  }\n);\n  final ByteBuf out;\n  ClassLoader tccl=Thread.currentThread().getContextClassLoader();\n  try {\n    final ConsumerModel model=getConsumerModel(invocation);\n    if (model != null) {\n      ClassLoadUtil.switchContextLoader(model.getClassLoader());\n    }\n    if (isNeedWrap()) {\n      final TripleWrapper.TripleRequestWrapper wrap=TripleUtil.wrapReq(getUrl(),invocation,getMultipleSerialization());\n      out=TripleUtil.pack(getCtx(),wrap);\n    }\n else {\n      out=TripleUtil.pack(getCtx(),invocation.getArguments()[0]);\n    }\n  }\n  finally {\n    ClassLoadUtil.switchContextLoader(tccl);\n  }\n  final DefaultHttp2DataFrame data=new DefaultHttp2DataFrame(out,true);\n  streamChannel.write(data);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 398,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3405,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void write(Object obj,ChannelPromise promise) throws IOException {\n  final Http2StreamChannelBootstrap streamChannelBootstrap=new Http2StreamChannelBootstrap(getCtx().channel());\n  final Http2StreamChannel streamChannel=streamChannelBootstrap.open().syncUninterruptibly().getNow();\n  Http2Headers headers=new DefaultHttp2Headers().authority(authority).scheme(SCHEME).method(HttpMethod.POST.asciiName()).path(\"/\" + invocation.getObjectAttachment(CommonConstants.PATH_KEY) + \"/\"+ invocation.getMethodName()).set(HttpHeaderNames.CONTENT_TYPE,TripleConstant.CONTENT_PROTO).set(HttpHeaderNames.TE,HttpHeaderValues.TRAILERS);\n  final String version=(String)invocation.getObjectAttachment(CommonConstants.VERSION_KEY);\n  if (version != null) {\n    headers.set(TripleConstant.SERVICE_VERSION,version);\n    invocation.getObjectAttachments().remove(CommonConstants.VERSION_KEY);\n  }\n  final String app=(String)invocation.getObjectAttachment(CommonConstants.APPLICATION_KEY);\n  if (app != null) {\n    headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n    invocation.getObjectAttachments().remove(CommonConstants.APPLICATION_KEY);\n  }\n  final String group=(String)invocation.getObjectAttachment(CommonConstants.GROUP_KEY);\n  if (group != null) {\n    headers.set(TripleConstant.SERVICE_GROUP,group);\n    invocation.getObjectAttachments().remove(CommonConstants.GROUP_KEY);\n  }\n  final Map<String,Object> attachments=invocation.getObjectAttachments();\n  if (attachments != null) {\n    convertAttachment(headers,attachments);\n  }\n  DefaultHttp2HeadersFrame frame=new DefaultHttp2HeadersFrame(headers);\n  final TripleHttp2ClientResponseHandler responseHandler=new TripleHttp2ClientResponseHandler();\n  TripleUtil.setClientStream(streamChannel,this);\n  streamChannel.pipeline().addLast(responseHandler).addLast(new GrpcDataDecoder(Integer.MAX_VALUE)).addLast(new TripleClientInboundHandler());\n  streamChannel.write(frame).addListener(future -> {\n    if (!future.isSuccess()) {\n      if (future.cause() instanceof Http2NoMoreStreamIdsException) {\n        getCtx().close();\n      }\n      promise.setFailure(future.cause());\n    }\n  }\n);\n  final ByteBuf out;\n  ClassLoader tccl=Thread.currentThread().getContextClassLoader();\n  try {\n    final ConsumerModel model=getConsumerModel(invocation);\n    if (model != null) {\n      ClassLoadUtil.switchContextLoader(model.getClassLoader());\n    }\n    if (isNeedWrap()) {\n      final TripleWrapper.TripleRequestWrapper wrap=TripleUtil.wrapReq(getUrl(),invocation,getMultipleSerialization());\n      out=TripleUtil.pack(getCtx(),wrap);\n    }\n else {\n      out=TripleUtil.pack(getCtx(),invocation.getArguments()[0]);\n    }\n  }\n  finally {\n    ClassLoadUtil.switchContextLoader(tccl);\n  }\n  final DefaultHttp2DataFrame data=new DefaultHttp2DataFrame(out,true);\n  streamChannel.write(data);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 414,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 67
      },
      "nodeContext" : "headers.set(TripleConstant.CONSUMER_APP_NAME_KEY,app);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 121,
    "startColumnNumber" : 24,
    "endLineNumber" : 121,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}