{
  "id" : 44,
  "expression" : "String.class",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/eventbus/EventBusTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 139,
      "startColumnNumber" : 60,
      "endLineNumber" : 139,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 73
      },
      "nodeContext" : "subscriber.getClass().getMethod(\"throwExceptionOn\",String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(\"Method should be available.\",subscriber.getClass().getMethod(\"throwExceptionOn\",String.class),handler.context.getSubscriberMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"Method should be available.\",subscriber.getClass().getMethod(\"throwExceptionOn\",String.class),handler.context.getSubscriberMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 118,
        "startColumnNumber" : 63,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RecordingSubscriberExceptionHandler handler=new RecordingSubscriberExceptionHandler();\n  final EventBus eventBus=new EventBus(handler);\n  final RuntimeException exception=new RuntimeException(\"but culottes have a tendancy to ride up!\");\n  final Object subscriber=new Object(){\n    @Subscribe public void throwExceptionOn(    String message){\n      throw exception;\n    }\n  }\n;\n  eventBus.register(subscriber);\n  eventBus.post(EVENT);\n  assertEquals(\"Cause should be available.\",exception,handler.exception);\n  assertEquals(\"EventBus should be available.\",eventBus,handler.context.getEventBus());\n  assertEquals(\"Event should be available.\",EVENT,handler.context.getEvent());\n  assertEquals(\"Subscriber should be available.\",subscriber,handler.context.getSubscriber());\n  assertEquals(\"Method should be available.\",subscriber.getClass().getMethod(\"throwExceptionOn\",String.class),handler.context.getSubscriberMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1130,
        "startLineNumber" : 118,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSubscriberThrowsException() throws Exception {\n  final RecordingSubscriberExceptionHandler handler=new RecordingSubscriberExceptionHandler();\n  final EventBus eventBus=new EventBus(handler);\n  final RuntimeException exception=new RuntimeException(\"but culottes have a tendancy to ride up!\");\n  final Object subscriber=new Object(){\n    @Subscribe public void throwExceptionOn(    String message){\n      throw exception;\n    }\n  }\n;\n  eventBus.register(subscriber);\n  eventBus.post(EVENT);\n  assertEquals(\"Cause should be available.\",exception,handler.exception);\n  assertEquals(\"EventBus should be available.\",eventBus,handler.context.getEventBus());\n  assertEquals(\"Event should be available.\",EVENT,handler.context.getEvent());\n  assertEquals(\"Subscriber should be available.\",subscriber,handler.context.getSubscriber());\n  assertEquals(\"Method should be available.\",subscriber.getClass().getMethod(\"throwExceptionOn\",String.class),handler.context.getSubscriberMethod());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 73
      },
      "nodeContext" : "subscriber.getClass().getMethod(\"throwExceptionOn\",String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 139,
    "startColumnNumber" : 60,
    "endLineNumber" : 139,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}