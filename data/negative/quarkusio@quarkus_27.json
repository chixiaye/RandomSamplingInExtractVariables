{
  "id" : 27,
  "expression" : "attributes",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/resteasy-classic/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxHttpRequest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "attributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 100,
      "startColumnNumber" : 12,
      "endLineNumber" : 100,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 30
      },
      "nodeContext" : "attributes == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (attributes == null) {\n  return Collections.emptyEnumeration();\n}\n else {\n  Enumeration<String> en=new Enumeration<String>(){\n    private Iterator<String> it=attributes.keySet().iterator();\n    @Override public boolean hasMoreElements(){\n      return it.hasNext();\n    }\n    @Override public String nextElement(){\n      return it.next();\n    }\n  }\n;\n  return en;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 98,
        "startColumnNumber" : 51,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,Object> attributes=routingContext.data();\n  if (attributes == null) {\n    return Collections.emptyEnumeration();\n  }\n else {\n    Enumeration<String> en=new Enumeration<String>(){\n      private Iterator<String> it=attributes.keySet().iterator();\n      @Override public boolean hasMoreElements(){\n        return it.hasNext();\n      }\n      @Override public String nextElement(){\n        return it.next();\n      }\n    }\n;\n    return en;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Enumeration<String> getAttributeNames(){\n  final Map<String,Object> attributes=routingContext.data();\n  if (attributes == null) {\n    return Collections.emptyEnumeration();\n  }\n else {\n    Enumeration<String> en=new Enumeration<String>(){\n      private Iterator<String> it=attributes.keySet().iterator();\n      @Override public boolean hasMoreElements(){\n        return it.hasNext();\n      }\n      @Override public String nextElement(){\n        return it.next();\n      }\n    }\n;\n    return en;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 30
      },
      "nodeContext" : "attributes == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 100,
    "startColumnNumber" : 12,
    "endLineNumber" : 100,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}