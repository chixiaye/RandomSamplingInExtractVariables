{
  "id" : 31,
  "expression" : "counterDigitPair[twoK]",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/ITFReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "counterDigitPair[twoK]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 153,
      "startColumnNumber" : 26,
      "endLineNumber" : 153,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 48
      },
      "nodeContext" : "counterBlack[k]=counterDigitPair[twoK]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 49
      },
      "nodeContext" : "counterBlack[k]=counterDigitPair[twoK];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 151,
        "startColumnNumber" : 34,
        "endLineNumber" : 155,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int twoK=k << 1;\n  counterBlack[k]=counterDigitPair[twoK];\n  counterWhite[k]=counterDigitPair[twoK + 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int k=0; k < 5; k++) {\n  int twoK=k << 1;\n  counterBlack[k]=counterDigitPair[twoK];\n  counterWhite[k]=counterDigitPair[twoK + 1];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 146,
        "startColumnNumber" : 38,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  recordPattern(row,payloadStart,counterDigitPair);\n  for (int k=0; k < 5; k++) {\n    int twoK=k << 1;\n    counterBlack[k]=counterDigitPair[twoK];\n    counterWhite[k]=counterDigitPair[twoK + 1];\n  }\n  int bestMatch=decodeDigit(counterBlack);\n  resultString.append((char)('0' + bestMatch));\n  bestMatch=decodeDigit(counterWhite);\n  resultString.append((char)('0' + bestMatch));\n  for (  int counterDigit : counterDigitPair) {\n    payloadStart+=counterDigit;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (payloadStart < payloadEnd) {\n  recordPattern(row,payloadStart,counterDigitPair);\n  for (int k=0; k < 5; k++) {\n    int twoK=k << 1;\n    counterBlack[k]=counterDigitPair[twoK];\n    counterWhite[k]=counterDigitPair[twoK + 1];\n  }\n  int bestMatch=decodeDigit(counterBlack);\n  resultString.append((char)('0' + bestMatch));\n  bestMatch=decodeDigit(counterWhite);\n  resultString.append((char)('0' + bestMatch));\n  for (  int counterDigit : counterDigitPair) {\n    payloadStart+=counterDigit;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 135,
        "startColumnNumber" : 88,
        "endLineNumber" : 166,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counterDigitPair=new int[10];\n  int[] counterBlack=new int[5];\n  int[] counterWhite=new int[5];\n  while (payloadStart < payloadEnd) {\n    recordPattern(row,payloadStart,counterDigitPair);\n    for (int k=0; k < 5; k++) {\n      int twoK=k << 1;\n      counterBlack[k]=counterDigitPair[twoK];\n      counterWhite[k]=counterDigitPair[twoK + 1];\n    }\n    int bestMatch=decodeDigit(counterBlack);\n    resultString.append((char)('0' + bestMatch));\n    bestMatch=decodeDigit(counterWhite);\n    resultString.append((char)('0' + bestMatch));\n    for (    int counterDigit : counterDigitPair) {\n      payloadStart+=counterDigit;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1548,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 166,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param row          row of black/white values to search\n * @param payloadStart offset of start pattern\n * @param resultString {@link StringBuilder} to append decoded chars to\n * @throws NotFoundException if decoding could not complete successfully\n */\nprivate static void decodeMiddle(BitArray row,int payloadStart,int payloadEnd,StringBuilder resultString) throws NotFoundException {\n  int[] counterDigitPair=new int[10];\n  int[] counterBlack=new int[5];\n  int[] counterWhite=new int[5];\n  while (payloadStart < payloadEnd) {\n    recordPattern(row,payloadStart,counterDigitPair);\n    for (int k=0; k < 5; k++) {\n      int twoK=k << 1;\n      counterBlack[k]=counterDigitPair[twoK];\n      counterWhite[k]=counterDigitPair[twoK + 1];\n    }\n    int bestMatch=decodeDigit(counterBlack);\n    resultString.append((char)('0' + bestMatch));\n    bestMatch=decodeDigit(counterWhite);\n    resultString.append((char)('0' + bestMatch));\n    for (    int counterDigit : counterDigitPair) {\n      payloadStart+=counterDigit;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 49
      },
      "nodeContext" : "counterBlack[k]=counterDigitPair[twoK];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 153,
    "startColumnNumber" : 26,
    "endLineNumber" : 153,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}