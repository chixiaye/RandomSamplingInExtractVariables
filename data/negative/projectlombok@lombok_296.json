{
  "id" : 296,
  "expression" : "((FieldReference)lockVariable)",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/HandleSynchronized.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((FieldReference)lockVariable)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 140,
      "startColumnNumber" : 3,
      "endLineNumber" : 140,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 140,
        "endColumnNumber" : 42
      },
      "nodeContext" : "((FieldReference)lockVariable).receiver",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 140,
        "endColumnNumber" : 58
      },
      "nodeContext" : "((FieldReference)lockVariable).receiver=thisReference",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 140,
        "endColumnNumber" : 59
      },
      "nodeContext" : "((FieldReference)lockVariable).receiver=thisReference;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 136,
        "startColumnNumber" : 7,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  lockVariable=new FieldReference(lockName,pos);\n  ThisReference thisReference=new ThisReference(p1,p2);\n  setGeneratedBy(thisReference,source);\n  ((FieldReference)lockVariable).receiver=thisReference;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (method.isStatic()) lockVariable=new QualifiedNameReference(new char[][]{methodNode.up().getName().toCharArray(),lockName},new long[]{pos,pos},p1,p2);\n else {\n  lockVariable=new FieldReference(lockName,pos);\n  ThisReference thisReference=new ThisReference(p1,p2);\n  setGeneratedBy(thisReference,source);\n  ((FieldReference)lockVariable).receiver=thisReference;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 105,
        "startColumnNumber" : 120,
        "endLineNumber" : 155,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int p1=source.sourceStart - 1;\n  int p2=source.sourceStart - 2;\n  long pos=(((long)p1) << 32) | p2;\n  EclipseNode methodNode=annotationNode.up();\n  if (methodNode == null || methodNode.getKind() != Kind.METHOD || !(methodNode.get() instanceof MethodDeclaration)) {\n    annotationNode.addError(\"@Synchronized is legal only on methods.\");\n    return;\n  }\n  MethodDeclaration method=(MethodDeclaration)methodNode.get();\n  if (method.isAbstract()) {\n    annotationNode.addError(\"@Synchronized is legal only on concrete methods.\");\n    return;\n  }\n  char[] lockName=createLockField(annotation,annotationNode,method.isStatic(),true);\n  if (lockName == null)   return;\n  if (method.statements == null)   return;\n  Block block=new Block(0);\n  setGeneratedBy(block,source);\n  block.statements=method.statements;\n  block.sourceEnd=method.bodyEnd;\n  block.sourceStart=method.bodyStart;\n  Expression lockVariable;\n  if (method.isStatic())   lockVariable=new QualifiedNameReference(new char[][]{methodNode.up().getName().toCharArray(),lockName},new long[]{pos,pos},p1,p2);\n else {\n    lockVariable=new FieldReference(lockName,pos);\n    ThisReference thisReference=new ThisReference(p1,p2);\n    setGeneratedBy(thisReference,source);\n    ((FieldReference)lockVariable).receiver=thisReference;\n  }\n  setGeneratedBy(lockVariable,source);\n  method.statements=new Statement[]{new SynchronizedStatement(lockVariable,block,0,0)};\n  method.statements[0].sourceEnd=method.bodyEnd;\n  method.statements[0].sourceStart=method.bodyStart;\n  setGeneratedBy(method.statements[0],source);\n  methodNode.rebuild();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1903,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 155,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void handle(AnnotationValues<Synchronized> annotation,Annotation source,EclipseNode annotationNode){\n  int p1=source.sourceStart - 1;\n  int p2=source.sourceStart - 2;\n  long pos=(((long)p1) << 32) | p2;\n  EclipseNode methodNode=annotationNode.up();\n  if (methodNode == null || methodNode.getKind() != Kind.METHOD || !(methodNode.get() instanceof MethodDeclaration)) {\n    annotationNode.addError(\"@Synchronized is legal only on methods.\");\n    return;\n  }\n  MethodDeclaration method=(MethodDeclaration)methodNode.get();\n  if (method.isAbstract()) {\n    annotationNode.addError(\"@Synchronized is legal only on concrete methods.\");\n    return;\n  }\n  char[] lockName=createLockField(annotation,annotationNode,method.isStatic(),true);\n  if (lockName == null)   return;\n  if (method.statements == null)   return;\n  Block block=new Block(0);\n  setGeneratedBy(block,source);\n  block.statements=method.statements;\n  block.sourceEnd=method.bodyEnd;\n  block.sourceStart=method.bodyStart;\n  Expression lockVariable;\n  if (method.isStatic())   lockVariable=new QualifiedNameReference(new char[][]{methodNode.up().getName().toCharArray(),lockName},new long[]{pos,pos},p1,p2);\n else {\n    lockVariable=new FieldReference(lockName,pos);\n    ThisReference thisReference=new ThisReference(p1,p2);\n    setGeneratedBy(thisReference,source);\n    ((FieldReference)lockVariable).receiver=thisReference;\n  }\n  setGeneratedBy(lockVariable,source);\n  method.statements=new Statement[]{new SynchronizedStatement(lockVariable,block,0,0)};\n  method.statements[0].sourceEnd=method.bodyEnd;\n  method.statements[0].sourceStart=method.bodyStart;\n  setGeneratedBy(method.statements[0],source);\n  methodNode.rebuild();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 140,
        "endColumnNumber" : 59
      },
      "nodeContext" : "((FieldReference)lockVariable).receiver=thisReference;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "lombok.eclipse.handlers.FieldReference"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 140,
    "startColumnNumber" : 3,
    "endLineNumber" : 140,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}