{
  "id" : 199,
  "expression" : "inReqToOutResp",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/insights/PassportLoggingHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inReqToOutResp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 129,
      "startColumnNumber" : 46,
      "endLineNumber" : 129,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 61
      },
      "nodeContext" : "passport.calculateTimeBetween(inReqToOutResp)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 97
      },
      "nodeContext" : "passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()) {\n  LOG.info(\"Request processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2199,
        "startLineNumber" : 105,
        "startColumnNumber" : 33,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (passport.wasProxyAttempt()) {\n    if (passport.findStateBackwards(PassportState.OUT_RESP_LAST_CONTENT_SENDING) == null) {\n      incompleteProxySessionCounter.increment();\n      LOG.info(\"Incorrect final state! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n  }\n  if (!passport.wasProxyAttempt()) {\n    if (ctx != null && !isHealthcheckRequest(request)) {\n      RequestAttempts attempts=RequestAttempts.getFromSessionContext(ctx);\n      LOG.debug(\"State after complete. \" + \", context-error = \" + String.valueOf(ctx.getError()) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", attempts = \"+ String.valueOf(attempts)+ \", passport = \"+ String.valueOf(passport));\n    }\n  }\n  StartAndEnd inReqToOutResp=passport.findFirstStartAndLastEndStates(PassportState.IN_REQ_HEADERS_RECEIVED,PassportState.OUT_REQ_LAST_CONTENT_SENT);\n  if (passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()) {\n    LOG.info(\"Request processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n  }\n  StartAndEnd inRespToOutResp=passport.findLastStartAndFirstEndStates(PassportState.IN_RESP_HEADERS_RECEIVED,PassportState.OUT_RESP_LAST_CONTENT_SENT);\n  if (passport.calculateTimeBetween(inRespToOutResp) > WARN_RESP_PROCESSING_TIME_NS.get()) {\n    LOG.info(\"Response processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2224,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (LOG.isInfoEnabled()) {\n  if (passport.wasProxyAttempt()) {\n    if (passport.findStateBackwards(PassportState.OUT_RESP_LAST_CONTENT_SENDING) == null) {\n      incompleteProxySessionCounter.increment();\n      LOG.info(\"Incorrect final state! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n  }\n  if (!passport.wasProxyAttempt()) {\n    if (ctx != null && !isHealthcheckRequest(request)) {\n      RequestAttempts attempts=RequestAttempts.getFromSessionContext(ctx);\n      LOG.debug(\"State after complete. \" + \", context-error = \" + String.valueOf(ctx.getError()) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", attempts = \"+ String.valueOf(attempts)+ \", passport = \"+ String.valueOf(passport));\n    }\n  }\n  StartAndEnd inReqToOutResp=passport.findFirstStartAndLastEndStates(PassportState.IN_REQ_HEADERS_RECEIVED,PassportState.OUT_REQ_LAST_CONTENT_SENT);\n  if (passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()) {\n    LOG.info(\"Request processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n  }\n  StartAndEnd inRespToOutResp=passport.findLastStartAndFirstEndStates(PassportState.IN_RESP_HEADERS_RECEIVED,PassportState.OUT_RESP_LAST_CONTENT_SENT);\n  if (passport.calculateTimeBetween(inRespToOutResp) > WARN_RESP_PROCESSING_TIME_NS.get()) {\n    LOG.info(\"Response processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 168,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3516,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CurrentPassport passport=CurrentPassport.fromChannel(channel);\n  HttpRequestMessage request=ClientRequestReceiver.getRequestFromChannel(channel);\n  HttpResponseMessage response=ClientRequestReceiver.getResponseFromChannel(channel);\n  SessionContext ctx=request == null ? null : request.getContext();\n  String topLevelRequestId=getRequestId(channel,ctx);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"State after complete. \" + \", current-server-conns = \" + ServerChannelMetrics.currentConnectionCountFromChannel(channel) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", status = \"+ (response == null ? getRequestId(channel,ctx) : response.getStatus())+ \", nfstatus = \"+ String.valueOf(StatusCategoryUtils.getStatusCategory(ctx))+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", passport = \"+ String.valueOf(passport));\n  }\n  if (LOG.isInfoEnabled()) {\n    if (passport.wasProxyAttempt()) {\n      if (passport.findStateBackwards(PassportState.OUT_RESP_LAST_CONTENT_SENDING) == null) {\n        incompleteProxySessionCounter.increment();\n        LOG.info(\"Incorrect final state! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n      }\n    }\n    if (!passport.wasProxyAttempt()) {\n      if (ctx != null && !isHealthcheckRequest(request)) {\n        RequestAttempts attempts=RequestAttempts.getFromSessionContext(ctx);\n        LOG.debug(\"State after complete. \" + \", context-error = \" + String.valueOf(ctx.getError()) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", attempts = \"+ String.valueOf(attempts)+ \", passport = \"+ String.valueOf(passport));\n      }\n    }\n    StartAndEnd inReqToOutResp=passport.findFirstStartAndLastEndStates(PassportState.IN_REQ_HEADERS_RECEIVED,PassportState.OUT_REQ_LAST_CONTENT_SENT);\n    if (passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()) {\n      LOG.info(\"Request processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n    StartAndEnd inRespToOutResp=passport.findLastStartAndFirstEndStates(PassportState.IN_RESP_HEADERS_RECEIVED,PassportState.OUT_RESP_LAST_CONTENT_SENT);\n    if (passport.calculateTimeBetween(inRespToOutResp) > WARN_RESP_PROCESSING_TIME_NS.get()) {\n      LOG.info(\"Response processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3562,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void logPassport(Channel channel){\n  CurrentPassport passport=CurrentPassport.fromChannel(channel);\n  HttpRequestMessage request=ClientRequestReceiver.getRequestFromChannel(channel);\n  HttpResponseMessage response=ClientRequestReceiver.getResponseFromChannel(channel);\n  SessionContext ctx=request == null ? null : request.getContext();\n  String topLevelRequestId=getRequestId(channel,ctx);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"State after complete. \" + \", current-server-conns = \" + ServerChannelMetrics.currentConnectionCountFromChannel(channel) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", status = \"+ (response == null ? getRequestId(channel,ctx) : response.getStatus())+ \", nfstatus = \"+ String.valueOf(StatusCategoryUtils.getStatusCategory(ctx))+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", passport = \"+ String.valueOf(passport));\n  }\n  if (LOG.isInfoEnabled()) {\n    if (passport.wasProxyAttempt()) {\n      if (passport.findStateBackwards(PassportState.OUT_RESP_LAST_CONTENT_SENDING) == null) {\n        incompleteProxySessionCounter.increment();\n        LOG.info(\"Incorrect final state! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n      }\n    }\n    if (!passport.wasProxyAttempt()) {\n      if (ctx != null && !isHealthcheckRequest(request)) {\n        RequestAttempts attempts=RequestAttempts.getFromSessionContext(ctx);\n        LOG.debug(\"State after complete. \" + \", context-error = \" + String.valueOf(ctx.getError()) + \", current-http-reqs = \"+ HttpMetricsChannelHandler.getInflightRequestCountFromChannel(channel)+ \", toplevelid = \"+ topLevelRequestId+ \", req = \"+ request.getInfoForLogging()+ \", attempts = \"+ String.valueOf(attempts)+ \", passport = \"+ String.valueOf(passport));\n      }\n    }\n    StartAndEnd inReqToOutResp=passport.findFirstStartAndLastEndStates(PassportState.IN_REQ_HEADERS_RECEIVED,PassportState.OUT_REQ_LAST_CONTENT_SENT);\n    if (passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()) {\n      LOG.info(\"Request processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n    StartAndEnd inRespToOutResp=passport.findLastStartAndFirstEndStates(PassportState.IN_RESP_HEADERS_RECEIVED,PassportState.OUT_RESP_LAST_CONTENT_SENT);\n    if (passport.calculateTimeBetween(inRespToOutResp) > WARN_RESP_PROCESSING_TIME_NS.get()) {\n      LOG.info(\"Response processing took longer than threshold! toplevelid = \" + topLevelRequestId + \", \"+ ChannelUtils.channelInfoForLogging(channel));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 97
      },
      "nodeContext" : "passport.calculateTimeBetween(inReqToOutResp) > WARN_REQ_PROCESSING_TIME_NS.get()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.passport.StartAndEnd"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 129,
    "startColumnNumber" : 46,
    "endLineNumber" : 129,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}