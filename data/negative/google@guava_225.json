{
  "id" : 225,
  "expression" : "Arrays.toString(params)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-testlib/src/com/google/common/testing/NullPointerTester.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.toString(params)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 346,
      "startColumnNumber" : 16,
      "endLineNumber" : 346,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 342,
        "startColumnNumber" : 10,
        "endLineNumber" : 348,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 341,
        "startColumnNumber" : 6,
        "endLineNumber" : 348,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 341,
        "startColumnNumber" : 6,
        "endLineNumber" : 348,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 337,
        "startColumnNumber" : 8,
        "endLineNumber" : 349,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n  unsafe.invoke(instance,params);\n  Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 337,
        "startColumnNumber" : 4,
        "endLineNumber" : 369,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n  unsafe.invoke(instance,params);\n  Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n}\n catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  if (policy.isExpectedType(cause)) {\n    return;\n  }\n  AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n  error.initCause(cause);\n  throw error;\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 332,
        "startColumnNumber" : 88,
        "endLineNumber" : 370,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPrimitiveOrNullable(invokable.getParameters().get(paramIndex))) {\n    return;\n  }\n  Object[] params=buildParamList(invokable,paramIndex);\n  try {\n    @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n    unsafe.invoke(instance,params);\n    Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    if (policy.isExpectedType(cause)) {\n      return;\n    }\n    AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n    error.initCause(cause);\n    throw error;\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1977,
        "startLineNumber" : 323,
        "startColumnNumber" : 2,
        "endLineNumber" : 370,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verifies that  {@code invokable} produces a {@link NullPointerException} or {@link UnsupportedOperationException} when the parameter in position {@code paramIndex} is null. Ifthis parameter is marked nullable, this method does nothing.\n * @param instance the instance to invoke {@code invokable} on, or null if {@code invokable} isstatic\n */\nprivate void testParameter(Object instance,Invokable<?,?> invokable,int paramIndex,Class<?> testedClass){\n  if (isPrimitiveOrNullable(invokable.getParameters().get(paramIndex))) {\n    return;\n  }\n  Object[] params=buildParamList(invokable,paramIndex);\n  try {\n    @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n    unsafe.invoke(instance,params);\n    Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    if (policy.isExpectedType(cause)) {\n      return;\n    }\n    AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n    error.initCause(cause);\n    throw error;\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 342,
        "startColumnNumber" : 10,
        "endLineNumber" : 348,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "Arrays.toString(params)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 363,
      "startColumnNumber" : 18,
      "endLineNumber" : 363,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 356,
        "startColumnNumber" : 14,
        "endLineNumber" : 364,
        "endColumnNumber" : 24
      },
      "nodeContext" : "String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 355,
        "startColumnNumber" : 10,
        "endLineNumber" : 364,
        "endColumnNumber" : 25
      },
      "nodeContext" : "new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 354,
        "startColumnNumber" : 27,
        "endLineNumber" : 364,
        "endColumnNumber" : 25
      },
      "nodeContext" : "error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 354,
        "startColumnNumber" : 6,
        "endLineNumber" : 364,
        "endColumnNumber" : 26
      },
      "nodeContext" : "AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 349,
        "startColumnNumber" : 42,
        "endLineNumber" : 367,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwable cause=e.getCause();\n  if (policy.isExpectedType(cause)) {\n    return;\n  }\n  AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n  error.initCause(cause);\n  throw error;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 349,
        "startColumnNumber" : 6,
        "endLineNumber" : 367,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  if (policy.isExpectedType(cause)) {\n    return;\n  }\n  AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n  error.initCause(cause);\n  throw error;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 337,
        "startColumnNumber" : 4,
        "endLineNumber" : 369,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n  unsafe.invoke(instance,params);\n  Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n}\n catch (InvocationTargetException e) {\n  Throwable cause=e.getCause();\n  if (policy.isExpectedType(cause)) {\n    return;\n  }\n  AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n  error.initCause(cause);\n  throw error;\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 332,
        "startColumnNumber" : 88,
        "endLineNumber" : 370,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPrimitiveOrNullable(invokable.getParameters().get(paramIndex))) {\n    return;\n  }\n  Object[] params=buildParamList(invokable,paramIndex);\n  try {\n    @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n    unsafe.invoke(instance,params);\n    Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    if (policy.isExpectedType(cause)) {\n      return;\n    }\n    AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n    error.initCause(cause);\n    throw error;\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1977,
        "startLineNumber" : 323,
        "startColumnNumber" : 2,
        "endLineNumber" : 370,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verifies that  {@code invokable} produces a {@link NullPointerException} or {@link UnsupportedOperationException} when the parameter in position {@code paramIndex} is null. Ifthis parameter is marked nullable, this method does nothing.\n * @param instance the instance to invoke {@code invokable} on, or null if {@code invokable} isstatic\n */\nprivate void testParameter(Object instance,Invokable<?,?> invokable,int paramIndex,Class<?> testedClass){\n  if (isPrimitiveOrNullable(invokable.getParameters().get(paramIndex))) {\n    return;\n  }\n  Object[] params=buildParamList(invokable,paramIndex);\n  try {\n    @SuppressWarnings(\"unchecked\") Invokable<Object,?> unsafe=(Invokable<Object,?>)invokable;\n    unsafe.invoke(instance,params);\n    Assert.fail(\"No exception thrown for parameter at index \" + paramIndex + \" from \"+ invokable+ Arrays.toString(params)+ \" for \"+ testedClass);\n  }\n catch (  InvocationTargetException e) {\n    Throwable cause=e.getCause();\n    if (policy.isExpectedType(cause)) {\n      return;\n    }\n    AssertionFailedError error=new AssertionFailedError(String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause));\n    error.initCause(cause);\n    throw error;\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 356,
        "startColumnNumber" : 14,
        "endLineNumber" : 364,
        "endColumnNumber" : 24
      },
      "nodeContext" : "String.format(\"wrong exception thrown from %s when passing null to %s parameter at index %s.%n\" + \"Full parameters: %s%n\" + \"Actual exception message: %s\",invokable,invokable.getParameters().get(paramIndex).getType(),paramIndex,Arrays.toString(params),cause)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 346,
    "startColumnNumber" : 16,
    "endLineNumber" : 346,
    "endColumnNumber" : 39
  }, {
    "charLength" : 23,
    "startLineNumber" : 363,
    "startColumnNumber" : 18,
    "endLineNumber" : 363,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}