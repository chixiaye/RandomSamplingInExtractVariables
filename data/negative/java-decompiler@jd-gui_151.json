{
  "id" : 151,
  "expression" : "innerTypes == null",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/type/ClassFileTypeFactoryProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "innerTypes == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 161,
      "startColumnNumber" : 36,
      "endLineNumber" : 161,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (innerTypes == null) {\n  innerTypes=new ArrayList<>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 159,
        "startColumnNumber" : 79,
        "endLineNumber" : 165,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  ClassReader classReader=new ClassReader(is);\n  if (innerTypes == null) {\n    innerTypes=new ArrayList<>();\n  }\n  innerTypes.add(new JavaType(innerEntry,classReader,access));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 159,
        "startColumnNumber" : 28,
        "endLineNumber" : 167,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try (InputStream is=innerEntry.getInputStream()){\n  ClassReader classReader=new ClassReader(is);\n  if (innerTypes == null) {\n    innerTypes=new ArrayList<>();\n  }\n  innerTypes.add(new JavaType(innerEntry,classReader,access));\n}\n catch (IOException e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 158,
        "startColumnNumber" : 48,
        "endLineNumber" : 168,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  try (InputStream is=innerEntry.getInputStream()){\n    ClassReader classReader=new ClassReader(is);\n    if (innerTypes == null) {\n      innerTypes=new ArrayList<>();\n    }\n    innerTypes.add(new JavaType(innerEntry,classReader,access));\n  }\n catch (  IOException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 158,
        "startColumnNumber" : 24,
        "endLineNumber" : 168,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (innerEntry != null) {\n  try (InputStream is=innerEntry.getInputStream()){\n    ClassReader classReader=new ClassReader(is);\n    if (innerTypes == null) {\n      innerTypes=new ArrayList<>();\n    }\n    innerTypes.add(new JavaType(innerEntry,classReader,access));\n  }\n catch (  IOException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 155,
        "startColumnNumber" : 133,
        "endLineNumber" : 169,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Container.Entry innerEntry=getEntry(name);\n  if (innerEntry != null) {\n    try (InputStream is=innerEntry.getInputStream()){\n      ClassReader classReader=new ClassReader(is);\n      if (innerTypes == null) {\n        innerTypes=new ArrayList<>();\n      }\n      innerTypes.add(new JavaType(innerEntry,classReader,access));\n    }\n catch (    IOException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 155,
        "startColumnNumber" : 27,
        "endLineNumber" : 169,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (((access & (Opcodes.ACC_SYNTHETIC | Opcodes.ACC_BRIDGE)) == 0) && JavaType.this.name.equals(outerName)) {\n  Container.Entry innerEntry=getEntry(name);\n  if (innerEntry != null) {\n    try (InputStream is=innerEntry.getInputStream()){\n      ClassReader classReader=new ClassReader(is);\n      if (innerTypes == null) {\n        innerTypes=new ArrayList<>();\n      }\n      innerTypes.add(new JavaType(innerEntry,classReader,access));\n    }\n catch (    IOException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1114,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (JavaType.this.name.equals(name)) {\n  JavaType.this.outerName=outerName;\n  JavaType.this.displayInnerTypeName=innerName;\n}\n else if (((access & (Opcodes.ACC_SYNTHETIC | Opcodes.ACC_BRIDGE)) == 0) && JavaType.this.name.equals(outerName)) {\n  Container.Entry innerEntry=getEntry(name);\n  if (innerEntry != null) {\n    try (InputStream is=innerEntry.getInputStream()){\n      ClassReader classReader=new ClassReader(is);\n      if (innerTypes == null) {\n        innerTypes=new ArrayList<>();\n      }\n      innerTypes.add(new JavaType(innerEntry,classReader,access));\n    }\n catch (    IOException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1156,
        "startLineNumber" : 150,
        "startColumnNumber" : 105,
        "endLineNumber" : 170,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (JavaType.this.name.equals(name)) {\n    JavaType.this.outerName=outerName;\n    JavaType.this.displayInnerTypeName=innerName;\n  }\n else   if (((access & (Opcodes.ACC_SYNTHETIC | Opcodes.ACC_BRIDGE)) == 0) && JavaType.this.name.equals(outerName)) {\n    Container.Entry innerEntry=getEntry(name);\n    if (innerEntry != null) {\n      try (InputStream is=innerEntry.getInputStream()){\n        ClassReader classReader=new ClassReader(is);\n        if (innerTypes == null) {\n          innerTypes=new ArrayList<>();\n        }\n        innerTypes.add(new JavaType(innerEntry,classReader,access));\n      }\n catch (      IOException e) {\n        assert ExceptionUtil.printStackTrace(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 149,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void visitInnerClass(String name,String outerName,String innerName,int access){\n  if (JavaType.this.name.equals(name)) {\n    JavaType.this.outerName=outerName;\n    JavaType.this.displayInnerTypeName=innerName;\n  }\n else   if (((access & (Opcodes.ACC_SYNTHETIC | Opcodes.ACC_BRIDGE)) == 0) && JavaType.this.name.equals(outerName)) {\n    Container.Entry innerEntry=getEntry(name);\n    if (innerEntry != null) {\n      try (InputStream is=innerEntry.getInputStream()){\n        ClassReader classReader=new ClassReader(is);\n        if (innerTypes == null) {\n          innerTypes=new ArrayList<>();\n        }\n        innerTypes.add(new JavaType(innerEntry,classReader,access));\n      }\n catch (      IOException e) {\n        assert ExceptionUtil.printStackTrace(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (innerTypes == null) {\n  innerTypes=new ArrayList<>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 161,
    "startColumnNumber" : 36,
    "endLineNumber" : 161,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}