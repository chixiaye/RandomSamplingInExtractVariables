{
  "id" : 47,
  "expression" : "element",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "3b740500c8a6f70ea6f4999c4e3407467b2a6557",
  "filePath" : "AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 73,
      "startColumnNumber" : 47,
      "endLineNumber" : 73,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 73,
        "startColumnNumber" : 23,
        "endLineNumber" : 73,
        "endColumnNumber" : 55
      },
      "nodeContext" : "activitiesHolder.create(element)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 73,
        "startColumnNumber" : 14,
        "endLineNumber" : 73,
        "endColumnNumber" : 55
      },
      "nodeContext" : "holder=activitiesHolder.create(element)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.create(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4285,
        "startLineNumber" : 71,
        "startColumnNumber" : 108,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 582,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4403,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder) throws Exception {\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 602,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.create(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 75,
      "startColumnNumber" : 42,
      "endLineNumber" : 75,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 75,
        "startColumnNumber" : 28,
        "endLineNumber" : 75,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(TypeElement)element",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 75,
        "startColumnNumber" : 14,
        "endLineNumber" : 75,
        "endColumnNumber" : 49
      },
      "nodeContext" : "typeElement=(TypeElement)element",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 50
      },
      "nodeContext" : "TypeElement typeElement=(TypeElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4285,
        "startLineNumber" : 71,
        "startColumnNumber" : 108,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 582,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4403,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder) throws Exception {\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 602,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 50
      },
      "nodeContext" : "TypeElement typeElement=(TypeElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 83,
      "startColumnNumber" : 23,
      "endLineNumber" : 83,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 83,
        "startColumnNumber" : 23,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "element.getModifiers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 83,
        "startColumnNumber" : 23,
        "endLineNumber" : 83,
        "endColumnNumber" : 73
      },
      "nodeContext" : "element.getModifiers().contains(Modifier.ABSTRACT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 83,
        "startColumnNumber" : 10,
        "endLineNumber" : 83,
        "endColumnNumber" : 73
      },
      "nodeContext" : "isAbstract=element.getModifiers().contains(Modifier.ABSTRACT)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 74
      },
      "nodeContext" : "boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4285,
        "startLineNumber" : 71,
        "startColumnNumber" : 108,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 582,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4403,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder) throws Exception {\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 602,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 74
      },
      "nodeContext" : "boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 122,
      "startColumnNumber" : 31,
      "endLineNumber" : 122,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 122,
        "startColumnNumber" : 31,
        "endLineNumber" : 122,
        "endColumnNumber" : 69
      },
      "nodeContext" : "element.getAnnotation(EActivity.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 69
      },
      "nodeContext" : "layoutAnnotation=element.getAnnotation(EActivity.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 70
      },
      "nodeContext" : "EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4285,
        "startLineNumber" : 71,
        "startColumnNumber" : 108,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 582,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4403,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 183,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder) throws Exception {\n  EBeanHolder holder=activitiesHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String annotatedActivityQualifiedName=typeElement.getQualifiedName().toString();\n  String subActivityQualifiedName=annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;\n  int modifiers;\n  boolean isAbstract=element.getModifiers().contains(Modifier.ABSTRACT);\n  if (isAbstract) {\n    modifiers=JMod.PUBLIC | JMod.ABSTRACT;\n  }\n else {\n    modifiers=JMod.PUBLIC | JMod.FINAL;\n  }\n  holder.eBean=codeModel._class(modifiers,subActivityQualifiedName,ClassType.CLASS);\n  JClass annotatedActivity=codeModel.directClass(annotatedActivityQualifiedName);\n  holder.eBean._extends(annotatedActivity);\n  holder.bundleClass=holder.refClass(\"android.os.Bundle\");\n  int onCreateVisibility;\n  if (isAbstract) {\n    onCreateVisibility=inheritedOnCreateVisibility(typeElement);\n  }\n else {\n    onCreateVisibility=PUBLIC;\n  }\n  JMethod onCreate=holder.eBean.method(onCreateVisibility,codeModel.VOID,\"onCreate\");\n  onCreate.annotate(Override.class);\n  holder.beforeCreate=holder.eBean.method(PRIVATE,codeModel.VOID,\"beforeCreate_\");\n  holder.beforeCreateSavedInstanceStateParam=holder.beforeCreate.param(holder.bundleClass,\"savedInstanceState\");\n  holder.afterSetContentView=holder.eBean.method(PRIVATE,codeModel.VOID,\"afterSetContentView_\");\n  JVar onCreateSavedInstanceState=onCreate.param(holder.bundleClass,\"savedInstanceState\");\n  JBlock onCreateBody=onCreate.body();\n  onCreateBody.invoke(holder.beforeCreate).arg(onCreateSavedInstanceState);\n  onCreateBody.invoke(JExpr._super(),onCreate).arg(onCreateSavedInstanceState);\n  EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n  int layoutIdValue=layoutAnnotation.value();\n  JFieldRef contentViewId;\n  if (layoutIdValue != Id.DEFAULT_VALUE) {\n    IRInnerClass rInnerClass=rClass.get(Res.LAYOUT);\n    contentViewId=rInnerClass.getIdStaticRef(layoutIdValue,holder);\n  }\n else {\n    contentViewId=null;\n  }\n  if (contentViewId != null) {\n    onCreateBody.invoke(\"setContentView\").arg(contentViewId);\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass layoutParamsClass=holder.refClass(\"android.view.ViewGroup.LayoutParams\");\n  setContentViewMethod(codeModel,holder,new JType[]{codeModel.INT},new String[]{\"layoutResID\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass,layoutParamsClass},new String[]{\"view\",\"params\"});\n  setContentViewMethod(codeModel,holder,new JType[]{viewClass},new String[]{\"view\"});\n  if (hasOnBackPressedMethod(typeElement)) {\n    JMethod onKeyDownMethod=holder.eBean.method(PUBLIC,codeModel.BOOLEAN,\"onKeyDown\");\n    onKeyDownMethod.annotate(Override.class);\n    JVar keyCodeParam=onKeyDownMethod.param(codeModel.INT,\"keyCode\");\n    JClass keyEventClass=holder.refClass(\"android.view.KeyEvent\");\n    JVar eventParam=onKeyDownMethod.param(keyEventClass,\"event\");\n    JClass versionHelperClass=codeModel.ref(SdkVersionHelper.class);\n    JInvocation sdkInt=versionHelperClass.staticInvoke(\"getSdkInt\");\n    JBlock onKeyDownBody=onKeyDownMethod.body();\n    onKeyDownBody._if(sdkInt.lt(JExpr.lit(5)).cand(keyCodeParam.eq(keyEventClass.staticRef(\"KEYCODE_BACK\"))).cand(eventParam.invoke(\"getRepeatCount\").eq(JExpr.lit(0))))._then().invoke(\"onBackPressed\");\n    onKeyDownBody._return(JExpr._super().invoke(onKeyDownMethod).arg(keyCodeParam).arg(eventParam));\n  }\n  List<? extends Element> enclosedElements=typeElement.getEnclosedElements();\n  List<VariableElement> activityFields=ElementFilter.fieldsIn(enclosedElements);\n  for (  VariableElement activityField : activityFields) {\n    TypeMirror sharedPreferencesHelperType=processingEnv.getElementUtils().getTypeElement(\"com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper\").asType();\n    if (processingEnv.getTypeUtils().isSubtype(activityField.asType(),sharedPreferencesHelperType)) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 602,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 70
      },
      "nodeContext" : "EActivity layoutAnnotation=element.getAnnotation(EActivity.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 73,
    "startColumnNumber" : 47,
    "endLineNumber" : 73,
    "endColumnNumber" : 54
  }, {
    "charLength" : 7,
    "startLineNumber" : 75,
    "startColumnNumber" : 42,
    "endLineNumber" : 75,
    "endColumnNumber" : 49
  }, {
    "charLength" : 7,
    "startLineNumber" : 83,
    "startColumnNumber" : 23,
    "endLineNumber" : 83,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 122,
    "startColumnNumber" : 31,
    "endLineNumber" : 122,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}