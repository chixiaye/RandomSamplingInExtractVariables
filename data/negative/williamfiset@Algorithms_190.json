{
  "id" : 190,
  "expression" : "1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonContainsPoint.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 13,
      "endLineNumber" : 28,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 14
      },
      "nodeContext" : "lo=1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 25,
        "startColumnNumber" : 65,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static boolean containsPoint(Point2D[] hull,Point2D p){\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 58,
      "endLineNumber" : 28,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 28,
        "startColumnNumber" : 44,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(lo + hi) >>> 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 28,
        "startColumnNumber" : 38,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mid=(lo + hi) >>> 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 25,
        "startColumnNumber" : 65,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static boolean containsPoint(Point2D[] hull,Point2D p){\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 35,
      "startColumnNumber" : 26,
      "endLineNumber" : 35,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 27
      },
      "nodeContext" : "(lo + hi) >>> 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 35,
        "endColumnNumber" : 27
      },
      "nodeContext" : "mid=(lo + hi) >>> 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 35,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mid=(lo + hi) >>> 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 30,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Point2D p1=hull[mid];\n  double sign=collinear(p0,p1,p);\n  if (sign >= 0)   lo=mid;\n else   if (sign < 0)   hi=mid;\n  mid=(lo + hi) >>> 1;\n  if (hi - lo == 1) {\n    if (collinear(p0,hull[hi],p) >= 0)     lo=hi;\n else     hi=lo;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (lo != hi) {\n  Point2D p1=hull[mid];\n  double sign=collinear(p0,p1,p);\n  if (sign >= 0)   lo=mid;\n else   if (sign < 0)   hi=mid;\n  mid=(lo + hi) >>> 1;\n  if (hi - lo == 1) {\n    if (collinear(p0,hull[hi],p) >= 0)     lo=hi;\n else     hi=lo;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 25,
        "startColumnNumber" : 65,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static boolean containsPoint(Point2D[] hull,Point2D p){\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 35,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mid=(lo + hi) >>> 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 21,
      "endLineNumber" : 36,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 22
      },
      "nodeContext" : "hi - lo == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (hi - lo == 1) {\n  if (collinear(p0,hull[hi],p) >= 0)   lo=hi;\n else   hi=lo;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 30,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Point2D p1=hull[mid];\n  double sign=collinear(p0,p1,p);\n  if (sign >= 0)   lo=mid;\n else   if (sign < 0)   hi=mid;\n  mid=(lo + hi) >>> 1;\n  if (hi - lo == 1) {\n    if (collinear(p0,hull[hi],p) >= 0)     lo=hi;\n else     hi=lo;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (lo != hi) {\n  Point2D p1=hull[mid];\n  double sign=collinear(p0,p1,p);\n  if (sign >= 0)   lo=mid;\n else   if (sign < 0)   hi=mid;\n  mid=(lo + hi) >>> 1;\n  if (hi - lo == 1) {\n    if (collinear(p0,hull[hi],p) >= 0)     lo=hi;\n else     hi=lo;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 25,
        "startColumnNumber" : 65,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static boolean containsPoint(Point2D[] hull,Point2D p){\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 22
      },
      "nodeContext" : "hi - lo == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 42,
      "startColumnNumber" : 42,
      "endLineNumber" : 42,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 42,
        "startColumnNumber" : 37,
        "endLineNumber" : 42,
        "endColumnNumber" : 43
      },
      "nodeContext" : "lo + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 42,
        "startColumnNumber" : 32,
        "endLineNumber" : 42,
        "endColumnNumber" : 44
      },
      "nodeContext" : "hull[lo + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 42,
        "startColumnNumber" : 27,
        "endLineNumber" : 42,
        "endColumnNumber" : 44
      },
      "nodeContext" : "p2=hull[lo + 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Point2D p1=hull[lo], p2=hull[lo + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 25,
        "startColumnNumber" : 65,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static boolean containsPoint(Point2D[] hull,Point2D p){\n  Point2D p0=hull[0];\n  int lo=1, hi=hull.length - 2, mid=(lo + hi) >>> 1;\n  while (lo != hi) {\n    Point2D p1=hull[mid];\n    double sign=collinear(p0,p1,p);\n    if (sign >= 0)     lo=mid;\n else     if (sign < 0)     hi=mid;\n    mid=(lo + hi) >>> 1;\n    if (hi - lo == 1) {\n      if (collinear(p0,hull[hi],p) >= 0)       lo=hi;\n else       hi=lo;\n    }\n  }\n  Point2D p1=hull[lo], p2=hull[lo + 1];\n  double boundSign=collinear(p1,p2,p);\n  double segSign1=collinear(p0,p1,p);\n  double segSign2=collinear(p0,p2,p);\n  return (boundSign >= 0 && segSign1 >= 0 && segSign2 <= 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Point2D p1=hull[lo], p2=hull[lo + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 13,
    "endLineNumber" : 28,
    "endColumnNumber" : 14
  }, {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 58,
    "endLineNumber" : 28,
    "endColumnNumber" : 59
  }, {
    "charLength" : 1,
    "startLineNumber" : 35,
    "startColumnNumber" : 26,
    "endLineNumber" : 35,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 21,
    "endLineNumber" : 36,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 42,
    "startColumnNumber" : 42,
    "endLineNumber" : 42,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}