{
  "id" : 80,
  "expression" : "Assertions",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/beans/factory/annotation/ServiceBeanNameBuilderTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assertions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 62,
      "startColumnNumber" : 8,
      "endLineNumber" : 62,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 59,
        "startColumnNumber" : 40,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=AnnotationUtils.getAnnotation(ServiceBeanNameBuilderTest.class,Service.class);\n  ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(service,INTERFACE_CLASS,environment);\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testServiceAnnotation(){\n  Service service=AnnotationUtils.getAnnotation(ServiceBeanNameBuilderTest.class,Service.class);\n  ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(service,INTERFACE_CLASS,environment);\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assertions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 65,
      "startColumnNumber" : 8,
      "endLineNumber" : 65,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 59,
        "startColumnNumber" : 40,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=AnnotationUtils.getAnnotation(ServiceBeanNameBuilderTest.class,Service.class);\n  ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(service,INTERFACE_CLASS,environment);\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testServiceAnnotation(){\n  Service service=AnnotationUtils.getAnnotation(ServiceBeanNameBuilderTest.class,Service.class);\n  ServiceBeanNameBuilder builder=ServiceBeanNameBuilder.create(service,INTERFACE_CLASS,environment);\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n  Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assertions.assertEquals(\"ServiceBean:org.apache.dubbo.config.spring.api.DemoService:1.0.0:DUBBO\",builder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 62,
    "startColumnNumber" : 8,
    "endLineNumber" : 62,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 65,
    "startColumnNumber" : 8,
    "endLineNumber" : 65,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}