{
  "id" : 444,
  "expression" : "iteratorA.next()",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thirdparty/google-guava/src/main/java/com/google/common/base/PairwiseEquivalence.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "iteratorA.next()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 41,
      "startColumnNumber" : 41,
      "endLineNumber" : 41,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 41,
        "startColumnNumber" : 11,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 41,
        "startColumnNumber" : 10,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 40,
        "startColumnNumber" : 55,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (iteratorA.hasNext() && iteratorB.hasNext()) {\n  if (!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())) {\n    return false;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 36,
        "startColumnNumber" : 79,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Iterator<T> iteratorA=iterableA.iterator();\n  Iterator<T> iteratorB=iterableB.iterator();\n  while (iteratorA.hasNext() && iteratorB.hasNext()) {\n    if (!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())) {\n      return false;\n    }\n  }\n  return !iteratorA.hasNext() && !iteratorB.hasNext();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected boolean doEquivalent(Iterable<T> iterableA,Iterable<T> iterableB){\n  Iterator<T> iteratorA=iterableA.iterator();\n  Iterator<T> iteratorB=iterableB.iterator();\n  while (iteratorA.hasNext() && iteratorB.hasNext()) {\n    if (!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())) {\n      return false;\n    }\n  }\n  return !iteratorA.hasNext() && !iteratorB.hasNext();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 41,
        "startColumnNumber" : 10,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!elementEquivalence.equivalent(iteratorA.next(),iteratorB.next())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 41,
    "startColumnNumber" : 41,
    "endLineNumber" : 41,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}