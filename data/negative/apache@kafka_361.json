{
  "id" : 361,
  "expression" : "valueAndTimestampRight",
  "projectName" : "apache@kafka",
  "commitID" : "807c5b4d282e7a7a16d0bb94aa2cda9566a7cc2d",
  "filePath" : "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valueAndTimestampRight",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 113,
      "startColumnNumber" : 49,
      "endLineNumber" : 113,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 113,
        "startColumnNumber" : 34,
        "endLineNumber" : 113,
        "endColumnNumber" : 72
      },
      "nodeContext" : "getValueOrNull(valueAndTimestampRight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 113,
        "startColumnNumber" : 21,
        "endLineNumber" : 113,
        "endColumnNumber" : 72
      },
      "nodeContext" : "valueRight=getValueOrNull(valueAndTimestampRight)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1751,
        "startLineNumber" : 89,
        "startColumnNumber" : 64,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<K,Change<V1>> record){\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.state.ValueAndTimestamp<V2>"
  }, {
    "nodeContext" : "valueAndTimestampRight",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 118,
      "startColumnNumber" : 59,
      "endLineNumber" : 118,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 118,
        "startColumnNumber" : 59,
        "endLineNumber" : 118,
        "endColumnNumber" : 93
      },
      "nodeContext" : "valueAndTimestampRight.timestamp()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 118,
        "startColumnNumber" : 30,
        "endLineNumber" : 118,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Math.max(record.timestamp(),valueAndTimestampRight.timestamp())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 94
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 95
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1751,
        "startLineNumber" : 89,
        "startColumnNumber" : 64,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<K,Change<V1>> record){\n  if (record.key() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  VOut newValue=null;\n  final long resultTimestamp;\n  VOut oldValue=null;\n  final ValueAndTimestamp<V2> valueAndTimestampRight=valueGetter.get(record.key());\n  final V2 valueRight=getValueOrNull(valueAndTimestampRight);\n  if (valueRight == null) {\n    return;\n  }\n  resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n  if (record.value().newValue != null) {\n    newValue=joiner.apply(record.value().newValue,valueRight);\n  }\n  if (sendOldValues && record.value().oldValue != null) {\n    oldValue=joiner.apply(record.value().oldValue,valueRight);\n  }\n  context().forward(record.withValue(new Change<>(newValue,oldValue)).withTimestamp(resultTimestamp));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 95
      },
      "nodeContext" : "resultTimestamp=Math.max(record.timestamp(),valueAndTimestampRight.timestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.state.ValueAndTimestamp<V2>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 113,
    "startColumnNumber" : 49,
    "endLineNumber" : 113,
    "endColumnNumber" : 71
  }, {
    "charLength" : 22,
    "startLineNumber" : 118,
    "startColumnNumber" : 59,
    "endLineNumber" : 118,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}