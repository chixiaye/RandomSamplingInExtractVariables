{
  "id" : 145,
  "expression" : "\"\\n\"",
  "projectName" : "mockito@mockito",
  "commitID" : "b0231d0b50420d141a54186f4fcbd623b81d50f5",
  "filePath" : "src/main/java/org/mockito/internal/runners/RunnerFactory.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 59,
      "startColumnNumber" : 20,
      "endLineNumber" : 59,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 57,
        "startColumnNumber" : 40,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!hasTestMethods(klass)) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 56,
        "startColumnNumber" : 46,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n  return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n}\n catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\ncatch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 49,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1776,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates runner implementation with provided listener supplier\n */\npublic InternalRunner create(Class<?> klass,Supplier<MockitoTestListener> listenerSupplier) throws InvocationTargetException {\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 60,
      "startColumnNumber" : 20,
      "endLineNumber" : 60,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 57,
        "startColumnNumber" : 40,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!hasTestMethods(klass)) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 56,
        "startColumnNumber" : 46,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n  return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n}\n catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\ncatch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 49,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1776,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates runner implementation with provided listener supplier\n */\npublic InternalRunner create(Class<?> klass,Supplier<MockitoTestListener> listenerSupplier) throws InvocationTargetException {\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 61,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 67,
      "endLineNumber" : 61,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 57,
        "startColumnNumber" : 40,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!hasTestMethods(klass)) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 56,
        "startColumnNumber" : 46,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n  return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n}\n catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\ncatch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 49,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1776,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates runner implementation with provided listener supplier\n */\npublic InternalRunner create(Class<?> klass,Supplier<MockitoTestListener> listenerSupplier) throws InvocationTargetException {\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 68,
      "startColumnNumber" : 20,
      "endLineNumber" : 68,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 138
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 67,
        "startColumnNumber" : 18,
        "endLineNumber" : 74,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 66,
        "startColumnNumber" : 30,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n  return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n}\n catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\ncatch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 49,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1776,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates runner implementation with provided listener supplier\n */\npublic InternalRunner create(Class<?> klass,Supplier<MockitoTestListener> listenerSupplier) throws InvocationTargetException {\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 138
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 20,
      "endLineNumber" : 69,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 138
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 67,
        "startColumnNumber" : 18,
        "endLineNumber" : 74,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 66,
        "startColumnNumber" : 30,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n  return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n}\n catch (InvocationTargetException e) {\n  if (!hasTestMethods(klass)) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n  }\n  throw e;\n}\ncatch (Throwable t) {\n  throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 49,
        "startColumnNumber" : 130,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1776,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates runner implementation with provided listener supplier\n */\npublic InternalRunner create(Class<?> klass,Supplier<MockitoTestListener> listenerSupplier) throws InvocationTargetException {\n  try {\n    String runnerClassName=\"org.mockito.internal.runners.DefaultInternalRunner\";\n    return new RunnerProvider().newInstance(runnerClassName,klass,listenerSupplier);\n  }\n catch (  InvocationTargetException e) {\n    if (!hasTestMethods(klass)) {\n      throw new MockitoException(\"\\n\" + \"\\n\" + \"No tests found in \" + klass.getSimpleName() + \"\\n\"+ \"Haven't you forgot @Test annotation?\\n\",e);\n    }\n    throw e;\n  }\ncatch (  Throwable t) {\n    throw new MockitoException(\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 138
      },
      "nodeContext" : "\"\\n\" + \"\\n\" + \"MockitoRunner can only be used with JUnit 4.5 or higher.\\n\"+ \"You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\\n\"+ \"Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\\n\"+ \"If you get this error despite using JUnit 4.5 or higher then please report this error to the mockito mailing list.\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 59,
    "startColumnNumber" : 20,
    "endLineNumber" : 59,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 60,
    "startColumnNumber" : 20,
    "endLineNumber" : 60,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 67,
    "endLineNumber" : 61,
    "endColumnNumber" : 71
  }, {
    "charLength" : 4,
    "startLineNumber" : 68,
    "startColumnNumber" : 20,
    "endLineNumber" : 68,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 20,
    "endLineNumber" : 69,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 0
  } ]
}