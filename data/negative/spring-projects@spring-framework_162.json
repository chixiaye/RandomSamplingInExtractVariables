{
  "id" : 162,
  "expression" : "NO_VALUE",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/SpringConfigurator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NO_VALUE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 117,
      "startColumnNumber" : 39,
      "endLineNumber" : 117,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 48
      },
      "nodeContext" : "beanNamesByType.put(endpointClass,NO_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "beanNamesByType.put(endpointClass,NO_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  beanNamesByType.put(endpointClass,NO_VALUE);\n  if (names.length > 1) {\n    throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 122,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (names.length == 1) {\n  beanNamesByType.put(endpointClass,names[0]);\n}\n else {\n  beanNamesByType.put(endpointClass,NO_VALUE);\n  if (names.length > 1) {\n    throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 111,
        "startColumnNumber" : 51,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String[] names=wac.getBeanNamesForType(endpointClass);\n  if (names.length == 1) {\n    beanNamesByType.put(endpointClass,names[0]);\n  }\n else {\n    beanNamesByType.put(endpointClass,NO_VALUE);\n    if (names.length > 1) {\n      throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!beanNamesByType.containsKey(endpointClass)) {\n  String[] names=wac.getBeanNamesForType(endpointClass);\n  if (names.length == 1) {\n    beanNamesByType.put(endpointClass,names[0]);\n  }\n else {\n    beanNamesByType.put(endpointClass,NO_VALUE);\n    if (names.length > 1) {\n      throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 102,
        "startColumnNumber" : 85,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String wacId=wac.getId();\n  Map<Class<?>,String> beanNamesByType=cache.get(wacId);\n  if (beanNamesByType == null) {\n    beanNamesByType=new ConcurrentHashMap<>();\n    cache.put(wacId,beanNamesByType);\n  }\n  if (!beanNamesByType.containsKey(endpointClass)) {\n    String[] names=wac.getBeanNamesForType(endpointClass);\n    if (names.length == 1) {\n      beanNamesByType.put(endpointClass,names[0]);\n    }\n else {\n      beanNamesByType.put(endpointClass,NO_VALUE);\n      if (names.length > 1) {\n        throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n      }\n    }\n  }\n  String beanName=beanNamesByType.get(endpointClass);\n  return (NO_VALUE.equals(beanName) ? null : beanName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Nullable private String getBeanNameByType(WebApplicationContext wac,Class<?> endpointClass){\n  String wacId=wac.getId();\n  Map<Class<?>,String> beanNamesByType=cache.get(wacId);\n  if (beanNamesByType == null) {\n    beanNamesByType=new ConcurrentHashMap<>();\n    cache.put(wacId,beanNamesByType);\n  }\n  if (!beanNamesByType.containsKey(endpointClass)) {\n    String[] names=wac.getBeanNamesForType(endpointClass);\n    if (names.length == 1) {\n      beanNamesByType.put(endpointClass,names[0]);\n    }\n else {\n      beanNamesByType.put(endpointClass,NO_VALUE);\n      if (names.length > 1) {\n        throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n      }\n    }\n  }\n  String beanName=beanNamesByType.get(endpointClass);\n  return (NO_VALUE.equals(beanName) ? null : beanName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "beanNamesByType.put(endpointClass,NO_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "NO_VALUE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 126,
      "startColumnNumber" : 10,
      "endLineNumber" : 126,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 126,
        "startColumnNumber" : 10,
        "endLineNumber" : 126,
        "endColumnNumber" : 35
      },
      "nodeContext" : "NO_VALUE.equals(beanName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 126,
        "startColumnNumber" : 10,
        "endLineNumber" : 126,
        "endColumnNumber" : 53
      },
      "nodeContext" : "NO_VALUE.equals(beanName) ? null : beanName",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 126,
        "startColumnNumber" : 9,
        "endLineNumber" : 126,
        "endColumnNumber" : 54
      },
      "nodeContext" : "(NO_VALUE.equals(beanName) ? null : beanName)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return (NO_VALUE.equals(beanName) ? null : beanName);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 102,
        "startColumnNumber" : 85,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String wacId=wac.getId();\n  Map<Class<?>,String> beanNamesByType=cache.get(wacId);\n  if (beanNamesByType == null) {\n    beanNamesByType=new ConcurrentHashMap<>();\n    cache.put(wacId,beanNamesByType);\n  }\n  if (!beanNamesByType.containsKey(endpointClass)) {\n    String[] names=wac.getBeanNamesForType(endpointClass);\n    if (names.length == 1) {\n      beanNamesByType.put(endpointClass,names[0]);\n    }\n else {\n      beanNamesByType.put(endpointClass,NO_VALUE);\n      if (names.length > 1) {\n        throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n      }\n    }\n  }\n  String beanName=beanNamesByType.get(endpointClass);\n  return (NO_VALUE.equals(beanName) ? null : beanName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Nullable private String getBeanNameByType(WebApplicationContext wac,Class<?> endpointClass){\n  String wacId=wac.getId();\n  Map<Class<?>,String> beanNamesByType=cache.get(wacId);\n  if (beanNamesByType == null) {\n    beanNamesByType=new ConcurrentHashMap<>();\n    cache.put(wacId,beanNamesByType);\n  }\n  if (!beanNamesByType.containsKey(endpointClass)) {\n    String[] names=wac.getBeanNamesForType(endpointClass);\n    if (names.length == 1) {\n      beanNamesByType.put(endpointClass,names[0]);\n    }\n else {\n      beanNamesByType.put(endpointClass,NO_VALUE);\n      if (names.length > 1) {\n        throw new IllegalStateException(\"Found multiple @ServerEndpoint's of type [\" + endpointClass.getName() + \"]: bean names \"+ Arrays.asList(names));\n      }\n    }\n  }\n  String beanName=beanNamesByType.get(endpointClass);\n  return (NO_VALUE.equals(beanName) ? null : beanName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return (NO_VALUE.equals(beanName) ? null : beanName);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 117,
    "startColumnNumber" : 39,
    "endLineNumber" : 117,
    "endColumnNumber" : 47
  }, {
    "charLength" : 8,
    "startLineNumber" : 126,
    "startColumnNumber" : 10,
    "endLineNumber" : 126,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}