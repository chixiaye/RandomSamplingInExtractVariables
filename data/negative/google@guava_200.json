{
  "id" : 200,
  "expression" : "n2",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/benchmark/com/google/common/math/BigIntegerMathBenchmark.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 63,
      "startColumnNumber" : 17,
      "endLineNumber" : 63,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.AssertStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 19
      },
      "nodeContext" : "n1 <= n2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 20
      },
      "nodeContext" : "assert n1 <= n2;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 20
      },
      "nodeContext" : "assert n1 <= n2;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 64,
      "startColumnNumber" : 21,
      "endLineNumber" : 64,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 33
      },
      "nodeContext" : "IntMath.log2(n2,CEILING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n  long result=1;\n  for (int i=n1 + 1; i <= n2; i++) {\n    result*=i;\n  }\n  return BigInteger.valueOf(result);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 64,
      "startColumnNumber" : 37,
      "endLineNumber" : 64,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 64,
        "startColumnNumber" : 37,
        "endLineNumber" : 64,
        "endColumnNumber" : 44
      },
      "nodeContext" : "n2 - n1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 64,
        "startColumnNumber" : 36,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(n2 - n1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n  long result=1;\n  for (int i=n1 + 1; i <= n2; i++) {\n    result*=i;\n  }\n  return BigInteger.valueOf(result);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 61
      },
      "nodeContext" : "IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 67,
      "startColumnNumber" : 32,
      "endLineNumber" : 67,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 67,
        "startColumnNumber" : 27,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i <= n2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=n1 + 1; i <= n2; i++) {\n  result*=i;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 64,
        "startColumnNumber" : 63,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long result=1;\n  for (int i=n1 + 1; i <= n2; i++) {\n    result*=i;\n  }\n  return BigInteger.valueOf(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n  long result=1;\n  for (int i=n1 + 1; i <= n2; i++) {\n    result*=i;\n  }\n  return BigInteger.valueOf(result);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 67,
        "startColumnNumber" : 27,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i <= n2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 77,
      "startColumnNumber" : 20,
      "endLineNumber" : 77,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 77,
        "startColumnNumber" : 15,
        "endLineNumber" : 77,
        "endColumnNumber" : 22
      },
      "nodeContext" : "n1 + n2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 77,
        "startColumnNumber" : 14,
        "endLineNumber" : 77,
        "endColumnNumber" : 23
      },
      "nodeContext" : "(n1 + n2)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 77,
        "startColumnNumber" : 14,
        "endLineNumber" : 77,
        "endColumnNumber" : 29
      },
      "nodeContext" : "(n1 + n2) >>> 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 29
      },
      "nodeContext" : "mid=(n1 + n2) >>> 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int mid=(n1 + n2) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int mid=(n1 + n2) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 78,
      "startColumnNumber" : 68,
      "endLineNumber" : 78,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 46,
        "endLineNumber" : 78,
        "endColumnNumber" : 71
      },
      "nodeContext" : "oldSlowFactorial(mid,n2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 78,
        "startColumnNumber" : 11,
        "endLineNumber" : 78,
        "endColumnNumber" : 72
      },
      "nodeContext" : "oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 62,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the product of  {@code n1} exclusive through {@code n2} inclusive. \n */\nprivate static BigInteger oldSlowFactorial(int n1,int n2){\n  assert n1 <= n2;\n  if (IntMath.log2(n2,CEILING) * (n2 - n1) < Long.SIZE - 1) {\n    long result=1;\n    for (int i=n1 + 1; i <= n2; i++) {\n      result*=i;\n    }\n    return BigInteger.valueOf(result);\n  }\n  int mid=(n1 + n2) >>> 1;\n  return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return oldSlowFactorial(n1,mid).multiply(oldSlowFactorial(mid,n2));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 63,
    "startColumnNumber" : 17,
    "endLineNumber" : 63,
    "endColumnNumber" : 19
  }, {
    "charLength" : 2,
    "startLineNumber" : 64,
    "startColumnNumber" : 21,
    "endLineNumber" : 64,
    "endColumnNumber" : 23
  }, {
    "charLength" : 2,
    "startLineNumber" : 64,
    "startColumnNumber" : 37,
    "endLineNumber" : 64,
    "endColumnNumber" : 39
  }, {
    "charLength" : 2,
    "startLineNumber" : 67,
    "startColumnNumber" : 32,
    "endLineNumber" : 67,
    "endColumnNumber" : 34
  }, {
    "charLength" : 2,
    "startLineNumber" : 77,
    "startColumnNumber" : 20,
    "endLineNumber" : 77,
    "endColumnNumber" : 22
  }, {
    "charLength" : 2,
    "startLineNumber" : 78,
    "startColumnNumber" : 68,
    "endLineNumber" : 78,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}