{
  "id" : 381,
  "expression" : "JDBCUtils.safeGetLong(dbResult,\"io_cost\")",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/model/plan/OraclePlanNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JDBCUtils.safeGetLong(dbResult,\"io_cost\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 307,
      "startColumnNumber" : 22,
      "endLineNumber" : 307,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.ioCost=JDBCUtils.safeGetLong(dbResult,\"io_cost\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.ioCost=JDBCUtils.safeGetLong(dbResult,\"io_cost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2848,
        "startLineNumber" : 278,
        "startColumnNumber" : 132,
        "endLineNumber" : 323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.dataSource=dataSource;\n  this.statementId=JDBCUtils.safeGetString(dbResult,\"statement_id\");\n  this.plan_id=JDBCUtils.safeGetLong(dbResult,\"plan_id\");\n  this.timestamp=JDBCUtils.safeGetTimestamp(dbResult,\"timestamp\");\n  this.remarks=JDBCUtils.safeGetString(dbResult,\"remarks\");\n  this.operation=JDBCUtils.safeGetString(dbResult,\"operation\");\n  this.options=JDBCUtils.safeGetString(dbResult,\"options\");\n  this.objectNode=JDBCUtils.safeGetString(dbResult,\"object_node\");\n  this.objectOwner=JDBCUtils.safeGetString(dbResult,\"object_owner\");\n  this.objectName=JDBCUtils.safeGetString(dbResult,\"object_name\");\n  this.objectAlias=JDBCUtils.safeGetString(dbResult,\"object_alias\");\n  this.objectInstance=JDBCUtils.safeGetLong(dbResult,\"object_instance\");\n  this.objectType=JDBCUtils.safeGetString(dbResult,\"object_type\");\n  this.optimizer=JDBCUtils.safeGetString(dbResult,\"optimizer\");\n  this.searchColumns=JDBCUtils.safeGetLong(dbResult,\"search_columns\");\n  this.id=JDBCUtils.safeGetInt(dbResult,\"id\");\n  this.depth=JDBCUtils.safeGetInt(dbResult,\"depth\");\n  this.position=JDBCUtils.safeGetInt(dbResult,\"position\");\n  this.cost=JDBCUtils.safeGetLong(dbResult,\"cost\");\n  this.cardinality=JDBCUtils.safeGetLong(dbResult,\"cardinality\");\n  this.bytes=JDBCUtils.safeGetLong(dbResult,\"bytes\");\n  this.otherTag=JDBCUtils.safeGetString(dbResult,\"other_tag\");\n  this.partitionStart=JDBCUtils.safeGetString(dbResult,\"partition_start\");\n  this.partitionStop=JDBCUtils.safeGetString(dbResult,\"partition_stop\");\n  this.partitionId=JDBCUtils.safeGetLong(dbResult,\"partition_id\");\n  this.other=JDBCUtils.safeGetString(dbResult,\"other\");\n  this.distribution=JDBCUtils.safeGetString(dbResult,\"distribution\");\n  this.cpuCost=JDBCUtils.safeGetLong(dbResult,\"cpu_cost\");\n  this.ioCost=JDBCUtils.safeGetLong(dbResult,\"io_cost\");\n  this.tempSpace=JDBCUtils.safeGetLong(dbResult,\"temp_space\");\n  this.accessPredicates=JDBCUtils.safeGetString(dbResult,\"access_predicates\");\n  this.filterPredicates=JDBCUtils.safeGetString(dbResult,\"filter_predicates\");\n  this.projection=JDBCUtils.safeGetString(dbResult,\"projection\");\n  this.time=JDBCUtils.safeGetLong(dbResult,\"time\");\n  this.qblockName=JDBCUtils.safeGetString(dbResult,\"qblock_name\");\n  this.otherXml=JDBCUtils.safeGetString(dbResult,\"other_xml\");\n  Integer parent_id=JDBCUtils.safeGetInteger(dbResult,\"parent_id\");\n  if (parent_id != null) {\n    parent=prevNodes.get(parent_id);\n  }\n  if (parent != null) {\n    parent.addChild(this);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 389,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public OraclePlanNode(OracleDataSource dataSource,IntKeyMap<OraclePlanNode> prevNodes,ResultSet dbResult) throws SQLException {\n  this.dataSource=dataSource;\n  this.statementId=JDBCUtils.safeGetString(dbResult,\"statement_id\");\n  this.plan_id=JDBCUtils.safeGetLong(dbResult,\"plan_id\");\n  this.timestamp=JDBCUtils.safeGetTimestamp(dbResult,\"timestamp\");\n  this.remarks=JDBCUtils.safeGetString(dbResult,\"remarks\");\n  this.operation=JDBCUtils.safeGetString(dbResult,\"operation\");\n  this.options=JDBCUtils.safeGetString(dbResult,\"options\");\n  this.objectNode=JDBCUtils.safeGetString(dbResult,\"object_node\");\n  this.objectOwner=JDBCUtils.safeGetString(dbResult,\"object_owner\");\n  this.objectName=JDBCUtils.safeGetString(dbResult,\"object_name\");\n  this.objectAlias=JDBCUtils.safeGetString(dbResult,\"object_alias\");\n  this.objectInstance=JDBCUtils.safeGetLong(dbResult,\"object_instance\");\n  this.objectType=JDBCUtils.safeGetString(dbResult,\"object_type\");\n  this.optimizer=JDBCUtils.safeGetString(dbResult,\"optimizer\");\n  this.searchColumns=JDBCUtils.safeGetLong(dbResult,\"search_columns\");\n  this.id=JDBCUtils.safeGetInt(dbResult,\"id\");\n  this.depth=JDBCUtils.safeGetInt(dbResult,\"depth\");\n  this.position=JDBCUtils.safeGetInt(dbResult,\"position\");\n  this.cost=JDBCUtils.safeGetLong(dbResult,\"cost\");\n  this.cardinality=JDBCUtils.safeGetLong(dbResult,\"cardinality\");\n  this.bytes=JDBCUtils.safeGetLong(dbResult,\"bytes\");\n  this.otherTag=JDBCUtils.safeGetString(dbResult,\"other_tag\");\n  this.partitionStart=JDBCUtils.safeGetString(dbResult,\"partition_start\");\n  this.partitionStop=JDBCUtils.safeGetString(dbResult,\"partition_stop\");\n  this.partitionId=JDBCUtils.safeGetLong(dbResult,\"partition_id\");\n  this.other=JDBCUtils.safeGetString(dbResult,\"other\");\n  this.distribution=JDBCUtils.safeGetString(dbResult,\"distribution\");\n  this.cpuCost=JDBCUtils.safeGetLong(dbResult,\"cpu_cost\");\n  this.ioCost=JDBCUtils.safeGetLong(dbResult,\"io_cost\");\n  this.tempSpace=JDBCUtils.safeGetLong(dbResult,\"temp_space\");\n  this.accessPredicates=JDBCUtils.safeGetString(dbResult,\"access_predicates\");\n  this.filterPredicates=JDBCUtils.safeGetString(dbResult,\"filter_predicates\");\n  this.projection=JDBCUtils.safeGetString(dbResult,\"projection\");\n  this.time=JDBCUtils.safeGetLong(dbResult,\"time\");\n  this.qblockName=JDBCUtils.safeGetString(dbResult,\"qblock_name\");\n  this.otherXml=JDBCUtils.safeGetString(dbResult,\"other_xml\");\n  Integer parent_id=JDBCUtils.safeGetInteger(dbResult,\"parent_id\");\n  if (parent_id != null) {\n    parent=prevNodes.get(parent_id);\n  }\n  if (parent != null) {\n    parent.addChild(this);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 409,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.ioCost=JDBCUtils.safeGetLong(dbResult,\"io_cost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 307,
    "startColumnNumber" : 22,
    "endLineNumber" : 307,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}