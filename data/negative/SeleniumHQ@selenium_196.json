{
  "id" : 196,
  "expression" : "toVisit.iterator()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/config/AnnotatedConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "toVisit.iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 129,
      "startColumnNumber" : 14,
      "endLineNumber" : 129,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 129,
        "startColumnNumber" : 14,
        "endLineNumber" : 129,
        "endColumnNumber" : 39
      },
      "nodeContext" : "toVisit.iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 39
      },
      "nodeContext" : "clazz=toVisit.iterator().next()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 40
      },
      "nodeContext" : "clazz=toVisit.iterator().next();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 128,
        "startColumnNumber" : 31,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  clazz=toVisit.iterator().next();\n  toVisit.remove(clazz);\n  seen.add(clazz);\n  Arrays.stream(clazz.getDeclaredFields()).filter(field -> field.getAnnotation(ConfigValue.class) != null).forEach(toSet::addLast);\n  Class<?> toAdd=clazz.getSuperclass();\n  if (toAdd != null && !Object.class.equals(toAdd) && !seen.contains(toAdd)) {\n    toVisit.add(toAdd);\n  }\n  Arrays.stream(clazz.getInterfaces()).filter(face -> !seen.contains(face)).forEach(toVisit::add);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!toVisit.isEmpty()) {\n  clazz=toVisit.iterator().next();\n  toVisit.remove(clazz);\n  seen.add(clazz);\n  Arrays.stream(clazz.getDeclaredFields()).filter(field -> field.getAnnotation(ConfigValue.class) != null).forEach(toSet::addLast);\n  Class<?> toAdd=clazz.getSuperclass();\n  if (toAdd != null && !Object.class.equals(toAdd) && !seen.contains(toAdd)) {\n    toVisit.add(toAdd);\n  }\n  Arrays.stream(clazz.getInterfaces()).filter(face -> !seen.contains(face)).forEach(toVisit::add);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 121,
        "startColumnNumber" : 56,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Deque<Field> toSet=new ArrayDeque<>();\n  Set<Class<?>> toVisit=new HashSet<>();\n  toVisit.add(clazz);\n  Set<Class<?>> seen=new HashSet<>();\n  while (!toVisit.isEmpty()) {\n    clazz=toVisit.iterator().next();\n    toVisit.remove(clazz);\n    seen.add(clazz);\n    Arrays.stream(clazz.getDeclaredFields()).filter(field -> field.getAnnotation(ConfigValue.class) != null).forEach(toSet::addLast);\n    Class<?> toAdd=clazz.getSuperclass();\n    if (toAdd != null && !Object.class.equals(toAdd) && !seen.contains(toAdd)) {\n      toVisit.add(toAdd);\n    }\n    Arrays.stream(clazz.getInterfaces()).filter(face -> !seen.contains(face)).forEach(toVisit::add);\n  }\n  return toSet;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 818,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Deque<Field> findConfigFields(Class<?> clazz){\n  Deque<Field> toSet=new ArrayDeque<>();\n  Set<Class<?>> toVisit=new HashSet<>();\n  toVisit.add(clazz);\n  Set<Class<?>> seen=new HashSet<>();\n  while (!toVisit.isEmpty()) {\n    clazz=toVisit.iterator().next();\n    toVisit.remove(clazz);\n    seen.add(clazz);\n    Arrays.stream(clazz.getDeclaredFields()).filter(field -> field.getAnnotation(ConfigValue.class) != null).forEach(toSet::addLast);\n    Class<?> toAdd=clazz.getSuperclass();\n    if (toAdd != null && !Object.class.equals(toAdd) && !seen.contains(toAdd)) {\n      toVisit.add(toAdd);\n    }\n    Arrays.stream(clazz.getInterfaces()).filter(face -> !seen.contains(face)).forEach(toVisit::add);\n  }\n  return toSet;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 40
      },
      "nodeContext" : "clazz=toVisit.iterator().next();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Iterator<java.lang.Class<?>>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 129,
    "startColumnNumber" : 14,
    "endLineNumber" : 129,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}