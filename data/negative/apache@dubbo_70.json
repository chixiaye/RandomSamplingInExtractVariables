{
  "id" : 70,
  "expression" : "true",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/filter/ContextFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 134,
      "startColumnNumber" : 41,
      "endLineNumber" : 134,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 46
      },
      "nodeContext" : "context.clearAfterEachInvoke(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 47
      },
      "nodeContext" : "context.clearAfterEachInvoke(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 133,
        "startColumnNumber" : 18,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  context.clearAfterEachInvoke(true);\n  RpcContext.removeServerAttachment();\n  RpcContext.removeServiceContext();\n  RpcContext.getClientAttachment().removeAttachment(TIME_COUNTDOWN_KEY);\n  RpcContext.removeServerContext();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  context.clearAfterEachInvoke(false);\n  return invoker.invoke(invocation);\n}\n  finally {\n  context.clearAfterEachInvoke(true);\n  RpcContext.removeServerAttachment();\n  RpcContext.removeServiceContext();\n  RpcContext.getClientAttachment().removeAttachment(TIME_COUNTDOWN_KEY);\n  RpcContext.removeServerContext();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2620,
        "startLineNumber" : 83,
        "startColumnNumber" : 88,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> attachments=invocation.getObjectAttachments();\n  if (attachments != null) {\n    Map<String,Object> newAttach=new HashMap<>(attachments.size());\n    for (    Map.Entry<String,Object> entry : attachments.entrySet()) {\n      String key=entry.getKey();\n      if (!UNLOADING_KEYS.contains(key)) {\n        newAttach.put(key,entry.getValue());\n      }\n    }\n    attachments=newAttach;\n  }\n  RpcContext.getServiceContext().setInvoker(invoker).setInvocation(invocation);\n  RpcContext context=RpcContext.getServerAttachment();\n  context.setLocalAddress(invoker.getUrl().getHost(),invoker.getUrl().getPort());\n  String remoteApplication=(String)invocation.getAttachment(REMOTE_APPLICATION_KEY);\n  if (StringUtils.isNotEmpty(remoteApplication)) {\n    RpcContext.getServiceContext().setRemoteApplicationName(remoteApplication);\n  }\n else {\n    RpcContext.getServiceContext().setRemoteApplicationName((String)context.getAttachment(REMOTE_APPLICATION_KEY));\n  }\n  long timeout=RpcUtils.getTimeout(invocation,-1);\n  if (timeout != -1) {\n    RpcContext.getClientAttachment().setObjectAttachment(TIME_COUNTDOWN_KEY,TimeoutCountDown.newCountDown(timeout,TimeUnit.MILLISECONDS));\n  }\n  if (attachments != null) {\n    if (context.getObjectAttachments() != null) {\n      context.getObjectAttachments().putAll(attachments);\n    }\n else {\n      context.setObjectAttachments(attachments);\n    }\n  }\n  if (invocation instanceof RpcInvocation) {\n    ((RpcInvocation)invocation).setInvoker(invoker);\n  }\n  try {\n    context.clearAfterEachInvoke(false);\n    return invoker.invoke(invocation);\n  }\n  finally {\n    context.clearAfterEachInvoke(true);\n    RpcContext.removeServerAttachment();\n    RpcContext.removeServiceContext();\n    RpcContext.getClientAttachment().removeAttachment(TIME_COUNTDOWN_KEY);\n    RpcContext.removeServerContext();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2718,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Result invoke(Invoker<?> invoker,Invocation invocation) throws RpcException {\n  Map<String,Object> attachments=invocation.getObjectAttachments();\n  if (attachments != null) {\n    Map<String,Object> newAttach=new HashMap<>(attachments.size());\n    for (    Map.Entry<String,Object> entry : attachments.entrySet()) {\n      String key=entry.getKey();\n      if (!UNLOADING_KEYS.contains(key)) {\n        newAttach.put(key,entry.getValue());\n      }\n    }\n    attachments=newAttach;\n  }\n  RpcContext.getServiceContext().setInvoker(invoker).setInvocation(invocation);\n  RpcContext context=RpcContext.getServerAttachment();\n  context.setLocalAddress(invoker.getUrl().getHost(),invoker.getUrl().getPort());\n  String remoteApplication=(String)invocation.getAttachment(REMOTE_APPLICATION_KEY);\n  if (StringUtils.isNotEmpty(remoteApplication)) {\n    RpcContext.getServiceContext().setRemoteApplicationName(remoteApplication);\n  }\n else {\n    RpcContext.getServiceContext().setRemoteApplicationName((String)context.getAttachment(REMOTE_APPLICATION_KEY));\n  }\n  long timeout=RpcUtils.getTimeout(invocation,-1);\n  if (timeout != -1) {\n    RpcContext.getClientAttachment().setObjectAttachment(TIME_COUNTDOWN_KEY,TimeoutCountDown.newCountDown(timeout,TimeUnit.MILLISECONDS));\n  }\n  if (attachments != null) {\n    if (context.getObjectAttachments() != null) {\n      context.getObjectAttachments().putAll(attachments);\n    }\n else {\n      context.setObjectAttachments(attachments);\n    }\n  }\n  if (invocation instanceof RpcInvocation) {\n    ((RpcInvocation)invocation).setInvoker(invoker);\n  }\n  try {\n    context.clearAfterEachInvoke(false);\n    return invoker.invoke(invocation);\n  }\n  finally {\n    context.clearAfterEachInvoke(true);\n    RpcContext.removeServerAttachment();\n    RpcContext.removeServiceContext();\n    RpcContext.getClientAttachment().removeAttachment(TIME_COUNTDOWN_KEY);\n    RpcContext.removeServerContext();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 276,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 47
      },
      "nodeContext" : "context.clearAfterEachInvoke(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 134,
    "startColumnNumber" : 41,
    "endLineNumber" : 134,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}