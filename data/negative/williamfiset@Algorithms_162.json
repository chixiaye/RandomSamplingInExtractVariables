{
  "id" : 162,
  "expression" : "solver",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/TarjanSccSolverAdjacencyList.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "solver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 117,
      "startColumnNumber" : 17,
      "endLineNumber" : 117,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 117,
        "startColumnNumber" : 17,
        "endLineNumber" : 117,
        "endColumnNumber" : 33
      },
      "nodeContext" : "solver.getSccs()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 117,
        "startColumnNumber" : 10,
        "endLineNumber" : 117,
        "endColumnNumber" : 33
      },
      "nodeContext" : "sccs=solver.getSccs()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int[] sccs=solver.getSccs();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 97,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=8;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,6,0);\n  addEdge(graph,6,2);\n  addEdge(graph,3,4);\n  addEdge(graph,6,4);\n  addEdge(graph,2,0);\n  addEdge(graph,0,1);\n  addEdge(graph,4,5);\n  addEdge(graph,5,6);\n  addEdge(graph,3,7);\n  addEdge(graph,7,5);\n  addEdge(graph,1,2);\n  addEdge(graph,7,3);\n  addEdge(graph,5,0);\n  TarjanSccSolverAdjacencyList solver=new TarjanSccSolverAdjacencyList(graph);\n  int[] sccs=solver.getSccs();\n  Map<Integer,List<Integer>> multimap=new HashMap<>();\n  for (int i=0; i < n; i++) {\n    if (!multimap.containsKey(sccs[i]))     multimap.put(sccs[i],new ArrayList<>());\n    multimap.get(sccs[i]).add(i);\n  }\n  System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n  for (  List<Integer> scc : multimap.values()) {\n    System.out.println(\"Nodes: \" + scc + \" form a Strongly Connected Component.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1263,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] arg){\n  int n=8;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,6,0);\n  addEdge(graph,6,2);\n  addEdge(graph,3,4);\n  addEdge(graph,6,4);\n  addEdge(graph,2,0);\n  addEdge(graph,0,1);\n  addEdge(graph,4,5);\n  addEdge(graph,5,6);\n  addEdge(graph,3,7);\n  addEdge(graph,7,5);\n  addEdge(graph,1,2);\n  addEdge(graph,7,3);\n  addEdge(graph,5,0);\n  TarjanSccSolverAdjacencyList solver=new TarjanSccSolverAdjacencyList(graph);\n  int[] sccs=solver.getSccs();\n  Map<Integer,List<Integer>> multimap=new HashMap<>();\n  for (int i=0; i < n; i++) {\n    if (!multimap.containsKey(sccs[i]))     multimap.put(sccs[i],new ArrayList<>());\n    multimap.get(sccs[i]).add(i);\n  }\n  System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n  for (  List<Integer> scc : multimap.values()) {\n    System.out.println(\"Nodes: \" + scc + \" form a Strongly Connected Component.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int[] sccs=solver.getSccs();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList"
  }, {
    "nodeContext" : "solver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 129,
      "startColumnNumber" : 71,
      "endLineNumber" : 129,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 129,
        "startColumnNumber" : 71,
        "endLineNumber" : 129,
        "endColumnNumber" : 88
      },
      "nodeContext" : "solver.sccCount()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 89
      },
      "nodeContext" : "System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 90
      },
      "nodeContext" : "System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 97,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=8;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,6,0);\n  addEdge(graph,6,2);\n  addEdge(graph,3,4);\n  addEdge(graph,6,4);\n  addEdge(graph,2,0);\n  addEdge(graph,0,1);\n  addEdge(graph,4,5);\n  addEdge(graph,5,6);\n  addEdge(graph,3,7);\n  addEdge(graph,7,5);\n  addEdge(graph,1,2);\n  addEdge(graph,7,3);\n  addEdge(graph,5,0);\n  TarjanSccSolverAdjacencyList solver=new TarjanSccSolverAdjacencyList(graph);\n  int[] sccs=solver.getSccs();\n  Map<Integer,List<Integer>> multimap=new HashMap<>();\n  for (int i=0; i < n; i++) {\n    if (!multimap.containsKey(sccs[i]))     multimap.put(sccs[i],new ArrayList<>());\n    multimap.get(sccs[i]).add(i);\n  }\n  System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n  for (  List<Integer> scc : multimap.values()) {\n    System.out.println(\"Nodes: \" + scc + \" form a Strongly Connected Component.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1263,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] arg){\n  int n=8;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,6,0);\n  addEdge(graph,6,2);\n  addEdge(graph,3,4);\n  addEdge(graph,6,4);\n  addEdge(graph,2,0);\n  addEdge(graph,0,1);\n  addEdge(graph,4,5);\n  addEdge(graph,5,6);\n  addEdge(graph,3,7);\n  addEdge(graph,7,5);\n  addEdge(graph,1,2);\n  addEdge(graph,7,3);\n  addEdge(graph,5,0);\n  TarjanSccSolverAdjacencyList solver=new TarjanSccSolverAdjacencyList(graph);\n  int[] sccs=solver.getSccs();\n  Map<Integer,List<Integer>> multimap=new HashMap<>();\n  for (int i=0; i < n; i++) {\n    if (!multimap.containsKey(sccs[i]))     multimap.put(sccs[i],new ArrayList<>());\n    multimap.get(sccs[i]).add(i);\n  }\n  System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n  for (  List<Integer> scc : multimap.values()) {\n    System.out.println(\"Nodes: \" + scc + \" form a Strongly Connected Component.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 90
      },
      "nodeContext" : "System.out.printf(\"Number of Strongly Connected Components: %d\\n\",solver.sccCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 117,
    "startColumnNumber" : 17,
    "endLineNumber" : 117,
    "endColumnNumber" : 23
  }, {
    "charLength" : 6,
    "startLineNumber" : 129,
    "startColumnNumber" : 71,
    "endLineNumber" : 129,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}