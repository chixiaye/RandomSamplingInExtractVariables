{
  "id" : 373,
  "expression" : "pattern.isPresent()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-local-file/src/main/java/com/facebook/presto/localfile/DataLocation.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pattern.isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 51,
      "startColumnNumber" : 30,
      "endLineNumber" : 51,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!file.exists() && pattern.isPresent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!file.exists() && pattern.isPresent()) {\n  file.mkdirs();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ResultOfMethodCallIgnored\") @JsonCreator public DataLocation(@JsonProperty(\"location\") String location,@JsonProperty(\"pattern\") Optional<String> pattern){\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!file.exists() && pattern.isPresent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "pattern.isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 56,
      "startColumnNumber" : 12,
      "endLineNumber" : 56,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "pattern.isPresent() && !file.isDirectory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (pattern.isPresent() && !file.isDirectory()) {\n  throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ResultOfMethodCallIgnored\") @JsonCreator public DataLocation(@JsonProperty(\"location\") String location,@JsonProperty(\"pattern\") Optional<String> pattern){\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "pattern.isPresent() && !file.isDirectory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "pattern.isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 61,
      "startColumnNumber" : 25,
      "endLineNumber" : 61,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 44
      },
      "nodeContext" : "!pattern.isPresent()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 66
      },
      "nodeContext" : "!pattern.isPresent() && file.isDirectory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(!pattern.isPresent() && file.isDirectory())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 97
      },
      "nodeContext" : "this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ResultOfMethodCallIgnored\") @JsonCreator public DataLocation(@JsonProperty(\"location\") String location,@JsonProperty(\"pattern\") Optional<String> pattern){\n  requireNonNull(location,\"location is null\");\n  requireNonNull(pattern,\"pattern is null\");\n  File file=new File(location);\n  if (!file.exists() && pattern.isPresent()) {\n    file.mkdirs();\n  }\n  checkArgument(file.exists(),\"location does not exist\");\n  if (pattern.isPresent() && !file.isDirectory()) {\n    throw new IllegalArgumentException(\"pattern may be specified only if location is a directory\");\n  }\n  this.location=file;\n  this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 97
      },
      "nodeContext" : "this.pattern=(!pattern.isPresent() && file.isDirectory()) ? Optional.of(\"*\") : pattern;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 51,
    "startColumnNumber" : 30,
    "endLineNumber" : 51,
    "endColumnNumber" : 49
  }, {
    "charLength" : 19,
    "startLineNumber" : 56,
    "startColumnNumber" : 12,
    "endLineNumber" : 56,
    "endColumnNumber" : 31
  }, {
    "charLength" : 19,
    "startLineNumber" : 61,
    "startColumnNumber" : 25,
    "endLineNumber" : 61,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}