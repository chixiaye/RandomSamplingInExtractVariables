{
  "id" : 62,
  "expression" : "(WindowManager)context.getSystemService(Context.WINDOW_SERVICE)",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/ucrop/src/main/java/com/yalantis/ucrop/util/BitmapLoadUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(WindowManager)context.getSystemService(Context.WINDOW_SERVICE)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 127,
      "startColumnNumber" : 27,
      "endLineNumber" : 127,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 127,
        "startColumnNumber" : 22,
        "endLineNumber" : 127,
        "endColumnNumber" : 91
      },
      "nodeContext" : "wm=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 92
      },
      "nodeContext" : "WindowManager wm=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 126,
        "startColumnNumber" : 71,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  WindowManager wm=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n  Display display;\n  int width, height;\n  Point size=new Point();\n  if (wm != null) {\n    display=wm.getDefaultDisplay();\n    display.getSize(size);\n  }\n  width=size.x;\n  height=size.y;\n  int maxBitmapSize=(int)Math.sqrt(Math.pow(width,2) + Math.pow(height,2));\n  Canvas canvas=new Canvas();\n  final int maxCanvasSize=Math.min(canvas.getMaximumBitmapWidth(),canvas.getMaximumBitmapHeight());\n  if (maxCanvasSize > 0) {\n    maxBitmapSize=Math.min(maxBitmapSize,maxCanvasSize);\n  }\n  final int maxTextureSize=EglUtils.getMaxTextureSize();\n  if (maxTextureSize > 0) {\n    maxBitmapSize=Math.min(maxBitmapSize,maxTextureSize);\n  }\n  Log.d(TAG,\"maxBitmapSize: \" + maxBitmapSize);\n  return maxBitmapSize;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method calculates maximum size of both width and height of bitmap. It is twice the device screen diagonal for default implementation (extra quality to zoom image). Size cannot exceed max texture size.\n * @return - max bitmap size in pixels.\n */\n@SuppressWarnings({\"SuspiciousNameCombination\",\"deprecation\"}) public static int calculateMaxBitmapSize(@NonNull Context context){\n  WindowManager wm=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n  Display display;\n  int width, height;\n  Point size=new Point();\n  if (wm != null) {\n    display=wm.getDefaultDisplay();\n    display.getSize(size);\n  }\n  width=size.x;\n  height=size.y;\n  int maxBitmapSize=(int)Math.sqrt(Math.pow(width,2) + Math.pow(height,2));\n  Canvas canvas=new Canvas();\n  final int maxCanvasSize=Math.min(canvas.getMaximumBitmapWidth(),canvas.getMaximumBitmapHeight());\n  if (maxCanvasSize > 0) {\n    maxBitmapSize=Math.min(maxBitmapSize,maxCanvasSize);\n  }\n  final int maxTextureSize=EglUtils.getMaxTextureSize();\n  if (maxTextureSize > 0) {\n    maxBitmapSize=Math.min(maxBitmapSize,maxTextureSize);\n  }\n  Log.d(TAG,\"maxBitmapSize: \" + maxBitmapSize);\n  return maxBitmapSize;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 92
      },
      "nodeContext" : "WindowManager wm=(WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "com.yalantis.ucrop.util.WindowManager"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 127,
    "startColumnNumber" : 27,
    "endLineNumber" : 127,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}