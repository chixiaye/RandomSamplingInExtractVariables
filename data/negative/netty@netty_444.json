{
  "id" : 444,
  "expression" : "(byte)0x00",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/test/java/io/netty/buffer/api/tests/BufferShortOffsettedAccessorsTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 300,
      "startColumnNumber" : 25,
      "endLineNumber" : 300,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 300,
        "startColumnNumber" : 12,
        "endLineNumber" : 300,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 300,
        "startColumnNumber" : 12,
        "endLineNumber" : 300,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 300,
        "startColumnNumber" : 12,
        "endLineNumber" : 300,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  }, {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 301,
      "startColumnNumber" : 25,
      "endLineNumber" : 301,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 301,
        "startColumnNumber" : 12,
        "endLineNumber" : 301,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 301,
        "startColumnNumber" : 12,
        "endLineNumber" : 301,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 301,
        "startColumnNumber" : 12,
        "endLineNumber" : 301,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  }, {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 302,
      "startColumnNumber" : 25,
      "endLineNumber" : 302,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 302,
        "startColumnNumber" : 12,
        "endLineNumber" : 302,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 302,
        "startColumnNumber" : 12,
        "endLineNumber" : 302,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 302,
        "startColumnNumber" : 12,
        "endLineNumber" : 302,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  }, {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 303,
      "startColumnNumber" : 25,
      "endLineNumber" : 303,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 303,
        "startColumnNumber" : 12,
        "endLineNumber" : 303,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 303,
        "startColumnNumber" : 12,
        "endLineNumber" : 303,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 303,
        "startColumnNumber" : 12,
        "endLineNumber" : 303,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  }, {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 304,
      "startColumnNumber" : 25,
      "endLineNumber" : 304,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 304,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 304,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 304,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  }, {
    "nodeContext" : "(byte)0x00",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 305,
      "startColumnNumber" : 25,
      "endLineNumber" : 305,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 305,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 305,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 294,
        "startColumnNumber" : 49,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  short value=0x0102;\n  buf.setShort(0,value);\n  buf.writerOffset(Long.BYTES);\n  assertEquals((byte)0x01,buf.readByte());\n  assertEquals((byte)0x02,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n  assertEquals((byte)0x00,buf.readByte());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 292,
        "startColumnNumber" : 76,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") void offsettedSetOfShortMustHaveDefaultEndianByteOrder(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    short value=0x0102;\n    buf.setShort(0,value);\n    buf.writerOffset(Long.BYTES);\n    assertEquals((byte)0x01,buf.readByte());\n    assertEquals((byte)0x02,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n    assertEquals((byte)0x00,buf.readByte());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 305,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((byte)0x00,buf.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 300,
    "startColumnNumber" : 25,
    "endLineNumber" : 300,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 301,
    "startColumnNumber" : 25,
    "endLineNumber" : 301,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 302,
    "startColumnNumber" : 25,
    "endLineNumber" : 302,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 303,
    "startColumnNumber" : 25,
    "endLineNumber" : 303,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 304,
    "startColumnNumber" : 25,
    "endLineNumber" : 304,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 305,
    "startColumnNumber" : 25,
    "endLineNumber" : 305,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}