{
  "id" : 160,
  "expression" : "compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\")",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/test/java/org/apache/flink/table/planner/runtime/stream/jsonplan/CalcJsonPlanITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 476,
      "startLineNumber" : 73,
      "startColumnNumber" : 8,
      "endLineNumber" : 81,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 24
      },
      "nodeContext" : "compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\").await()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 25
      },
      "nodeContext" : "compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\").await();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tableEnv.createTemporaryFunction(\"udf1\",new JavaFunc0());\n  tableEnv.createTemporarySystemFunction(\"udf2\",new JavaFunc2());\n  tableEnv.createFunction(\"udf3\",UdfWithOpen.class);\n  createTestValuesSourceTable(\"MyTable\",JavaScalaConversionUtil.toJava(TestData.smallData3()),\"a int\",\"b bigint\",\"c varchar\");\n  File sinkPath=createTestCsvSinkTable(\"MySink\",\"a int\",\"a1 varchar\",\"b bigint\",\"c1 varchar\",\"c2 varchar\");\n  compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\").await();\n  assertResult(Arrays.asList(\"2,2,2,Hello2,$Hello\",\"3,3,2,Hello world3,$Hello wo\"),sinkPath);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1277,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCalcWithUdf() throws Exception {\n  tableEnv.createTemporaryFunction(\"udf1\",new JavaFunc0());\n  tableEnv.createTemporarySystemFunction(\"udf2\",new JavaFunc2());\n  tableEnv.createFunction(\"udf3\",UdfWithOpen.class);\n  createTestValuesSourceTable(\"MyTable\",JavaScalaConversionUtil.toJava(TestData.smallData3()),\"a int\",\"b bigint\",\"c varchar\");\n  File sinkPath=createTestCsvSinkTable(\"MySink\",\"a int\",\"a1 varchar\",\"b bigint\",\"c1 varchar\",\"c2 varchar\");\n  compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\").await();\n  assertResult(Arrays.asList(\"2,2,2,Hello2,$Hello\",\"3,3,2,Hello world3,$Hello wo\"),sinkPath);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 24
      },
      "nodeContext" : "compileSqlAndExecutePlan(\"insert into MySink select \" + \"a, \" + \"cast(a as varchar) as a1, \"+ \"b, \"+ \"udf2(c, a) as c1, \"+ \"udf3(substring(c, 1, 8)) as c2 \"+ \"from MyTable where \"+ \"(udf1(a) > 2 or (a * b) > 1) and b > 0\").await()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 49,
    "type" : "org.apache.flink.table.api.TableResult"
  } ],
  "positionList" : [ {
    "charLength" : 476,
    "startLineNumber" : 73,
    "startColumnNumber" : 8,
    "endLineNumber" : 81,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}