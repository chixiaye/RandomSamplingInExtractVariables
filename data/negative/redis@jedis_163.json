{
  "id" : 163,
  "expression" : "n",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/tests/commands/SortingCommandsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 139,
      "startColumnNumber" : 21,
      "endLineNumber" : 139,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 26
      },
      "nodeContext" : "n > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int n=10; n > 0; n--) {\n  jedis.lpush(\"foo\",String.valueOf(n));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 138,
        "startColumnNumber" : 26,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int n=10; n > 0; n--) {\n    jedis.lpush(\"foo\",String.valueOf(n));\n  }\n  SortingParams sp=new SortingParams();\n  sp.limit(0,3);\n  List<String> result=jedis.sort(\"foo\",sp);\n  List<String> expected=new ArrayList<String>();\n  expected.add(\"1\");\n  expected.add(\"2\");\n  expected.add(\"3\");\n  assertEquals(expected,result);\n  jedis.rpush(bfoo,new byte[]{(byte)'4'});\n  jedis.rpush(bfoo,new byte[]{(byte)'3'});\n  jedis.rpush(bfoo,new byte[]{(byte)'2'});\n  jedis.rpush(bfoo,new byte[]{(byte)'1'});\n  SortingParams bsp=new SortingParams();\n  bsp.limit(0,3);\n  List<byte[]> bresult=jedis.sort(bfoo,bsp);\n  List<byte[]> bexpected=new ArrayList<byte[]>();\n  bexpected.add(b1);\n  bexpected.add(b2);\n  bexpected.add(b3);\n  assertEquals(bexpected,bresult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void sortLimit(){\n  for (int n=10; n > 0; n--) {\n    jedis.lpush(\"foo\",String.valueOf(n));\n  }\n  SortingParams sp=new SortingParams();\n  sp.limit(0,3);\n  List<String> result=jedis.sort(\"foo\",sp);\n  List<String> expected=new ArrayList<String>();\n  expected.add(\"1\");\n  expected.add(\"2\");\n  expected.add(\"3\");\n  assertEquals(expected,result);\n  jedis.rpush(bfoo,new byte[]{(byte)'4'});\n  jedis.rpush(bfoo,new byte[]{(byte)'3'});\n  jedis.rpush(bfoo,new byte[]{(byte)'2'});\n  jedis.rpush(bfoo,new byte[]{(byte)'1'});\n  SortingParams bsp=new SortingParams();\n  bsp.limit(0,3);\n  List<byte[]> bresult=jedis.sort(bfoo,bsp);\n  List<byte[]> bexpected=new ArrayList<byte[]>();\n  bexpected.add(b1);\n  bexpected.add(b2);\n  bexpected.add(b3);\n  assertEquals(bexpected,bresult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 26
      },
      "nodeContext" : "n > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 140,
      "startColumnNumber" : 40,
      "endLineNumber" : 140,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 140,
        "startColumnNumber" : 25,
        "endLineNumber" : 140,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String.valueOf(n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 140,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 43
      },
      "nodeContext" : "jedis.lpush(\"foo\",String.valueOf(n))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 140,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 44
      },
      "nodeContext" : "jedis.lpush(\"foo\",String.valueOf(n));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 139,
        "startColumnNumber" : 33,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  jedis.lpush(\"foo\",String.valueOf(n));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int n=10; n > 0; n--) {\n  jedis.lpush(\"foo\",String.valueOf(n));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 138,
        "startColumnNumber" : 26,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int n=10; n > 0; n--) {\n    jedis.lpush(\"foo\",String.valueOf(n));\n  }\n  SortingParams sp=new SortingParams();\n  sp.limit(0,3);\n  List<String> result=jedis.sort(\"foo\",sp);\n  List<String> expected=new ArrayList<String>();\n  expected.add(\"1\");\n  expected.add(\"2\");\n  expected.add(\"3\");\n  assertEquals(expected,result);\n  jedis.rpush(bfoo,new byte[]{(byte)'4'});\n  jedis.rpush(bfoo,new byte[]{(byte)'3'});\n  jedis.rpush(bfoo,new byte[]{(byte)'2'});\n  jedis.rpush(bfoo,new byte[]{(byte)'1'});\n  SortingParams bsp=new SortingParams();\n  bsp.limit(0,3);\n  List<byte[]> bresult=jedis.sort(bfoo,bsp);\n  List<byte[]> bexpected=new ArrayList<byte[]>();\n  bexpected.add(b1);\n  bexpected.add(b2);\n  bexpected.add(b3);\n  assertEquals(bexpected,bresult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void sortLimit(){\n  for (int n=10; n > 0; n--) {\n    jedis.lpush(\"foo\",String.valueOf(n));\n  }\n  SortingParams sp=new SortingParams();\n  sp.limit(0,3);\n  List<String> result=jedis.sort(\"foo\",sp);\n  List<String> expected=new ArrayList<String>();\n  expected.add(\"1\");\n  expected.add(\"2\");\n  expected.add(\"3\");\n  assertEquals(expected,result);\n  jedis.rpush(bfoo,new byte[]{(byte)'4'});\n  jedis.rpush(bfoo,new byte[]{(byte)'3'});\n  jedis.rpush(bfoo,new byte[]{(byte)'2'});\n  jedis.rpush(bfoo,new byte[]{(byte)'1'});\n  SortingParams bsp=new SortingParams();\n  bsp.limit(0,3);\n  List<byte[]> bresult=jedis.sort(bfoo,bsp);\n  List<byte[]> bexpected=new ArrayList<byte[]>();\n  bexpected.add(b1);\n  bexpected.add(b2);\n  bexpected.add(b3);\n  assertEquals(bexpected,bresult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 140,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 44
      },
      "nodeContext" : "jedis.lpush(\"foo\",String.valueOf(n));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 139,
    "startColumnNumber" : 21,
    "endLineNumber" : 139,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 140,
    "startColumnNumber" : 40,
    "endLineNumber" : 140,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}