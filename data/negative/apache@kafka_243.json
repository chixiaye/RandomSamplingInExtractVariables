{
  "id" : 243,
  "expression" : "oldSize",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/FullChangeSerdeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oldSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 86,
      "endLineNumber" : 43,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 43,
        "startColumnNumber" : 74,
        "endLineNumber" : 43,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Math.max(0,oldSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 43,
        "startColumnNumber" : 54,
        "endLineNumber" : 43,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Integer.BYTES * 2 + Math.max(0,oldSize)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 43,
        "startColumnNumber" : 54,
        "endLineNumber" : 43,
        "endColumnNumber" : 117
      },
      "nodeContext" : "Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 43,
        "startColumnNumber" : 34,
        "endLineNumber" : 43,
        "endColumnNumber" : 118
      },
      "nodeContext" : "ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 43,
        "startColumnNumber" : 25,
        "endLineNumber" : 43,
        "endColumnNumber" : 118
      },
      "nodeContext" : "buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 119
      },
      "nodeContext" : "final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 35,
        "startColumnNumber" : 109,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (serialChange == null) {\n    return null;\n  }\n  final int oldSize=serialChange.oldValue == null ? -1 : serialChange.oldValue.length;\n  final int newSize=serialChange.newValue == null ? -1 : serialChange.newValue.length;\n  final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n  buffer.putInt(oldSize);\n  if (serialChange.oldValue != null) {\n    buffer.put(serialChange.oldValue);\n  }\n  buffer.putInt(newSize);\n  if (serialChange.newValue != null) {\n    buffer.put(serialChange.newValue);\n  }\n  return buffer.array();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * We used to serialize a Change into a single byte[]. Now, we don't anymore, but we still keep this logic here so that we can produce the legacy format to test that we can still deserialize it.\n */\nprivate static byte[] mergeChangeArraysIntoSingleLegacyFormattedArray(final Change<byte[]> serialChange){\n  if (serialChange == null) {\n    return null;\n  }\n  final int oldSize=serialChange.oldValue == null ? -1 : serialChange.oldValue.length;\n  final int newSize=serialChange.newValue == null ? -1 : serialChange.newValue.length;\n  final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n  buffer.putInt(oldSize);\n  if (serialChange.oldValue != null) {\n    buffer.put(serialChange.oldValue);\n  }\n  buffer.putInt(newSize);\n  if (serialChange.newValue != null) {\n    buffer.put(serialChange.newValue);\n  }\n  return buffer.array();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 119
      },
      "nodeContext" : "final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "oldSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 46,
      "startColumnNumber" : 22,
      "endLineNumber" : 46,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 30
      },
      "nodeContext" : "buffer.putInt(oldSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "buffer.putInt(oldSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 35,
        "startColumnNumber" : 109,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (serialChange == null) {\n    return null;\n  }\n  final int oldSize=serialChange.oldValue == null ? -1 : serialChange.oldValue.length;\n  final int newSize=serialChange.newValue == null ? -1 : serialChange.newValue.length;\n  final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n  buffer.putInt(oldSize);\n  if (serialChange.oldValue != null) {\n    buffer.put(serialChange.oldValue);\n  }\n  buffer.putInt(newSize);\n  if (serialChange.newValue != null) {\n    buffer.put(serialChange.newValue);\n  }\n  return buffer.array();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * We used to serialize a Change into a single byte[]. Now, we don't anymore, but we still keep this logic here so that we can produce the legacy format to test that we can still deserialize it.\n */\nprivate static byte[] mergeChangeArraysIntoSingleLegacyFormattedArray(final Change<byte[]> serialChange){\n  if (serialChange == null) {\n    return null;\n  }\n  final int oldSize=serialChange.oldValue == null ? -1 : serialChange.oldValue.length;\n  final int newSize=serialChange.newValue == null ? -1 : serialChange.newValue.length;\n  final ByteBuffer buffer=ByteBuffer.allocate(Integer.BYTES * 2 + Math.max(0,oldSize) + Math.max(0,newSize));\n  buffer.putInt(oldSize);\n  if (serialChange.oldValue != null) {\n    buffer.put(serialChange.oldValue);\n  }\n  buffer.putInt(newSize);\n  if (serialChange.newValue != null) {\n    buffer.put(serialChange.newValue);\n  }\n  return buffer.array();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "buffer.putInt(oldSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 86,
    "endLineNumber" : 43,
    "endColumnNumber" : 93
  }, {
    "charLength" : 7,
    "startLineNumber" : 46,
    "startColumnNumber" : 22,
    "endLineNumber" : 46,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}