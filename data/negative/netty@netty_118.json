{
  "id" : 118,
  "expression" : "\"willTopic\"",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttConnectPayloadTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"willTopic\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 31,
      "startColumnNumber" : 27,
      "endLineNumber" : 31,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 31,
        "endColumnNumber" : 38
      },
      "nodeContext" : "willTopic=\"willTopic\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 39
      },
      "nodeContext" : "String willTopic=\"willTopic\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 29,
        "startColumnNumber" : 55,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String clientIdentifier=\"clientIdentifier\";\n  String willTopic=\"willTopic\";\n  byte[] willMessage=null;\n  String userName=\"userName\";\n  byte[] password=\"password\".getBytes(CharsetUtil.UTF_8);\n  MqttConnectPayload mqttConnectPayload=new MqttConnectPayload(clientIdentifier,MqttProperties.NO_PROPERTIES,willTopic,willMessage,userName,password);\n  assertNull(mqttConnectPayload.willMessageInBytes());\n  assertNull(mqttConnectPayload.willMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNullWillMessage() throws Exception {\n  String clientIdentifier=\"clientIdentifier\";\n  String willTopic=\"willTopic\";\n  byte[] willMessage=null;\n  String userName=\"userName\";\n  byte[] password=\"password\".getBytes(CharsetUtil.UTF_8);\n  MqttConnectPayload mqttConnectPayload=new MqttConnectPayload(clientIdentifier,MqttProperties.NO_PROPERTIES,willTopic,willMessage,userName,password);\n  assertNull(mqttConnectPayload.willMessageInBytes());\n  assertNull(mqttConnectPayload.willMessage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 39
      },
      "nodeContext" : "String willTopic=\"willTopic\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 31,
    "startColumnNumber" : 27,
    "endLineNumber" : 31,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}