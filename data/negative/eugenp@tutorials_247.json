{
  "id" : 247,
  "expression" : "System",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-date-operations-1/src/test/java/com/baeldung/dst/DaylightSavingTimeJavaTimeExamplesUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 21,
      "startColumnNumber" : 8,
      "endLineNumber" : 21,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(localDateTimeBeforeDST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(localDateTimeBeforeDST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 17,
        "startColumnNumber" : 103,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ZoneId italianZoneId=ZoneId.of(\"Europe/Rome\");\n  LocalDateTime localDateTimeBeforeDST=LocalDateTime.of(2018,3,25,1,55);\n  System.out.println(localDateTimeBeforeDST);\n  assertThat(localDateTimeBeforeDST.toString()).isEqualTo(\"2018-03-25T01:55\");\n  ZonedDateTime zonedDateTimeBeforeDST=localDateTimeBeforeDST.atZone(italianZoneId);\n  prettyPrint(zonedDateTimeBeforeDST);\n  assertThat(zonedDateTimeBeforeDST.toString()).isEqualTo(\"2018-03-25T01:55+01:00[Europe/Rome]\");\n  ZonedDateTime zonedDateTimeAfterDST=zonedDateTimeBeforeDST.plus(10,ChronoUnit.MINUTES);\n  prettyPrint(zonedDateTimeAfterDST);\n  assertThat(zonedDateTimeAfterDST.toString()).isEqualTo(\"2018-03-25T03:05+02:00[Europe/Rome]\");\n  Long deltaBetweenDatesInMinutes=ChronoUnit.MINUTES.between(zonedDateTimeBeforeDST,zonedDateTimeAfterDST);\n  assertThat(deltaBetweenDatesInMinutes).isEqualTo(10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenItalianTimeZone_WhenDSTHappens_ThenCorrectlyShiftTimeZone() throws ParseException {\n  ZoneId italianZoneId=ZoneId.of(\"Europe/Rome\");\n  LocalDateTime localDateTimeBeforeDST=LocalDateTime.of(2018,3,25,1,55);\n  System.out.println(localDateTimeBeforeDST);\n  assertThat(localDateTimeBeforeDST.toString()).isEqualTo(\"2018-03-25T01:55\");\n  ZonedDateTime zonedDateTimeBeforeDST=localDateTimeBeforeDST.atZone(italianZoneId);\n  prettyPrint(zonedDateTimeBeforeDST);\n  assertThat(zonedDateTimeBeforeDST.toString()).isEqualTo(\"2018-03-25T01:55+01:00[Europe/Rome]\");\n  ZonedDateTime zonedDateTimeAfterDST=zonedDateTimeBeforeDST.plus(10,ChronoUnit.MINUTES);\n  prettyPrint(zonedDateTimeAfterDST);\n  assertThat(zonedDateTimeAfterDST.toString()).isEqualTo(\"2018-03-25T03:05+02:00[Europe/Rome]\");\n  Long deltaBetweenDatesInMinutes=ChronoUnit.MINUTES.between(zonedDateTimeBeforeDST,zonedDateTimeAfterDST);\n  assertThat(deltaBetweenDatesInMinutes).isEqualTo(10);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(localDateTimeBeforeDST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 21,
    "startColumnNumber" : 8,
    "endLineNumber" : 21,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}