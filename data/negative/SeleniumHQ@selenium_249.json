{
  "id" : 249,
  "expression" : "jsonInput.nextBoolean()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/json/StringCoercer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jsonInput.nextBoolean()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 35,
      "startColumnNumber" : 32,
      "endLineNumber" : 35,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 35,
        "startColumnNumber" : 17,
        "endLineNumber" : 35,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String.valueOf(jsonInput.nextBoolean())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 35,
        "startColumnNumber" : 10,
        "endLineNumber" : 35,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return String.valueOf(jsonInput.nextBoolean());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 33,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (jsonInput.peek()) {\ncase BOOLEAN:  return String.valueOf(jsonInput.nextBoolean());\ncase NAME:return jsonInput.nextName();\ncase NUMBER:return String.valueOf(jsonInput.nextNumber());\ncase STRING:return jsonInput.nextString();\ndefault:throw new JsonException(\"Expected value to be a string type: \" + jsonInput.peek());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 32,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (jsonInput.peek()) {\ncase BOOLEAN:    return String.valueOf(jsonInput.nextBoolean());\ncase NAME:  return jsonInput.nextName();\ncase NUMBER:return String.valueOf(jsonInput.nextNumber());\ncase STRING:return jsonInput.nextString();\ndefault:throw new JsonException(\"Expected value to be a string type: \" + jsonInput.peek());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 32,
        "startColumnNumber" : 11,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(jsonInput,setting) -> {\nswitch (jsonInput.peek()) {\ncase BOOLEAN:    return String.valueOf(jsonInput.nextBoolean());\ncase NAME:  return jsonInput.nextName();\ncase NUMBER:return String.valueOf(jsonInput.nextNumber());\ncase STRING:return jsonInput.nextString();\ndefault:throw new JsonException(\"Expected value to be a string type: \" + jsonInput.peek());\n}\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 35,
        "startColumnNumber" : 10,
        "endLineNumber" : 35,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return String.valueOf(jsonInput.nextBoolean());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 35,
    "startColumnNumber" : 32,
    "endLineNumber" : 35,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}