{
  "id" : 214,
  "expression" : "logger",
  "projectName" : "mockito@mockito",
  "commitID" : "062266d54bcfdda75ea2dc5ada83803f2ed6963c",
  "filePath" : "src/main/java/org/mockito/internal/session/DefaultMockitoSessionBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logger",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 79,
      "startColumnNumber" : 106,
      "endLineNumber" : 79,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 79,
        "startColumnNumber" : 15,
        "endLineNumber" : 79,
        "endColumnNumber" : 113
      },
      "nodeContext" : "new DefaultMockitoSession(effectiveTestClassInstances,effectiveName,effectiveStrictness,logger)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 114
      },
      "nodeContext" : "return new DefaultMockitoSession(effectiveTestClassInstances,effectiveName,effectiveStrictness,logger);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 65,
        "startColumnNumber" : 41,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Object> effectiveTestClassInstances;\n  String effectiveName;\n  if (testClassInstances.isEmpty()) {\n    effectiveTestClassInstances=emptyList();\n    effectiveName=this.name == null ? UUID.randomUUID().toString() : this.name;\n  }\n else {\n    effectiveTestClassInstances=new ArrayList<Object>(testClassInstances);\n    Object lastTestClassInstance=testClassInstances.get(testClassInstances.size() - 1);\n    effectiveName=this.name == null ? lastTestClassInstance.getClass().getName() : this.name;\n  }\n  Strictness effectiveStrictness=this.strictness == null ? Strictness.STRICT_STUBS : this.strictness;\n  MockitoLogger logger=this.logger == null ? new ConsoleMockitoLogger() : new MockitoLoggerAdapter(this.logger);\n  return new DefaultMockitoSession(effectiveTestClassInstances,effectiveName,effectiveStrictness,logger);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public MockitoSession startMocking(){\n  List<Object> effectiveTestClassInstances;\n  String effectiveName;\n  if (testClassInstances.isEmpty()) {\n    effectiveTestClassInstances=emptyList();\n    effectiveName=this.name == null ? UUID.randomUUID().toString() : this.name;\n  }\n else {\n    effectiveTestClassInstances=new ArrayList<Object>(testClassInstances);\n    Object lastTestClassInstance=testClassInstances.get(testClassInstances.size() - 1);\n    effectiveName=this.name == null ? lastTestClassInstance.getClass().getName() : this.name;\n  }\n  Strictness effectiveStrictness=this.strictness == null ? Strictness.STRICT_STUBS : this.strictness;\n  MockitoLogger logger=this.logger == null ? new ConsoleMockitoLogger() : new MockitoLoggerAdapter(this.logger);\n  return new DefaultMockitoSession(effectiveTestClassInstances,effectiveName,effectiveStrictness,logger);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 114
      },
      "nodeContext" : "return new DefaultMockitoSession(effectiveTestClassInstances,effectiveName,effectiveStrictness,logger);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.util.MockitoLogger"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 79,
    "startColumnNumber" : 106,
    "endLineNumber" : 79,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}