{
  "id" : 121,
  "expression" : "codedName",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/AccessorFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "codedName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 74,
      "startColumnNumber" : 81,
      "endLineNumber" : 74,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 74,
        "startColumnNumber" : 67,
        "endLineNumber" : 74,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"construct\" + codedName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 74,
        "startColumnNumber" : 27,
        "endLineNumber" : 74,
        "endColumnNumber" : 118
      },
      "nodeContext" : "MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 118
      },
      "nodeContext" : "methodDescriptor=MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 119
      },
      "nodeContext" : "methodDescriptor=MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 55,
        "startColumnNumber" : 82,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodDescriptor methodDescriptor=ctors.get(ctor);\n  if (methodDescriptor != null)   return methodDescriptor;\n  if (!ctor.getName().equals(\"<init>\"))   throw new IllegalArgumentException(\"Parameter 'ctor' must be a valid constructor descriptor\");\n  final String declaringClass=ctor.getDeclaringClass();\n  final String accessorName=declaringClass + \"$$accessor\";\n  final String[] parameterTypes=ctor.getParameterTypes();\n  final String[] publicParameterTypes=new String[parameterTypes.length];\n  for (int i=0; i < parameterTypes.length; i++) {\n    publicParameterTypes[i]=isPrimitive(parameterTypes[i]) ? parameterTypes[i] : JLO;\n  }\n  StringBuilder b=new StringBuilder();\n  for (  final String parameterType : parameterTypes) {\n    b.append('_').append(parameterType.replace('.','_'));\n  }\n  String codedName=b.toString();\n  methodDescriptor=MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes);\n  ctors.put(ctor,methodDescriptor);\n  return methodDescriptor;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized MethodDescriptor getConstructorFor(MethodDescriptor ctor){\n  MethodDescriptor methodDescriptor=ctors.get(ctor);\n  if (methodDescriptor != null)   return methodDescriptor;\n  if (!ctor.getName().equals(\"<init>\"))   throw new IllegalArgumentException(\"Parameter 'ctor' must be a valid constructor descriptor\");\n  final String declaringClass=ctor.getDeclaringClass();\n  final String accessorName=declaringClass + \"$$accessor\";\n  final String[] parameterTypes=ctor.getParameterTypes();\n  final String[] publicParameterTypes=new String[parameterTypes.length];\n  for (int i=0; i < parameterTypes.length; i++) {\n    publicParameterTypes[i]=isPrimitive(parameterTypes[i]) ? parameterTypes[i] : JLO;\n  }\n  StringBuilder b=new StringBuilder();\n  for (  final String parameterType : parameterTypes) {\n    b.append('_').append(parameterType.replace('.','_'));\n  }\n  String codedName=b.toString();\n  methodDescriptor=MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes);\n  ctors.put(ctor,methodDescriptor);\n  return methodDescriptor;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 119
      },
      "nodeContext" : "methodDescriptor=MethodDescriptor.ofMethod(accessorName,\"construct\" + codedName,JLO,publicParameterTypes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 74,
    "startColumnNumber" : 81,
    "endLineNumber" : 74,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}