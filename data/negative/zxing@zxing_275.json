{
  "id" : 275,
  "expression" : "bestMatch % 10",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/EAN13Reader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bestMatch % 10",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 87,
      "startColumnNumber" : 40,
      "endLineNumber" : 87,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 87,
        "endColumnNumber" : 54
      },
      "nodeContext" : "'0' + bestMatch % 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 87,
        "startColumnNumber" : 33,
        "endLineNumber" : 87,
        "endColumnNumber" : 55
      },
      "nodeContext" : "('0' + bestMatch % 10)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 87,
        "startColumnNumber" : 26,
        "endLineNumber" : 87,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(char)('0' + bestMatch % 10)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 87,
        "endColumnNumber" : 56
      },
      "nodeContext" : "resultString.append((char)('0' + bestMatch % 10))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 87,
        "endColumnNumber" : 57
      },
      "nodeContext" : "resultString.append((char)('0' + bestMatch % 10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 85,
        "startColumnNumber" : 51,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bestMatch=decodeDigit(row,counters,rowOffset,L_AND_G_PATTERNS);\n  resultString.append((char)('0' + bestMatch % 10));\n  for (  int counter : counters) {\n    rowOffset+=counter;\n  }\n  if (bestMatch >= 10) {\n    lgPatternFound|=1 << (5 - x);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int x=0; x < 6 && rowOffset < end; x++) {\n  int bestMatch=decodeDigit(row,counters,rowOffset,L_AND_G_PATTERNS);\n  resultString.append((char)('0' + bestMatch % 10));\n  for (  int counter : counters) {\n    rowOffset+=counter;\n  }\n  if (bestMatch >= 10) {\n    lgPatternFound|=1 << (5 - x);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 74,
        "startColumnNumber" : 82,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counters=decodeMiddleCounters;\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  int end=row.getSize();\n  int rowOffset=startRange[1];\n  int lgPatternFound=0;\n  for (int x=0; x < 6 && rowOffset < end; x++) {\n    int bestMatch=decodeDigit(row,counters,rowOffset,L_AND_G_PATTERNS);\n    resultString.append((char)('0' + bestMatch % 10));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n    if (bestMatch >= 10) {\n      lgPatternFound|=1 << (5 - x);\n    }\n  }\n  determineFirstDigit(resultString,lgPatternFound);\n  int[] middleRange=findGuardPattern(row,rowOffset,true,MIDDLE_PATTERN);\n  rowOffset=middleRange[1];\n  for (int x=0; x < 6 && rowOffset < end; x++) {\n    int bestMatch=decodeDigit(row,counters,rowOffset,L_PATTERNS);\n    resultString.append((char)('0' + bestMatch));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n  }\n  return rowOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected int decodeMiddle(BitArray row,int[] startRange,StringBuilder resultString) throws NotFoundException {\n  int[] counters=decodeMiddleCounters;\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  int end=row.getSize();\n  int rowOffset=startRange[1];\n  int lgPatternFound=0;\n  for (int x=0; x < 6 && rowOffset < end; x++) {\n    int bestMatch=decodeDigit(row,counters,rowOffset,L_AND_G_PATTERNS);\n    resultString.append((char)('0' + bestMatch % 10));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n    if (bestMatch >= 10) {\n      lgPatternFound|=1 << (5 - x);\n    }\n  }\n  determineFirstDigit(resultString,lgPatternFound);\n  int[] middleRange=findGuardPattern(row,rowOffset,true,MIDDLE_PATTERN);\n  rowOffset=middleRange[1];\n  for (int x=0; x < 6 && rowOffset < end; x++) {\n    int bestMatch=decodeDigit(row,counters,rowOffset,L_PATTERNS);\n    resultString.append((char)('0' + bestMatch));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n  }\n  return rowOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 87,
        "endColumnNumber" : 57
      },
      "nodeContext" : "resultString.append((char)('0' + bestMatch % 10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 87,
    "startColumnNumber" : 40,
    "endLineNumber" : 87,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}