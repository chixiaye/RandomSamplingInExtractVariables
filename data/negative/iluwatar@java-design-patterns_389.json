{
  "id" : 389,
  "expression" : "\"Lambo\"",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/abstract-document/src/main/java/com/iluwatar/abstractdocument/App.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Lambo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 58,
      "startColumnNumber" : 35,
      "endLineNumber" : 58,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 56,
        "startColumnNumber" : 25,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "doorProperties=Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 41
      },
      "nodeContext" : "var doorProperties=Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  LOGGER.info(\"Constructing parts and car\");\n  var wheelProperties=Map.of(Property.TYPE.toString(),\"wheel\",Property.MODEL.toString(),\"15C\",Property.PRICE.toString(),100L);\n  var doorProperties=Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L);\n  var carProperties=Map.of(Property.MODEL.toString(),\"300SL\",Property.PRICE.toString(),10000L,Property.PARTS.toString(),List.of(wheelProperties,doorProperties));\n  var car=new Car(carProperties);\n  LOGGER.info(\"Here is our car:\");\n  LOGGER.info(\"-> model: {}\",car.getModel().orElseThrow());\n  LOGGER.info(\"-> price: {}\",car.getPrice().orElseThrow());\n  LOGGER.info(\"-> parts: \");\n  car.getParts().forEach(p -> LOGGER.info(\"\\t{}/{}/{}\",p.getType().orElse(null),p.getModel().orElse(null),p.getPrice().orElse(null)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1025,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Executes the App.\n */\npublic App(){\n  LOGGER.info(\"Constructing parts and car\");\n  var wheelProperties=Map.of(Property.TYPE.toString(),\"wheel\",Property.MODEL.toString(),\"15C\",Property.PRICE.toString(),100L);\n  var doorProperties=Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L);\n  var carProperties=Map.of(Property.MODEL.toString(),\"300SL\",Property.PRICE.toString(),10000L,Property.PARTS.toString(),List.of(wheelProperties,doorProperties));\n  var car=new Car(carProperties);\n  LOGGER.info(\"Here is our car:\");\n  LOGGER.info(\"-> model: {}\",car.getModel().orElseThrow());\n  LOGGER.info(\"-> price: {}\",car.getPrice().orElseThrow());\n  LOGGER.info(\"-> parts: \");\n  car.getParts().forEach(p -> LOGGER.info(\"\\t{}/{}/{}\",p.getType().orElse(null),p.getModel().orElse(null),p.getPrice().orElse(null)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 56,
        "startColumnNumber" : 25,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Map.of(Property.TYPE.toString(),\"door\",Property.MODEL.toString(),\"Lambo\",Property.PRICE.toString(),300L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 58,
    "startColumnNumber" : 35,
    "endLineNumber" : 58,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}