{
  "id" : 356,
  "expression" : "2 * k + 1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/FastFourierTransformComplexNumbers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2 * k + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 16,
      "startColumnNumber" : 47,
      "endLineNumber" : 16,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 16,
        "startColumnNumber" : 45,
        "endLineNumber" : 16,
        "endColumnNumber" : 57
      },
      "nodeContext" : "x[2 * k + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 16,
        "startColumnNumber" : 36,
        "endLineNumber" : 16,
        "endColumnNumber" : 57
      },
      "nodeContext" : "arr[k]=x[2 * k + 1]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 16,
        "startColumnNumber" : 36,
        "endLineNumber" : 16,
        "endColumnNumber" : 58
      },
      "nodeContext" : "arr[k]=x[2 * k + 1];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 58
      },
      "nodeContext" : "for (int k=0; k < n / 2; k++) arr[k]=x[2 * k + 1];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 10,
        "startColumnNumber" : 43,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=x.length;\n  if (n == 1)   return new Complex[]{x[0]};\n  Complex[] arr=new Complex[n / 2];\n  for (int k=0; k < n / 2; k++)   arr[k]=x[2 * k];\n  Complex[] q=fft(arr);\n  for (int k=0; k < n / 2; k++)   arr[k]=x[2 * k + 1];\n  Complex[] r=fft(arr);\n  Complex[] y=new Complex[n];\n  for (int k=0; k < n / 2; k++) {\n    double kth=-2 * k * Math.PI / n;\n    Complex wk=new Complex(Math.cos(kth),Math.sin(kth));\n    y[k]=q[k].plus(wk.times(r[k]));\n    y[k + n / 2]=q[k].minus(wk.times(r[k]));\n  }\n  return y;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 10,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Complex[] fft(Complex[] x){\n  int n=x.length;\n  if (n == 1)   return new Complex[]{x[0]};\n  Complex[] arr=new Complex[n / 2];\n  for (int k=0; k < n / 2; k++)   arr[k]=x[2 * k];\n  Complex[] q=fft(arr);\n  for (int k=0; k < n / 2; k++)   arr[k]=x[2 * k + 1];\n  Complex[] r=fft(arr);\n  Complex[] y=new Complex[n];\n  for (int k=0; k < n / 2; k++) {\n    double kth=-2 * k * Math.PI / n;\n    Complex wk=new Complex(Math.cos(kth),Math.sin(kth));\n    y[k]=q[k].plus(wk.times(r[k]));\n    y[k + n / 2]=q[k].minus(wk.times(r[k]));\n  }\n  return y;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 58
      },
      "nodeContext" : "for (int k=0; k < n / 2; k++) arr[k]=x[2 * k + 1];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 16,
    "startColumnNumber" : 47,
    "endLineNumber" : 16,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}