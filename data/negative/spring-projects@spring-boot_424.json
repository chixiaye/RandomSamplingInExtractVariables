{
  "id" : 424,
  "expression" : "health.getDetails()",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/neo4j/Neo4jHealthIndicatorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "health.getDetails()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 73,
      "startColumnNumber" : 32,
      "endLineNumber" : 73,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 73,
        "startColumnNumber" : 22,
        "endLineNumber" : 73,
        "endColumnNumber" : 51
      },
      "nodeContext" : "details=health.getDetails()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Map<String,Object> details=health.getDetails();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Result result=mock(Result.class);\n  given(this.session.query(Neo4jHealthIndicator.CYPHER,Collections.emptyMap())).willReturn(result);\n  int nodeCount=500;\n  Map<String,Object> expectedCypherDetails=new HashMap<>();\n  expectedCypherDetails.put(\"nodes\",nodeCount);\n  List<Map<String,Object>> queryResults=new ArrayList<>();\n  queryResults.add(expectedCypherDetails);\n  given(result.queryResults()).willReturn(queryResults);\n  Health health=this.neo4jHealthIndicator.health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  Map<String,Object> details=health.getDetails();\n  int nodeCountFromDetails=(int)details.get(\"nodes\");\n  Assert.assertEquals(nodeCount,nodeCountFromDetails);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void neo4jUp(){\n  Result result=mock(Result.class);\n  given(this.session.query(Neo4jHealthIndicator.CYPHER,Collections.emptyMap())).willReturn(result);\n  int nodeCount=500;\n  Map<String,Object> expectedCypherDetails=new HashMap<>();\n  expectedCypherDetails.put(\"nodes\",nodeCount);\n  List<Map<String,Object>> queryResults=new ArrayList<>();\n  queryResults.add(expectedCypherDetails);\n  given(result.queryResults()).willReturn(queryResults);\n  Health health=this.neo4jHealthIndicator.health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  Map<String,Object> details=health.getDetails();\n  int nodeCountFromDetails=(int)details.get(\"nodes\");\n  Assert.assertEquals(nodeCount,nodeCountFromDetails);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Map<String,Object> details=health.getDetails();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 73,
    "startColumnNumber" : 32,
    "endLineNumber" : 73,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}