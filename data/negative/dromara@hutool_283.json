{
  "id" : 283,
  "expression" : "privateKeyStr",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/Sign.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "privateKeyStr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 58,
      "startColumnNumber" : 47,
      "endLineNumber" : 58,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ConstructorInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 58,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 61
      },
      "nodeContext" : "SecureUtil.decode(privateKeyStr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this(algorithm.getValue(),SecureUtil.decode(privateKeyStr),SecureUtil.decode(publicKeyStr));\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 57,
        "startColumnNumber" : 81,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this(algorithm.getValue(),SecureUtil.decode(privateKeyStr),SecureUtil.decode(publicKeyStr));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 构造 私钥和公钥同时为空时生成一对新的私钥和公钥<br> 私钥和公钥可以单独传入一个，如此则只能使用此钥匙来做签名或验证\n * @param algorithm {@link SignAlgorithm}\n * @param privateKeyStr 私钥Hex或Base64表示\n * @param publicKeyStr 公钥Hex或Base64表示\n */\npublic Sign(SignAlgorithm algorithm,String privateKeyStr,String publicKeyStr){\n  this(algorithm.getValue(),SecureUtil.decode(privateKeyStr),SecureUtil.decode(publicKeyStr));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 29,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this(algorithm.getValue(),SecureUtil.decode(privateKeyStr),SecureUtil.decode(publicKeyStr));\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 58,
    "startColumnNumber" : 47,
    "endLineNumber" : 58,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}