{
  "id" : 492,
  "expression" : "\"Pull Task Callback not exist , {}\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/client/src/main/java/org/apache/rocketmq/client/consumer/MQPullConsumerScheduleService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Pull Task Callback not exist , {}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 185,
      "startColumnNumber" : 29,
      "endLineNumber" : 185,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 72
      },
      "nodeContext" : "log.warn(\"Pull Task Callback not exist , {}\",topic)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 73
      },
      "nodeContext" : "log.warn(\"Pull Task Callback not exist , {}\",topic);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 184,
        "startColumnNumber" : 23,
        "endLineNumber" : 186,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  log.warn(\"Pull Task Callback not exist , {}\",topic);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 186,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (pullTaskCallback != null) {\n  final PullTaskContext context=new PullTaskContext();\n  context.setPullConsumer(MQPullConsumerScheduleService.this.defaultMQPullConsumer);\n  try {\n    pullTaskCallback.doPullTask(this.messageQueue,context);\n  }\n catch (  Throwable e) {\n    context.setPullNextDelayTimeMillis(1000);\n    log.error(\"doPullTask Exception\",e);\n  }\n  if (!this.isCancelled()) {\n    MQPullConsumerScheduleService.this.scheduledThreadPoolExecutor.schedule(this,context.getPullNextDelayTimeMillis(),TimeUnit.MILLISECONDS);\n  }\n else {\n    log.warn(\"The Pull Task is cancelled after doPullTask, {}\",messageQueue);\n  }\n}\n else {\n  log.warn(\"Pull Task Callback not exist , {}\",topic);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1182,
        "startLineNumber" : 165,
        "startColumnNumber" : 37,
        "endLineNumber" : 187,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PullTaskCallback pullTaskCallback=MQPullConsumerScheduleService.this.callbackTable.get(topic);\n  if (pullTaskCallback != null) {\n    final PullTaskContext context=new PullTaskContext();\n    context.setPullConsumer(MQPullConsumerScheduleService.this.defaultMQPullConsumer);\n    try {\n      pullTaskCallback.doPullTask(this.messageQueue,context);\n    }\n catch (    Throwable e) {\n      context.setPullNextDelayTimeMillis(1000);\n      log.error(\"doPullTask Exception\",e);\n    }\n    if (!this.isCancelled()) {\n      MQPullConsumerScheduleService.this.scheduledThreadPoolExecutor.schedule(this,context.getPullNextDelayTimeMillis(),TimeUnit.MILLISECONDS);\n    }\n else {\n      log.warn(\"The Pull Task is cancelled after doPullTask, {}\",messageQueue);\n    }\n  }\n else {\n    log.warn(\"Pull Task Callback not exist , {}\",topic);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1302,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!this.isCancelled()) {\n  PullTaskCallback pullTaskCallback=MQPullConsumerScheduleService.this.callbackTable.get(topic);\n  if (pullTaskCallback != null) {\n    final PullTaskContext context=new PullTaskContext();\n    context.setPullConsumer(MQPullConsumerScheduleService.this.defaultMQPullConsumer);\n    try {\n      pullTaskCallback.doPullTask(this.messageQueue,context);\n    }\n catch (    Throwable e) {\n      context.setPullNextDelayTimeMillis(1000);\n      log.error(\"doPullTask Exception\",e);\n    }\n    if (!this.isCancelled()) {\n      MQPullConsumerScheduleService.this.scheduledThreadPoolExecutor.schedule(this,context.getPullNextDelayTimeMillis(),TimeUnit.MILLISECONDS);\n    }\n else {\n      log.warn(\"The Pull Task is cancelled after doPullTask, {}\",messageQueue);\n    }\n  }\n else {\n    log.warn(\"Pull Task Callback not exist , {}\",topic);\n  }\n}\n else {\n  log.warn(\"The Pull Task is cancelled, {}\",messageQueue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 163,
        "startColumnNumber" : 26,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String topic=this.messageQueue.getTopic();\n  if (!this.isCancelled()) {\n    PullTaskCallback pullTaskCallback=MQPullConsumerScheduleService.this.callbackTable.get(topic);\n    if (pullTaskCallback != null) {\n      final PullTaskContext context=new PullTaskContext();\n      context.setPullConsumer(MQPullConsumerScheduleService.this.defaultMQPullConsumer);\n      try {\n        pullTaskCallback.doPullTask(this.messageQueue,context);\n      }\n catch (      Throwable e) {\n        context.setPullNextDelayTimeMillis(1000);\n        log.error(\"doPullTask Exception\",e);\n      }\n      if (!this.isCancelled()) {\n        MQPullConsumerScheduleService.this.scheduledThreadPoolExecutor.schedule(this,context.getPullNextDelayTimeMillis(),TimeUnit.MILLISECONDS);\n      }\n else {\n        log.warn(\"The Pull Task is cancelled after doPullTask, {}\",messageQueue);\n      }\n    }\n else {\n      log.warn(\"Pull Task Callback not exist , {}\",topic);\n    }\n  }\n else {\n    log.warn(\"The Pull Task is cancelled, {}\",messageQueue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void run(){\n  String topic=this.messageQueue.getTopic();\n  if (!this.isCancelled()) {\n    PullTaskCallback pullTaskCallback=MQPullConsumerScheduleService.this.callbackTable.get(topic);\n    if (pullTaskCallback != null) {\n      final PullTaskContext context=new PullTaskContext();\n      context.setPullConsumer(MQPullConsumerScheduleService.this.defaultMQPullConsumer);\n      try {\n        pullTaskCallback.doPullTask(this.messageQueue,context);\n      }\n catch (      Throwable e) {\n        context.setPullNextDelayTimeMillis(1000);\n        log.error(\"doPullTask Exception\",e);\n      }\n      if (!this.isCancelled()) {\n        MQPullConsumerScheduleService.this.scheduledThreadPoolExecutor.schedule(this,context.getPullNextDelayTimeMillis(),TimeUnit.MILLISECONDS);\n      }\n else {\n        log.warn(\"The Pull Task is cancelled after doPullTask, {}\",messageQueue);\n      }\n    }\n else {\n      log.warn(\"Pull Task Callback not exist , {}\",topic);\n    }\n  }\n else {\n    log.warn(\"The Pull Task is cancelled, {}\",messageQueue);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 73
      },
      "nodeContext" : "log.warn(\"Pull Task Callback not exist , {}\",topic);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 185,
    "startColumnNumber" : 29,
    "endLineNumber" : 185,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}