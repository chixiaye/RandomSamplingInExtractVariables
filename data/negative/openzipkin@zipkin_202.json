{
  "id" : 202,
  "expression" : "endTs - lookback * 1000",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/jdbc/src/main/java/zipkin/jdbc/JDBCSpanStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "endTs - lookback * 1000",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 277,
      "startColumnNumber" : 44,
      "endLineNumber" : 277,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 277,
        "startColumnNumber" : 14,
        "endLineNumber" : 277,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 275,
        "startColumnNumber" : 17,
        "endLineNumber" : 277,
        "endColumnNumber" : 75
      },
      "nodeContext" : "lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 916,
        "startLineNumber" : 265,
        "startColumnNumber" : 65,
        "endLineNumber" : 277,
        "endColumnNumber" : 76
      },
      "nodeContext" : "context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 265,
        "startColumnNumber" : 65,
        "endLineNumber" : 279,
        "endColumnNumber" : 84
      },
      "nodeContext" : "context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 265,
        "startColumnNumber" : 65,
        "endLineNumber" : 279,
        "endColumnNumber" : 96
      },
      "nodeContext" : "context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 265,
        "startColumnNumber" : 56,
        "endLineNumber" : 279,
        "endColumnNumber" : 96
      },
      "nodeContext" : "cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 265,
        "startColumnNumber" : 6,
        "endLineNumber" : 279,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Cursor<Record5<Long,Long,Long,String,String>> cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1614,
        "startLineNumber" : 263,
        "startColumnNumber" : 55,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cursor<Record5<Long,Long,Long,String,String>> cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy();\n  Iterator<Iterator<DependencyLinkSpan>> traces=new DependencyLinkSpanIterator.ByTraceId(cursor.iterator());\n  if (!traces.hasNext())   return Collections.emptyList();\n  DependencyLinker linker=new DependencyLinker();\n  while (traces.hasNext()) {\n    linker.putTrace(traces.next());\n  }\n  return linker.link();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Connection conn=datasource.getConnection()){\n  Cursor<Record5<Long,Long,Long,String,String>> cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy();\n  Iterator<Iterator<DependencyLinkSpan>> traces=new DependencyLinkSpanIterator.ByTraceId(cursor.iterator());\n  if (!traces.hasNext())   return Collections.emptyList();\n  DependencyLinker linker=new DependencyLinker();\n  while (traces.hasNext()) {\n    linker.putTrace(traces.next());\n  }\n  return linker.link();\n}\n catch (SQLException e) {\n  throw new RuntimeException(\"Error querying dependencies for endTs \" + endTs + \" and lookback \"+ lookback+ \": \"+ e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 193,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1870,
        "startLineNumber" : 261,
        "startColumnNumber" : 83,
        "endLineNumber" : 296,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  endTs=endTs * 1000;\n  try (Connection conn=datasource.getConnection()){\n    Cursor<Record5<Long,Long,Long,String,String>> cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy();\n    Iterator<Iterator<DependencyLinkSpan>> traces=new DependencyLinkSpanIterator.ByTraceId(cursor.iterator());\n    if (!traces.hasNext())     return Collections.emptyList();\n    DependencyLinker linker=new DependencyLinker();\n    while (traces.hasNext()) {\n      linker.putTrace(traces.next());\n    }\n    return linker.link();\n  }\n catch (  SQLException e) {\n    throw new RuntimeException(\"Error querying dependencies for endTs \" + endTs + \" and lookback \"+ lookback+ \": \"+ e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1963,
        "startLineNumber" : 260,
        "startColumnNumber" : 2,
        "endLineNumber" : 296,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public List<DependencyLink> getDependencies(long endTs,@Nullable Long lookback){\n  endTs=endTs * 1000;\n  try (Connection conn=datasource.getConnection()){\n    Cursor<Record5<Long,Long,Long,String,String>> cursor=context.get(conn).selectDistinct(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.PARENT_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY,ZIPKIN_ANNOTATIONS.ENDPOINT_SERVICE_NAME).from(ZIPKIN_SPANS.leftJoin(ZIPKIN_ANNOTATIONS).on(ZIPKIN_SPANS.TRACE_ID.eq(ZIPKIN_ANNOTATIONS.TRACE_ID).and(ZIPKIN_SPANS.ID.eq(ZIPKIN_ANNOTATIONS.SPAN_ID))).and(ZIPKIN_ANNOTATIONS.A_KEY.in(CLIENT_ADDR,SERVER_RECV,SERVER_ADDR))).where(lookback == null ? ZIPKIN_SPANS.START_TS.lessOrEqual(endTs) : ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)).groupBy(ZIPKIN_SPANS.TRACE_ID,ZIPKIN_SPANS.ID,ZIPKIN_ANNOTATIONS.A_KEY).fetchLazy();\n    Iterator<Iterator<DependencyLinkSpan>> traces=new DependencyLinkSpanIterator.ByTraceId(cursor.iterator());\n    if (!traces.hasNext())     return Collections.emptyList();\n    DependencyLinker linker=new DependencyLinker();\n    while (traces.hasNext()) {\n      linker.putTrace(traces.next());\n    }\n    return linker.link();\n  }\n catch (  SQLException e) {\n    throw new RuntimeException(\"Error querying dependencies for endTs \" + endTs + \" and lookback \"+ lookback+ \": \"+ e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 277,
        "startColumnNumber" : 14,
        "endLineNumber" : 277,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ZIPKIN_SPANS.START_TS.between(endTs - lookback * 1000,endTs)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 277,
    "startColumnNumber" : 44,
    "endLineNumber" : 277,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}