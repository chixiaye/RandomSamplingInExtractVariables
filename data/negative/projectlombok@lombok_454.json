{
  "id" : 454,
  "expression" : "ast.toName(\"java\")",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/javac/JavacResolution.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ast.toName(\"java\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 392,
      "startColumnNumber" : 33,
      "endLineNumber" : 392,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 392,
        "startColumnNumber" : 21,
        "endLineNumber" : 392,
        "endColumnNumber" : 52
      },
      "nodeContext" : "maker.Ident(ast.toName(\"java\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 392,
        "startColumnNumber" : 15,
        "endLineNumber" : 392,
        "endColumnNumber" : 52
      },
      "nodeContext" : "out=maker.Ident(ast.toName(\"java\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 392,
        "startColumnNumber" : 2,
        "endLineNumber" : 392,
        "endColumnNumber" : 53
      },
      "nodeContext" : "JCExpression out=maker.Ident(ast.toName(\"java\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 390,
        "startColumnNumber" : 63,
        "endLineNumber" : 396,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TreeMaker maker=ast.getTreeMaker();\n  JCExpression out=maker.Ident(ast.toName(\"java\"));\n  out=maker.Select(out,ast.toName(\"lang\"));\n  out=maker.Select(out,ast.toName(\"Object\"));\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 390,
        "startColumnNumber" : 1,
        "endLineNumber" : 396,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static JCExpression createJavaLangObject(JavacAST ast){\n  TreeMaker maker=ast.getTreeMaker();\n  JCExpression out=maker.Ident(ast.toName(\"java\"));\n  out=maker.Select(out,ast.toName(\"lang\"));\n  out=maker.Select(out,ast.toName(\"Object\"));\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 392,
        "startColumnNumber" : 2,
        "endLineNumber" : 392,
        "endColumnNumber" : 53
      },
      "nodeContext" : "JCExpression out=maker.Ident(ast.toName(\"java\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "lombok.javac.Name"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 392,
    "startColumnNumber" : 33,
    "endLineNumber" : 392,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}