{
  "id" : 10,
  "expression" : "!Topics.APOLLO_RELEASE_TOPIC.equals(channel)",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/controller/NotificationControllerV2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!Topics.APOLLO_RELEASE_TOPIC.equals(channel)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 201,
      "startColumnNumber" : 8,
      "endLineNumber" : 201,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 86
      },
      "nodeContext" : "!Topics.APOLLO_RELEASE_TOPIC.equals(channel) || Strings.isNullOrEmpty(content)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!Topics.APOLLO_RELEASE_TOPIC.equals(channel) || Strings.isNullOrEmpty(content)) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 196,
        "startColumnNumber" : 68,
        "endLineNumber" : 229,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  logger.info(\"message received - channel: {}, message: {}\",channel,message);\n  String content=message.getMessage();\n  Cat.logEvent(\"Apollo.LongPoll.Messages\",content);\n  if (!Topics.APOLLO_RELEASE_TOPIC.equals(channel) || Strings.isNullOrEmpty(content)) {\n    return;\n  }\n  String changedNamespace=retrieveNamespaceFromReleaseMessage.apply(content);\n  if (Strings.isNullOrEmpty(changedNamespace)) {\n    logger.error(\"message format invalid - {}\",content);\n    return;\n  }\n  ResponseEntity<List<ApolloConfigNotification>> notification=new ResponseEntity<>(Lists.newArrayList(new ApolloConfigNotification(changedNamespace,message.getId())),HttpStatus.OK);\n  if (!deferredResults.containsKey(content)) {\n    return;\n  }\n  List<DeferredResult<ResponseEntity<List<ApolloConfigNotification>>>> results=Lists.newArrayList(deferredResults.get(content));\n  logger.debug(\"Notify {} clients for key {}\",results.size(),content);\n  for (  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> result : results) {\n    result.setResult(notification);\n  }\n  logger.debug(\"Notification completed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1343,
        "startLineNumber" : 195,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void handleMessage(ReleaseMessage message,String channel){\n  logger.info(\"message received - channel: {}, message: {}\",channel,message);\n  String content=message.getMessage();\n  Cat.logEvent(\"Apollo.LongPoll.Messages\",content);\n  if (!Topics.APOLLO_RELEASE_TOPIC.equals(channel) || Strings.isNullOrEmpty(content)) {\n    return;\n  }\n  String changedNamespace=retrieveNamespaceFromReleaseMessage.apply(content);\n  if (Strings.isNullOrEmpty(changedNamespace)) {\n    logger.error(\"message format invalid - {}\",content);\n    return;\n  }\n  ResponseEntity<List<ApolloConfigNotification>> notification=new ResponseEntity<>(Lists.newArrayList(new ApolloConfigNotification(changedNamespace,message.getId())),HttpStatus.OK);\n  if (!deferredResults.containsKey(content)) {\n    return;\n  }\n  List<DeferredResult<ResponseEntity<List<ApolloConfigNotification>>>> results=Lists.newArrayList(deferredResults.get(content));\n  logger.debug(\"Notify {} clients for key {}\",results.size(),content);\n  for (  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> result : results) {\n    result.setResult(notification);\n  }\n  logger.debug(\"Notification completed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 86
      },
      "nodeContext" : "!Topics.APOLLO_RELEASE_TOPIC.equals(channel) || Strings.isNullOrEmpty(content)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 201,
    "startColumnNumber" : 8,
    "endLineNumber" : 201,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}