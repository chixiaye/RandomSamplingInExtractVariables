{
  "id" : 3,
  "expression" : "(GrammarAST)blk.getChildren().get(i)",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/analysis/LeftRecursiveRuleAnalyzer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(GrammarAST)blk.getChildren().get(i)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 267,
      "startColumnNumber" : 20,
      "endLineNumber" : 267,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 267,
        "startColumnNumber" : 14,
        "endLineNumber" : 267,
        "endColumnNumber" : 56
      },
      "nodeContext" : "alt=(GrammarAST)blk.getChildren().get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 267,
        "startColumnNumber" : 3,
        "endLineNumber" : 267,
        "endColumnNumber" : 57
      },
      "nodeContext" : "GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 266,
        "startColumnNumber" : 30,
        "endLineNumber" : 279,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n  Tree first=alt.getChild(0);\n  if (first == null)   continue;\n  if (first.getType() == ELEMENT_OPTIONS) {\n    first=alt.getChild(1);\n    if (first == null) {\n      continue;\n    }\n  }\n  if (first.getType() == RULE_REF && first.getText().equals(ruleName))   return true;\n  Tree rref=first.getChild(1);\n  if (rref != null && rref.getType() == RULE_REF && rref.getText().equals(ruleName))   return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 266,
        "startColumnNumber" : 2,
        "endLineNumber" : 279,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n  Tree first=alt.getChild(0);\n  if (first == null)   continue;\n  if (first.getType() == ELEMENT_OPTIONS) {\n    first=alt.getChild(1);\n    if (first == null) {\n      continue;\n    }\n  }\n  if (first.getType() == RULE_REF && first.getText().equals(ruleName))   return true;\n  Tree rref=first.getChild(1);\n  if (rref != null && rref.getType() == RULE_REF && rref.getText().equals(ruleName))   return true;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 261,
        "startColumnNumber" : 84,
        "endLineNumber" : 281,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (t == null)   return false;\n  GrammarAST blk=(GrammarAST)t.getFirstChildWithType(BLOCK);\n  if (blk == null)   return false;\n  int n=blk.getChildren().size();\n  for (int i=0; i < n; i++) {\n    GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n    Tree first=alt.getChild(0);\n    if (first == null)     continue;\n    if (first.getType() == ELEMENT_OPTIONS) {\n      first=alt.getChild(1);\n      if (first == null) {\n        continue;\n      }\n    }\n    if (first.getType() == RULE_REF && first.getText().equals(ruleName))     return true;\n    Tree rref=first.getChild(1);\n    if (rref != null && rref.getType() == RULE_REF && rref.getText().equals(ruleName))     return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 964,
        "startLineNumber" : 257,
        "startColumnNumber" : 1,
        "endLineNumber" : 281,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Match (RULE RULE_REF (BLOCK (ALT .*) (ALT RULE_REF[self] .*) (ALT .*))) Match (RULE RULE_REF (BLOCK (ALT .*) (ALT (ASSIGN ID RULE_REF[self]) .*) (ALT .*)))\n */\npublic static boolean hasImmediateRecursiveRuleRefs(GrammarAST t,String ruleName){\n  if (t == null)   return false;\n  GrammarAST blk=(GrammarAST)t.getFirstChildWithType(BLOCK);\n  if (blk == null)   return false;\n  int n=blk.getChildren().size();\n  for (int i=0; i < n; i++) {\n    GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n    Tree first=alt.getChild(0);\n    if (first == null)     continue;\n    if (first.getType() == ELEMENT_OPTIONS) {\n      first=alt.getChild(1);\n      if (first == null) {\n        continue;\n      }\n    }\n    if (first.getType() == RULE_REF && first.getText().equals(ruleName))     return true;\n    Tree rref=first.getChild(1);\n    if (rref != null && rref.getType() == RULE_REF && rref.getText().equals(ruleName))     return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 267,
        "startColumnNumber" : 3,
        "endLineNumber" : 267,
        "endColumnNumber" : 57
      },
      "nodeContext" : "GrammarAST alt=(GrammarAST)blk.getChildren().get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "org.antlr.v4.tool.ast.GrammarAST"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 267,
    "startColumnNumber" : 20,
    "endLineNumber" : 267,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}