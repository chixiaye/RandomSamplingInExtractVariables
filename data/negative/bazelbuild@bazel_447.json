{
  "id" : 447,
  "expression" : "\"D:/program files/microsoft something/foo/~bar_hello/baz\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/vfs/WindowsPathTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"D:/program files/microsoft something/foo/~bar_hello/baz\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 118,
      "startColumnNumber" : 19,
      "endLineNumber" : 118,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/~bar~1/baz\")).isEqualTo(\"D:/program files/microsoft something/foo/~bar_hello/baz\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/~bar~1/baz\")).isEqualTo(\"D:/program files/microsoft something/foo/~bar_hello/baz\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1908,
        "startLineNumber" : 108,
        "startColumnNumber" : 43,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MockShortPathResolver shortPathResolver=new MockShortPathResolver();\n  WindowsOsPathPolicy osPathPolicy=new WindowsOsPathPolicy(shortPathResolver);\n  shortPathResolver.resolutions.put(\"d:/progra~1\",\"program files\");\n  shortPathResolver.resolutions.put(\"d:/program files/micros~1\",\"microsoft something\");\n  shortPathResolver.resolutions.put(\"d:/program files/microsoft something/foo/~bar~1\",\"~bar_hello\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/~bar~1/baz\")).isEqualTo(\"D:/program files/microsoft something/foo/~bar_hello/baz\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(\"D:/program files/microsoft something/foo/will~1.exi/bar\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1\")).isEqualTo(\"D:/program files/microsoft something\");\n  shortPathResolver.resolutions.put(\"d:/program files/microsoft something/foo/will~1.exi\",\"will.exist\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(\"D:/program files/microsoft something/foo/will.exist/bar\");\n  assertThat(osPathPolicy.needsToNormalize(\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(WindowsOsPathPolicy.NEEDS_SHORT_PATH_NORMALIZATION);\n  assertThat(osPathPolicy.needsToNormalize(\"will~1.exi\")).isEqualTo(WindowsOsPathPolicy.NEEDS_SHORT_PATH_NORMALIZATION);\n  assertThat(osPathPolicy.needsToNormalize(\"d:/no-normalization\")).isEqualTo(WindowsOsPathPolicy.NORMALIZED);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testResolvesShortenedPaths(){\n  MockShortPathResolver shortPathResolver=new MockShortPathResolver();\n  WindowsOsPathPolicy osPathPolicy=new WindowsOsPathPolicy(shortPathResolver);\n  shortPathResolver.resolutions.put(\"d:/progra~1\",\"program files\");\n  shortPathResolver.resolutions.put(\"d:/program files/micros~1\",\"microsoft something\");\n  shortPathResolver.resolutions.put(\"d:/program files/microsoft something/foo/~bar~1\",\"~bar_hello\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/~bar~1/baz\")).isEqualTo(\"D:/program files/microsoft something/foo/~bar_hello/baz\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(\"D:/program files/microsoft something/foo/will~1.exi/bar\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1\")).isEqualTo(\"D:/program files/microsoft something\");\n  shortPathResolver.resolutions.put(\"d:/program files/microsoft something/foo/will~1.exi\",\"will.exist\");\n  assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(\"D:/program files/microsoft something/foo/will.exist/bar\");\n  assertThat(osPathPolicy.needsToNormalize(\"d:/progra~1/micros~1/foo/will~1.exi/bar\")).isEqualTo(WindowsOsPathPolicy.NEEDS_SHORT_PATH_NORMALIZATION);\n  assertThat(osPathPolicy.needsToNormalize(\"will~1.exi\")).isEqualTo(WindowsOsPathPolicy.NEEDS_SHORT_PATH_NORMALIZATION);\n  assertThat(osPathPolicy.needsToNormalize(\"d:/no-normalization\")).isEqualTo(WindowsOsPathPolicy.NORMALIZED);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(normalize(osPathPolicy,\"d:/progra~1/micros~1/foo/~bar~1/baz\")).isEqualTo(\"D:/program files/microsoft something/foo/~bar_hello/baz\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 118,
    "startColumnNumber" : 19,
    "endLineNumber" : 118,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}