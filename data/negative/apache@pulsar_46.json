{
  "id" : 46,
  "expression" : "logLevel.get() < 2",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/stats/ProxyStats.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logLevel.get() < 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 84,
      "startColumnNumber" : 37,
      "endLineNumber" : 84,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 55
      },
      "nodeContext" : "!logLevel.isPresent() || logLevel.get() < 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!logLevel.isPresent() || logLevel.get() < 2) {\n  throw new RestException(Status.PRECONDITION_FAILED,\"Proxy doesn't have logging level 2\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 81,
        "startColumnNumber" : 44,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<Integer> logLevel=proxyService().getConfiguration().getProxyLogLevel();\n  if (!logLevel.isPresent() || logLevel.get() < 2) {\n    throw new RestException(Status.PRECONDITION_FAILED,\"Proxy doesn't have logging level 2\");\n  }\n  return proxyService().getTopicStats();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@GET @Path(\"/topics\") @ApiOperation(value=\"Proxy topic stats api\",response=Map.class,responseContainer=\"Map\") @ApiResponses(value={@ApiResponse(code=412,message=\"Proxy logging should be > 2 to capture topic stats\"),@ApiResponse(code=503,message=\"Proxy service is not initialized\")}) public Map<String,TopicStats> topics(){\n  Optional<Integer> logLevel=proxyService().getConfiguration().getProxyLogLevel();\n  if (!logLevel.isPresent() || logLevel.get() < 2) {\n    throw new RestException(Status.PRECONDITION_FAILED,\"Proxy doesn't have logging level 2\");\n  }\n  return proxyService().getTopicStats();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 55
      },
      "nodeContext" : "!logLevel.isPresent() || logLevel.get() < 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 84,
    "startColumnNumber" : 37,
    "endLineNumber" : 84,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}