{
  "id" : 248,
  "expression" : "new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    view.setTextColor((int)animation.getAnimatedValue());\n  }\n}\n",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/AnimationUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    view.setTextColor((int)animation.getAnimatedValue());\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 236,
      "startLineNumber" : 208,
      "startColumnNumber" : 47,
      "endLineNumber" : 213,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 27,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 10
      },
      "nodeContext" : "viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    view.setTextColor((int)animation.getAnimatedValue());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 11
      },
      "nodeContext" : "viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    view.setTextColor((int)animation.getAnimatedValue());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 197,
        "startColumnNumber" : 70,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (DEBUG) {\n    Log.d(TAG,\"animateTextColor() called with: \" + \"view = [\" + view + \"], duration = [\"+ duration+ \"], \"+ \"colorStart = [\"+ colorStart+ \"], colorEnd = [\"+ colorEnd+ \"]\");\n  }\n  ValueAnimator viewPropertyAnimator=ValueAnimator.ofObject(new ArgbEvaluator(),colorStart,colorEnd);\n  viewPropertyAnimator.setInterpolator(new FastOutSlowInInterpolator());\n  viewPropertyAnimator.setDuration(duration);\n  viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n    @Override public void onAnimationUpdate(    final ValueAnimator animation){\n      view.setTextColor((int)animation.getAnimatedValue());\n    }\n  }\n);\n  viewPropertyAnimator.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    final Animator animation){\n      view.setTextColor(colorEnd);\n    }\n    @Override public void onAnimationCancel(    final Animator animation){\n      view.setTextColor(colorEnd);\n    }\n  }\n);\n  viewPropertyAnimator.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1786,
        "startLineNumber" : 187,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Animate the text color of any view that extends  {@link TextView} (Buttons, EditText...).\n * @param view       the text view to animate\n * @param duration   the duration of the animation\n * @param colorStart the text color to start with\n * @param colorEnd   the text color to end with\n */\npublic static void animateTextColor(final TextView view,final long duration,@ColorInt final int colorStart,@ColorInt final int colorEnd){\n  if (DEBUG) {\n    Log.d(TAG,\"animateTextColor() called with: \" + \"view = [\" + view + \"], duration = [\"+ duration+ \"], \"+ \"colorStart = [\"+ colorStart+ \"], colorEnd = [\"+ colorEnd+ \"]\");\n  }\n  ValueAnimator viewPropertyAnimator=ValueAnimator.ofObject(new ArgbEvaluator(),colorStart,colorEnd);\n  viewPropertyAnimator.setInterpolator(new FastOutSlowInInterpolator());\n  viewPropertyAnimator.setDuration(duration);\n  viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n    @Override public void onAnimationUpdate(    final ValueAnimator animation){\n      view.setTextColor((int)animation.getAnimatedValue());\n    }\n  }\n);\n  viewPropertyAnimator.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    final Animator animation){\n      view.setTextColor(colorEnd);\n    }\n    @Override public void onAnimationCancel(    final Animator animation){\n      view.setTextColor(colorEnd);\n    }\n  }\n);\n  viewPropertyAnimator.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 11
      },
      "nodeContext" : "viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    view.setTextColor((int)animation.getAnimatedValue());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 11
    },
    "tokenLength" : 10,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 236,
    "startLineNumber" : 208,
    "startColumnNumber" : 47,
    "endLineNumber" : 213,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}