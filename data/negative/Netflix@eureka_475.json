{
  "id" : 475,
  "expression" : "new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-write-server/src/main/java/com/netflix/eureka2/server/channel/ReceiverReplicationChannel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 236,
      "startLineNumber" : 231,
      "startColumnNumber" : 27,
      "endLineNumber" : 236,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 24,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 221,
        "startColumnNumber" : 15,
        "endLineNumber" : 236,
        "endColumnNumber" : 18
      },
      "nodeContext" : "registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n  @Override public Void call(  Boolean aBoolean){\n    instanceInfoById.remove(instanceId);\n    logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n    return null;\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 221,
        "startColumnNumber" : 15,
        "endLineNumber" : 237,
        "endColumnNumber" : 33
      },
      "nodeContext" : "registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n  @Override public Void call(  Boolean aBoolean){\n    instanceInfoById.remove(instanceId);\n    logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n    return null;\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n).ignoreElements()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 818,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 34
      },
      "nodeContext" : "return registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n  @Override public Void call(  Boolean aBoolean){\n    instanceInfoById.remove(instanceId);\n    logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n    return null;\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n).ignoreElements();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 205,
        "startColumnNumber" : 64,
        "endLineNumber" : 238,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  logger.debug(\"Removing registration entry for instanceId {}\",instanceId);\n  if (STATES.Opened != state.get()) {\n    return Observable.error(state.get() == STATES.Closed ? CHANNEL_CLOSED_EXCEPTION : IDLE_STATE_EXCEPTION);\n  }\n  if (replicationLoop) {\n    return Observable.error(REPLICATION_LOOP_EXCEPTION);\n  }\n  final InstanceInfo toUnregister=instanceInfoById.remove(instanceId);\n  if (toUnregister == null) {\n    logger.info(\"Replicated unregister request for unknown instance {}\",instanceId);\n    return Observable.empty();\n  }\n  return registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n    @Override public Void call(    Boolean aBoolean){\n      instanceInfoById.remove(instanceId);\n      logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n      return null;\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable throwable){\n      instanceInfoById.putIfAbsent(instanceId,toUnregister);\n    }\n  }\n).ignoreElements();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2588,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * We first eagerly remove from the instanceInfoById map, then execute the unregister operation. If the unregister fails, we add the instanceInfo back to the map if it's not present. Scenarios of this: - unregister op succeeds. All is good. - unregister op fails. If no subsequent register/unregister on this instance has arrived on the channel, we add the instance back to the localmap. This element then follows the standard channel lifecycle evicts etc. - unregister op fails. If a subsequent register arrives, then if the register has already updates the map, then we don't put the unregistered copy back. Otherwise, the register op will override the put back copy. - unregister op fails. If a subsequent unregister arrives, we will execute this new unregister as a no-op if the item is not added back. Note that in all the failure scenarios above, the current external RegistryReplicator will close the channel and reestablish if the operation fails.\n */\n@Override public Observable<Void> unregister(final String instanceId){\n  logger.debug(\"Removing registration entry for instanceId {}\",instanceId);\n  if (STATES.Opened != state.get()) {\n    return Observable.error(state.get() == STATES.Closed ? CHANNEL_CLOSED_EXCEPTION : IDLE_STATE_EXCEPTION);\n  }\n  if (replicationLoop) {\n    return Observable.error(REPLICATION_LOOP_EXCEPTION);\n  }\n  final InstanceInfo toUnregister=instanceInfoById.remove(instanceId);\n  if (toUnregister == null) {\n    logger.info(\"Replicated unregister request for unknown instance {}\",instanceId);\n    return Observable.empty();\n  }\n  return registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n    @Override public Void call(    Boolean aBoolean){\n      instanceInfoById.remove(instanceId);\n      logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n      return null;\n    }\n  }\n).doOnError(new Action1<Throwable>(){\n    @Override public void call(    Throwable throwable){\n      instanceInfoById.putIfAbsent(instanceId,toUnregister);\n    }\n  }\n).ignoreElements();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 221,
        "startColumnNumber" : 15,
        "endLineNumber" : 236,
        "endColumnNumber" : 18
      },
      "nodeContext" : "registry.unregister(toUnregister,replicationSource).map(new Func1<Boolean,Void>(){\n  @Override public Void call(  Boolean aBoolean){\n    instanceInfoById.remove(instanceId);\n    logger.debug(\"Successfully replicated an unregister {}\",toUnregister);\n    return null;\n  }\n}\n).doOnError(new Action1<Throwable>(){\n  @Override public void call(  Throwable throwable){\n    instanceInfoById.putIfAbsent(instanceId,toUnregister);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 67,
      "astHeight" : 9
    },
    "tokenLength" : 9,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 236,
    "startLineNumber" : 231,
    "startColumnNumber" : 27,
    "endLineNumber" : 236,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}