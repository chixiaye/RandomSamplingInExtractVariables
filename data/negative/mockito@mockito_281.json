{
  "id" : 281,
  "expression" : "0",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/util/reflection/GenericMaster.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 81,
      "endLineNumber" : 21,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 21,
        "startColumnNumber" : 26,
        "endLineNumber" : 21,
        "endColumnNumber" : 83
      },
      "nodeContext" : "((ParameterizedType)generic).getActualTypeArguments()[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 21,
        "startColumnNumber" : 17,
        "endLineNumber" : 21,
        "endColumnNumber" : 83
      },
      "nodeContext" : "actual=((ParameterizedType)generic).getActualTypeArguments()[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 20,
        "startColumnNumber" : 50,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n  if (actual instanceof Class) {\n    return (Class<?>)actual;\n  }\n else   if (actual instanceof ParameterizedType) {\n    return (Class<?>)((ParameterizedType)actual).getRawType();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (generic instanceof ParameterizedType) {\n  Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n  if (actual instanceof Class) {\n    return (Class<?>)actual;\n  }\n else   if (actual instanceof ParameterizedType) {\n    return (Class<?>)((ParameterizedType)actual).getRawType();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 18,
        "startColumnNumber" : 48,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Type generic=field.getGenericType();\n  if (generic instanceof ParameterizedType) {\n    Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n    if (actual instanceof Class) {\n      return (Class<?>)actual;\n    }\n else     if (actual instanceof ParameterizedType) {\n      return (Class<?>)((ParameterizedType)actual).getRawType();\n    }\n  }\n  return Object.class;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.\n * @param field the field to inspect\n */\npublic Class<?> getGenericType(Field field){\n  Type generic=field.getGenericType();\n  if (generic instanceof ParameterizedType) {\n    Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n    if (actual instanceof Class) {\n      return (Class<?>)actual;\n    }\n else     if (actual instanceof ParameterizedType) {\n      return (Class<?>)((ParameterizedType)actual).getRawType();\n    }\n  }\n  return Object.class;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Type actual=((ParameterizedType)generic).getActualTypeArguments()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 81,
    "endLineNumber" : 21,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}