{
  "id" : 517,
  "expression" : "String.format(\"(%s%s) %s\",base,offset,zoneId)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-datetime-string/src/main/java/com/baeldung/timezonedisplay/TimezoneDisplayJava7.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(\"(%s%s) %s\",base,offset,zoneId)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 24,
      "startColumnNumber" : 23,
      "endLineNumber" : 24,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 7,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 72
      },
      "nodeContext" : "result.add(String.format(\"(%s%s) %s\",base,offset,zoneId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 73
      },
      "nodeContext" : "result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 19,
        "startColumnNumber" : 47,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TimeZone curTimeZone=TimeZone.getTimeZone(zoneId);\n  String offset=calculateOffset(curTimeZone.getRawOffset());\n  result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String zoneId : availableZoneIds) {\n  TimeZone curTimeZone=TimeZone.getTimeZone(zoneId);\n  String offset=calculateOffset(curTimeZone.getRawOffset());\n  result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 15,
        "startColumnNumber" : 78,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] availableZoneIds=TimeZone.getAvailableIDs();\n  List<String> result=new ArrayList<>(availableZoneIds.length);\n  for (  String zoneId : availableZoneIds) {\n    TimeZone curTimeZone=TimeZone.getTimeZone(zoneId);\n    String offset=calculateOffset(curTimeZone.getRawOffset());\n    result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n  }\n  Collections.sort(result);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public List<String> getTimeZoneList(TimezoneDisplayJava7.OffsetBase base){\n  String[] availableZoneIds=TimeZone.getAvailableIDs();\n  List<String> result=new ArrayList<>(availableZoneIds.length);\n  for (  String zoneId : availableZoneIds) {\n    TimeZone curTimeZone=TimeZone.getTimeZone(zoneId);\n    String offset=calculateOffset(curTimeZone.getRawOffset());\n    result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n  }\n  Collections.sort(result);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 73
      },
      "nodeContext" : "result.add(String.format(\"(%s%s) %s\",base,offset,zoneId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 24,
    "startColumnNumber" : 23,
    "endLineNumber" : 24,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}