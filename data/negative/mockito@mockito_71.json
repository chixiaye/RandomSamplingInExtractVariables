{
  "id" : 71,
  "expression" : "verify(mockTwo)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/bugs/VerifyingWithAnExtraCallToADifferentMockTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "verify(mockTwo)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 31,
      "startColumnNumber" : 8,
      "endLineNumber" : 31,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 56
      },
      "nodeContext" : "verify(mockTwo).simpleMethod(mock.otherMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(mockTwo).simpleMethod(mock.otherMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 23,
        "startColumnNumber" : 71,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(mock.otherMethod()).thenReturn(\"foo\");\n  mockTwo.simpleMethod(\"foo\");\n  verify(mockTwo).simpleMethod(mock.otherMethod());\n  try {\n    verify(mockTwo,never()).simpleMethod(mock.otherMethod());\n    fail();\n  }\n catch (  NeverWantedButInvoked e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine(){\n  when(mock.otherMethod()).thenReturn(\"foo\");\n  mockTwo.simpleMethod(\"foo\");\n  verify(mockTwo).simpleMethod(mock.otherMethod());\n  try {\n    verify(mockTwo,never()).simpleMethod(mock.otherMethod());\n    fail();\n  }\n catch (  NeverWantedButInvoked e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(mockTwo).simpleMethod(mock.otherMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.mockitousage.IMethods"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 31,
    "startColumnNumber" : 8,
    "endLineNumber" : 31,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}