{
  "id" : 150,
  "expression" : "\"Error reading request body from inputstream. error=\"",
  "projectName" : "Netflix@zuul",
  "commitID" : "4dd944db59b0a82e7432c25822231e4a83296e77",
  "filePath" : "zuul-servletapi/src/main/java/com/netflix/zuul/context/ServletSessionContextFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Error reading request body from inputstream. error=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 101,
      "startColumnNumber" : 30,
      "endLineNumber" : 101,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 101,
        "startColumnNumber" : 30,
        "endLineNumber" : 102,
        "endColumnNumber" : 111
      },
      "nodeContext" : "\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 112
      },
      "nodeContext" : "LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 113
      },
      "nodeContext" : "LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 100,
        "startColumnNumber" : 23,
        "endLineNumber" : 103,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (SocketTimeoutException.class.isAssignableFrom(e.getClass())) {\n  LOG.error(\"SocketTimeoutException reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n}\n else {\n  LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 94,
        "startColumnNumber" : 51,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (SocketTimeoutException.class.isAssignableFrom(e.getClass())) {\n    LOG.error(\"SocketTimeoutException reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n  }\n else {\n    LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n  }\n  ZuulException ze=new ZuulException(e.getMessage(),e,\"TIMEOUT_READING_REQ_BODY\");\n  ze.setStatusCode(400);\n  request.getContext().setError(ze);\n  request.getContext().setShouldSendErrorResponse(true);\n  return Unpooled.EMPTY_BUFFER;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 94,
        "startColumnNumber" : 44,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "(e) -> {\n  if (SocketTimeoutException.class.isAssignableFrom(e.getClass())) {\n    LOG.error(\"SocketTimeoutException reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n  }\n else {\n    LOG.error(\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging());\n  }\n  ZuulException ze=new ZuulException(e.getMessage(),e,\"TIMEOUT_READING_REQ_BODY\");\n  ze.setStatusCode(400);\n  request.getContext().setError(ze);\n  request.getContext().setShouldSendErrorResponse(true);\n  return Unpooled.EMPTY_BUFFER;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 83,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 101,
        "startColumnNumber" : 30,
        "endLineNumber" : 102,
        "endColumnNumber" : 111
      },
      "nodeContext" : "\"Error reading request body from inputstream. error=\" + String.valueOf(e.getMessage()) + \", request-info: \"+ request.getInfoForLogging()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 101,
    "startColumnNumber" : 30,
    "endLineNumber" : 101,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}