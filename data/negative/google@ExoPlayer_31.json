{
  "id" : 31,
  "expression" : "TracksInfo.TrackGroupInfo",
  "projectName" : "google@ExoPlayer",
  "commitID" : "ac881be2fccbbfe29fe3b4f094b85d6d16942c72",
  "filePath" : "extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TracksInfo.TrackGroupInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 1057,
      "startColumnNumber" : 4,
      "endLineNumber" : 1057,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayType,elementType]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1057,
        "startColumnNumber" : 4,
        "endLineNumber" : 1057,
        "endColumnNumber" : 29
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 1057,
        "startColumnNumber" : 4,
        "endLineNumber" : 1057,
        "endColumnNumber" : 31
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo[]",
      "nodeType" : "ArrayType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 1057,
        "startColumnNumber" : 4,
        "endLineNumber" : 1058,
        "endColumnNumber" : 62
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 1057,
        "startColumnNumber" : 4,
        "endLineNumber" : 1057,
        "endColumnNumber" : 31
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo[]",
      "nodeType" : "ArrayType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.android.exoplayer2.TracksInfo.TrackGroupInfo"
  }, {
    "nodeContext" : "TracksInfo.TrackGroupInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 1058,
      "startColumnNumber" : 12,
      "endLineNumber" : 1058,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayType,elementType]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1058,
        "startColumnNumber" : 12,
        "endLineNumber" : 1058,
        "endColumnNumber" : 37
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,type]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 1058,
        "startColumnNumber" : 12,
        "endLineNumber" : 1058,
        "endColumnNumber" : 61
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo[]",
      "nodeType" : "ArrayType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 1058,
        "startColumnNumber" : 8,
        "endLineNumber" : 1058,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new TracksInfo.TrackGroupInfo[castMediaTracks.size()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 1057,
        "startColumnNumber" : 32,
        "endLineNumber" : 1058,
        "endColumnNumber" : 61
      },
      "nodeContext" : "trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 1057,
        "startColumnNumber" : 4,
        "endLineNumber" : 1058,
        "endColumnNumber" : 62
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 1058,
        "startColumnNumber" : 8,
        "endLineNumber" : 1058,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new TracksInfo.TrackGroupInfo[castMediaTracks.size()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.google.android.exoplayer2.TracksInfo.TrackGroupInfo"
  }, {
    "nodeContext" : "TracksInfo.TrackGroupInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 1076,
      "startColumnNumber" : 14,
      "endLineNumber" : 1076,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1076,
        "startColumnNumber" : 14,
        "endLineNumber" : 1076,
        "endColumnNumber" : 39
      },
      "nodeContext" : "TracksInfo.TrackGroupInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 1076,
        "startColumnNumber" : 10,
        "endLineNumber" : 1076,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 1075,
        "startColumnNumber" : 6,
        "endLineNumber" : 1076,
        "endColumnNumber" : 95
      },
      "nodeContext" : "trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 1075,
        "startColumnNumber" : 6,
        "endLineNumber" : 1076,
        "endColumnNumber" : 96
      },
      "nodeContext" : "trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 1076,
        "startColumnNumber" : 10,
        "endLineNumber" : 1076,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.android.exoplayer2.TracksInfo.TrackGroupInfo"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 1057,
    "startColumnNumber" : 4,
    "endLineNumber" : 1057,
    "endColumnNumber" : 29
  }, {
    "charLength" : 25,
    "startLineNumber" : 1058,
    "startColumnNumber" : 12,
    "endLineNumber" : 1058,
    "endColumnNumber" : 37
  }, {
    "charLength" : 25,
    "startLineNumber" : 1076,
    "startColumnNumber" : 14,
    "endLineNumber" : 1076,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}