{
  "id" : 353,
  "expression" : "new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n  @Override public InstanceInfo.Builder call(  DataCenterInfo dataCenterInfo){\n    final String instanceId=config.getAppName() + '#' + instanceUUID;\n    String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n    HashSet<String> healthCheckUrls=new HashSet<>();\n    healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n    return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n  }\n}\n",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/service/ConfigSelfInfoResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n  @Override public InstanceInfo.Builder call(  DataCenterInfo dataCenterInfo){\n    final String instanceId=config.getAppName() + '#' + instanceUUID;\n    String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n    HashSet<String> healthCheckUrls=new HashSet<>();\n    healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n    return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 1090,
      "startLineNumber" : 32,
      "startColumnNumber" : 21,
      "endLineNumber" : 49,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 113,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 18
      },
      "nodeContext" : "resolveDataCenterInfo().map(new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n  @Override public InstanceInfo.Builder call(  DataCenterInfo dataCenterInfo){\n    final String instanceId=config.getAppName() + '#' + instanceUUID;\n    String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n    HashSet<String> healthCheckUrls=new HashSet<>();\n    healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n    return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 117,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1144,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return resolveDataCenterInfo().map(new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n  @Override public InstanceInfo.Builder call(  DataCenterInfo dataCenterInfo){\n    final String instanceId=config.getAppName() + '#' + instanceUUID;\n    String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n    HashSet<String> healthCheckUrls=new HashSet<>();\n    healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n    return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 118,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 30,
        "startColumnNumber" : 64,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return resolveDataCenterInfo().map(new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n    @Override public InstanceInfo.Builder call(    DataCenterInfo dataCenterInfo){\n      final String instanceId=config.getAppName() + '#' + instanceUUID;\n      String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n      HashSet<String> healthCheckUrls=new HashSet<>();\n      healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n      return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Observable<InstanceInfo.Builder> resolveMutable(){\n  return resolveDataCenterInfo().map(new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n    @Override public InstanceInfo.Builder call(    DataCenterInfo dataCenterInfo){\n      final String instanceId=config.getAppName() + '#' + instanceUUID;\n      String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n      HashSet<String> healthCheckUrls=new HashSet<>();\n      healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n      return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 18
      },
      "nodeContext" : "resolveDataCenterInfo().map(new Func1<DataCenterInfo,InstanceInfo.Builder>(){\n  @Override public InstanceInfo.Builder call(  DataCenterInfo dataCenterInfo){\n    final String instanceId=config.getAppName() + '#' + instanceUUID;\n    String address=AddressSelector.selectBy().publicIp(true).or().any().returnNameOrIp(dataCenterInfo.getAddresses());\n    HashSet<String> healthCheckUrls=new HashSet<>();\n    healthCheckUrls.add(\"http://\" + address + ':'+ config.getWebAdminPort()+ \"/healthcheck\");\n    return new InstanceInfo.Builder().withId(instanceId).withApp(config.getAppName()).withVipAddress(config.getVipAddress()).withHealthCheckUrls(healthCheckUrls).withDataCenterInfo(dataCenterInfo).withStatus(InstanceInfo.Status.STARTING);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 117,
      "astHeight" : 16
    },
    "tokenLength" : 58,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 1090,
    "startLineNumber" : 32,
    "startColumnNumber" : 21,
    "endLineNumber" : 49,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}