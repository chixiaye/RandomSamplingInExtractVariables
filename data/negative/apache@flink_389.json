{
  "id" : 389,
  "expression" : "0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-clients/src/main/java/org/apache/flink/client/deployment/DefaultClusterClientServiceLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 90,
      "startColumnNumber" : 73,
      "endLineNumber" : 90,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 90,
        "startColumnNumber" : 49,
        "endLineNumber" : 90,
        "endColumnNumber" : 75
      },
      "nodeContext" : "compatibleFactories.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 90,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 75
      },
      "nodeContext" : "(ClusterClientFactory<ClusterID>)compatibleFactories.get(0)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return (ClusterClientFactory<ClusterID>)compatibleFactories.get(0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 47,
        "startColumnNumber" : 47,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(configuration);\n  final ServiceLoader<ClusterClientFactory> loader=ServiceLoader.load(ClusterClientFactory.class);\n  final List<ClusterClientFactory> compatibleFactories=new ArrayList<>();\n  final Iterator<ClusterClientFactory> factories=loader.iterator();\n  while (factories.hasNext()) {\n    try {\n      final ClusterClientFactory factory=factories.next();\n      if (factory != null && factory.isCompatibleWith(configuration)) {\n        compatibleFactories.add(factory);\n      }\n    }\n catch (    Throwable e) {\n      if (e.getCause() instanceof NoClassDefFoundError) {\n        LOG.info(\"Could not load factory due to missing dependencies.\");\n      }\n else {\n        throw e;\n      }\n    }\n  }\n  if (compatibleFactories.size() > 1) {\n    final List<String> configStr=configuration.toMap().entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue()).collect(Collectors.toList());\n    throw new IllegalStateException(\"Multiple compatible client factories found for:\\n\" + String.join(\"\\n\",configStr) + \".\");\n  }\n  if (compatibleFactories.isEmpty()) {\n    throw new IllegalStateException(\"No ClusterClientFactory found. If you were targeting a Yarn cluster, \" + \"please make sure to export the HADOOP_CLASSPATH environment variable or have hadoop in your \" + \"classpath. For more information refer to the \\\"Deployment\\\" section of the official \"+ \"Apache Flink documentation.\");\n  }\n  return (ClusterClientFactory<ClusterID>)compatibleFactories.get(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2110,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public <ClusterID>ClusterClientFactory<ClusterID> getClusterClientFactory(final Configuration configuration){\n  checkNotNull(configuration);\n  final ServiceLoader<ClusterClientFactory> loader=ServiceLoader.load(ClusterClientFactory.class);\n  final List<ClusterClientFactory> compatibleFactories=new ArrayList<>();\n  final Iterator<ClusterClientFactory> factories=loader.iterator();\n  while (factories.hasNext()) {\n    try {\n      final ClusterClientFactory factory=factories.next();\n      if (factory != null && factory.isCompatibleWith(configuration)) {\n        compatibleFactories.add(factory);\n      }\n    }\n catch (    Throwable e) {\n      if (e.getCause() instanceof NoClassDefFoundError) {\n        LOG.info(\"Could not load factory due to missing dependencies.\");\n      }\n else {\n        throw e;\n      }\n    }\n  }\n  if (compatibleFactories.size() > 1) {\n    final List<String> configStr=configuration.toMap().entrySet().stream().map(e -> e.getKey() + \"=\" + e.getValue()).collect(Collectors.toList());\n    throw new IllegalStateException(\"Multiple compatible client factories found for:\\n\" + String.join(\"\\n\",configStr) + \".\");\n  }\n  if (compatibleFactories.isEmpty()) {\n    throw new IllegalStateException(\"No ClusterClientFactory found. If you were targeting a Yarn cluster, \" + \"please make sure to export the HADOOP_CLASSPATH environment variable or have hadoop in your \" + \"classpath. For more information refer to the \\\"Deployment\\\" section of the official \"+ \"Apache Flink documentation.\");\n  }\n  return (ClusterClientFactory<ClusterID>)compatibleFactories.get(0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return (ClusterClientFactory<ClusterID>)compatibleFactories.get(0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 90,
    "startColumnNumber" : 73,
    "endLineNumber" : 90,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}