{
  "id" : 68,
  "expression" : "produce",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/experimental/BlockForge.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "produce",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 101,
      "startColumnNumber" : 15,
      "endLineNumber" : 101,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (produce) {\n  progress+=buildSpeed * edelta();\n  if (progress >= recipe.buildCost) {\n    consume();\n    payload=new BuildPayload(recipe,team);\n    payVector.setZero();\n    progress=0f;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 98,
        "startColumnNumber" : 32,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean produce=recipe != null && consValid() && payload == null;\n  if (produce) {\n    progress+=buildSpeed * edelta();\n    if (progress >= recipe.buildCost) {\n      consume();\n      payload=new BuildPayload(recipe,team);\n      payVector.setZero();\n      progress=0f;\n    }\n  }\n  heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n  time+=heat * delta();\n  moveOutPayload();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  boolean produce=recipe != null && consValid() && payload == null;\n  if (produce) {\n    progress+=buildSpeed * edelta();\n    if (progress >= recipe.buildCost) {\n      consume();\n      payload=new BuildPayload(recipe,team);\n      payVector.setZero();\n      progress=0f;\n    }\n  }\n  heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n  time+=heat * delta();\n  moveOutPayload();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (produce) {\n  progress+=buildSpeed * edelta();\n  if (progress >= recipe.buildCost) {\n    consume();\n    payload=new BuildPayload(recipe,team);\n    payVector.setZero();\n    progress=0f;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "produce",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 112,
      "startColumnNumber" : 51,
      "endLineNumber" : 112,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 112,
        "startColumnNumber" : 41,
        "endLineNumber" : 112,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Mathf.num(produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 112,
        "startColumnNumber" : 19,
        "endLineNumber" : 112,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Mathf.lerpDelta(heat,Mathf.num(produce),0.3f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 66
      },
      "nodeContext" : "heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 67
      },
      "nodeContext" : "heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 98,
        "startColumnNumber" : 32,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean produce=recipe != null && consValid() && payload == null;\n  if (produce) {\n    progress+=buildSpeed * edelta();\n    if (progress >= recipe.buildCost) {\n      consume();\n      payload=new BuildPayload(recipe,team);\n      payVector.setZero();\n      progress=0f;\n    }\n  }\n  heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n  time+=heat * delta();\n  moveOutPayload();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  boolean produce=recipe != null && consValid() && payload == null;\n  if (produce) {\n    progress+=buildSpeed * edelta();\n    if (progress >= recipe.buildCost) {\n      consume();\n      payload=new BuildPayload(recipe,team);\n      payVector.setZero();\n      progress=0f;\n    }\n  }\n  heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n  time+=heat * delta();\n  moveOutPayload();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 67
      },
      "nodeContext" : "heat=Mathf.lerpDelta(heat,Mathf.num(produce),0.3f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 101,
    "startColumnNumber" : 15,
    "endLineNumber" : 101,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 112,
    "startColumnNumber" : 51,
    "endLineNumber" : 112,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}