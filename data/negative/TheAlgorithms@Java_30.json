{
  "id" : 30,
  "expression" : "k",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Compression/src/HEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "k",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 21,
      "endLineNumber" : 44,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Character c : k) {\n  Node n=new Node();\n  n.ch=c;\n  n.left=null;\n  n.right=null;\n  n.freq=freqmap.get(c);\n  heap.add(n);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 29,
        "startColumnNumber" : 32,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HashMap<Character,Integer> freqmap=new HashMap<>();\n  for (int i=0; i < feeder.length(); ++i) {\n    char ch=feeder.charAt(i);\n    if (freqmap.containsKey(ch)) {\n      freqmap.put(ch,freqmap.get(ch) + 1);\n    }\n else {\n      freqmap.put(ch,1);\n    }\n  }\n  genericheap<Node> heap=new genericheap<Node>(Node.Ctor);\n  ArrayList<Character> k=new ArrayList<>(freqmap.keySet());\n  for (  Character c : k) {\n    Node n=new Node();\n    n.ch=c;\n    n.left=null;\n    n.right=null;\n    n.freq=freqmap.get(c);\n    heap.add(n);\n  }\n  Node fn=new Node();\n  while (heap.size() != 1) {\n    Node n1=heap.removeHP();\n    Node n2=heap.removeHP();\n    fn=new Node();\n    fn.freq=n1.freq + n2.freq;\n    fn.left=n1;\n    fn.right=n2;\n    heap.add(fn);\n  }\n  traverse(heap.removeHP(),\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public HEncoder(String feeder){\n  HashMap<Character,Integer> freqmap=new HashMap<>();\n  for (int i=0; i < feeder.length(); ++i) {\n    char ch=feeder.charAt(i);\n    if (freqmap.containsKey(ch)) {\n      freqmap.put(ch,freqmap.get(ch) + 1);\n    }\n else {\n      freqmap.put(ch,1);\n    }\n  }\n  genericheap<Node> heap=new genericheap<Node>(Node.Ctor);\n  ArrayList<Character> k=new ArrayList<>(freqmap.keySet());\n  for (  Character c : k) {\n    Node n=new Node();\n    n.ch=c;\n    n.left=null;\n    n.right=null;\n    n.freq=freqmap.get(c);\n    heap.add(n);\n  }\n  Node fn=new Node();\n  while (heap.size() != 1) {\n    Node n1=heap.removeHP();\n    Node n2=heap.removeHP();\n    fn=new Node();\n    fn.freq=n1.freq + n2.freq;\n    fn.left=n1;\n    fn.right=n2;\n    heap.add(fn);\n  }\n  traverse(heap.removeHP(),\"\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 220,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Character c : k) {\n  Node n=new Node();\n  n.ch=c;\n  n.left=null;\n  n.right=null;\n  n.freq=freqmap.get(c);\n  heap.add(n);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 21,
    "endLineNumber" : 44,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}