{
  "id" : 95,
  "expression" : "firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 176,
      "startColumnNumber" : 17,
      "endLineNumber" : 176,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 14,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 176,
        "startColumnNumber" : 7,
        "endLineNumber" : 176,
        "endColumnNumber" : 87
      },
      "nodeContext" : "lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 176,
        "startColumnNumber" : 3,
        "endLineNumber" : 176,
        "endColumnNumber" : 88
      },
      "nodeContext" : "int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 175,
        "startColumnNumber" : 55,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n  for (  AtlasRegion region : atlas.findRegions(regionsName)) {\n    if (region != null) {\n      int tileId=firstgid + region.index;\n      if (tileId >= firstgid && tileId <= lastgid) {\n        addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 175,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (imageSource != null && imageSource.length() > 0) {\n  int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n  for (  AtlasRegion region : atlas.findRegions(regionsName)) {\n    if (region != null) {\n      int tileId=firstgid + region.index;\n      if (tileId >= firstgid && tileId <= lastgid) {\n        addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 157,
        "startColumnNumber" : 114,
        "endLineNumber" : 204,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TextureAtlas atlas=atlasResolver.getAtlas();\n  String regionsName=name;\n  for (  Texture texture : atlas.getTextures()) {\n    trackedTextures.add(texture);\n  }\n  MapProperties props=tileSet.getProperties();\n  props.put(\"imagesource\",imageSource);\n  props.put(\"imagewidth\",imageWidth);\n  props.put(\"imageheight\",imageHeight);\n  props.put(\"tilewidth\",tilewidth);\n  props.put(\"tileheight\",tileheight);\n  props.put(\"margin\",margin);\n  props.put(\"spacing\",spacing);\n  if (imageSource != null && imageSource.length() > 0) {\n    int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n    for (    AtlasRegion region : atlas.findRegions(regionsName)) {\n      if (region != null) {\n        int tileId=firstgid + region.index;\n        if (tileId >= firstgid && tileId <= lastgid) {\n          addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n        }\n      }\n    }\n  }\n  for (  Element tileElement : tileElements) {\n    int tileId=firstgid + tileElement.getIntAttribute(\"id\",0);\n    TiledMapTile tile=tileSet.getTile(tileId);\n    if (tile == null) {\n      Element imageElement=tileElement.getChildByName(\"image\");\n      if (imageElement != null) {\n        String regionName=imageElement.getAttribute(\"source\");\n        regionName=regionName.substring(0,regionName.lastIndexOf('.'));\n        AtlasRegion region=atlas.findRegion(regionName);\n        if (region == null)         throw new GdxRuntimeException(\"Tileset atlasRegion not found: \" + regionName);\n        addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 154,
        "startColumnNumber" : 1,
        "endLineNumber" : 204,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void addStaticTiles(FileHandle tmxFile,ImageResolver imageResolver,TiledMapTileSet tileSet,Element element,Array<Element> tileElements,String name,int firstgid,int tilewidth,int tileheight,int spacing,int margin,String source,int offsetX,int offsetY,String imageSource,int imageWidth,int imageHeight,FileHandle image){\n  TextureAtlas atlas=atlasResolver.getAtlas();\n  String regionsName=name;\n  for (  Texture texture : atlas.getTextures()) {\n    trackedTextures.add(texture);\n  }\n  MapProperties props=tileSet.getProperties();\n  props.put(\"imagesource\",imageSource);\n  props.put(\"imagewidth\",imageWidth);\n  props.put(\"imageheight\",imageHeight);\n  props.put(\"tilewidth\",tilewidth);\n  props.put(\"tileheight\",tileheight);\n  props.put(\"margin\",margin);\n  props.put(\"spacing\",spacing);\n  if (imageSource != null && imageSource.length() > 0) {\n    int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n    for (    AtlasRegion region : atlas.findRegions(regionsName)) {\n      if (region != null) {\n        int tileId=firstgid + region.index;\n        if (tileId >= firstgid && tileId <= lastgid) {\n          addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n        }\n      }\n    }\n  }\n  for (  Element tileElement : tileElements) {\n    int tileId=firstgid + tileElement.getIntAttribute(\"id\",0);\n    TiledMapTile tile=tileSet.getTile(tileId);\n    if (tile == null) {\n      Element imageElement=tileElement.getChildByName(\"image\");\n      if (imageElement != null) {\n        String regionName=imageElement.getAttribute(\"source\");\n        regionName=regionName.substring(0,regionName.lastIndexOf('.'));\n        AtlasRegion region=atlas.findRegion(regionName);\n        if (region == null)         throw new GdxRuntimeException(\"Tileset atlasRegion not found: \" + regionName);\n        addStaticTiledMapTile(tileSet,region,tileId,offsetX,offsetY);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 315,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 176,
        "startColumnNumber" : 3,
        "endLineNumber" : 176,
        "endColumnNumber" : 88
      },
      "nodeContext" : "int lastgid=firstgid + ((imageWidth / tilewidth) * (imageHeight / tileheight)) - 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    },
    "tokenLength" : 11,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 176,
    "startColumnNumber" : 17,
    "endLineNumber" : 176,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}