{
  "id" : 15,
  "expression" : "(row.size() == outputVariables.size() || row.size() == 0)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-spi/src/main/java/com/facebook/presto/spi/plan/ValuesNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(row.size() == outputVariables.size() || row.size() == 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 53,
      "startColumnNumber" : 17,
      "endLineNumber" : 53,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 14,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!(row.size() == outputVariables.size() || row.size() == 0)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(row.size() == outputVariables.size() || row.size() == 0)) {\n  throw new IllegalArgumentException(format(\"Expected row to have %s values, but row has %s values\",outputVariables.size(),row.size()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 52,
        "startColumnNumber" : 45,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!(row.size() == outputVariables.size() || row.size() == 0)) {\n    throw new IllegalArgumentException(format(\"Expected row to have %s values, but row has %s values\",outputVariables.size(),row.size()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (List<RowExpression> row : rows) {\n  if (!(row.size() == outputVariables.size() || row.size() == 0)) {\n    throw new IllegalArgumentException(format(\"Expected row to have %s values, but row has %s values\",outputVariables.size(),row.size()));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(sourceLocation,id);\n  this.outputVariables=immutableListCopyOf(outputVariables);\n  this.rows=immutableListCopyOf(requireNonNull(rows,\"lists is null\").stream().map(ValuesNode::immutableListCopyOf).collect(Collectors.toList()));\n  for (  List<RowExpression> row : rows) {\n    if (!(row.size() == outputVariables.size() || row.size() == 0)) {\n      throw new IllegalArgumentException(format(\"Expected row to have %s values, but row has %s values\",outputVariables.size(),row.size()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@JsonCreator public ValuesNode(Optional<SourceLocation> sourceLocation,@JsonProperty(\"id\") PlanNodeId id,@JsonProperty(\"outputVariables\") List<VariableReferenceExpression> outputVariables,@JsonProperty(\"rows\") List<List<RowExpression>> rows){\n  super(sourceLocation,id);\n  this.outputVariables=immutableListCopyOf(outputVariables);\n  this.rows=immutableListCopyOf(requireNonNull(rows,\"lists is null\").stream().map(ValuesNode::immutableListCopyOf).collect(Collectors.toList()));\n  for (  List<RowExpression> row : rows) {\n    if (!(row.size() == outputVariables.size() || row.size() == 0)) {\n      throw new IllegalArgumentException(format(\"Expected row to have %s values, but row has %s values\",outputVariables.size(),row.size()));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!(row.size() == outputVariables.size() || row.size() == 0)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 10,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 53,
    "startColumnNumber" : 17,
    "endLineNumber" : 53,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}