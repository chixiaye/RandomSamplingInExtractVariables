{
  "id" : 172,
  "expression" : "Float",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/type/DecimalCasts.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Float",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 549,
      "startColumnNumber" : 12,
      "endLineNumber" : 549,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 549,
        "startColumnNumber" : 12,
        "endLineNumber" : 549,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Float.isInfinite(floatValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 549,
        "startColumnNumber" : 12,
        "endLineNumber" : 549,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Float.isInfinite(floatValue) || Float.isNaN(floatValue)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 549,
        "startColumnNumber" : 8,
        "endLineNumber" : 551,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n  throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 547,
        "startColumnNumber" : 4,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float floatValue=intBitsToFloat(intScale(value));\n  if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n  try {\n    BigDecimal bigDecimal=new BigDecimal(String.valueOf(floatValue)).setScale(intScale(scale),HALF_UP);\n    Slice decimal=Decimals.encodeScaledValue(bigDecimal);\n    if (overflows(decimal,intScale(precision))) {\n      throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n    }\n    return decimal;\n  }\n catch (  ArithmeticException e) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 546,
        "startColumnNumber" : 4,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Slice realToLongDecimal(long value,long precision,long scale){\n  float floatValue=intBitsToFloat(intScale(value));\n  if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n  try {\n    BigDecimal bigDecimal=new BigDecimal(String.valueOf(floatValue)).setScale(intScale(scale),HALF_UP);\n    Slice decimal=Decimals.encodeScaledValue(bigDecimal);\n    if (overflows(decimal,intScale(precision))) {\n      throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n    }\n    return decimal;\n  }\n catch (  ArithmeticException e) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 549,
        "startColumnNumber" : 12,
        "endLineNumber" : 549,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Float.isInfinite(floatValue) || Float.isNaN(floatValue)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Float"
  }, {
    "nodeContext" : "Float",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 549,
      "startColumnNumber" : 44,
      "endLineNumber" : 549,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 549,
        "startColumnNumber" : 44,
        "endLineNumber" : 549,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Float.isNaN(floatValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 549,
        "startColumnNumber" : 12,
        "endLineNumber" : 549,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Float.isInfinite(floatValue) || Float.isNaN(floatValue)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 549,
        "startColumnNumber" : 8,
        "endLineNumber" : 551,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n  throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 547,
        "startColumnNumber" : 4,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float floatValue=intBitsToFloat(intScale(value));\n  if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n  try {\n    BigDecimal bigDecimal=new BigDecimal(String.valueOf(floatValue)).setScale(intScale(scale),HALF_UP);\n    Slice decimal=Decimals.encodeScaledValue(bigDecimal);\n    if (overflows(decimal,intScale(precision))) {\n      throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n    }\n    return decimal;\n  }\n catch (  ArithmeticException e) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 546,
        "startColumnNumber" : 4,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Slice realToLongDecimal(long value,long precision,long scale){\n  float floatValue=intBitsToFloat(intScale(value));\n  if (Float.isInfinite(floatValue) || Float.isNaN(floatValue)) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n  try {\n    BigDecimal bigDecimal=new BigDecimal(String.valueOf(floatValue)).setScale(intScale(scale),HALF_UP);\n    Slice decimal=Decimals.encodeScaledValue(bigDecimal);\n    if (overflows(decimal,intScale(precision))) {\n      throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n    }\n    return decimal;\n  }\n catch (  ArithmeticException e) {\n    throw new PrestoException(INVALID_CAST_ARGUMENT,format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\",floatValue,precision,scale));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 549,
        "startColumnNumber" : 12,
        "endLineNumber" : 549,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Float.isInfinite(floatValue) || Float.isNaN(floatValue)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 549,
    "startColumnNumber" : 12,
    "endLineNumber" : 549,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 549,
    "startColumnNumber" : 44,
    "endLineNumber" : 549,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}