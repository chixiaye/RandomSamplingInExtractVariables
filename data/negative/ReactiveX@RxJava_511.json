{
  "id" : 511,
  "expression" : "w",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableCombineLatestTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 51,
      "startColumnNumber" : 27,
      "endLineNumber" : 51,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 29
      },
      "nodeContext" : "combined.subscribe(w)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "combined.subscribe(w);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCombineLatestWithFunctionThatThrowsAnException(){\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "combined.subscribe(w);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Subscriber<java.lang.String>"
  }, {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 15,
      "endLineNumber" : 56,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 26
      },
      "nodeContext" : "verify(w,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 46
      },
      "nodeContext" : "verify(w,never()).onNext(anyString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 47
      },
      "nodeContext" : "verify(w,never()).onNext(anyString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCombineLatestWithFunctionThatThrowsAnException(){\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 47
      },
      "nodeContext" : "verify(w,never()).onNext(anyString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Subscriber<java.lang.String>"
  }, {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 15,
      "endLineNumber" : 57,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 26
      },
      "nodeContext" : "verify(w,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "verify(w,never()).onComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(w,never()).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCombineLatestWithFunctionThatThrowsAnException(){\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(w,never()).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Subscriber<java.lang.String>"
  }, {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 15,
      "endLineNumber" : 58,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 27
      },
      "nodeContext" : "verify(w,times(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 70
      },
      "nodeContext" : "verify(w,times(1)).onError(Matchers.<RuntimeException>any())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 71
      },
      "nodeContext" : "verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCombineLatestWithFunctionThatThrowsAnException(){\n  Subscriber<String> w=TestHelper.mockSubscriber();\n  PublishProcessor<String> w1=PublishProcessor.create();\n  PublishProcessor<String> w2=PublishProcessor.create();\n  Flowable<String> combined=Flowable.combineLatest(w1,w2,new BiFunction<String,String,String>(){\n    @Override public String apply(    String v1,    String v2){\n      throw new RuntimeException(\"I don't work.\");\n    }\n  }\n);\n  combined.subscribe(w);\n  w1.onNext(\"first value of w1\");\n  w2.onNext(\"first value of w2\");\n  verify(w,never()).onNext(anyString());\n  verify(w,never()).onComplete();\n  verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 71
      },
      "nodeContext" : "verify(w,times(1)).onError(Matchers.<RuntimeException>any());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Subscriber<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 51,
    "startColumnNumber" : 27,
    "endLineNumber" : 51,
    "endColumnNumber" : 28
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 15,
    "endLineNumber" : 56,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 15,
    "endLineNumber" : 57,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 15,
    "endLineNumber" : 58,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}