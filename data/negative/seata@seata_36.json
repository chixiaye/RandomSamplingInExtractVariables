{
  "id" : 36,
  "expression" : "\":\"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/common/src/test/java/io/seata/common/XIDTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\":\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 75,
      "endLineNumber" : 58,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 58,
        "endColumnNumber" : 109
      },
      "nodeContext" : "XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 54,
        "startColumnNumber" : 34,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long tranId=new Random().nextLong();\n  XID.setPort(8080);\n  XID.setIpAddress(\"127.0.0.1\");\n  assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test generate xid.\n */\n@Test public void testGenerateXID(){\n  long tranId=new Random().nextLong();\n  XID.setPort(8080);\n  XID.setIpAddress(\"127.0.0.1\");\n  assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\":\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 97,
      "endLineNumber" : 58,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 58,
        "endColumnNumber" : 109
      },
      "nodeContext" : "XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 54,
        "startColumnNumber" : 34,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long tranId=new Random().nextLong();\n  XID.setPort(8080);\n  XID.setIpAddress(\"127.0.0.1\");\n  assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test generate xid.\n */\n@Test public void testGenerateXID(){\n  long tranId=new Random().nextLong();\n  XID.setPort(8080);\n  XID.setIpAddress(\"127.0.0.1\");\n  assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertThat(XID.generateXID(tranId)).isEqualTo(XID.getIpAddress() + \":\" + XID.getPort()+ \":\"+ tranId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 75,
    "endLineNumber" : 58,
    "endColumnNumber" : 78
  }, {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 97,
    "endLineNumber" : 58,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}