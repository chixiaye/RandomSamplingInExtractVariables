{
  "id" : 468,
  "expression" : "(double)score",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/RedissonScoredSortedSetReactiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(double)score",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 325,
      "startColumnNumber" : 32,
      "endLineNumber" : 325,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 325,
        "startColumnNumber" : 8,
        "endLineNumber" : 325,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Assert.assertEquals(12,(double)score,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 325,
        "startColumnNumber" : 8,
        "endLineNumber" : 325,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertEquals(12,(double)score,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 318,
        "startColumnNumber" : 60,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RScoredSortedSetReactive<Integer> set=redisson.getScoredSortedSet(\"simple\",StringCodec.INSTANCE);\n  sync(set.add(1,100));\n  Double res=sync(set.addScore(100,11));\n  Assert.assertEquals(12,(double)res,0);\n  Double score=sync(set.getScore(100));\n  Assert.assertEquals(12,(double)score,0);\n  RScoredSortedSetReactive<Integer> set2=redisson.getScoredSortedSet(\"simple\",StringCodec.INSTANCE);\n  sync(set2.add(100.2,1));\n  Double res2=sync(set2.addScore(1,new Double(12.1)));\n  Assert.assertTrue(new Double(112.3).compareTo(res2) == 0);\n  res2=sync(set2.getScore(1));\n  Assert.assertTrue(new Double(112.3).compareTo(res2) == 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 317,
        "startColumnNumber" : 4,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAddAndGet() throws InterruptedException {\n  RScoredSortedSetReactive<Integer> set=redisson.getScoredSortedSet(\"simple\",StringCodec.INSTANCE);\n  sync(set.add(1,100));\n  Double res=sync(set.addScore(100,11));\n  Assert.assertEquals(12,(double)res,0);\n  Double score=sync(set.getScore(100));\n  Assert.assertEquals(12,(double)score,0);\n  RScoredSortedSetReactive<Integer> set2=redisson.getScoredSortedSet(\"simple\",StringCodec.INSTANCE);\n  sync(set2.add(100.2,1));\n  Double res2=sync(set2.addScore(1,new Double(12.1)));\n  Assert.assertTrue(new Double(112.3).compareTo(res2) == 0);\n  res2=sync(set2.getScore(1));\n  Assert.assertTrue(new Double(112.3).compareTo(res2) == 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 325,
        "startColumnNumber" : 8,
        "endLineNumber" : 325,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertEquals(12,(double)score,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 325,
    "startColumnNumber" : 32,
    "endLineNumber" : 325,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}