{
  "id" : 97,
  "expression" : "RedisCommands.SUBSCRIBE",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RedisCommands.SUBSCRIBE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 115,
      "startColumnNumber" : 70,
      "endLineNumber" : 115,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 115,
        "startColumnNumber" : 70,
        "endLineNumber" : 115,
        "endColumnNumber" : 103
      },
      "nodeContext" : "RedisCommands.SUBSCRIBE.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 104
      },
      "nodeContext" : "Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 139
      },
      "nodeContext" : "Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n  commands.remove(key);\n  entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 111,
        "startColumnNumber" : 55,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n  PubSubKey key=new PubSubKey(channelName,operation);\n  CommandData<Object,Object> d=commands.get(key);\n  if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n    commands.remove(key);\n    entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n  }\n  if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n    commands.remove(key);\n    if (result instanceof PubSubPatternMessage) {\n      channelName=((PubSubPatternMessage)result).getPattern();\n    }\n    PubSubEntry entry=entries.remove(channelName);\n    if (keepOrder) {\n      enqueueMessage(result,pubSubConnection,entry);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result instanceof PubSubStatusMessage) {\n  String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n  PubSubKey key=new PubSubKey(channelName,operation);\n  CommandData<Object,Object> d=commands.get(key);\n  if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n    commands.remove(key);\n    entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n  }\n  if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n    commands.remove(key);\n    if (result instanceof PubSubPatternMessage) {\n      channelName=((PubSubPatternMessage)result).getPattern();\n    }\n    PubSubEntry entry=entries.remove(channelName);\n    if (keepOrder) {\n      enqueueMessage(result,pubSubConnection,entry);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 145,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2488,
        "startLineNumber" : 106,
        "startColumnNumber" : 39,
        "endLineNumber" : 155,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkpoint();\n  RedisPubSubConnection pubSubConnection=RedisPubSubConnection.getFrom(channel);\n  ChannelName channelName=((Message)result).getChannel();\n  if (result instanceof PubSubStatusMessage) {\n    String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n    PubSubKey key=new PubSubKey(channelName,operation);\n    CommandData<Object,Object> d=commands.get(key);\n    if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n      commands.remove(key);\n      entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n    }\n    if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n      commands.remove(key);\n      if (result instanceof PubSubPatternMessage) {\n        channelName=((PubSubPatternMessage)result).getPattern();\n      }\n      PubSubEntry entry=entries.remove(channelName);\n      if (keepOrder) {\n        enqueueMessage(result,pubSubConnection,entry);\n      }\n    }\n  }\n  if (keepOrder) {\n    if (result instanceof PubSubPatternMessage) {\n      channelName=((PubSubPatternMessage)result).getPattern();\n    }\n    PubSubEntry entry=entries.get(channelName);\n    if (entry != null) {\n      enqueueMessage(result,pubSubConnection,entry);\n    }\n  }\n else {\n    executor.execute(new Runnable(){\n      @Override public void run(){\n        if (result instanceof PubSubStatusMessage) {\n          pubSubConnection.onMessage((PubSubStatusMessage)result);\n        }\n else         if (result instanceof PubSubMessage) {\n          pubSubConnection.onMessage((PubSubMessage)result);\n        }\n else         if (result instanceof PubSubPatternMessage) {\n          pubSubConnection.onMessage((PubSubPatternMessage)result);\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 267,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2694,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result instanceof Message) {\n  checkpoint();\n  RedisPubSubConnection pubSubConnection=RedisPubSubConnection.getFrom(channel);\n  ChannelName channelName=((Message)result).getChannel();\n  if (result instanceof PubSubStatusMessage) {\n    String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n    PubSubKey key=new PubSubKey(channelName,operation);\n    CommandData<Object,Object> d=commands.get(key);\n    if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n      commands.remove(key);\n      entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n    }\n    if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n      commands.remove(key);\n      if (result instanceof PubSubPatternMessage) {\n        channelName=((PubSubPatternMessage)result).getPattern();\n      }\n      PubSubEntry entry=entries.remove(channelName);\n      if (keepOrder) {\n        enqueueMessage(result,pubSubConnection,entry);\n      }\n    }\n  }\n  if (keepOrder) {\n    if (result instanceof PubSubPatternMessage) {\n      channelName=((PubSubPatternMessage)result).getPattern();\n    }\n    PubSubEntry entry=entries.get(channelName);\n    if (entry != null) {\n      enqueueMessage(result,pubSubConnection,entry);\n    }\n  }\n else {\n    executor.execute(new Runnable(){\n      @Override public void run(){\n        if (result instanceof PubSubStatusMessage) {\n          pubSubConnection.onMessage((PubSubStatusMessage)result);\n        }\n else         if (result instanceof PubSubMessage) {\n          pubSubConnection.onMessage((PubSubMessage)result);\n        }\n else         if (result instanceof PubSubPatternMessage) {\n          pubSubConnection.onMessage((PubSubPatternMessage)result);\n        }\n      }\n    }\n);\n  }\n}\n else {\n  if (data != null && data.getCommand().getName().equals(\"PING\")) {\n    super.decodeResult(data,parts,channel,result);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 294,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2898,
        "startLineNumber" : 97,
        "startColumnNumber" : 46,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (executor.isShutdown()) {\n      return;\n    }\n  }\n catch (  IllegalStateException e) {\n  }\n  if (result instanceof Message) {\n    checkpoint();\n    RedisPubSubConnection pubSubConnection=RedisPubSubConnection.getFrom(channel);\n    ChannelName channelName=((Message)result).getChannel();\n    if (result instanceof PubSubStatusMessage) {\n      String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n      PubSubKey key=new PubSubKey(channelName,operation);\n      CommandData<Object,Object> d=commands.get(key);\n      if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n        commands.remove(key);\n        entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n      }\n      if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n        commands.remove(key);\n        if (result instanceof PubSubPatternMessage) {\n          channelName=((PubSubPatternMessage)result).getPattern();\n        }\n        PubSubEntry entry=entries.remove(channelName);\n        if (keepOrder) {\n          enqueueMessage(result,pubSubConnection,entry);\n        }\n      }\n    }\n    if (keepOrder) {\n      if (result instanceof PubSubPatternMessage) {\n        channelName=((PubSubPatternMessage)result).getPattern();\n      }\n      PubSubEntry entry=entries.get(channelName);\n      if (entry != null) {\n        enqueueMessage(result,pubSubConnection,entry);\n      }\n    }\n else {\n      executor.execute(new Runnable(){\n        @Override public void run(){\n          if (result instanceof PubSubStatusMessage) {\n            pubSubConnection.onMessage((PubSubStatusMessage)result);\n          }\n else           if (result instanceof PubSubMessage) {\n            pubSubConnection.onMessage((PubSubMessage)result);\n          }\n else           if (result instanceof PubSubPatternMessage) {\n            pubSubConnection.onMessage((PubSubPatternMessage)result);\n          }\n        }\n      }\n);\n    }\n  }\n else {\n    if (data != null && data.getCommand().getName().equals(\"PING\")) {\n      super.decodeResult(data,parts,channel,result);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 309,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3057,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void decodeResult(CommandData<Object,Object> data,List<Object> parts,Channel channel,Object result) throws IOException {\n  try {\n    if (executor.isShutdown()) {\n      return;\n    }\n  }\n catch (  IllegalStateException e) {\n  }\n  if (result instanceof Message) {\n    checkpoint();\n    RedisPubSubConnection pubSubConnection=RedisPubSubConnection.getFrom(channel);\n    ChannelName channelName=((Message)result).getChannel();\n    if (result instanceof PubSubStatusMessage) {\n      String operation=((PubSubStatusMessage)result).getType().name().toLowerCase();\n      PubSubKey key=new PubSubKey(channelName,operation);\n      CommandData<Object,Object> d=commands.get(key);\n      if (Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n        commands.remove(key);\n        entries.put(channelName,new PubSubEntry(d.getMessageDecoder()));\n      }\n      if (Arrays.asList(RedisCommands.PUNSUBSCRIBE.getName(),RedisCommands.UNSUBSCRIBE.getName()).contains(d.getCommand().getName())) {\n        commands.remove(key);\n        if (result instanceof PubSubPatternMessage) {\n          channelName=((PubSubPatternMessage)result).getPattern();\n        }\n        PubSubEntry entry=entries.remove(channelName);\n        if (keepOrder) {\n          enqueueMessage(result,pubSubConnection,entry);\n        }\n      }\n    }\n    if (keepOrder) {\n      if (result instanceof PubSubPatternMessage) {\n        channelName=((PubSubPatternMessage)result).getPattern();\n      }\n      PubSubEntry entry=entries.get(channelName);\n      if (entry != null) {\n        enqueueMessage(result,pubSubConnection,entry);\n      }\n    }\n else {\n      executor.execute(new Runnable(){\n        @Override public void run(){\n          if (result instanceof PubSubStatusMessage) {\n            pubSubConnection.onMessage((PubSubStatusMessage)result);\n          }\n else           if (result instanceof PubSubMessage) {\n            pubSubConnection.onMessage((PubSubMessage)result);\n          }\n else           if (result instanceof PubSubPatternMessage) {\n            pubSubConnection.onMessage((PubSubPatternMessage)result);\n          }\n        }\n      }\n);\n    }\n  }\n else {\n    if (data != null && data.getCommand().getName().equals(\"PING\")) {\n      super.decodeResult(data,parts,channel,result);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 341,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 139
      },
      "nodeContext" : "Arrays.asList(RedisCommands.PSUBSCRIBE.getName(),RedisCommands.SUBSCRIBE.getName()).contains(d.getCommand().getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.redisson.client.protocol.RedisCommand<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 115,
    "startColumnNumber" : 70,
    "endLineNumber" : 115,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}