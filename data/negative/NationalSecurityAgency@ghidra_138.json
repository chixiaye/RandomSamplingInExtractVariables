{
  "id" : 138,
  "expression" : "4",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/checksums/CRC32ChecksumAlgorithm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 26,
      "endLineNumber" : 86,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 86,
        "startColumnNumber" : 13,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "toArray(crc,4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 28
      },
      "nodeContext" : "checksum=toArray(crc,4)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 29
      },
      "nodeContext" : "checksum=toArray(crc,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 63,
        "startColumnNumber" : 88,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  byte[] bytes=new byte[1024];\n  long crc;\n  try (CheckedInputStream cis=new CheckedInputStream(new MemoryInputStream(memory,addrSet),new CRC32())){\n    while (cis.read(bytes) > 0) {\n      if (monitor.isCancelled()) {\n        throw new CancelledException();\n      }\n    }\n    crc=cis.getChecksum().getValue();\n  }\n catch (  IOException e) {\n    throw new MemoryAccessException(e.getMessage());\n  }\n  if (onesComp) {\n    crc=~crc;\n  }\n else   if (twosComp) {\n    crc=-crc;\n  }\n  checksum=toArray(crc,4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 51,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Computes the checksum with the given options.\n * @param memory The memory to generate the checksum from.\n * @param addrSet The addresses over which to generate the checksum.\n * @param monitor Cancelable task monitor to cancel the computation.\n * @param onesComp True if the checksum should be complemented with a ones complement.\n * @param twosComp True if the checksum should be complemented with a twos complement.\n * @throws MemoryAccessException If there was a problem reading the memory.\n * @throws CancelledException If the user cancels the task.\n */\npublic void updateChecksum(Memory memory,AddressSetView addrSet,TaskMonitor monitor,boolean onesComp,boolean twosComp) throws MemoryAccessException, CancelledException {\n  byte[] bytes=new byte[1024];\n  long crc;\n  try (CheckedInputStream cis=new CheckedInputStream(new MemoryInputStream(memory,addrSet),new CRC32())){\n    while (cis.read(bytes) > 0) {\n      if (monitor.isCancelled()) {\n        throw new CancelledException();\n      }\n    }\n    crc=cis.getChecksum().getValue();\n  }\n catch (  IOException e) {\n    throw new MemoryAccessException(e.getMessage());\n  }\n  if (onesComp) {\n    crc=~crc;\n  }\n else   if (twosComp) {\n    crc=-crc;\n  }\n  checksum=toArray(crc,4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 29
      },
      "nodeContext" : "checksum=toArray(crc,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 26,
    "endLineNumber" : 86,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}