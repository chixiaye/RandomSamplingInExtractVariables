{
  "id" : 161,
  "expression" : "busyobserver",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableSerializeTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "busyobserver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 64,
      "startColumnNumber" : 32,
      "endLineNumber" : 64,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 45
      },
      "nodeContext" : "w.serialize().subscribe(busyobserver)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 46
      },
      "nodeContext" : "w.serialize().subscribe(busyobserver);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedBasic(){\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 46
      },
      "nodeContext" : "w.serialize().subscribe(busyobserver);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.FlowableSerializeTest.BusyObserver"
  }, {
    "nodeContext" : "busyobserver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 67,
      "startColumnNumber" : 24,
      "endLineNumber" : 67,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 67,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 48
      },
      "nodeContext" : "busyobserver.onNextCount",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 67,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 54
      },
      "nodeContext" : "busyobserver.onNextCount.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(3,busyobserver.onNextCount.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(3,busyobserver.onNextCount.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedBasic(){\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(3,busyobserver.onNextCount.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.FlowableSerializeTest.BusyObserver"
  }, {
    "nodeContext" : "busyobserver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 68,
      "startColumnNumber" : 20,
      "endLineNumber" : 68,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 40
      },
      "nodeContext" : "busyobserver.onError",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertFalse(busyobserver.onError)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertFalse(busyobserver.onError);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedBasic(){\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertFalse(busyobserver.onError);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.FlowableSerializeTest.BusyObserver"
  }, {
    "nodeContext" : "busyobserver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 69,
      "startColumnNumber" : 19,
      "endLineNumber" : 69,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 69,
        "startColumnNumber" : 19,
        "endLineNumber" : 69,
        "endColumnNumber" : 43
      },
      "nodeContext" : "busyobserver.onCompleted",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(busyobserver.onCompleted)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(busyobserver.onCompleted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedBasic(){\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(busyobserver.onCompleted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.FlowableSerializeTest.BusyObserver"
  }, {
    "nodeContext" : "busyobserver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 77,
      "startColumnNumber" : 24,
      "endLineNumber" : 77,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 77,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 57
      },
      "nodeContext" : "busyobserver.maxConcurrentThreads",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 77,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "busyobserver.maxConcurrentThreads.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(1,busyobserver.maxConcurrentThreads.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(1,busyobserver.maxConcurrentThreads.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedBasic(){\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  assertEquals(3,busyobserver.onNextCount.get());\n  assertFalse(busyobserver.onError);\n  assertTrue(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(1,busyobserver.maxConcurrentThreads.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.FlowableSerializeTest.BusyObserver"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 64,
    "startColumnNumber" : 32,
    "endLineNumber" : 64,
    "endColumnNumber" : 44
  }, {
    "charLength" : 12,
    "startLineNumber" : 67,
    "startColumnNumber" : 24,
    "endLineNumber" : 67,
    "endColumnNumber" : 36
  }, {
    "charLength" : 12,
    "startLineNumber" : 68,
    "startColumnNumber" : 20,
    "endLineNumber" : 68,
    "endColumnNumber" : 32
  }, {
    "charLength" : 12,
    "startLineNumber" : 69,
    "startColumnNumber" : 19,
    "endLineNumber" : 69,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 77,
    "startColumnNumber" : 24,
    "endLineNumber" : 77,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}