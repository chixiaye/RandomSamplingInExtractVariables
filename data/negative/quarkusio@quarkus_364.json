{
  "id" : 364,
  "expression" : "removed.contains(entry.getName())",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/index/IndexingUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "removed.contains(entry.getName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 102,
      "startColumnNumber" : 35,
      "endLineNumber" : 102,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 68
      },
      "nodeContext" : "removed != null && removed.contains(entry.getName())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (removed != null && removed.contains(entry.getName())) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 100,
        "startColumnNumber" : 36,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JarEntry entry=e.nextElement();\n  if (removed != null && removed.contains(entry.getName())) {\n    continue;\n  }\n  if (entry.getName().endsWith(\".class\")) {\n    if (multiRelease && entry.getName().startsWith(META_INF_VERSIONS)) {\n      String part=entry.getName().substring(META_INF_VERSIONS.length());\n      int slash=part.indexOf(\"/\");\n      if (slash != -1) {\n        try {\n          int ver=Integer.parseInt(part.substring(0,slash));\n          if (ver <= JAVA_VERSION) {\n            try (InputStream inputStream=file.getInputStream(entry)){\n              indexer.index(inputStream);\n            }\n           }\n        }\n catch (        NumberFormatException ex) {\n          log.debug(\"Failed to parse META-INF/versions entry\",ex);\n        }\n      }\n    }\n else {\n      try (InputStream inputStream=file.getInputStream(entry)){\n        indexer.index(inputStream);\n      }\n     }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (e.hasMoreElements()) {\n  JarEntry entry=e.nextElement();\n  if (removed != null && removed.contains(entry.getName())) {\n    continue;\n  }\n  if (entry.getName().endsWith(\".class\")) {\n    if (multiRelease && entry.getName().startsWith(META_INF_VERSIONS)) {\n      String part=entry.getName().substring(META_INF_VERSIONS.length());\n      int slash=part.indexOf(\"/\");\n      if (slash != -1) {\n        try {\n          int ver=Integer.parseInt(part.substring(0,slash));\n          if (ver <= JAVA_VERSION) {\n            try (InputStream inputStream=file.getInputStream(entry)){\n              indexer.index(inputStream);\n            }\n           }\n        }\n catch (        NumberFormatException ex) {\n          log.debug(\"Failed to parse META-INF/versions entry\",ex);\n        }\n      }\n    }\n else {\n      try (InputStream inputStream=file.getInputStream(entry)){\n        indexer.index(inputStream);\n      }\n     }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 135,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1514,
        "startLineNumber" : 96,
        "startColumnNumber" : 88,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Indexer indexer=new Indexer();\n  Enumeration<JarEntry> e=file.entries();\n  boolean multiRelease=JarFiles.isMultiRelease(file);\n  while (e.hasMoreElements()) {\n    JarEntry entry=e.nextElement();\n    if (removed != null && removed.contains(entry.getName())) {\n      continue;\n    }\n    if (entry.getName().endsWith(\".class\")) {\n      if (multiRelease && entry.getName().startsWith(META_INF_VERSIONS)) {\n        String part=entry.getName().substring(META_INF_VERSIONS.length());\n        int slash=part.indexOf(\"/\");\n        if (slash != -1) {\n          try {\n            int ver=Integer.parseInt(part.substring(0,slash));\n            if (ver <= JAVA_VERSION) {\n              try (InputStream inputStream=file.getInputStream(entry)){\n                indexer.index(inputStream);\n              }\n             }\n          }\n catch (          NumberFormatException ex) {\n            log.debug(\"Failed to parse META-INF/versions entry\",ex);\n          }\n        }\n      }\n else {\n        try (InputStream inputStream=file.getInputStream(entry)){\n          indexer.index(inputStream);\n        }\n       }\n    }\n  }\n  return indexer.complete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Index indexJar(JarFile file,Set<String> removed) throws IOException {\n  Indexer indexer=new Indexer();\n  Enumeration<JarEntry> e=file.entries();\n  boolean multiRelease=JarFiles.isMultiRelease(file);\n  while (e.hasMoreElements()) {\n    JarEntry entry=e.nextElement();\n    if (removed != null && removed.contains(entry.getName())) {\n      continue;\n    }\n    if (entry.getName().endsWith(\".class\")) {\n      if (multiRelease && entry.getName().startsWith(META_INF_VERSIONS)) {\n        String part=entry.getName().substring(META_INF_VERSIONS.length());\n        int slash=part.indexOf(\"/\");\n        if (slash != -1) {\n          try {\n            int ver=Integer.parseInt(part.substring(0,slash));\n            if (ver <= JAVA_VERSION) {\n              try (InputStream inputStream=file.getInputStream(entry)){\n                indexer.index(inputStream);\n              }\n             }\n          }\n catch (          NumberFormatException ex) {\n            log.debug(\"Failed to parse META-INF/versions entry\",ex);\n          }\n        }\n      }\n else {\n        try (InputStream inputStream=file.getInputStream(entry)){\n          indexer.index(inputStream);\n        }\n       }\n    }\n  }\n  return indexer.complete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 68
      },
      "nodeContext" : "removed != null && removed.contains(entry.getName())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 102,
    "startColumnNumber" : 35,
    "endLineNumber" : 102,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}