{
  "id" : 428,
  "expression" : "ctl.previous()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/hudson/triggers/TimerTriggerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ctl.previous()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 53,
      "startColumnNumber" : 72,
      "endLineNumber" : 53,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 53,
        "startColumnNumber" : 72,
        "endLineNumber" : 53,
        "endColumnNumber" : 100
      },
      "nodeContext" : "ctl.previous().getTimeZone()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 53,
        "startColumnNumber" : 72,
        "endLineNumber" : 53,
        "endColumnNumber" : 108
      },
      "nodeContext" : "ctl.previous().getTimeZone().getID()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String cron=\"TZ=GMT\\nH 0 * * *\";\n  CronTabList ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n  Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n  cron=\"TZ=America/Denver\\nH 0 * * *\";\n  ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n  Assert.assertEquals(\"next occurrence is in America/Denver\",\"America/Denver\",ctl.next().getTimeZone().getID());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String cron=\"TZ=GMT\\nH 0 * * *\";\n  CronTabList ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n  Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n  cron=\"TZ=America/Denver\\nH 0 * * *\";\n  ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n  Assert.assertEquals(\"next occurrence is in America/Denver\",\"America/Denver\",ctl.next().getTimeZone().getID());\n}\n  finally {\n  TimeZone.setDefault(defaultTz);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 47,
        "startColumnNumber" : 54,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimeZone defaultTz=TimeZone.getDefault();\n  TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/Berlin\"));\n  try {\n    String cron=\"TZ=GMT\\nH 0 * * *\";\n    CronTabList ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n    Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n    cron=\"TZ=America/Denver\\nH 0 * * *\";\n    ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n    Assert.assertEquals(\"next occurrence is in America/Denver\",\"America/Denver\",ctl.next().getTimeZone().getID());\n  }\n  finally {\n    TimeZone.setDefault(defaultTz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Issue(\"JENKINS-43328\") @Test public void testTimeZoneOffset() throws Exception {\n  TimeZone defaultTz=TimeZone.getDefault();\n  TimeZone.setDefault(TimeZone.getTimeZone(\"Europe/Berlin\"));\n  try {\n    String cron=\"TZ=GMT\\nH 0 * * *\";\n    CronTabList ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n    Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n    cron=\"TZ=America/Denver\\nH 0 * * *\";\n    ctl=CronTabList.create(cron,Hash.from(\"whatever\"));\n    Assert.assertEquals(\"next occurrence is in America/Denver\",\"America/Denver\",ctl.next().getTimeZone().getID());\n  }\n  finally {\n    TimeZone.setDefault(defaultTz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertEquals(\"previous occurrence is in GMT\",\"GMT\",ctl.previous().getTimeZone().getID());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.Calendar"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 53,
    "startColumnNumber" : 72,
    "endLineNumber" : 53,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}