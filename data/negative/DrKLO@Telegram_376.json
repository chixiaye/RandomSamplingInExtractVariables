{
  "id" : 376,
  "expression" : "yuvStrides",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/video/VideoDecoderOutputBuffer.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "yuvStrides",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 160,
      "startColumnNumber" : 8,
      "endLineNumber" : 160,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 26
      },
      "nodeContext" : "yuvStrides == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (yuvStrides == null) {\n  yuvStrides=new int[3];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 121,
        "startColumnNumber" : 99,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resizes the buffer based on the given stride. Called via JNI after decoding completes.\n * @return Whether the buffer was resized successfully.\n */\npublic boolean initForYuvFrame(int width,int height,int yStride,int uvStride,int colorspace){\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 26
      },
      "nodeContext" : "yuvStrides == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int[]"
  }, {
    "nodeContext" : "yuvStrides",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 163,
      "startColumnNumber" : 4,
      "endLineNumber" : 163,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "yuvStrides[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 27
      },
      "nodeContext" : "yuvStrides[0]=yStride",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 28
      },
      "nodeContext" : "yuvStrides[0]=yStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 121,
        "startColumnNumber" : 99,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resizes the buffer based on the given stride. Called via JNI after decoding completes.\n * @return Whether the buffer was resized successfully.\n */\npublic boolean initForYuvFrame(int width,int height,int yStride,int uvStride,int colorspace){\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 28
      },
      "nodeContext" : "yuvStrides[0]=yStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int[]"
  }, {
    "nodeContext" : "yuvStrides",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 164,
      "startColumnNumber" : 4,
      "endLineNumber" : 164,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 17
      },
      "nodeContext" : "yuvStrides[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 28
      },
      "nodeContext" : "yuvStrides[1]=uvStride",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 29
      },
      "nodeContext" : "yuvStrides[1]=uvStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 121,
        "startColumnNumber" : 99,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resizes the buffer based on the given stride. Called via JNI after decoding completes.\n * @return Whether the buffer was resized successfully.\n */\npublic boolean initForYuvFrame(int width,int height,int yStride,int uvStride,int colorspace){\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 29
      },
      "nodeContext" : "yuvStrides[1]=uvStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int[]"
  }, {
    "nodeContext" : "yuvStrides",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 165,
      "startColumnNumber" : 4,
      "endLineNumber" : 165,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 17
      },
      "nodeContext" : "yuvStrides[2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 28
      },
      "nodeContext" : "yuvStrides[2]=uvStride",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 29
      },
      "nodeContext" : "yuvStrides[2]=uvStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 121,
        "startColumnNumber" : 99,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resizes the buffer based on the given stride. Called via JNI after decoding completes.\n * @return Whether the buffer was resized successfully.\n */\npublic boolean initForYuvFrame(int width,int height,int yStride,int uvStride,int colorspace){\n  this.width=width;\n  this.height=height;\n  this.colorspace=colorspace;\n  int uvHeight=(int)(((long)height + 1) / 2);\n  if (!isSafeToMultiply(yStride,height) || !isSafeToMultiply(uvStride,uvHeight)) {\n    return false;\n  }\n  int yLength=yStride * height;\n  int uvLength=uvStride * uvHeight;\n  int minimumYuvSize=yLength + (uvLength * 2);\n  if (!isSafeToMultiply(uvLength,2) || minimumYuvSize < yLength) {\n    return false;\n  }\n  if (data == null || data.capacity() < minimumYuvSize) {\n    data=ByteBuffer.allocateDirect(minimumYuvSize);\n  }\n else {\n    data.position(0);\n    data.limit(minimumYuvSize);\n  }\n  if (yuvPlanes == null) {\n    yuvPlanes=new ByteBuffer[3];\n  }\n  ByteBuffer data=this.data;\n  ByteBuffer[] yuvPlanes=this.yuvPlanes;\n  yuvPlanes[0]=data.slice();\n  yuvPlanes[0].limit(yLength);\n  data.position(yLength);\n  yuvPlanes[1]=data.slice();\n  yuvPlanes[1].limit(uvLength);\n  data.position(yLength + uvLength);\n  yuvPlanes[2]=data.slice();\n  yuvPlanes[2].limit(uvLength);\n  if (yuvStrides == null) {\n    yuvStrides=new int[3];\n  }\n  yuvStrides[0]=yStride;\n  yuvStrides[1]=uvStride;\n  yuvStrides[2]=uvStride;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 29
      },
      "nodeContext" : "yuvStrides[2]=uvStride;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 160,
    "startColumnNumber" : 8,
    "endLineNumber" : 160,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 163,
    "startColumnNumber" : 4,
    "endLineNumber" : 163,
    "endColumnNumber" : 14
  }, {
    "charLength" : 10,
    "startLineNumber" : 164,
    "startColumnNumber" : 4,
    "endLineNumber" : 164,
    "endColumnNumber" : 14
  }, {
    "charLength" : 10,
    "startLineNumber" : 165,
    "startColumnNumber" : 4,
    "endLineNumber" : 165,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}