{
  "id" : 354,
  "expression" : "(MockServerHttpRequest)handler.getSavedRequest()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/test/java/org/springframework/test/web/reactive/server/HttpHandlerConnectorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(MockServerHttpRequest)handler.getSavedRequest()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 68,
      "startColumnNumber" : 34,
      "endLineNumber" : 68,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 68,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 83
      },
      "nodeContext" : "request=(MockServerHttpRequest)handler.getSavedRequest()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 84
      },
      "nodeContext" : "MockServerHttpRequest request=(MockServerHttpRequest)handler.getSavedRequest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestHttpHandler handler=new TestHttpHandler(response -> {\n    response.setStatusCode(HttpStatus.OK);\n    return response.setComplete();\n  }\n);\n  new HttpHandlerConnector(handler).connect(HttpMethod.POST,URI.create(\"/custom-path\"),request -> {\n    request.getHeaders().put(\"custom-header\",Arrays.asList(\"h0\",\"h1\"));\n    request.getCookies().add(\"custom-cookie\",new HttpCookie(\"custom-cookie\",\"c0\"));\n    return request.writeWith(Mono.just(toDataBuffer(\"Custom body\")));\n  }\n).block(Duration.ofSeconds(5));\n  MockServerHttpRequest request=(MockServerHttpRequest)handler.getSavedRequest();\n  assertEquals(HttpMethod.POST,request.getMethod());\n  assertEquals(\"/custom-path\",request.getURI().toString());\n  HttpHeaders headers=request.getHeaders();\n  assertEquals(Arrays.asList(\"h0\",\"h1\"),headers.get(\"custom-header\"));\n  assertEquals(new HttpCookie(\"custom-cookie\",\"c0\"),request.getCookies().getFirst(\"custom-cookie\"));\n  assertEquals(Collections.singletonList(\"custom-cookie=c0\"),headers.get(HttpHeaders.COOKIE));\n  DataBuffer buffer=request.getBody().blockFirst(Duration.ZERO);\n  assertEquals(\"Custom body\",DataBufferTestUtils.dumpString(buffer,UTF_8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void adaptRequest() throws Exception {\n  TestHttpHandler handler=new TestHttpHandler(response -> {\n    response.setStatusCode(HttpStatus.OK);\n    return response.setComplete();\n  }\n);\n  new HttpHandlerConnector(handler).connect(HttpMethod.POST,URI.create(\"/custom-path\"),request -> {\n    request.getHeaders().put(\"custom-header\",Arrays.asList(\"h0\",\"h1\"));\n    request.getCookies().add(\"custom-cookie\",new HttpCookie(\"custom-cookie\",\"c0\"));\n    return request.writeWith(Mono.just(toDataBuffer(\"Custom body\")));\n  }\n).block(Duration.ofSeconds(5));\n  MockServerHttpRequest request=(MockServerHttpRequest)handler.getSavedRequest();\n  assertEquals(HttpMethod.POST,request.getMethod());\n  assertEquals(\"/custom-path\",request.getURI().toString());\n  HttpHeaders headers=request.getHeaders();\n  assertEquals(Arrays.asList(\"h0\",\"h1\"),headers.get(\"custom-header\"));\n  assertEquals(new HttpCookie(\"custom-cookie\",\"c0\"),request.getCookies().getFirst(\"custom-cookie\"));\n  assertEquals(Collections.singletonList(\"custom-cookie=c0\"),headers.get(HttpHeaders.COOKIE));\n  DataBuffer buffer=request.getBody().blockFirst(Duration.ZERO);\n  assertEquals(\"Custom body\",DataBufferTestUtils.dumpString(buffer,UTF_8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 84
      },
      "nodeContext" : "MockServerHttpRequest request=(MockServerHttpRequest)handler.getSavedRequest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.springframework.mock.http.server.reactive.MockServerHttpRequest"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 68,
    "startColumnNumber" : 34,
    "endLineNumber" : 68,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}