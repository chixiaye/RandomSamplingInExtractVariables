{
  "id" : 23,
  "expression" : "\"Reserved identifier is not documented: \" + name",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-parser/src/main/java/com/facebook/presto/sql/ReservedIdentifiers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Reserved identifier is not documented: \" + name",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 114,
      "startColumnNumber" : 43,
      "endLineNumber" : 114,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 114,
        "startColumnNumber" : 22,
        "endLineNumber" : 114,
        "endColumnNumber" : 92
      },
      "nodeContext" : "new RuntimeException(\"Reserved identifier is not documented: \" + name)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 93
      },
      "nodeContext" : "throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 113,
        "startColumnNumber" : 39,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!found.contains(name)) {\n  throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 112,
        "startColumnNumber" : 37,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!found.contains(name)) {\n    throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String name : reserved) {\n  if (!found.contains(name)) {\n    throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1814,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Validating \" + path);\n  List<String> lines=Files.readAllLines(path);\n  if (lines.stream().filter(s -> s.startsWith(TABLE_PREFIX)).count() != 3) {\n    throw new RuntimeException(\"Failed to find exactly one table\");\n  }\n  Iterator<String> iterator=lines.iterator();\n  while (!iterator.next().startsWith(TABLE_PREFIX)) {\n  }\n  if (iterator.next().startsWith(TABLE_PREFIX)) {\n    throw new RuntimeException(\"Expected to find a header line\");\n  }\n  if (!iterator.next().startsWith(TABLE_PREFIX)) {\n    throw new RuntimeException(\"Found multiple header lines\");\n  }\n  Set<String> reserved=reservedIdentifiers();\n  Set<String> found=new HashSet<>();\n  while (true) {\n    String line=iterator.next();\n    if (line.startsWith(TABLE_PREFIX)) {\n      break;\n    }\n    Matcher matcher=TABLE_ROW.matcher(line);\n    if (!matcher.matches()) {\n      throw new RuntimeException(\"Invalid table line: \" + line);\n    }\n    String name=matcher.group(1);\n    if (!reserved.contains(name)) {\n      throw new RuntimeException(\"Documented identifier is not reserved: \" + name);\n    }\n    if (!found.add(name)) {\n      throw new RuntimeException(\"Duplicate documented identifier: \" + name);\n    }\n  }\n  for (  String name : reserved) {\n    if (!found.contains(name)) {\n      throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n    }\n  }\n  System.out.println(format(\"Validated %s reserved identifiers\",reserved.size()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void validateDocs(Path path) throws IOException {\n  System.out.println(\"Validating \" + path);\n  List<String> lines=Files.readAllLines(path);\n  if (lines.stream().filter(s -> s.startsWith(TABLE_PREFIX)).count() != 3) {\n    throw new RuntimeException(\"Failed to find exactly one table\");\n  }\n  Iterator<String> iterator=lines.iterator();\n  while (!iterator.next().startsWith(TABLE_PREFIX)) {\n  }\n  if (iterator.next().startsWith(TABLE_PREFIX)) {\n    throw new RuntimeException(\"Expected to find a header line\");\n  }\n  if (!iterator.next().startsWith(TABLE_PREFIX)) {\n    throw new RuntimeException(\"Found multiple header lines\");\n  }\n  Set<String> reserved=reservedIdentifiers();\n  Set<String> found=new HashSet<>();\n  while (true) {\n    String line=iterator.next();\n    if (line.startsWith(TABLE_PREFIX)) {\n      break;\n    }\n    Matcher matcher=TABLE_ROW.matcher(line);\n    if (!matcher.matches()) {\n      throw new RuntimeException(\"Invalid table line: \" + line);\n    }\n    String name=matcher.group(1);\n    if (!reserved.contains(name)) {\n      throw new RuntimeException(\"Documented identifier is not reserved: \" + name);\n    }\n    if (!found.add(name)) {\n      throw new RuntimeException(\"Duplicate documented identifier: \" + name);\n    }\n  }\n  for (  String name : reserved) {\n    if (!found.contains(name)) {\n      throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n    }\n  }\n  System.out.println(format(\"Validated %s reserved identifiers\",reserved.size()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 93
      },
      "nodeContext" : "throw new RuntimeException(\"Reserved identifier is not documented: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 114,
    "startColumnNumber" : 43,
    "endLineNumber" : 114,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}