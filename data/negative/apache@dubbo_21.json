{
  "id" : 21,
  "expression" : "(type & COMPRESSED_FLAG_MASK) != 0",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/GrpcDataDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(type & COMPRESSED_FLAG_MASK) != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 50,
      "startColumnNumber" : 33,
      "endLineNumber" : 50,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 67
      },
      "nodeContext" : "compressedFlag=(type & COMPRESSED_FLAG_MASK) != 0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 68
      },
      "nodeContext" : "compressedFlag=(type & COMPRESSED_FLAG_MASK) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1530,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (state()) {\ncase HEADER:  int type=in.readByte();\nif ((type & RESERVED_MASK) != 0) {\n  throw GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"gRPC frame header malformed: reserved bits not zero\").asException();\n}\ncompressedFlag=(type & COMPRESSED_FLAG_MASK) != 0;\nif (compressedFlag) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"Compression is not supported \").asException();\n}\nlen=in.readInt();\nif (len < 0 || len > maxDataSize) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.RESOURCE_EXHAUSTED).withDescription(String.format(\"gRPC message exceeds maximum size %d: %d\",maxDataSize,len)).asException();\n}\ncheckpoint(GrpcDecodeState.PAYLOAD);\ncase PAYLOAD:byte[] dst=new byte[len];\nin.readBytes(dst);\nout.add(dst);\ncheckpoint(GrpcDecodeState.HEADER);\nbreak;\ndefault:throw new RuntimeException(\"Should not reach here\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 136,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 39,
        "startColumnNumber" : 100,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state()) {\ncase HEADER:    int type=in.readByte();\n  if ((type & RESERVED_MASK) != 0) {\n    throw GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"gRPC frame header malformed: reserved bits not zero\").asException();\n  }\ncompressedFlag=(type & COMPRESSED_FLAG_MASK) != 0;\nif (compressedFlag) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"Compression is not supported \").asException();\n}\nlen=in.readInt();\nif (len < 0 || len > maxDataSize) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.RESOURCE_EXHAUSTED).withDescription(String.format(\"gRPC message exceeds maximum size %d: %d\",maxDataSize,len)).asException();\n}\ncheckpoint(GrpcDecodeState.PAYLOAD);\ncase PAYLOAD:byte[] dst=new byte[len];\nin.readBytes(dst);\nout.add(dst);\ncheckpoint(GrpcDecodeState.HEADER);\nbreak;\ndefault:throw new RuntimeException(\"Should not reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1656,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void decode(ChannelHandlerContext ctx,ByteBuf in,List<Object> out) throws Exception {\nswitch (state()) {\ncase HEADER:    int type=in.readByte();\n  if ((type & RESERVED_MASK) != 0) {\n    throw GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"gRPC frame header malformed: reserved bits not zero\").asException();\n  }\ncompressedFlag=(type & COMPRESSED_FLAG_MASK) != 0;\nif (compressedFlag) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.INTERNAL).withDescription(\"Compression is not supported \").asException();\n}\nlen=in.readInt();\nif (len < 0 || len > maxDataSize) {\nthrow GrpcStatus.fromCode(GrpcStatus.Code.RESOURCE_EXHAUSTED).withDescription(String.format(\"gRPC message exceeds maximum size %d: %d\",maxDataSize,len)).asException();\n}\ncheckpoint(GrpcDecodeState.PAYLOAD);\ncase PAYLOAD:byte[] dst=new byte[len];\nin.readBytes(dst);\nout.add(dst);\ncheckpoint(GrpcDecodeState.HEADER);\nbreak;\ndefault:throw new RuntimeException(\"Should not reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 68
      },
      "nodeContext" : "compressedFlag=(type & COMPRESSED_FLAG_MASK) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 50,
    "startColumnNumber" : 33,
    "endLineNumber" : 50,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}