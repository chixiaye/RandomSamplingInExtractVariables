{
  "id" : 101,
  "expression" : "(bytesToSkip + skip(len - bytesToSkip))",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/util/FastByteArrayOutputStream.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(bytesToSkip + skip(len - bytesToSkip))",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 449,
      "startColumnNumber" : 12,
      "endLineNumber" : 449,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 449,
        "startColumnNumber" : 5,
        "endLineNumber" : 449,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return (bytesToSkip + skip(len - bytesToSkip));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 445,
        "startColumnNumber" : 66,
        "endLineNumber" : 450,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n  this.totalBytesRead+=bytesToSkip;\n  this.nextIndexInCurrentBuffer+=bytesToSkip;\n  return (bytesToSkip + skip(len - bytesToSkip));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 445,
        "startColumnNumber" : 4,
        "endLineNumber" : 461,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (this.nextIndexInCurrentBuffer < this.currentBufferLength) {\n  int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n  this.totalBytesRead+=bytesToSkip;\n  this.nextIndexInCurrentBuffer+=bytesToSkip;\n  return (bytesToSkip + skip(len - bytesToSkip));\n}\n else {\n  if (this.buffersIterator.hasNext()) {\n    this.currentBuffer=this.buffersIterator.next();\n    updateCurrentBufferLength();\n    this.nextIndexInCurrentBuffer=0;\n  }\n else {\n    this.currentBuffer=null;\n  }\n  return skip(len);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 444,
        "startColumnNumber" : 8,
        "endLineNumber" : 462,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (this.nextIndexInCurrentBuffer < this.currentBufferLength) {\n    int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n    this.totalBytesRead+=bytesToSkip;\n    this.nextIndexInCurrentBuffer+=bytesToSkip;\n    return (bytesToSkip + skip(len - bytesToSkip));\n  }\n else {\n    if (this.buffersIterator.hasNext()) {\n      this.currentBuffer=this.buffersIterator.next();\n      updateCurrentBufferLength();\n      this.nextIndexInCurrentBuffer=0;\n    }\n else {\n      this.currentBuffer=null;\n    }\n    return skip(len);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 440,
        "startColumnNumber" : 3,
        "endLineNumber" : 462,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.currentBuffer == null) {\n  return 0;\n}\n else {\n  if (this.nextIndexInCurrentBuffer < this.currentBufferLength) {\n    int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n    this.totalBytesRead+=bytesToSkip;\n    this.nextIndexInCurrentBuffer+=bytesToSkip;\n    return (bytesToSkip + skip(len - bytesToSkip));\n  }\n else {\n    if (this.buffersIterator.hasNext()) {\n      this.currentBuffer=this.buffersIterator.next();\n      updateCurrentBufferLength();\n      this.nextIndexInCurrentBuffer=0;\n    }\n else {\n      this.currentBuffer=null;\n    }\n    return skip(len);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 429,
        "startColumnNumber" : 46,
        "endLineNumber" : 463,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (n > Integer.MAX_VALUE) {\n    throw new IllegalArgumentException(\"n exceeds maximum (\" + Integer.MAX_VALUE + \"): \"+ n);\n  }\n else   if (n == 0) {\n    return 0;\n  }\n else   if (n < 0) {\n    throw new IllegalArgumentException(\"n must be 0 or greater: \" + n);\n  }\n  int len=(int)n;\n  if (this.currentBuffer == null) {\n    return 0;\n  }\n else {\n    if (this.nextIndexInCurrentBuffer < this.currentBufferLength) {\n      int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n      this.totalBytesRead+=bytesToSkip;\n      this.nextIndexInCurrentBuffer+=bytesToSkip;\n      return (bytesToSkip + skip(len - bytesToSkip));\n    }\n else {\n      if (this.buffersIterator.hasNext()) {\n        this.currentBuffer=this.buffersIterator.next();\n        updateCurrentBufferLength();\n        this.nextIndexInCurrentBuffer=0;\n      }\n else {\n        this.currentBuffer=null;\n      }\n      return skip(len);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1064,
        "startLineNumber" : 428,
        "startColumnNumber" : 2,
        "endLineNumber" : 463,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public long skip(long n) throws IOException {\n  if (n > Integer.MAX_VALUE) {\n    throw new IllegalArgumentException(\"n exceeds maximum (\" + Integer.MAX_VALUE + \"): \"+ n);\n  }\n else   if (n == 0) {\n    return 0;\n  }\n else   if (n < 0) {\n    throw new IllegalArgumentException(\"n must be 0 or greater: \" + n);\n  }\n  int len=(int)n;\n  if (this.currentBuffer == null) {\n    return 0;\n  }\n else {\n    if (this.nextIndexInCurrentBuffer < this.currentBufferLength) {\n      int bytesToSkip=Math.min(len,this.currentBufferLength - this.nextIndexInCurrentBuffer);\n      this.totalBytesRead+=bytesToSkip;\n      this.nextIndexInCurrentBuffer+=bytesToSkip;\n      return (bytesToSkip + skip(len - bytesToSkip));\n    }\n else {\n      if (this.buffersIterator.hasNext()) {\n        this.currentBuffer=this.buffersIterator.next();\n        updateCurrentBufferLength();\n        this.nextIndexInCurrentBuffer=0;\n      }\n else {\n        this.currentBuffer=null;\n      }\n      return skip(len);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 449,
        "startColumnNumber" : 5,
        "endLineNumber" : 449,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return (bytesToSkip + skip(len - bytesToSkip));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 449,
    "startColumnNumber" : 12,
    "endLineNumber" : 449,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}