{
  "id" : 48,
  "expression" : "VALUE_SCHEMA_TYPE",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/main/java/org/apache/pulsar/client/impl/schema/KeyValueSchemaInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "VALUE_SCHEMA_TYPE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 165,
      "startColumnNumber" : 12,
      "endLineNumber" : 165,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "encodeSubSchemaInfoToParentSchemaProperties(valueSchemaInfo,VALUE_SCHEMA_NAME,VALUE_SCHEMA_TYPE,VALUE_SCHEMA_PROPS,properties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 10
      },
      "nodeContext" : "encodeSubSchemaInfoToParentSchemaProperties(valueSchemaInfo,VALUE_SCHEMA_NAME,VALUE_SCHEMA_TYPE,VALUE_SCHEMA_PROPS,properties);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 136,
        "startColumnNumber" : 97,
        "endLineNumber" : 178,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(keyValueEncodingType,\"Null encoding type is provided\");\n  if (keySchemaInfo == null || valueSchemaInfo == null) {\n    return null;\n  }\n  byte[] schemaData=KeyValue.encode(keySchemaInfo,SCHEMA_INFO_WRITER,valueSchemaInfo,SCHEMA_INFO_WRITER);\n  Map<String,String> properties=new HashMap<>();\n  encodeSubSchemaInfoToParentSchemaProperties(keySchemaInfo,KEY_SCHEMA_NAME,KEY_SCHEMA_TYPE,KEY_SCHEMA_PROPS,properties);\n  encodeSubSchemaInfoToParentSchemaProperties(valueSchemaInfo,VALUE_SCHEMA_NAME,VALUE_SCHEMA_TYPE,VALUE_SCHEMA_PROPS,properties);\n  properties.put(KV_ENCODING_TYPE,String.valueOf(keyValueEncodingType));\n  return SchemaInfoImpl.builder().name(schemaName).type(SchemaType.KEY_VALUE).schema(schemaData).properties(properties).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encode key & value into schema into a KeyValue schema.\n * @param schemaName the final schema name\n * @param keySchemaInfo the key schema info\n * @param valueSchemaInfo the value schema info\n * @param keyValueEncodingType the encoding type to encode and decode key value pair\n * @return the final schema info\n */\npublic static SchemaInfo encodeKeyValueSchemaInfo(String schemaName,SchemaInfo keySchemaInfo,SchemaInfo valueSchemaInfo,KeyValueEncodingType keyValueEncodingType){\n  checkNotNull(keyValueEncodingType,\"Null encoding type is provided\");\n  if (keySchemaInfo == null || valueSchemaInfo == null) {\n    return null;\n  }\n  byte[] schemaData=KeyValue.encode(keySchemaInfo,SCHEMA_INFO_WRITER,valueSchemaInfo,SCHEMA_INFO_WRITER);\n  Map<String,String> properties=new HashMap<>();\n  encodeSubSchemaInfoToParentSchemaProperties(keySchemaInfo,KEY_SCHEMA_NAME,KEY_SCHEMA_TYPE,KEY_SCHEMA_PROPS,properties);\n  encodeSubSchemaInfoToParentSchemaProperties(valueSchemaInfo,VALUE_SCHEMA_NAME,VALUE_SCHEMA_TYPE,VALUE_SCHEMA_PROPS,properties);\n  properties.put(KV_ENCODING_TYPE,String.valueOf(keyValueEncodingType));\n  return SchemaInfoImpl.builder().name(schemaName).type(SchemaType.KEY_VALUE).schema(schemaData).properties(properties).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "encodeSubSchemaInfoToParentSchemaProperties(valueSchemaInfo,VALUE_SCHEMA_NAME,VALUE_SCHEMA_TYPE,VALUE_SCHEMA_PROPS,properties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 165,
    "startColumnNumber" : 12,
    "endLineNumber" : 165,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}