{
  "id" : 96,
  "expression" : "e",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/main/java/zipkin/server/brave/TracedSession.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 131,
      "startColumnNumber" : 8,
      "endLineNumber" : 131,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 17
      },
      "nodeContext" : "e != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (e != null) {\n  span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n}\n else {\n  span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 119,
        "startColumnNumber" : 88,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Span span=null;\nsynchronized (cache) {\n    span=cache.remove(statement);\n  }\n  if (span == null) {\n    checkState(!statement.isTracing(),\"%s not in the cache eventhough tracing is on\",statement);\n    return;\n  }\n  span.setDuration(nanos / 1000);\n  Endpoint local=span.getAnnotations().get(0).host;\n  long endTs=span.getTimestamp() + span.getDuration();\n  if (e != null) {\n    span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n  }\n else {\n    span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n  }\n  int ipv4=ByteBuffer.wrap(host.getAddress().getAddress()).getInt();\n  Endpoint endpoint=Endpoint.create(\"cassandra\",ipv4,host.getSocketAddress().getPort());\n  span.addToBinary_annotations(BinaryAnnotation.address(\"sa\",endpoint));\n  collector.collect(span);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void update(Host host,Statement statement,Exception e,long nanos){\n  Span span=null;\nsynchronized (cache) {\n    span=cache.remove(statement);\n  }\n  if (span == null) {\n    checkState(!statement.isTracing(),\"%s not in the cache eventhough tracing is on\",statement);\n    return;\n  }\n  span.setDuration(nanos / 1000);\n  Endpoint local=span.getAnnotations().get(0).host;\n  long endTs=span.getTimestamp() + span.getDuration();\n  if (e != null) {\n    span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n  }\n else {\n    span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n  }\n  int ipv4=ByteBuffer.wrap(host.getAddress().getAddress()).getInt();\n  Endpoint endpoint=Endpoint.create(\"cassandra\",ipv4,host.getSocketAddress().getPort());\n  span.addToBinary_annotations(BinaryAnnotation.address(\"sa\",endpoint));\n  collector.collect(span);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 17
      },
      "nodeContext" : "e != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 132,
      "startColumnNumber" : 72,
      "endLineNumber" : 132,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 132,
        "startColumnNumber" : 72,
        "endLineNumber" : 132,
        "endColumnNumber" : 86
      },
      "nodeContext" : "e.getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 132,
        "startColumnNumber" : 35,
        "endLineNumber" : 132,
        "endColumnNumber" : 94
      },
      "nodeContext" : "BinaryAnnotation.create(\"cql.error\",e.getMessage(),local)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 132,
        "startColumnNumber" : 6,
        "endLineNumber" : 132,
        "endColumnNumber" : 95
      },
      "nodeContext" : "span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 132,
        "startColumnNumber" : 6,
        "endLineNumber" : 132,
        "endColumnNumber" : 96
      },
      "nodeContext" : "span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 131,
        "startColumnNumber" : 19,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (e != null) {\n  span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n}\n else {\n  span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 119,
        "startColumnNumber" : 88,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Span span=null;\nsynchronized (cache) {\n    span=cache.remove(statement);\n  }\n  if (span == null) {\n    checkState(!statement.isTracing(),\"%s not in the cache eventhough tracing is on\",statement);\n    return;\n  }\n  span.setDuration(nanos / 1000);\n  Endpoint local=span.getAnnotations().get(0).host;\n  long endTs=span.getTimestamp() + span.getDuration();\n  if (e != null) {\n    span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n  }\n else {\n    span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n  }\n  int ipv4=ByteBuffer.wrap(host.getAddress().getAddress()).getInt();\n  Endpoint endpoint=Endpoint.create(\"cassandra\",ipv4,host.getSocketAddress().getPort());\n  span.addToBinary_annotations(BinaryAnnotation.address(\"sa\",endpoint));\n  collector.collect(span);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void update(Host host,Statement statement,Exception e,long nanos){\n  Span span=null;\nsynchronized (cache) {\n    span=cache.remove(statement);\n  }\n  if (span == null) {\n    checkState(!statement.isTracing(),\"%s not in the cache eventhough tracing is on\",statement);\n    return;\n  }\n  span.setDuration(nanos / 1000);\n  Endpoint local=span.getAnnotations().get(0).host;\n  long endTs=span.getTimestamp() + span.getDuration();\n  if (e != null) {\n    span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n  }\n else {\n    span.addToAnnotations(Annotation.create(endTs,\"cr\",local));\n  }\n  int ipv4=ByteBuffer.wrap(host.getAddress().getAddress()).getInt();\n  Endpoint endpoint=Endpoint.create(\"cassandra\",ipv4,host.getSocketAddress().getPort());\n  span.addToBinary_annotations(BinaryAnnotation.address(\"sa\",endpoint));\n  collector.collect(span);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 132,
        "startColumnNumber" : 6,
        "endLineNumber" : 132,
        "endColumnNumber" : 96
      },
      "nodeContext" : "span.addToBinary_annotations(BinaryAnnotation.create(\"cql.error\",e.getMessage(),local));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 131,
    "startColumnNumber" : 8,
    "endLineNumber" : 131,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 132,
    "startColumnNumber" : 72,
    "endLineNumber" : 132,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}