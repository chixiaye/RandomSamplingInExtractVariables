{
  "id" : 448,
  "expression" : "v",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/ai/GeneticAlgorithm_knapsack_01.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "v",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 221,
      "startColumnNumber" : 45,
      "endLineNumber" : 221,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 221,
        "startColumnNumber" : 25,
        "endLineNumber" : 221,
        "endColumnNumber" : 46
      },
      "nodeContext" : "DP[i - 1][sz - w] + v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 221,
        "startColumnNumber" : 25,
        "endLineNumber" : 221,
        "endColumnNumber" : 58
      },
      "nodeContext" : "DP[i - 1][sz - w] + v > DP[i][sz]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 221,
        "startColumnNumber" : 14,
        "endLineNumber" : 221,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 221,
        "startColumnNumber" : 10,
        "endLineNumber" : 223,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n  DP[i][sz]=DP[i - 1][sz - w] + v;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 214,
        "startColumnNumber" : 48,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DP[i][sz]=DP[i - 1][sz];\n  if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n    DP[i][sz]=DP[i - 1][sz - w] + v;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int sz=1; sz <= maxWeight; sz++) {\n  DP[i][sz]=DP[i - 1][sz];\n  if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n    DP[i][sz]=DP[i - 1][sz - w] + v;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 209,
        "startColumnNumber" : 35,
        "endLineNumber" : 225,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int w=W[i - 1], v=V[i - 1];\n  for (int sz=1; sz <= maxWeight; sz++) {\n    DP[i][sz]=DP[i - 1][sz];\n    if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n      DP[i][sz]=DP[i - 1][sz - w] + v;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 209,
        "startColumnNumber" : 6,
        "endLineNumber" : 225,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=1; i <= N; i++) {\n  int w=W[i - 1], v=V[i - 1];\n  for (int sz=1; sz <= maxWeight; sz++) {\n    DP[i][sz]=DP[i - 1][sz];\n    if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n      DP[i][sz]=DP[i - 1][sz - w] + v;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 197,
        "startColumnNumber" : 64,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (W == null || V == null || W.length != V.length || maxWeight < 0) {\n    throw new IllegalArgumentException(\"Invalid input\");\n  }\n  final int N=W.length;\n  int[][] DP=new int[N + 1][maxWeight + 1];\n  for (int i=1; i <= N; i++) {\n    int w=W[i - 1], v=V[i - 1];\n    for (int sz=1; sz <= maxWeight; sz++) {\n      DP[i][sz]=DP[i - 1][sz];\n      if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n        DP[i][sz]=DP[i - 1][sz - w] + v;\n      }\n    }\n  }\n  return DP[N][maxWeight];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1307,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param maxWeight - The maximum weight of the knapsack\n * @param W - The weights of the items\n * @param V - The values of the items\n * @return The maximum achievable profit of selecting a subset of the elements such that thecapacity of the knapsack is not exceeded\n */\npublic static int knapsack(int maxWeight,int[] W,int[] V){\n  if (W == null || V == null || W.length != V.length || maxWeight < 0) {\n    throw new IllegalArgumentException(\"Invalid input\");\n  }\n  final int N=W.length;\n  int[][] DP=new int[N + 1][maxWeight + 1];\n  for (int i=1; i <= N; i++) {\n    int w=W[i - 1], v=V[i - 1];\n    for (int sz=1; sz <= maxWeight; sz++) {\n      DP[i][sz]=DP[i - 1][sz];\n      if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n        DP[i][sz]=DP[i - 1][sz - w] + v;\n      }\n    }\n  }\n  return DP[N][maxWeight];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 221,
        "startColumnNumber" : 14,
        "endLineNumber" : 221,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "v",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 222,
      "startColumnNumber" : 44,
      "endLineNumber" : 222,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 222,
        "startColumnNumber" : 24,
        "endLineNumber" : 222,
        "endColumnNumber" : 45
      },
      "nodeContext" : "DP[i - 1][sz - w] + v",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 45
      },
      "nodeContext" : "DP[i][sz]=DP[i - 1][sz - w] + v",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 46
      },
      "nodeContext" : "DP[i][sz]=DP[i - 1][sz - w] + v;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 221,
        "startColumnNumber" : 60,
        "endLineNumber" : 223,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  DP[i][sz]=DP[i - 1][sz - w] + v;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 221,
        "startColumnNumber" : 10,
        "endLineNumber" : 223,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n  DP[i][sz]=DP[i - 1][sz - w] + v;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 214,
        "startColumnNumber" : 48,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DP[i][sz]=DP[i - 1][sz];\n  if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n    DP[i][sz]=DP[i - 1][sz - w] + v;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int sz=1; sz <= maxWeight; sz++) {\n  DP[i][sz]=DP[i - 1][sz];\n  if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n    DP[i][sz]=DP[i - 1][sz - w] + v;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 209,
        "startColumnNumber" : 35,
        "endLineNumber" : 225,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int w=W[i - 1], v=V[i - 1];\n  for (int sz=1; sz <= maxWeight; sz++) {\n    DP[i][sz]=DP[i - 1][sz];\n    if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n      DP[i][sz]=DP[i - 1][sz - w] + v;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 209,
        "startColumnNumber" : 6,
        "endLineNumber" : 225,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=1; i <= N; i++) {\n  int w=W[i - 1], v=V[i - 1];\n  for (int sz=1; sz <= maxWeight; sz++) {\n    DP[i][sz]=DP[i - 1][sz];\n    if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n      DP[i][sz]=DP[i - 1][sz - w] + v;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 197,
        "startColumnNumber" : 64,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (W == null || V == null || W.length != V.length || maxWeight < 0) {\n    throw new IllegalArgumentException(\"Invalid input\");\n  }\n  final int N=W.length;\n  int[][] DP=new int[N + 1][maxWeight + 1];\n  for (int i=1; i <= N; i++) {\n    int w=W[i - 1], v=V[i - 1];\n    for (int sz=1; sz <= maxWeight; sz++) {\n      DP[i][sz]=DP[i - 1][sz];\n      if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n        DP[i][sz]=DP[i - 1][sz - w] + v;\n      }\n    }\n  }\n  return DP[N][maxWeight];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1307,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param maxWeight - The maximum weight of the knapsack\n * @param W - The weights of the items\n * @param V - The values of the items\n * @return The maximum achievable profit of selecting a subset of the elements such that thecapacity of the knapsack is not exceeded\n */\npublic static int knapsack(int maxWeight,int[] W,int[] V){\n  if (W == null || V == null || W.length != V.length || maxWeight < 0) {\n    throw new IllegalArgumentException(\"Invalid input\");\n  }\n  final int N=W.length;\n  int[][] DP=new int[N + 1][maxWeight + 1];\n  for (int i=1; i <= N; i++) {\n    int w=W[i - 1], v=V[i - 1];\n    for (int sz=1; sz <= maxWeight; sz++) {\n      DP[i][sz]=DP[i - 1][sz];\n      if (sz >= w && DP[i - 1][sz - w] + v > DP[i][sz]) {\n        DP[i][sz]=DP[i - 1][sz - w] + v;\n      }\n    }\n  }\n  return DP[N][maxWeight];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 46
      },
      "nodeContext" : "DP[i][sz]=DP[i - 1][sz - w] + v;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 221,
    "startColumnNumber" : 45,
    "endLineNumber" : 221,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 222,
    "startColumnNumber" : 44,
    "endLineNumber" : 222,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}