{
  "id" : 50,
  "expression" : "aggregateFunction.getInputs()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-python/src/test/java/org/apache/flink/table/runtime/operators/python/aggregate/PassThroughPythonStreamGroupWindowAggregateOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "aggregateFunction.getInputs()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 165,
      "startColumnNumber" : 36,
      "endLineNumber" : 165,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 165,
        "startColumnNumber" : 36,
        "endLineNumber" : 165,
        "endColumnNumber" : 68
      },
      "nodeContext" : "aggregateFunction.getInputs()[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 165,
        "startColumnNumber" : 30,
        "endLineNumber" : 165,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(int)aggregateFunction.getInputs()[0]",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 68
      },
      "nodeContext" : "inputFieldIndex=(int)aggregateFunction.getInputs()[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 69
      },
      "nodeContext" : "int inputFieldIndex=(int)aggregateFunction.getInputs()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 145,
        "startColumnNumber" : 40,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.open();\n  windowBaos=new ByteArrayOutputStreamWithPos();\n  windowBaosWrapper=new DataOutputViewStreamWrapper(windowBaos);\n  reusePythonRowData=new UpdatableRowData(GenericRowData.of(NORMAL_RECORD,null,null),3);\n  reusePythonTimerRowData=new UpdatableRowData(GenericRowData.of(TRIGGER_TIMER,null,null),3);\n  reusePythonTimerData=new UpdatableRowData(GenericRowData.of(0,null,null,null),4);\n  reuseJoinedRow=new JoinedRowData();\n  windowAggResult=new JoinedRowData();\n  reusePythonTimerRowData.setField(2,reusePythonTimerData);\n  windowAccumulateData=new HashMap<>();\n  windowRetractData=new HashMap<>();\n  mockPythonInternalService=(InternalTimerServiceImpl<K,TimeWindow>)getInternalTimerService(\"python-window-timers\",windowSerializer,this.mockPythonWindowOperator);\n  this.groupKeyProjection=createProjection(\"GroupKey\",grouping);\n  int inputFieldIndex=(int)aggregateFunction.getInputs()[0];\n  this.aggExtracter=input -> {\n    GenericRowData aggResult=new GenericRowData(1);\n    aggResult.setField(0,input.getLong(inputFieldIndex));\n    return aggResult;\n  }\n;\n  this.windowExtractor=window -> {\n    GenericRowData windowProperty=new GenericRowData(namedProperties.length);\n    for (int i=0; i < namedProperties.length; i++) {\nswitch (namedProperties[i]) {\ncase WINDOW_START:        windowProperty.setField(i,getShiftEpochMills(window.getStart()));\n      break;\ncase WINDOW_END:    windowProperty.setField(i,getShiftEpochMills(window.getEnd()));\n  break;\ncase ROW_TIME_ATTRIBUTE:windowProperty.setField(i,getShiftEpochMills(window.getEnd() - 1));\nbreak;\ncase PROC_TIME_ATTRIBUTE:windowProperty.setField(i,-1L);\n}\n}\nreturn windowProperty;\n}\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2561,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void open() throws Exception {\n  super.open();\n  windowBaos=new ByteArrayOutputStreamWithPos();\n  windowBaosWrapper=new DataOutputViewStreamWrapper(windowBaos);\n  reusePythonRowData=new UpdatableRowData(GenericRowData.of(NORMAL_RECORD,null,null),3);\n  reusePythonTimerRowData=new UpdatableRowData(GenericRowData.of(TRIGGER_TIMER,null,null),3);\n  reusePythonTimerData=new UpdatableRowData(GenericRowData.of(0,null,null,null),4);\n  reuseJoinedRow=new JoinedRowData();\n  windowAggResult=new JoinedRowData();\n  reusePythonTimerRowData.setField(2,reusePythonTimerData);\n  windowAccumulateData=new HashMap<>();\n  windowRetractData=new HashMap<>();\n  mockPythonInternalService=(InternalTimerServiceImpl<K,TimeWindow>)getInternalTimerService(\"python-window-timers\",windowSerializer,this.mockPythonWindowOperator);\n  this.groupKeyProjection=createProjection(\"GroupKey\",grouping);\n  int inputFieldIndex=(int)aggregateFunction.getInputs()[0];\n  this.aggExtracter=input -> {\n    GenericRowData aggResult=new GenericRowData(1);\n    aggResult.setField(0,input.getLong(inputFieldIndex));\n    return aggResult;\n  }\n;\n  this.windowExtractor=window -> {\n    GenericRowData windowProperty=new GenericRowData(namedProperties.length);\n    for (int i=0; i < namedProperties.length; i++) {\nswitch (namedProperties[i]) {\ncase WINDOW_START:        windowProperty.setField(i,getShiftEpochMills(window.getStart()));\n      break;\ncase WINDOW_END:    windowProperty.setField(i,getShiftEpochMills(window.getEnd()));\n  break;\ncase ROW_TIME_ATTRIBUTE:windowProperty.setField(i,getShiftEpochMills(window.getEnd() - 1));\nbreak;\ncase PROC_TIME_ATTRIBUTE:windowProperty.setField(i,-1L);\n}\n}\nreturn windowProperty;\n}\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 69
      },
      "nodeContext" : "int inputFieldIndex=(int)aggregateFunction.getInputs()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 165,
    "startColumnNumber" : 36,
    "endLineNumber" : 165,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}