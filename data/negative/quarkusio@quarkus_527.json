{
  "id" : 527,
  "expression" : "requestContext",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2b6ae07c59282f56f9e085dd79d35dbd771d9c3e",
  "filePath" : "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/handlers/PublisherResponseHandler.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 241,
      "startColumnNumber" : 12,
      "endLineNumber" : 241,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 241,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 38
      },
      "nodeContext" : "requestContext.getResult()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 241,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 59
      },
      "nodeContext" : "requestContext.getResult() instanceof Publisher",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 241,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 59
      },
      "nodeContext" : "requestContext.getResult() instanceof Publisher",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 242,
      "startColumnNumber" : 49,
      "endLineNumber" : 242,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 242,
        "startColumnNumber" : 49,
        "endLineNumber" : 242,
        "endColumnNumber" : 75
      },
      "nodeContext" : "requestContext.getResult()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 242,
        "startColumnNumber" : 34,
        "endLineNumber" : 242,
        "endColumnNumber" : 75
      },
      "nodeContext" : "(Publisher<?>)requestContext.getResult()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 242,
        "startColumnNumber" : 25,
        "endLineNumber" : 242,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result=(Publisher<?>)requestContext.getResult()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Publisher<?> result=(Publisher<?>)requestContext.getResult();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 242,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Publisher<?> result=(Publisher<?>)requestContext.getResult();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 247,
      "startColumnNumber" : 39,
      "endLineNumber" : 247,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 247,
        "startColumnNumber" : 39,
        "endLineNumber" : 247,
        "endColumnNumber" : 65
      },
      "nodeContext" : "requestContext.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 247,
        "startColumnNumber" : 39,
        "endLineNumber" : 247,
        "endColumnNumber" : 79
      },
      "nodeContext" : "requestContext.getTarget().getProduces()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 247,
        "startColumnNumber" : 28,
        "endLineNumber" : 247,
        "endColumnNumber" : 79
      },
      "nodeContext" : "produces=requestContext.getTarget().getProduces()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 247,
        "startColumnNumber" : 12,
        "endLineNumber" : 247,
        "endColumnNumber" : 80
      },
      "nodeContext" : "ServerMediaType produces=requestContext.getTarget().getProduces();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 247,
        "startColumnNumber" : 12,
        "endLineNumber" : 247,
        "endColumnNumber" : 80
      },
      "nodeContext" : "ServerMediaType produces=requestContext.getTarget().getProduces();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 259,
      "startColumnNumber" : 12,
      "endLineNumber" : 259,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 259,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 60
      },
      "nodeContext" : "requestContext.setResponseContentType(mediaType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 259,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 61
      },
      "nodeContext" : "requestContext.setResponseContentType(mediaType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 259,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 61
      },
      "nodeContext" : "requestContext.setResponseContentType(mediaType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 261,
      "startColumnNumber" : 12,
      "endLineNumber" : 261,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 91
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 261,
      "startColumnNumber" : 48,
      "endLineNumber" : 261,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 261,
        "startColumnNumber" : 48,
        "endLineNumber" : 261,
        "endColumnNumber" : 74
      },
      "nodeContext" : "requestContext.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 261,
        "startColumnNumber" : 48,
        "endLineNumber" : 261,
        "endColumnNumber" : 90
      },
      "nodeContext" : "requestContext.getTarget().getReturnType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 91
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 261,
        "startColumnNumber" : 12,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 264,
      "startColumnNumber" : 26,
      "endLineNumber" : 264,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 264,
        "startColumnNumber" : 16,
        "endLineNumber" : 264,
        "endColumnNumber" : 49
      },
      "nodeContext" : "handleSse(requestContext,result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 264,
        "startColumnNumber" : 16,
        "endLineNumber" : 264,
        "endColumnNumber" : 50
      },
      "nodeContext" : "handleSse(requestContext,result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 263,
        "startColumnNumber" : 75,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  handleSse(requestContext,result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 263,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n  handleSse(requestContext,result);\n}\n else {\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 264,
        "startColumnNumber" : 16,
        "endLineNumber" : 264,
        "endColumnNumber" : 50
      },
      "nodeContext" : "handleSse(requestContext,result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 266,
      "startColumnNumber" : 16,
      "endLineNumber" : 266,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 266,
        "startColumnNumber" : 16,
        "endLineNumber" : 266,
        "endColumnNumber" : 40
      },
      "nodeContext" : "requestContext.suspend()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 266,
        "startColumnNumber" : 16,
        "endLineNumber" : 266,
        "endColumnNumber" : 41
      },
      "nodeContext" : "requestContext.suspend();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 265,
        "startColumnNumber" : 19,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 263,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n  handleSse(requestContext,result);\n}\n else {\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 266,
        "startColumnNumber" : 16,
        "endLineNumber" : 266,
        "endColumnNumber" : 41
      },
      "nodeContext" : "requestContext.suspend();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 269,
      "startColumnNumber" : 43,
      "endLineNumber" : 269,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 269,
        "startColumnNumber" : 20,
        "endLineNumber" : 269,
        "endColumnNumber" : 72
      },
      "nodeContext" : "handleChunkedStreaming(requestContext,result,json)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 269,
        "startColumnNumber" : 20,
        "endLineNumber" : 269,
        "endColumnNumber" : 73
      },
      "nodeContext" : "handleChunkedStreaming(requestContext,result,json);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 268,
        "startColumnNumber" : 54,
        "endLineNumber" : 270,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  handleChunkedStreaming(requestContext,result,json);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 268,
        "startColumnNumber" : 16,
        "endLineNumber" : 272,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (requiresChunkedStream(mediaType)) {\n  handleChunkedStreaming(requestContext,result,json);\n}\n else {\n  handleStreaming(requestContext,result,json);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 265,
        "startColumnNumber" : 19,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 263,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n  handleSse(requestContext,result);\n}\n else {\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 269,
        "startColumnNumber" : 20,
        "endLineNumber" : 269,
        "endColumnNumber" : 73
      },
      "nodeContext" : "handleChunkedStreaming(requestContext,result,json);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  }, {
    "nodeContext" : "requestContext",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 271,
      "startColumnNumber" : 36,
      "endLineNumber" : 271,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 271,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 65
      },
      "nodeContext" : "handleStreaming(requestContext,result,json)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 271,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 66
      },
      "nodeContext" : "handleStreaming(requestContext,result,json);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 270,
        "startColumnNumber" : 23,
        "endLineNumber" : 272,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  handleStreaming(requestContext,result,json);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 268,
        "startColumnNumber" : 16,
        "endLineNumber" : 272,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (requiresChunkedStream(mediaType)) {\n  handleChunkedStreaming(requestContext,result,json);\n}\n else {\n  handleStreaming(requestContext,result,json);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 265,
        "startColumnNumber" : 19,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 263,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n  handleSse(requestContext,result);\n}\n else {\n  requestContext.suspend();\n  boolean json=mediaType.toString().contains(JSON);\n  if (requiresChunkedStream(mediaType)) {\n    handleChunkedStreaming(requestContext,result,json);\n  }\n else {\n    handleStreaming(requestContext,result,json);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 241,
        "startColumnNumber" : 61,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 274,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (requestContext.getResult() instanceof Publisher) {\n  Publisher<?> result=(Publisher<?>)requestContext.getResult();\n  ServerMediaType produces=requestContext.getTarget().getProduces();\n  if (produces == null) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n  }\n  MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n  if (mediaTypes.length != 1) {\n    throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n  }\n  MediaType mediaType=mediaTypes[0];\n  requestContext.setResponseContentType(mediaType);\n  requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n  if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n    handleSse(requestContext,result);\n  }\n else {\n    requestContext.suspend();\n    boolean json=mediaType.toString().contains(JSON);\n    if (requiresChunkedStream(mediaType)) {\n      handleChunkedStreaming(requestContext,result,json);\n    }\n else {\n      handleStreaming(requestContext,result,json);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 239,
        "startColumnNumber" : 87,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  if (requestContext.getResult() instanceof Publisher) {\n    Publisher<?> result=(Publisher<?>)requestContext.getResult();\n    ServerMediaType produces=requestContext.getTarget().getProduces();\n    if (produces == null) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use the @Produces annotation when returning a Multi\");\n    }\n    MediaType[] mediaTypes=produces.getSortedOriginalMediaTypes();\n    if (mediaTypes.length != 1) {\n      throw new IllegalStateException(\"Negotiation or dynamic media type not supported yet for Multi: please use a single @Produces annotation\");\n    }\n    MediaType mediaType=mediaTypes[0];\n    requestContext.setResponseContentType(mediaType);\n    requestContext.setGenericReturnType(requestContext.getTarget().getReturnType());\n    if (mediaType.isCompatible(MediaType.SERVER_SENT_EVENTS_TYPE)) {\n      handleSse(requestContext,result);\n    }\n else {\n      requestContext.suspend();\n      boolean json=mediaType.toString().contains(JSON);\n      if (requiresChunkedStream(mediaType)) {\n        handleChunkedStreaming(requestContext,result,json);\n      }\n else {\n        handleStreaming(requestContext,result,json);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 271,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 66
      },
      "nodeContext" : "handleStreaming(requestContext,result,json);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jboss.resteasy.reactive.server.core.ResteasyReactiveRequestContext"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 241,
    "startColumnNumber" : 12,
    "endLineNumber" : 241,
    "endColumnNumber" : 26
  }, {
    "charLength" : 14,
    "startLineNumber" : 242,
    "startColumnNumber" : 49,
    "endLineNumber" : 242,
    "endColumnNumber" : 63
  }, {
    "charLength" : 14,
    "startLineNumber" : 247,
    "startColumnNumber" : 39,
    "endLineNumber" : 247,
    "endColumnNumber" : 53
  }, {
    "charLength" : 14,
    "startLineNumber" : 259,
    "startColumnNumber" : 12,
    "endLineNumber" : 259,
    "endColumnNumber" : 26
  }, {
    "charLength" : 14,
    "startLineNumber" : 261,
    "startColumnNumber" : 12,
    "endLineNumber" : 261,
    "endColumnNumber" : 26
  }, {
    "charLength" : 14,
    "startLineNumber" : 261,
    "startColumnNumber" : 48,
    "endLineNumber" : 261,
    "endColumnNumber" : 62
  }, {
    "charLength" : 14,
    "startLineNumber" : 264,
    "startColumnNumber" : 26,
    "endLineNumber" : 264,
    "endColumnNumber" : 40
  }, {
    "charLength" : 14,
    "startLineNumber" : 266,
    "startColumnNumber" : 16,
    "endLineNumber" : 266,
    "endColumnNumber" : 30
  }, {
    "charLength" : 14,
    "startLineNumber" : 269,
    "startColumnNumber" : 43,
    "endLineNumber" : 269,
    "endColumnNumber" : 57
  }, {
    "charLength" : 14,
    "startLineNumber" : 271,
    "startColumnNumber" : 36,
    "endLineNumber" : 271,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}