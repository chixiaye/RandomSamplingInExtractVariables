{
  "id" : 413,
  "expression" : "400",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableRetryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "400",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 714,
      "startColumnNumber" : 32,
      "endLineNumber" : 714,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 714,
        "startColumnNumber" : 28,
        "endLineNumber" : 714,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < 400",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 714,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < 400; i++) {\n  Subscriber<String> observer=TestHelper.mockSubscriber();\n  Flowable<String> origin=Flowable.create(new FuncWithErrors(NUM_RETRIES));\n  TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n  origin.retry().observeOn(Schedulers.computation()).unsafeSubscribe(ts);\n  ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  InOrder inOrder=inOrder(observer);\n  verify(observer,never()).onError(any(Throwable.class));\n  inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext(\"beginningEveryTime\");\n  inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\");\n  inOrder.verify(observer,times(1)).onComplete();\n  inOrder.verifyNoMoreInteractions();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 712,
        "startColumnNumber" : 38,
        "endLineNumber" : 732,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int NUM_RETRIES=Flowable.bufferSize() * 2;\n  for (int i=0; i < 400; i++) {\n    Subscriber<String> observer=TestHelper.mockSubscriber();\n    Flowable<String> origin=Flowable.create(new FuncWithErrors(NUM_RETRIES));\n    TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n    origin.retry().observeOn(Schedulers.computation()).unsafeSubscribe(ts);\n    ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n    InOrder inOrder=inOrder(observer);\n    verify(observer,never()).onError(any(Throwable.class));\n    inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext(\"beginningEveryTime\");\n    inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\");\n    inOrder.verify(observer,times(1)).onComplete();\n    inOrder.verifyNoMoreInteractions();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 712,
        "startColumnNumber" : 8,
        "endLineNumber" : 732,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < NUM_LOOPS; j++) {\n  final int NUM_RETRIES=Flowable.bufferSize() * 2;\n  for (int i=0; i < 400; i++) {\n    Subscriber<String> observer=TestHelper.mockSubscriber();\n    Flowable<String> origin=Flowable.create(new FuncWithErrors(NUM_RETRIES));\n    TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n    origin.retry().observeOn(Schedulers.computation()).unsafeSubscribe(ts);\n    ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n    InOrder inOrder=inOrder(observer);\n    verify(observer,never()).onError(any(Throwable.class));\n    inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext(\"beginningEveryTime\");\n    inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\");\n    inOrder.verify(observer,times(1)).onComplete();\n    inOrder.verifyNoMoreInteractions();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 710,
        "startColumnNumber" : 72,
        "endLineNumber" : 733,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int NUM_LOOPS=1;\n  for (int j=0; j < NUM_LOOPS; j++) {\n    final int NUM_RETRIES=Flowable.bufferSize() * 2;\n    for (int i=0; i < 400; i++) {\n      Subscriber<String> observer=TestHelper.mockSubscriber();\n      Flowable<String> origin=Flowable.create(new FuncWithErrors(NUM_RETRIES));\n      TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n      origin.retry().observeOn(Schedulers.computation()).unsafeSubscribe(ts);\n      ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n      InOrder inOrder=inOrder(observer);\n      verify(observer,never()).onError(any(Throwable.class));\n      inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext(\"beginningEveryTime\");\n      inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\");\n      inOrder.verify(observer,times(1)).onComplete();\n      inOrder.verifyNoMoreInteractions();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1364,
        "startLineNumber" : 709,
        "startColumnNumber" : 4,
        "endLineNumber" : 733,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetryWithBackpressure() throws InterruptedException {\n  final int NUM_LOOPS=1;\n  for (int j=0; j < NUM_LOOPS; j++) {\n    final int NUM_RETRIES=Flowable.bufferSize() * 2;\n    for (int i=0; i < 400; i++) {\n      Subscriber<String> observer=TestHelper.mockSubscriber();\n      Flowable<String> origin=Flowable.create(new FuncWithErrors(NUM_RETRIES));\n      TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n      origin.retry().observeOn(Schedulers.computation()).unsafeSubscribe(ts);\n      ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n      InOrder inOrder=inOrder(observer);\n      verify(observer,never()).onError(any(Throwable.class));\n      inOrder.verify(observer,times(NUM_RETRIES + 1)).onNext(\"beginningEveryTime\");\n      inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\");\n      inOrder.verify(observer,times(1)).onComplete();\n      inOrder.verifyNoMoreInteractions();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 714,
        "startColumnNumber" : 28,
        "endLineNumber" : 714,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < 400",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 714,
    "startColumnNumber" : 32,
    "endLineNumber" : 714,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}