{
  "id" : 335,
  "expression" : "\"TableDataSource cannot be cast\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/segment/InlineSegmentWranglerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"TableDataSource cannot be cast\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 56,
      "startColumnNumber" : 36,
      "endLineNumber" : 56,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expectedException.expectMessage(\"TableDataSource cannot be cast\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expectedException.expectMessage(\"TableDataSource cannot be cast\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  expectedException.expect(ClassCastException.class);\n  expectedException.expectMessage(\"TableDataSource cannot be cast\");\n  final Iterable<Segment> ignored=factory.getSegmentsForIntervals(new TableDataSource(\"foo\"),Intervals.ONLY_ETERNITY);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_getSegmentsForIntervals_nonInline(){\n  expectedException.expect(ClassCastException.class);\n  expectedException.expectMessage(\"TableDataSource cannot be cast\");\n  final Iterable<Segment> ignored=factory.getSegmentsForIntervals(new TableDataSource(\"foo\"),Intervals.ONLY_ETERNITY);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expectedException.expectMessage(\"TableDataSource cannot be cast\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 56,
    "startColumnNumber" : 36,
    "endLineNumber" : 56,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}