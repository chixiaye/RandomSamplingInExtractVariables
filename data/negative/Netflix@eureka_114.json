{
  "id" : 114,
  "expression" : "ServiceSelector.selectBy()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/main/java/com/netflix/eureka2/client/resolver/EurekaServerResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ServiceSelector.selectBy()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 192,
      "startColumnNumber" : 34,
      "endLineNumber" : 192,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 192,
        "startColumnNumber" : 34,
        "endLineNumber" : 192,
        "endColumnNumber" : 90
      },
      "nodeContext" : "ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 192,
        "startColumnNumber" : 34,
        "endLineNumber" : 192,
        "endColumnNumber" : 122
      },
      "nodeContext" : "ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 192,
        "endColumnNumber" : 122
      },
      "nodeContext" : "serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 192,
        "endColumnNumber" : 123
      },
      "nodeContext" : "serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 191,
        "startColumnNumber" : 41,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 191,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (serviceSelector == null) {\n  serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 190,
        "startColumnNumber" : 44,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (serviceSelector == null) {\n    serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n  }\n  if (loadBalancerBuilder == null) {\n    loadBalancerBuilder=new DefaultLoadBalancerBuilder<>(null);\n  }\n  if (bootstrapResolver == null) {\n    throw new IllegalStateException(\"BootstrapResolver property not set\");\n  }\n  TcpDiscoveryClient transportClient=(TcpDiscoveryClient)TransportClients.newTcpDiscoveryClient(bootstrapResolver);\n  SnapshotInterestChannel snapshotInterestChannel=new SnapshotInterestChannelImpl(transportClient);\n  return new EurekaServerResolver(snapshotInterestChannel,readServerInterest,serviceSelector,loadBalancerBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public EurekaServerResolver build(){\n  if (serviceSelector == null) {\n    serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n  }\n  if (loadBalancerBuilder == null) {\n    loadBalancerBuilder=new DefaultLoadBalancerBuilder<>(null);\n  }\n  if (bootstrapResolver == null) {\n    throw new IllegalStateException(\"BootstrapResolver property not set\");\n  }\n  TcpDiscoveryClient transportClient=(TcpDiscoveryClient)TransportClients.newTcpDiscoveryClient(bootstrapResolver);\n  SnapshotInterestChannel snapshotInterestChannel=new SnapshotInterestChannelImpl(transportClient);\n  return new EurekaServerResolver(snapshotInterestChannel,readServerInterest,serviceSelector,loadBalancerBuilder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 192,
        "startColumnNumber" : 16,
        "endLineNumber" : 192,
        "endColumnNumber" : 123
      },
      "nodeContext" : "serviceSelector=ServiceSelector.selectBy().serviceLabel(Names.DISCOVERY).protocolType(ProtocolType.IPv4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.netflix.eureka2.registry.selector.ServiceSelector"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 192,
    "startColumnNumber" : 34,
    "endLineNumber" : 192,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}