{
  "id" : 178,
  "expression" : "(float)(x >> 1) + 0.5f",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/DefaultGridSampler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(float)(x >> 1) + 0.5f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 60,
      "startColumnNumber" : 20,
      "endLineNumber" : 60,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 43
      },
      "nodeContext" : "points[x]=(float)(x >> 1) + 0.5f",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "points[x]=(float)(x >> 1) + 0.5f;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 59,
        "startColumnNumber" : 39,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  points[x]=(float)(x >> 1) + 0.5f;\n  points[x + 1]=iValue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int x=0; x < max; x+=2) {\n  points[x]=(float)(x >> 1) + 0.5f;\n  points[x + 1]=iValue;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1403,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int max=points.length;\n  float iValue=(float)y + 0.5f;\n  for (int x=0; x < max; x+=2) {\n    points[x]=(float)(x >> 1) + 0.5f;\n    points[x + 1]=iValue;\n  }\n  transform.transformPoints(points);\n  checkAndNudgePoints(image,points);\n  try {\n    for (int x=0; x < max; x+=2) {\n      if (image.get((int)points[x],(int)points[x + 1])) {\n        bits.set(x >> 1,y);\n      }\n    }\n  }\n catch (  ArrayIndexOutOfBoundsException aioobe) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1440,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int y=0; y < dimensionY; y++) {\n  int max=points.length;\n  float iValue=(float)y + 0.5f;\n  for (int x=0; x < max; x+=2) {\n    points[x]=(float)(x >> 1) + 0.5f;\n    points[x + 1]=iValue;\n  }\n  transform.transformPoints(points);\n  checkAndNudgePoints(image,points);\n  try {\n    for (int x=0; x < max; x+=2) {\n      if (image.get((int)points[x],(int)points[x + 1])) {\n        bits.set(x >> 1,y);\n      }\n    }\n  }\n catch (  ArrayIndexOutOfBoundsException aioobe) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1695,
        "startLineNumber" : 50,
        "startColumnNumber" : 87,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (dimensionX <= 0 || dimensionY <= 0) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  BitMatrix bits=new BitMatrix(dimensionX,dimensionY);\n  float[] points=new float[dimensionX << 1];\n  for (int y=0; y < dimensionY; y++) {\n    int max=points.length;\n    float iValue=(float)y + 0.5f;\n    for (int x=0; x < max; x+=2) {\n      points[x]=(float)(x >> 1) + 0.5f;\n      points[x + 1]=iValue;\n    }\n    transform.transformPoints(points);\n    checkAndNudgePoints(image,points);\n    try {\n      for (int x=0; x < max; x+=2) {\n        if (image.get((int)points[x],(int)points[x + 1])) {\n          bits.set(x >> 1,y);\n        }\n      }\n    }\n catch (    ArrayIndexOutOfBoundsException aioobe) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n  }\n  return bits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public BitMatrix sampleGrid(BitMatrix image,int dimensionX,int dimensionY,PerspectiveTransform transform) throws NotFoundException {\n  if (dimensionX <= 0 || dimensionY <= 0) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  BitMatrix bits=new BitMatrix(dimensionX,dimensionY);\n  float[] points=new float[dimensionX << 1];\n  for (int y=0; y < dimensionY; y++) {\n    int max=points.length;\n    float iValue=(float)y + 0.5f;\n    for (int x=0; x < max; x+=2) {\n      points[x]=(float)(x >> 1) + 0.5f;\n      points[x + 1]=iValue;\n    }\n    transform.transformPoints(points);\n    checkAndNudgePoints(image,points);\n    try {\n      for (int x=0; x < max; x+=2) {\n        if (image.get((int)points[x],(int)points[x + 1])) {\n          bits.set(x >> 1,y);\n        }\n      }\n    }\n catch (    ArrayIndexOutOfBoundsException aioobe) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n  }\n  return bits;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "points[x]=(float)(x >> 1) + 0.5f;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 60,
    "startColumnNumber" : 20,
    "endLineNumber" : 60,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}