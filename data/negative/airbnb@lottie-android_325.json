{
  "id" : 325,
  "expression" : "op",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/MergePathsContent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "op",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 114,
      "startColumnNumber" : 38,
      "endLineNumber" : 114,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 41
      },
      "nodeContext" : "path.op(firstPath,remainderPath,op)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 42
      },
      "nodeContext" : "path.op(firstPath,remainderPath,op);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 83,
        "startColumnNumber" : 47,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  remainderPath.reset();\n  firstPath.reset();\n  for (int i=pathContents.size() - 1; i >= 1; i--) {\n    PathContent content=pathContents.get(i);\n    if (content instanceof ContentGroup) {\n      List<PathContent> pathList=((ContentGroup)content).getPathList();\n      for (int j=pathList.size() - 1; j >= 0; j--) {\n        Path path=pathList.get(j).getPath();\n        path.transform(((ContentGroup)content).getTransformationMatrix());\n        this.remainderPath.addPath(path);\n      }\n    }\n else {\n      remainderPath.addPath(content.getPath());\n    }\n  }\n  PathContent lastContent=pathContents.get(0);\n  if (lastContent instanceof ContentGroup) {\n    List<PathContent> pathList=((ContentGroup)lastContent).getPathList();\n    for (int j=0; j < pathList.size(); j++) {\n      Path path=pathList.get(j).getPath();\n      path.transform(((ContentGroup)lastContent).getTransformationMatrix());\n      this.firstPath.addPath(path);\n    }\n  }\n else {\n    firstPath.set(lastContent.getPath());\n  }\n  path.op(firstPath,remainderPath,op);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.KITKAT) private void opFirstPathWithRest(Path.Op op){\n  remainderPath.reset();\n  firstPath.reset();\n  for (int i=pathContents.size() - 1; i >= 1; i--) {\n    PathContent content=pathContents.get(i);\n    if (content instanceof ContentGroup) {\n      List<PathContent> pathList=((ContentGroup)content).getPathList();\n      for (int j=pathList.size() - 1; j >= 0; j--) {\n        Path path=pathList.get(j).getPath();\n        path.transform(((ContentGroup)content).getTransformationMatrix());\n        this.remainderPath.addPath(path);\n      }\n    }\n else {\n      remainderPath.addPath(content.getPath());\n    }\n  }\n  PathContent lastContent=pathContents.get(0);\n  if (lastContent instanceof ContentGroup) {\n    List<PathContent> pathList=((ContentGroup)lastContent).getPathList();\n    for (int j=0; j < pathList.size(); j++) {\n      Path path=pathList.get(j).getPath();\n      path.transform(((ContentGroup)lastContent).getTransformationMatrix());\n      this.firstPath.addPath(path);\n    }\n  }\n else {\n    firstPath.set(lastContent.getPath());\n  }\n  path.op(firstPath,remainderPath,op);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 42
      },
      "nodeContext" : "path.op(firstPath,remainderPath,op);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "Path.Op"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 114,
    "startColumnNumber" : 38,
    "endLineNumber" : 114,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}