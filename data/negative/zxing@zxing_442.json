{
  "id" : 442,
  "expression" : "y + x",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/qrcode/encoder/MaskUtil.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "y + x",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 145,
      "startColumnNumber" : 24,
      "endLineNumber" : 145,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 145,
        "startColumnNumber" : 23,
        "endLineNumber" : 145,
        "endColumnNumber" : 30
      },
      "nodeContext" : "(y + x)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 145,
        "startColumnNumber" : 23,
        "endLineNumber" : 145,
        "endColumnNumber" : 36
      },
      "nodeContext" : "(y + x) & 0x1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 36
      },
      "nodeContext" : "intermediate=(y + x) & 0x1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 37
      },
      "nodeContext" : "intermediate=(y + x) & 0x1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (maskPattern) {\ncase 0:  intermediate=(y + x) & 0x1;\nbreak;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 137,
        "startColumnNumber" : 63,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static boolean getDataMaskBit(int maskPattern,int x,int y){\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 37
      },
      "nodeContext" : "intermediate=(y + x) & 0x1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "y + x",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 154,
      "startColumnNumber" : 24,
      "endLineNumber" : 154,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 154,
        "endColumnNumber" : 30
      },
      "nodeContext" : "(y + x)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 154,
        "endColumnNumber" : 34
      },
      "nodeContext" : "(y + x) % 3",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 34
      },
      "nodeContext" : "intermediate=(y + x) % 3",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 35
      },
      "nodeContext" : "intermediate=(y + x) % 3;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (maskPattern) {\ncase 0:  intermediate=(y + x) & 0x1;\nbreak;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 137,
        "startColumnNumber" : 63,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static boolean getDataMaskBit(int maskPattern,int x,int y){\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 35
      },
      "nodeContext" : "intermediate=(y + x) % 3;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "y + x",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 169,
      "startColumnNumber" : 39,
      "endLineNumber" : 169,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 169,
        "startColumnNumber" : 38,
        "endLineNumber" : 169,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(y + x)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 169,
        "startColumnNumber" : 38,
        "endLineNumber" : 169,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(y + x) & 0x1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 169,
        "startColumnNumber" : 37,
        "endLineNumber" : 169,
        "endColumnNumber" : 52
      },
      "nodeContext" : "((y + x) & 0x1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 169,
        "startColumnNumber" : 24,
        "endLineNumber" : 169,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(temp % 3) + ((y + x) & 0x1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 169,
        "startColumnNumber" : 23,
        "endLineNumber" : 169,
        "endColumnNumber" : 53
      },
      "nodeContext" : "((temp % 3) + ((y + x) & 0x1))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 169,
        "startColumnNumber" : 23,
        "endLineNumber" : 169,
        "endColumnNumber" : 59
      },
      "nodeContext" : "((temp % 3) + ((y + x) & 0x1)) & 0x1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 59
      },
      "nodeContext" : "intermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 60
      },
      "nodeContext" : "intermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (maskPattern) {\ncase 0:  intermediate=(y + x) & 0x1;\nbreak;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 137,
        "startColumnNumber" : 63,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static boolean getDataMaskBit(int maskPattern,int x,int y){\n  if (!QRCode.isValidMaskPattern(maskPattern)) {\n    throw new IllegalArgumentException(\"Invalid mask pattern\");\n  }\n  int intermediate;\n  int temp;\nswitch (maskPattern) {\ncase 0:    intermediate=(y + x) & 0x1;\n  break;\ncase 1:intermediate=y & 0x1;\nbreak;\ncase 2:intermediate=x % 3;\nbreak;\ncase 3:intermediate=(y + x) % 3;\nbreak;\ncase 4:intermediate=((y >>> 1) + (x / 3)) & 0x1;\nbreak;\ncase 5:temp=y * x;\nintermediate=(temp & 0x1) + (temp % 3);\nbreak;\ncase 6:temp=y * x;\nintermediate=((temp & 0x1) + (temp % 3)) & 0x1;\nbreak;\ncase 7:temp=y * x;\nintermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\nbreak;\ndefault:throw new IllegalArgumentException(\"Invalid mask pattern: \" + maskPattern);\n}\nreturn intermediate == 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 60
      },
      "nodeContext" : "intermediate=((temp % 3) + ((y + x) & 0x1)) & 0x1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 10
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 145,
    "startColumnNumber" : 24,
    "endLineNumber" : 145,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 154,
    "startColumnNumber" : 24,
    "endLineNumber" : 154,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 169,
    "startColumnNumber" : 39,
    "endLineNumber" : 169,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  } ]
}