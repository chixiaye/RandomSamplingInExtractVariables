{
  "id" : 160,
  "expression" : "fractionBetweenCheckpoints",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/trackselection/AdaptiveTrackSelection.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fractionBetweenCheckpoints",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 665,
      "startColumnNumber" : 13,
      "endLineNumber" : 665,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 665,
        "startColumnNumber" : 13,
        "endLineNumber" : 665,
        "endColumnNumber" : 97
      },
      "nodeContext" : "fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 665,
        "startColumnNumber" : 12,
        "endLineNumber" : 665,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 664,
        "startColumnNumber" : 10,
        "endLineNumber" : 665,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(long)(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 663,
        "startColumnNumber" : 11,
        "endLineNumber" : 665,
        "endColumnNumber" : 98
      },
      "nodeContext" : "previous.allocatedBandwidth + (long)(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 663,
        "startColumnNumber" : 4,
        "endLineNumber" : 665,
        "endColumnNumber" : 99
      },
      "nodeContext" : "return previous.allocatedBandwidth + (long)(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 648,
        "startColumnNumber" : 59,
        "endLineNumber" : 666,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long totalBandwidth=getTotalAllocatableBandwidth(chunkDurationUs);\n  if (adaptationCheckpoints.isEmpty()) {\n    return totalBandwidth;\n  }\n  int nextIndex=1;\n  while (nextIndex < adaptationCheckpoints.size() - 1 && adaptationCheckpoints.get(nextIndex).totalBandwidth < totalBandwidth) {\n    nextIndex++;\n  }\n  AdaptationCheckpoint previous=adaptationCheckpoints.get(nextIndex - 1);\n  AdaptationCheckpoint next=adaptationCheckpoints.get(nextIndex);\n  float fractionBetweenCheckpoints=(float)(totalBandwidth - previous.totalBandwidth) / (next.totalBandwidth - previous.totalBandwidth);\n  return previous.allocatedBandwidth + (long)(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 648,
        "startColumnNumber" : 2,
        "endLineNumber" : 666,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long getAllocatedBandwidth(long chunkDurationUs){\n  long totalBandwidth=getTotalAllocatableBandwidth(chunkDurationUs);\n  if (adaptationCheckpoints.isEmpty()) {\n    return totalBandwidth;\n  }\n  int nextIndex=1;\n  while (nextIndex < adaptationCheckpoints.size() - 1 && adaptationCheckpoints.get(nextIndex).totalBandwidth < totalBandwidth) {\n    nextIndex++;\n  }\n  AdaptationCheckpoint previous=adaptationCheckpoints.get(nextIndex - 1);\n  AdaptationCheckpoint next=adaptationCheckpoints.get(nextIndex);\n  float fractionBetweenCheckpoints=(float)(totalBandwidth - previous.totalBandwidth) / (next.totalBandwidth - previous.totalBandwidth);\n  return previous.allocatedBandwidth + (long)(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 665,
        "startColumnNumber" : 12,
        "endLineNumber" : 665,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(fractionBetweenCheckpoints * (next.allocatedBandwidth - previous.allocatedBandwidth))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 665,
    "startColumnNumber" : 13,
    "endLineNumber" : 665,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}