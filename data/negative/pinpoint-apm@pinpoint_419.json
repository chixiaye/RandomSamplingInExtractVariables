{
  "id" : 419,
  "expression" : "ParsingResult.ID_NOT_EXIST",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/context/DefaultParsingResultTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ParsingResult.ID_NOT_EXIST",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 28,
      "startColumnNumber" : 28,
      "endLineNumber" : 28,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.assertEquals(ParsingResult.ID_NOT_EXIST,result.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(ParsingResult.ID_NOT_EXIST,result.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 26,
        "startColumnNumber" : 42,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DefaultParsingResult result=new DefaultParsingResult(\"\");\n  Assert.assertEquals(ParsingResult.ID_NOT_EXIST,result.getId());\n  Assert.assertTrue(result.setId(1));\n  Assert.assertFalse(result.setId(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testId() throws Exception {\n  DefaultParsingResult result=new DefaultParsingResult(\"\");\n  Assert.assertEquals(ParsingResult.ID_NOT_EXIST,result.getId());\n  Assert.assertTrue(result.setId(1));\n  Assert.assertFalse(result.setId(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(ParsingResult.ID_NOT_EXIST,result.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 28,
    "startColumnNumber" : 28,
    "endLineNumber" : 28,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}