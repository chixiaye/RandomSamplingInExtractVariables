{
  "id" : 381,
  "expression" : "zipFile == null || destDir == null",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/ZipUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "zipFile == null || destDir == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 294,
      "startColumnNumber" : 12,
      "endLineNumber" : 294,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 294,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 60
      },
      "nodeContext" : "if (zipFile == null || destDir == null) return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 293,
        "startColumnNumber" : 31,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (zipFile == null || destDir == null)   return null;\n  List<File> files=new ArrayList<>();\n  ZipFile zf=new ZipFile(zipFile);\n  Enumeration<?> entries=zf.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=((ZipEntry)entries.nextElement());\n    String entryName=entry.getName();\n    if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n      String filePath=destDir + File.separator + entryName;\n      File file=new File(filePath);\n      files.add(file);\n      if (entry.isDirectory()) {\n        if (!FileUtils.createOrExistsDir(file))         return null;\n      }\n else {\n        if (!FileUtils.createOrExistsFile(file))         return null;\n        InputStream in=null;\n        OutputStream out=null;\n        try {\n          in=new BufferedInputStream(zf.getInputStream(entry));\n          out=new BufferedOutputStream(new FileOutputStream(file));\n          byte buffer[]=new byte[KB];\n          int len;\n          while ((len=in.read(buffer)) != -1) {\n            out.write(buffer,0,len);\n          }\n        }\n  finally {\n          CloseUtils.closeIO(in,out);\n        }\n      }\n    }\n  }\n  return files;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 解压带有关键字的文件\n * @param zipFile 待解压文件\n * @param destDir 目标目录\n * @param keyword 关键字\n * @return 返回带有关键字的文件链表\n * @throws IOException IO错误时抛出\n */\npublic static List<File> unzipFileByKeyword(final File zipFile,final File destDir,final String keyword) throws IOException {\n  if (zipFile == null || destDir == null)   return null;\n  List<File> files=new ArrayList<>();\n  ZipFile zf=new ZipFile(zipFile);\n  Enumeration<?> entries=zf.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=((ZipEntry)entries.nextElement());\n    String entryName=entry.getName();\n    if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n      String filePath=destDir + File.separator + entryName;\n      File file=new File(filePath);\n      files.add(file);\n      if (entry.isDirectory()) {\n        if (!FileUtils.createOrExistsDir(file))         return null;\n      }\n else {\n        if (!FileUtils.createOrExistsFile(file))         return null;\n        InputStream in=null;\n        OutputStream out=null;\n        try {\n          in=new BufferedInputStream(zf.getInputStream(entry));\n          out=new BufferedOutputStream(new FileOutputStream(file));\n          byte buffer[]=new byte[KB];\n          int len;\n          while ((len=in.read(buffer)) != -1) {\n            out.write(buffer,0,len);\n          }\n        }\n  finally {\n          CloseUtils.closeIO(in,out);\n        }\n      }\n    }\n  }\n  return files;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 294,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 60
      },
      "nodeContext" : "if (zipFile == null || destDir == null) return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 294,
    "startColumnNumber" : 12,
    "endLineNumber" : 294,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}