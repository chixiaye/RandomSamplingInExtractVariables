{
  "id" : 274,
  "expression" : "new HystrixRequestContext()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/strategy/concurrency/HystrixRequestContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HystrixRequestContext()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 109,
      "startColumnNumber" : 38,
      "endLineNumber" : 109,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 109,
        "startColumnNumber" : 30,
        "endLineNumber" : 109,
        "endColumnNumber" : 65
      },
      "nodeContext" : "state=new HystrixRequestContext()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 66
      },
      "nodeContext" : "HystrixRequestContext state=new HystrixRequestContext();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 108,
        "startColumnNumber" : 60,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixRequestContext state=new HystrixRequestContext();\n  requestVariables.set(state);\n  return state;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Call this at the beginning of each request (from parent thread) to initialize the underlying context so that  {@link HystrixRequestVariableDefault} can be used on any children threads and be accessible fromthe parent thread. <p> <b>NOTE: If this method is called then <code>shutdown()</code> must also be called or a memory leak will occur.</b> <p> See class header JavaDoc for example Servlet Filter implementation that initializes and shuts down the context.\n */\npublic static HystrixRequestContext initializeContext(){\n  HystrixRequestContext state=new HystrixRequestContext();\n  requestVariables.set(state);\n  return state;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 23,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 66
      },
      "nodeContext" : "HystrixRequestContext state=new HystrixRequestContext();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.strategy.concurrency.HystrixRequestContext"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 109,
    "startColumnNumber" : 38,
    "endLineNumber" : 109,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}