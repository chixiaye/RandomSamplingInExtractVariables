{
  "id" : 288,
  "expression" : "1 << p",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/sparsetable/examples/MinSparseTable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1 << p",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 71,
      "startColumnNumber" : 27,
      "endLineNumber" : 71,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 71,
        "startColumnNumber" : 26,
        "endLineNumber" : 71,
        "endColumnNumber" : 34
      },
      "nodeContext" : "(1 << p)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 71,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i + (1 << p)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 71,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i + (1 << p) <= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i + (1 << p) <= n; i++) {\n  long leftInterval=dp[p - 1][i];\n  long rightInterval=dp[p - 1][i + (1 << (p - 1))];\n  dp[p][i]=Math.min(leftInterval,rightInterval);\n  if (leftInterval <= rightInterval) {\n    it[p][i]=it[p - 1][i];\n  }\n else {\n    it[p][i]=it[p - 1][i + (1 << (p - 1))];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 70,
        "startColumnNumber" : 33,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i + (1 << p) <= n; i++) {\n    long leftInterval=dp[p - 1][i];\n    long rightInterval=dp[p - 1][i + (1 << (p - 1))];\n    dp[p][i]=Math.min(leftInterval,rightInterval);\n    if (leftInterval <= rightInterval) {\n      it[p][i]=it[p - 1][i];\n    }\n else {\n      it[p][i]=it[p - 1][i + (1 << (p - 1))];\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int p=1; p <= P; p++) {\n  for (int i=0; i + (1 << p) <= n; i++) {\n    long leftInterval=dp[p - 1][i];\n    long rightInterval=dp[p - 1][i + (1 << (p - 1))];\n    dp[p][i]=Math.min(leftInterval,rightInterval);\n    if (leftInterval <= rightInterval) {\n      it[p][i]=it[p - 1][i];\n    }\n else {\n      it[p][i]=it[p - 1][i + (1 << (p - 1))];\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  n=values.length;\n  P=(int)(Math.log(n) / Math.log(2));\n  dp=new long[P + 1][n];\n  it=new int[P + 1][n];\n  for (int i=0; i < n; i++) {\n    dp[0][i]=values[i];\n    it[0][i]=i;\n  }\n  log2=new int[n + 1];\n  for (int i=2; i <= n; i++) {\n    log2[i]=log2[i / 2] + 1;\n  }\n  for (int p=1; p <= P; p++) {\n    for (int i=0; i + (1 << p) <= n; i++) {\n      long leftInterval=dp[p - 1][i];\n      long rightInterval=dp[p - 1][i + (1 << (p - 1))];\n      dp[p][i]=Math.min(leftInterval,rightInterval);\n      if (leftInterval <= rightInterval) {\n        it[p][i]=it[p - 1][i];\n      }\n else {\n        it[p][i]=it[p - 1][i + (1 << (p - 1))];\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public MinSparseTable(long[] values){\n  n=values.length;\n  P=(int)(Math.log(n) / Math.log(2));\n  dp=new long[P + 1][n];\n  it=new int[P + 1][n];\n  for (int i=0; i < n; i++) {\n    dp[0][i]=values[i];\n    it[0][i]=i;\n  }\n  log2=new int[n + 1];\n  for (int i=2; i <= n; i++) {\n    log2[i]=log2[i / 2] + 1;\n  }\n  for (int p=1; p <= P; p++) {\n    for (int i=0; i + (1 << p) <= n; i++) {\n      long leftInterval=dp[p - 1][i];\n      long rightInterval=dp[p - 1][i + (1 << (p - 1))];\n      dp[p][i]=Math.min(leftInterval,rightInterval);\n      if (leftInterval <= rightInterval) {\n        it[p][i]=it[p - 1][i];\n      }\n else {\n        it[p][i]=it[p - 1][i + (1 << (p - 1))];\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 71,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i + (1 << p) <= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 71,
    "startColumnNumber" : 27,
    "endLineNumber" : 71,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}