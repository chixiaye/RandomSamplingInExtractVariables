{
  "id" : 401,
  "expression" : "date",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "date",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 84,
      "startColumnNumber" : 13,
      "endLineNumber" : 84,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return date;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 83,
        "startColumnNumber" : 31,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return date;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == Date.class) {\n  return date;\n}\n else if (typeOfT == Timestamp.class) {\n  return new Timestamp(date.getTime());\n}\n else if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 78,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Date deserialize(JsonElement json,Type typeOfT,JsonDeserializationContext context) throws JsonParseException {\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return date;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  }, {
    "nodeContext" : "date",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 86,
      "startColumnNumber" : 27,
      "endLineNumber" : 86,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 86,
        "startColumnNumber" : 27,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "date.getTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 86,
        "startColumnNumber" : 13,
        "endLineNumber" : 86,
        "endColumnNumber" : 42
      },
      "nodeContext" : "new Timestamp(date.getTime())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return new Timestamp(date.getTime());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 43,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return new Timestamp(date.getTime());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == Timestamp.class) {\n  return new Timestamp(date.getTime());\n}\n else if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == Date.class) {\n  return date;\n}\n else if (typeOfT == Timestamp.class) {\n  return new Timestamp(date.getTime());\n}\n else if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 78,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Date deserialize(JsonElement json,Type typeOfT,JsonDeserializationContext context) throws JsonParseException {\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return new Timestamp(date.getTime());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  }, {
    "nodeContext" : "date",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 88,
      "startColumnNumber" : 31,
      "endLineNumber" : 88,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 88,
        "startColumnNumber" : 31,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "date.getTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 88,
        "startColumnNumber" : 13,
        "endLineNumber" : 88,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new java.sql.Date(date.getTime())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return new java.sql.Date(date.getTime());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 87,
        "startColumnNumber" : 47,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return new java.sql.Date(date.getTime());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == Timestamp.class) {\n  return new Timestamp(date.getTime());\n}\n else if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeOfT == Date.class) {\n  return date;\n}\n else if (typeOfT == Timestamp.class) {\n  return new Timestamp(date.getTime());\n}\n else if (typeOfT == java.sql.Date.class) {\n  return new java.sql.Date(date.getTime());\n}\n else {\n  throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 78,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Date deserialize(JsonElement json,Type typeOfT,JsonDeserializationContext context) throws JsonParseException {\n  if (!(json instanceof JsonPrimitive)) {\n    throw new JsonParseException(\"The date should be a string value\");\n  }\n  Date date=deserializeToDate(json);\n  if (typeOfT == Date.class) {\n    return date;\n  }\n else   if (typeOfT == Timestamp.class) {\n    return new Timestamp(date.getTime());\n  }\n else   if (typeOfT == java.sql.Date.class) {\n    return new java.sql.Date(date.getTime());\n  }\n else {\n    throw new IllegalArgumentException(getClass() + \" cannot deserialize to \" + typeOfT);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return new java.sql.Date(date.getTime());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 84,
    "startColumnNumber" : 13,
    "endLineNumber" : 84,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 86,
    "startColumnNumber" : 27,
    "endLineNumber" : 86,
    "endColumnNumber" : 31
  }, {
    "charLength" : 4,
    "startLineNumber" : 88,
    "startColumnNumber" : 31,
    "endLineNumber" : 88,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}