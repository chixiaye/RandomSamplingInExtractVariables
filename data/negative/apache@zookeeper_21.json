{
  "id" : 21,
  "expression" : "CreateMode.EPHEMERAL",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/CreateModeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CreateMode.EPHEMERAL",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 39,
      "startColumnNumber" : 13,
      "endLineNumber" : 39,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 33
      },
      "nodeContext" : "cm=CreateMode.EPHEMERAL",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 34
      },
      "nodeContext" : "cm=CreateMode.EPHEMERAL;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 33,
        "startColumnNumber" : 38,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CreateMode cm=CreateMode.PERSISTENT;\n  assertEquals(cm.toFlag(),0);\n  assertFalse(cm.isEphemeral());\n  assertFalse(cm.isSequential());\n  cm=CreateMode.EPHEMERAL;\n  assertEquals(cm.toFlag(),1);\n  assertTrue(cm.isEphemeral());\n  assertFalse(cm.isSequential());\n  cm=CreateMode.PERSISTENT_SEQUENTIAL;\n  assertEquals(cm.toFlag(),2);\n  assertFalse(cm.isEphemeral());\n  assertTrue(cm.isSequential());\n  cm=CreateMode.EPHEMERAL_SEQUENTIAL;\n  assertEquals(cm.toFlag(),3);\n  assertTrue(cm.isEphemeral());\n  assertTrue(cm.isSequential());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBasicCreateMode(){\n  CreateMode cm=CreateMode.PERSISTENT;\n  assertEquals(cm.toFlag(),0);\n  assertFalse(cm.isEphemeral());\n  assertFalse(cm.isSequential());\n  cm=CreateMode.EPHEMERAL;\n  assertEquals(cm.toFlag(),1);\n  assertTrue(cm.isEphemeral());\n  assertFalse(cm.isSequential());\n  cm=CreateMode.PERSISTENT_SEQUENTIAL;\n  assertEquals(cm.toFlag(),2);\n  assertFalse(cm.isEphemeral());\n  assertTrue(cm.isSequential());\n  cm=CreateMode.EPHEMERAL_SEQUENTIAL;\n  assertEquals(cm.toFlag(),3);\n  assertTrue(cm.isEphemeral());\n  assertTrue(cm.isSequential());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 34
      },
      "nodeContext" : "cm=CreateMode.EPHEMERAL;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.zookeeper.CreateMode"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 39,
    "startColumnNumber" : 13,
    "endLineNumber" : 39,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}