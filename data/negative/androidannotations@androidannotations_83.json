{
  "id" : 83,
  "expression" : "(DeclaredType)type",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/APTCodeModelHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(DeclaredType)type",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 50,
      "startColumnNumber" : 31,
      "endLineNumber" : 50,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 50
      },
      "nodeContext" : "declaredType=(DeclaredType)type",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 3,
        "endLineNumber" : 50,
        "endColumnNumber" : 51
      },
      "nodeContext" : "DeclaredType declaredType=(DeclaredType)type;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 49,
        "startColumnNumber" : 36,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DeclaredType declaredType=(DeclaredType)type;\n  String declaredTypeName=declaredType.asElement().toString();\n  JClass declaredClass=holder.refClass(declaredTypeName);\n  List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n  List<JClass> typeArgumentJClasses=new ArrayList<JClass>();\n  for (  TypeMirror typeArgument : typeArguments) {\n    typeArgumentJClasses.add(typeMirrorToJClass(typeArgument,holder));\n  }\n  if (typeArgumentJClasses.size() > 0) {\n    declaredClass=declaredClass.narrow(typeArgumentJClasses);\n  }\n  return declaredClass;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (type instanceof DeclaredType) {\n  DeclaredType declaredType=(DeclaredType)type;\n  String declaredTypeName=declaredType.asElement().toString();\n  JClass declaredClass=holder.refClass(declaredTypeName);\n  List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n  List<JClass> typeArgumentJClasses=new ArrayList<JClass>();\n  for (  TypeMirror typeArgument : typeArguments) {\n    typeArgumentJClasses.add(typeMirrorToJClass(typeArgument,holder));\n  }\n  if (typeArgumentJClasses.size() > 0) {\n    declaredClass=declaredClass.narrow(typeArgumentJClasses);\n  }\n  return declaredClass;\n}\n else {\n  return holder.refClass(type.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 47,
        "startColumnNumber" : 71,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (type instanceof DeclaredType) {\n    DeclaredType declaredType=(DeclaredType)type;\n    String declaredTypeName=declaredType.asElement().toString();\n    JClass declaredClass=holder.refClass(declaredTypeName);\n    List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n    List<JClass> typeArgumentJClasses=new ArrayList<JClass>();\n    for (    TypeMirror typeArgument : typeArguments) {\n      typeArgumentJClasses.add(typeMirrorToJClass(typeArgument,holder));\n    }\n    if (typeArgumentJClasses.size() > 0) {\n      declaredClass=declaredClass.narrow(typeArgumentJClasses);\n    }\n    return declaredClass;\n  }\n else {\n    return holder.refClass(type.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public JClass typeMirrorToJClass(TypeMirror type,EBeanHolder holder){\n  if (type instanceof DeclaredType) {\n    DeclaredType declaredType=(DeclaredType)type;\n    String declaredTypeName=declaredType.asElement().toString();\n    JClass declaredClass=holder.refClass(declaredTypeName);\n    List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n    List<JClass> typeArgumentJClasses=new ArrayList<JClass>();\n    for (    TypeMirror typeArgument : typeArguments) {\n      typeArgumentJClasses.add(typeMirrorToJClass(typeArgument,holder));\n    }\n    if (typeArgumentJClasses.size() > 0) {\n      declaredClass=declaredClass.narrow(typeArgumentJClasses);\n    }\n    return declaredClass;\n  }\n else {\n    return holder.refClass(type.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 3,
        "endLineNumber" : 50,
        "endColumnNumber" : 51
      },
      "nodeContext" : "DeclaredType declaredType=(DeclaredType)type;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "javax.lang.model.type.DeclaredType"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 50,
    "startColumnNumber" : 31,
    "endLineNumber" : 50,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}