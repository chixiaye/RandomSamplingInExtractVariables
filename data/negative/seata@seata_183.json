{
  "id" : 183,
  "expression" : "RegistryType.File == registryType",
  "projectName" : "seata@seata",
  "commitID" : "fc2a695c232634477a5876de2e018521cfc00e37",
  "filePath" : "discovery/fescar-discovery-core/src/main/java/com/alibaba/fescar/discovery/registry/RegistryFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RegistryType.File == registryType",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 53,
      "startColumnNumber" : 12,
      "endLineNumber" : 53,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (RegistryType.File == registryType) {\n  return FileRegistryServiceImpl.getInstance();\n}\n else {\n  return EnhancedServiceLoader.load(RegistryProvider.class,Objects.requireNonNull(registryType).name()).provide();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 43,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RegistryType registryType;\n  String registryTypeName=ConfigurationFactory.FILE_INSTANCE.getConfig(ConfigurationKeys.FILE_ROOT_REGISTRY + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + ConfigurationKeys.FILE_ROOT_TYPE);\n  try {\n    registryType=RegistryType.getType(registryTypeName);\n  }\n catch (  Exception exx) {\n    throw new NotSupportYetException(\"not support registry type: \" + registryTypeName);\n  }\n  if (RegistryType.File == registryType) {\n    return FileRegistryServiceImpl.getInstance();\n  }\n else {\n    return EnhancedServiceLoader.load(RegistryProvider.class,Objects.requireNonNull(registryType).name()).provide();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Gets instance.\n * @return the instance\n */\npublic static RegistryService getInstance(){\n  RegistryType registryType;\n  String registryTypeName=ConfigurationFactory.FILE_INSTANCE.getConfig(ConfigurationKeys.FILE_ROOT_REGISTRY + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + ConfigurationKeys.FILE_ROOT_TYPE);\n  try {\n    registryType=RegistryType.getType(registryTypeName);\n  }\n catch (  Exception exx) {\n    throw new NotSupportYetException(\"not support registry type: \" + registryTypeName);\n  }\n  if (RegistryType.File == registryType) {\n    return FileRegistryServiceImpl.getInstance();\n  }\n else {\n    return EnhancedServiceLoader.load(RegistryProvider.class,Objects.requireNonNull(registryType).name()).provide();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (RegistryType.File == registryType) {\n  return FileRegistryServiceImpl.getInstance();\n}\n else {\n  return EnhancedServiceLoader.load(RegistryProvider.class,Objects.requireNonNull(registryType).name()).provide();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 53,
    "startColumnNumber" : 12,
    "endLineNumber" : 53,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}