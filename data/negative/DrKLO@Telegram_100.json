{
  "id" : 100,
  "expression" : "(height * videoAspectRatio)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(height * videoAspectRatio)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 196,
      "startColumnNumber" : 22,
      "endLineNumber" : 196,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 196,
        "startColumnNumber" : 16,
        "endLineNumber" : 196,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(int)(height * videoAspectRatio)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 49
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 50
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:  height=(int)(width / videoAspectRatio);\nbreak;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2275,
        "startLineNumber" : 174,
        "startColumnNumber" : 72,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2357,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 50
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "float"
  }, {
    "nodeContext" : "(height * videoAspectRatio)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 200,
      "startColumnNumber" : 24,
      "endLineNumber" : 200,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 200,
        "startColumnNumber" : 18,
        "endLineNumber" : 200,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(int)(height * videoAspectRatio)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 200,
        "startColumnNumber" : 10,
        "endLineNumber" : 200,
        "endColumnNumber" : 51
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 200,
        "startColumnNumber" : 10,
        "endLineNumber" : 200,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 199,
        "startColumnNumber" : 35,
        "endLineNumber" : 201,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  width=(int)(height * videoAspectRatio);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (aspectDeformation > 0) {\n  width=(int)(height * videoAspectRatio);\n}\n else {\n  height=(int)(width / videoAspectRatio);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:  height=(int)(width / videoAspectRatio);\nbreak;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2275,
        "startLineNumber" : 174,
        "startColumnNumber" : 72,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2357,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 200,
        "startColumnNumber" : 10,
        "endLineNumber" : 200,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "float"
  }, {
    "nodeContext" : "(height * videoAspectRatio)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 209,
      "startColumnNumber" : 24,
      "endLineNumber" : 209,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 209,
        "startColumnNumber" : 18,
        "endLineNumber" : 209,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(int)(height * videoAspectRatio)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 209,
        "startColumnNumber" : 10,
        "endLineNumber" : 209,
        "endColumnNumber" : 51
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 209,
        "startColumnNumber" : 10,
        "endLineNumber" : 209,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 208,
        "startColumnNumber" : 15,
        "endLineNumber" : 210,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  width=(int)(height * videoAspectRatio);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 206,
        "startColumnNumber" : 8,
        "endLineNumber" : 210,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (aspectDeformation > 0) {\n  height=(int)(width / videoAspectRatio);\n}\n else {\n  width=(int)(height * videoAspectRatio);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:  height=(int)(width / videoAspectRatio);\nbreak;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2275,
        "startLineNumber" : 174,
        "startColumnNumber" : 72,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2357,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 209,
        "startColumnNumber" : 10,
        "endLineNumber" : 209,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "float"
  }, {
    "nodeContext" : "(height * videoAspectRatio)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 216,
      "startColumnNumber" : 24,
      "endLineNumber" : 216,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 216,
        "startColumnNumber" : 18,
        "endLineNumber" : 216,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(int)(height * videoAspectRatio)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 216,
        "startColumnNumber" : 10,
        "endLineNumber" : 216,
        "endColumnNumber" : 51
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 216,
        "startColumnNumber" : 10,
        "endLineNumber" : 216,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 215,
        "startColumnNumber" : 15,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  width=(int)(height * videoAspectRatio);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (aspectDeformation <= 0) {\n  height=(int)(width / videoAspectRatio);\n}\n else {\n  width=(int)(height * videoAspectRatio);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:  height=(int)(width / videoAspectRatio);\nbreak;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2275,
        "startLineNumber" : 174,
        "startColumnNumber" : 72,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2357,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:if (aspectDeformation <= 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\ndefault:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\nint count=getChildCount();\nfor (int a=0; a < count; a++) {\nView child=getChildAt(a);\nif (child instanceof TextureView) {\nmatrix.reset();\nint px=getWidth() / 2;\nint py=getHeight() / 2;\nmatrix.postRotate(rotation,px,py);\nif (rotation == 90 || rotation == 270) {\nfloat ratio=(float)getHeight() / getWidth();\nmatrix.postScale(1 / ratio,ratio,px,py);\n}\n((TextureView)child).setTransform(matrix);\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 216,
        "startColumnNumber" : 10,
        "endLineNumber" : 216,
        "endColumnNumber" : 52
      },
      "nodeContext" : "width=(int)(height * videoAspectRatio);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 196,
    "startColumnNumber" : 22,
    "endLineNumber" : 196,
    "endColumnNumber" : 49
  }, {
    "charLength" : 27,
    "startLineNumber" : 200,
    "startColumnNumber" : 24,
    "endLineNumber" : 200,
    "endColumnNumber" : 51
  }, {
    "charLength" : 27,
    "startLineNumber" : 209,
    "startColumnNumber" : 24,
    "endLineNumber" : 209,
    "endColumnNumber" : 51
  }, {
    "charLength" : 27,
    "startLineNumber" : 216,
    "startColumnNumber" : 24,
    "endLineNumber" : 216,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}