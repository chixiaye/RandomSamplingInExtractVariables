{
  "id" : 80,
  "expression" : "\"\\n\"",
  "projectName" : "mockito@mockito",
  "commitID" : "a114de17425cb3c3f4a7e32121776e08c99928c2",
  "filePath" : "src/main/java/org/mockito/internal/exceptions/Reporter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 797,
      "startColumnNumber" : 134,
      "endLineNumber" : 797,
      "endColumnNumber" : 138
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 797,
        "startColumnNumber" : 16,
        "endLineNumber" : 797,
        "endColumnNumber" : 139
      },
      "nodeContext" : "stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 797,
        "startColumnNumber" : 16,
        "endLineNumber" : 797,
        "endColumnNumber" : 140
      },
      "nodeContext" : "stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 796,
        "startColumnNumber" : 69,
        "endLineNumber" : 798,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 796,
        "startColumnNumber" : 12,
        "endLineNumber" : 800,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (method.isVarArgs() && i == parameterTypesLength - 1) {\n  stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n}\n else {\n  stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 793,
        "startColumnNumber" : 101,
        "endLineNumber" : 801,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  stringBuilder.append(\"    [\").append(i);\n  if (method.isVarArgs() && i == parameterTypesLength - 1) {\n    stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n  }\n else {\n    stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 793,
        "startColumnNumber" : 8,
        "endLineNumber" : 801,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n  stringBuilder.append(\"    [\").append(i);\n  if (method.isVarArgs() && i == parameterTypesLength - 1) {\n    stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n  }\n else {\n    stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 785,
        "startColumnNumber" : 86,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 785,
        "startColumnNumber" : 4,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static StringBuilder possibleArgumentTypesOf(InvocationOnMock invocation){\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 797,
        "startColumnNumber" : 16,
        "endLineNumber" : 797,
        "endColumnNumber" : 140
      },
      "nodeContext" : "stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 799,
      "startColumnNumber" : 92,
      "endLineNumber" : 799,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 799,
        "startColumnNumber" : 16,
        "endLineNumber" : 799,
        "endColumnNumber" : 97
      },
      "nodeContext" : "stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 799,
        "startColumnNumber" : 16,
        "endLineNumber" : 799,
        "endColumnNumber" : 98
      },
      "nodeContext" : "stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 798,
        "startColumnNumber" : 19,
        "endLineNumber" : 800,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 796,
        "startColumnNumber" : 12,
        "endLineNumber" : 800,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (method.isVarArgs() && i == parameterTypesLength - 1) {\n  stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n}\n else {\n  stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 793,
        "startColumnNumber" : 101,
        "endLineNumber" : 801,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  stringBuilder.append(\"    [\").append(i);\n  if (method.isVarArgs() && i == parameterTypesLength - 1) {\n    stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n  }\n else {\n    stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 793,
        "startColumnNumber" : 8,
        "endLineNumber" : 801,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n  stringBuilder.append(\"    [\").append(i);\n  if (method.isVarArgs() && i == parameterTypesLength - 1) {\n    stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n  }\n else {\n    stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 785,
        "startColumnNumber" : 86,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 785,
        "startColumnNumber" : 4,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static StringBuilder possibleArgumentTypesOf(InvocationOnMock invocation){\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 799,
        "startColumnNumber" : 16,
        "endLineNumber" : 799,
        "endColumnNumber" : 98
      },
      "nodeContext" : "stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 797,
    "startColumnNumber" : 134,
    "endLineNumber" : 797,
    "endColumnNumber" : 138
  }, {
    "charLength" : 4,
    "startLineNumber" : 799,
    "startColumnNumber" : 92,
    "endLineNumber" : 799,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}