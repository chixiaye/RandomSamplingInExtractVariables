{
  "id" : 290,
  "expression" : "NEW_SESSION",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/remote/HttpCommandExecutor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NEW_SESSION",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 148,
      "startColumnNumber" : 14,
      "endLineNumber" : 148,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 148,
        "startColumnNumber" : 14,
        "endLineNumber" : 148,
        "endColumnNumber" : 51
      },
      "nodeContext" : "NEW_SESSION.equals(command.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 148,
        "startColumnNumber" : 13,
        "endLineNumber" : 148,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!NEW_SESSION.equals(command.getName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 147,
        "startColumnNumber" : 10,
        "endLineNumber" : 148,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n  throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 143,
        "startColumnNumber" : 40,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (QUIT.equals(command.getName())) {\n    return new Response();\n  }\n  if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n    throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (command.getSessionId() == null) {\n  if (QUIT.equals(command.getName())) {\n    return new Response();\n  }\n  if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n    throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 142,
        "startColumnNumber" : 62,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (command.getSessionId() == null) {\n    if (QUIT.equals(command.getName())) {\n      return new Response();\n    }\n    if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n      throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n    }\n  }\n  if (NEW_SESSION.equals(command.getName())) {\n    if (commandCodec != null) {\n      throw new SessionNotCreatedException(\"Session already exists\");\n    }\n    ProtocolHandshake handshake=new ProtocolHandshake();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    ProtocolHandshake.Result result=handshake.createSession(client,command);\n    Dialect dialect=result.getDialect();\n    commandCodec=dialect.getCommandCodec();\n    for (    Map.Entry<String,CommandInfo> entry : additionalCommands.entrySet()) {\n      defineCommand(entry.getKey(),entry.getValue());\n    }\n    responseCodec=dialect.getResponseCodec();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    return result.createResponse();\n  }\n  if (commandCodec == null || responseCodec == null) {\n    throw new WebDriverException(\"No command or response codec has been defined. Unable to proceed\");\n  }\n  HttpRequest httpRequest=commandCodec.encode(command);\n  if (httpRequest.getHeader(\"Content-Type\") == null) {\n    httpRequest.addHeader(\"Content-Type\",JSON_UTF_8);\n  }\n  try {\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    HttpResponse httpResponse=client.execute(httpRequest);\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    Response response=responseCodec.decode(httpResponse);\n    if (response.getSessionId() == null) {\n      if (httpResponse.getTargetHost() != null) {\n        response.setSessionId(getSessionId(httpResponse.getTargetHost()).orElse(null));\n      }\n else {\n        response.setSessionId(command.getSessionId().toString());\n      }\n    }\n    if (QUIT.equals(command.getName())) {\n      client.close();\n      httpClientFactory.cleanupIdleClients();\n    }\n    return response;\n  }\n catch (  UnsupportedCommandException e) {\n    if (e.getMessage() == null || \"\".equals(e.getMessage())) {\n      throw new UnsupportedOperationException(\"No information from server. Command name was: \" + command.getName(),e.getCause());\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 326,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2730,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Response execute(Command command) throws IOException {\n  if (command.getSessionId() == null) {\n    if (QUIT.equals(command.getName())) {\n      return new Response();\n    }\n    if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n      throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n    }\n  }\n  if (NEW_SESSION.equals(command.getName())) {\n    if (commandCodec != null) {\n      throw new SessionNotCreatedException(\"Session already exists\");\n    }\n    ProtocolHandshake handshake=new ProtocolHandshake();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    ProtocolHandshake.Result result=handshake.createSession(client,command);\n    Dialect dialect=result.getDialect();\n    commandCodec=dialect.getCommandCodec();\n    for (    Map.Entry<String,CommandInfo> entry : additionalCommands.entrySet()) {\n      defineCommand(entry.getKey(),entry.getValue());\n    }\n    responseCodec=dialect.getResponseCodec();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    return result.createResponse();\n  }\n  if (commandCodec == null || responseCodec == null) {\n    throw new WebDriverException(\"No command or response codec has been defined. Unable to proceed\");\n  }\n  HttpRequest httpRequest=commandCodec.encode(command);\n  if (httpRequest.getHeader(\"Content-Type\") == null) {\n    httpRequest.addHeader(\"Content-Type\",JSON_UTF_8);\n  }\n  try {\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    HttpResponse httpResponse=client.execute(httpRequest);\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    Response response=responseCodec.decode(httpResponse);\n    if (response.getSessionId() == null) {\n      if (httpResponse.getTargetHost() != null) {\n        response.setSessionId(getSessionId(httpResponse.getTargetHost()).orElse(null));\n      }\n else {\n        response.setSessionId(command.getSessionId().toString());\n      }\n    }\n    if (QUIT.equals(command.getName())) {\n      client.close();\n      httpClientFactory.cleanupIdleClients();\n    }\n    return response;\n  }\n catch (  UnsupportedCommandException e) {\n    if (e.getMessage() == null || \"\".equals(e.getMessage())) {\n      throw new UnsupportedOperationException(\"No information from server. Command name was: \" + command.getName(),e.getCause());\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 339,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 148,
        "startColumnNumber" : 13,
        "endLineNumber" : 148,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!NEW_SESSION.equals(command.getName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "NEW_SESSION",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 154,
      "startColumnNumber" : 8,
      "endLineNumber" : 154,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 45
      },
      "nodeContext" : "NEW_SESSION.equals(command.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (NEW_SESSION.equals(command.getName())) {\n  if (commandCodec != null) {\n    throw new SessionNotCreatedException(\"Session already exists\");\n  }\n  ProtocolHandshake handshake=new ProtocolHandshake();\n  log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n  ProtocolHandshake.Result result=handshake.createSession(client,command);\n  Dialect dialect=result.getDialect();\n  commandCodec=dialect.getCommandCodec();\n  for (  Map.Entry<String,CommandInfo> entry : additionalCommands.entrySet()) {\n    defineCommand(entry.getKey(),entry.getValue());\n  }\n  responseCodec=dialect.getResponseCodec();\n  log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n  return result.createResponse();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 142,
        "startColumnNumber" : 62,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (command.getSessionId() == null) {\n    if (QUIT.equals(command.getName())) {\n      return new Response();\n    }\n    if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n      throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n    }\n  }\n  if (NEW_SESSION.equals(command.getName())) {\n    if (commandCodec != null) {\n      throw new SessionNotCreatedException(\"Session already exists\");\n    }\n    ProtocolHandshake handshake=new ProtocolHandshake();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    ProtocolHandshake.Result result=handshake.createSession(client,command);\n    Dialect dialect=result.getDialect();\n    commandCodec=dialect.getCommandCodec();\n    for (    Map.Entry<String,CommandInfo> entry : additionalCommands.entrySet()) {\n      defineCommand(entry.getKey(),entry.getValue());\n    }\n    responseCodec=dialect.getResponseCodec();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    return result.createResponse();\n  }\n  if (commandCodec == null || responseCodec == null) {\n    throw new WebDriverException(\"No command or response codec has been defined. Unable to proceed\");\n  }\n  HttpRequest httpRequest=commandCodec.encode(command);\n  if (httpRequest.getHeader(\"Content-Type\") == null) {\n    httpRequest.addHeader(\"Content-Type\",JSON_UTF_8);\n  }\n  try {\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    HttpResponse httpResponse=client.execute(httpRequest);\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    Response response=responseCodec.decode(httpResponse);\n    if (response.getSessionId() == null) {\n      if (httpResponse.getTargetHost() != null) {\n        response.setSessionId(getSessionId(httpResponse.getTargetHost()).orElse(null));\n      }\n else {\n        response.setSessionId(command.getSessionId().toString());\n      }\n    }\n    if (QUIT.equals(command.getName())) {\n      client.close();\n      httpClientFactory.cleanupIdleClients();\n    }\n    return response;\n  }\n catch (  UnsupportedCommandException e) {\n    if (e.getMessage() == null || \"\".equals(e.getMessage())) {\n      throw new UnsupportedOperationException(\"No information from server. Command name was: \" + command.getName(),e.getCause());\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 326,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2730,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Response execute(Command command) throws IOException {\n  if (command.getSessionId() == null) {\n    if (QUIT.equals(command.getName())) {\n      return new Response();\n    }\n    if (!GET_ALL_SESSIONS.equals(command.getName()) && !NEW_SESSION.equals(command.getName())) {\n      throw new NoSuchSessionException(\"Session ID is null. Using WebDriver after calling quit()?\");\n    }\n  }\n  if (NEW_SESSION.equals(command.getName())) {\n    if (commandCodec != null) {\n      throw new SessionNotCreatedException(\"Session already exists\");\n    }\n    ProtocolHandshake handshake=new ProtocolHandshake();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    ProtocolHandshake.Result result=handshake.createSession(client,command);\n    Dialect dialect=result.getDialect();\n    commandCodec=dialect.getCommandCodec();\n    for (    Map.Entry<String,CommandInfo> entry : additionalCommands.entrySet()) {\n      defineCommand(entry.getKey(),entry.getValue());\n    }\n    responseCodec=dialect.getResponseCodec();\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    return result.createResponse();\n  }\n  if (commandCodec == null || responseCodec == null) {\n    throw new WebDriverException(\"No command or response codec has been defined. Unable to proceed\");\n  }\n  HttpRequest httpRequest=commandCodec.encode(command);\n  if (httpRequest.getHeader(\"Content-Type\") == null) {\n    httpRequest.addHeader(\"Content-Type\",JSON_UTF_8);\n  }\n  try {\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),true));\n    HttpResponse httpResponse=client.execute(httpRequest);\n    log(LogType.PROFILER,new HttpProfilerLogEntry(command.getName(),false));\n    Response response=responseCodec.decode(httpResponse);\n    if (response.getSessionId() == null) {\n      if (httpResponse.getTargetHost() != null) {\n        response.setSessionId(getSessionId(httpResponse.getTargetHost()).orElse(null));\n      }\n else {\n        response.setSessionId(command.getSessionId().toString());\n      }\n    }\n    if (QUIT.equals(command.getName())) {\n      client.close();\n      httpClientFactory.cleanupIdleClients();\n    }\n    return response;\n  }\n catch (  UnsupportedCommandException e) {\n    if (e.getMessage() == null || \"\".equals(e.getMessage())) {\n      throw new UnsupportedOperationException(\"No information from server. Command name was: \" + command.getName(),e.getCause());\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 339,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 45
      },
      "nodeContext" : "NEW_SESSION.equals(command.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 148,
    "startColumnNumber" : 14,
    "endLineNumber" : 148,
    "endColumnNumber" : 25
  }, {
    "charLength" : 11,
    "startLineNumber" : 154,
    "startColumnNumber" : 8,
    "endLineNumber" : 154,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}