{
  "id" : 370,
  "expression" : "input.length()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/upstream/crypto/CryptoUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 38,
      "startColumnNumber" : 24,
      "endLineNumber" : 38,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 38,
        "startColumnNumber" : 20,
        "endLineNumber" : 38,
        "endColumnNumber" : 38
      },
      "nodeContext" : "i < input.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < input.length(); i++) {\n  hash^=input.charAt(i);\n  hash+=(hash << 1) + (hash << 4) + (hash << 5)+ (hash << 7)+ (hash << 8)+ (hash << 40);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 32,
        "startColumnNumber" : 58,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (input == null) {\n    return 0;\n  }\n  long hash=0;\n  for (int i=0; i < input.length(); i++) {\n    hash^=input.charAt(i);\n    hash+=(hash << 1) + (hash << 4) + (hash << 5)+ (hash << 7)+ (hash << 8)+ (hash << 40);\n  }\n  return hash;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the hash value of the input as a long using the 64 bit FNV-1a hash function. The hash values produced by this function are less likely to collide than those produced by  {@link #hashCode()}.\n */\npublic static long getFNV64Hash(@Nullable String input){\n  if (input == null) {\n    return 0;\n  }\n  long hash=0;\n  for (int i=0; i < input.length(); i++) {\n    hash^=input.charAt(i);\n    hash+=(hash << 1) + (hash << 4) + (hash << 5)+ (hash << 7)+ (hash << 8)+ (hash << 40);\n  }\n  return hash;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 38,
        "startColumnNumber" : 20,
        "endLineNumber" : 38,
        "endColumnNumber" : 38
      },
      "nodeContext" : "i < input.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 38,
    "startColumnNumber" : 24,
    "endLineNumber" : 38,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}