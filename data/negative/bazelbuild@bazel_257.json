{
  "id" : 257,
  "expression" : "status() == Status.TIMEOUT",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/actions/SpawnResult.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "status() == Status.TIMEOUT",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 401,
      "startColumnNumber" : 22,
      "endLineNumber" : 401,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 400,
        "startColumnNumber" : 33,
        "endLineNumber" : 401,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new TerminationStatus(exitCode(),status() == Status.TIMEOUT)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 400,
        "startColumnNumber" : 24,
        "endLineNumber" : 401,
        "endColumnNumber" : 49
      },
      "nodeContext" : "status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 400,
        "startColumnNumber" : 6,
        "endLineNumber" : 401,
        "endColumnNumber" : 50
      },
      "nodeContext" : "TerminationStatus status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 399,
        "startColumnNumber" : 37,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TerminationStatus status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT);\n  String reason=\"(\" + status.toShortString() + \")\";\n  String explanation=Strings.isNullOrEmpty(message) ? \"\" : \": \" + message;\n  if (status() == Status.TIMEOUT) {\n    if (getWallTime().isPresent()) {\n      explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n    }\n else {\n      explanation+=\" (failed due to timeout.)\";\n    }\n  }\n else   if (status() == Status.OUT_OF_MEMORY) {\n    explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n  }\n  if (status() != Status.TIMEOUT && forciblyRunRemotely) {\n    explanation+=\" Action tagged as local was forcibly run remotely and failed - it's \" + \"possible that the action simply doesn't work remotely\";\n  }\n  return reason + explanation;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 395,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String getDetailMessage(String message,boolean catastrophe,boolean forciblyRunRemotely){\n  TerminationStatus status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT);\n  String reason=\"(\" + status.toShortString() + \")\";\n  String explanation=Strings.isNullOrEmpty(message) ? \"\" : \": \" + message;\n  if (status() == Status.TIMEOUT) {\n    if (getWallTime().isPresent()) {\n      explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n    }\n else {\n      explanation+=\" (failed due to timeout.)\";\n    }\n  }\n else   if (status() == Status.OUT_OF_MEMORY) {\n    explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n  }\n  if (status() != Status.TIMEOUT && forciblyRunRemotely) {\n    explanation+=\" Action tagged as local was forcibly run remotely and failed - it's \" + \"possible that the action simply doesn't work remotely\";\n  }\n  return reason + explanation;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 400,
        "startColumnNumber" : 33,
        "endLineNumber" : 401,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new TerminationStatus(exitCode(),status() == Status.TIMEOUT)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  }, {
    "nodeContext" : "status() == Status.TIMEOUT",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 405,
      "startColumnNumber" : 10,
      "endLineNumber" : 405,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 405,
        "startColumnNumber" : 6,
        "endLineNumber" : 417,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (status() == Status.TIMEOUT) {\n  if (getWallTime().isPresent()) {\n    explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n  }\n else {\n    explanation+=\" (failed due to timeout.)\";\n  }\n}\n else if (status() == Status.OUT_OF_MEMORY) {\n  explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 399,
        "startColumnNumber" : 37,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TerminationStatus status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT);\n  String reason=\"(\" + status.toShortString() + \")\";\n  String explanation=Strings.isNullOrEmpty(message) ? \"\" : \": \" + message;\n  if (status() == Status.TIMEOUT) {\n    if (getWallTime().isPresent()) {\n      explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n    }\n else {\n      explanation+=\" (failed due to timeout.)\";\n    }\n  }\n else   if (status() == Status.OUT_OF_MEMORY) {\n    explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n  }\n  if (status() != Status.TIMEOUT && forciblyRunRemotely) {\n    explanation+=\" Action tagged as local was forcibly run remotely and failed - it's \" + \"possible that the action simply doesn't work remotely\";\n  }\n  return reason + explanation;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 395,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String getDetailMessage(String message,boolean catastrophe,boolean forciblyRunRemotely){\n  TerminationStatus status=new TerminationStatus(exitCode(),status() == Status.TIMEOUT);\n  String reason=\"(\" + status.toShortString() + \")\";\n  String explanation=Strings.isNullOrEmpty(message) ? \"\" : \": \" + message;\n  if (status() == Status.TIMEOUT) {\n    if (getWallTime().isPresent()) {\n      explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n    }\n else {\n      explanation+=\" (failed due to timeout.)\";\n    }\n  }\n else   if (status() == Status.OUT_OF_MEMORY) {\n    explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n  }\n  if (status() != Status.TIMEOUT && forciblyRunRemotely) {\n    explanation+=\" Action tagged as local was forcibly run remotely and failed - it's \" + \"possible that the action simply doesn't work remotely\";\n  }\n  return reason + explanation;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 405,
        "startColumnNumber" : 6,
        "endLineNumber" : 417,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (status() == Status.TIMEOUT) {\n  if (getWallTime().isPresent()) {\n    explanation+=String.format(Locale.US,\" (failed due to timeout after %.2f seconds.)\",getWallTime().get().toMillis() / 1000.0);\n  }\n else {\n    explanation+=\" (failed due to timeout.)\";\n  }\n}\n else if (status() == Status.OUT_OF_MEMORY) {\n  explanation+=\" (Remote action was terminated due to Out of Memory.)\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 12
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 401,
    "startColumnNumber" : 22,
    "endLineNumber" : 401,
    "endColumnNumber" : 48
  }, {
    "charLength" : 26,
    "startLineNumber" : 405,
    "startColumnNumber" : 10,
    "endLineNumber" : 405,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}