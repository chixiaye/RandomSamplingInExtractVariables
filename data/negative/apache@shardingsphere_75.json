{
  "id" : 75,
  "expression" : "sql",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/text/admin/mysql/MySQLInformationSchemaExecutorFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sql",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 48,
      "startColumnNumber" : 71,
      "endLineNumber" : 48,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 48,
        "startColumnNumber" : 19,
        "endLineNumber" : 48,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new SelectInformationSchemataExecutor(sqlStatement,sql)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new SelectInformationSchemataExecutor(sqlStatement,sql);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new SelectInformationSchemataExecutor(sqlStatement,sql);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n  return new SelectInformationSchemataExecutor(sqlStatement,sql);\n}\n else if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n  return new DefaultDatabaseMetadataExecutor(sql);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 45,
        "startColumnNumber" : 111,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tableName=((SimpleTableSegment)sqlStatement.getFrom()).getTableName().getIdentifier().getValue();\n  if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n    return new SelectInformationSchemataExecutor(sqlStatement,sql);\n  }\n else   if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n    return new DefaultDatabaseMetadataExecutor(sql);\n  }\n  throw new UnsupportedOperationException(String.format(\"unsupported table : `%s`\",tableName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create executor.\n * @param sqlStatement SQL statement\n * @param sql SQL being executed\n * @return executor\n */\npublic static DatabaseAdminQueryExecutor newInstance(final SelectStatement sqlStatement,final String sql){\n  String tableName=((SimpleTableSegment)sqlStatement.getFrom()).getTableName().getIdentifier().getValue();\n  if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n    return new SelectInformationSchemataExecutor(sqlStatement,sql);\n  }\n else   if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n    return new DefaultDatabaseMetadataExecutor(sql);\n  }\n  throw new UnsupportedOperationException(String.format(\"unsupported table : `%s`\",tableName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new SelectInformationSchemataExecutor(sqlStatement,sql);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "sql",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 50,
      "startColumnNumber" : 55,
      "endLineNumber" : 50,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new DefaultDatabaseMetadataExecutor(sql)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return new DefaultDatabaseMetadataExecutor(sql);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 49,
        "startColumnNumber" : 78,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new DefaultDatabaseMetadataExecutor(sql);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n  return new DefaultDatabaseMetadataExecutor(sql);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n  return new SelectInformationSchemataExecutor(sqlStatement,sql);\n}\n else if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n  return new DefaultDatabaseMetadataExecutor(sql);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 45,
        "startColumnNumber" : 111,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tableName=((SimpleTableSegment)sqlStatement.getFrom()).getTableName().getIdentifier().getValue();\n  if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n    return new SelectInformationSchemataExecutor(sqlStatement,sql);\n  }\n else   if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n    return new DefaultDatabaseMetadataExecutor(sql);\n  }\n  throw new UnsupportedOperationException(String.format(\"unsupported table : `%s`\",tableName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create executor.\n * @param sqlStatement SQL statement\n * @param sql SQL being executed\n * @return executor\n */\npublic static DatabaseAdminQueryExecutor newInstance(final SelectStatement sqlStatement,final String sql){\n  String tableName=((SimpleTableSegment)sqlStatement.getFrom()).getTableName().getIdentifier().getValue();\n  if (SCHEMATA_TABLE.equalsIgnoreCase(tableName)) {\n    return new SelectInformationSchemataExecutor(sqlStatement,sql);\n  }\n else   if (DEFAULT_EXECUTOR_TABLES.contains(tableName.toUpperCase())) {\n    return new DefaultDatabaseMetadataExecutor(sql);\n  }\n  throw new UnsupportedOperationException(String.format(\"unsupported table : `%s`\",tableName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return new DefaultDatabaseMetadataExecutor(sql);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 48,
    "startColumnNumber" : 71,
    "endLineNumber" : 48,
    "endColumnNumber" : 74
  }, {
    "charLength" : 3,
    "startLineNumber" : 50,
    "startColumnNumber" : 55,
    "endLineNumber" : 50,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}