{
  "id" : 101,
  "expression" : "resolver != null",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resolver != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 177,
      "startColumnNumber" : 28,
      "endLineNumber" : 177,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 177,
        "startColumnNumber" : 24,
        "endLineNumber" : 180,
        "endColumnNumber" : 60
      },
      "nodeContext" : "if (resolver != null) value=resolver.resolve(key);\n else value=System.getProperty(key);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 170,
        "startColumnNumber" : 25,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (PATH_SEPARATOR_ALIAS.equals(key)) {\n  value=PATH_SEPARATOR;\n}\n else {\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1997,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (FILE_SEPARATOR_ALIAS.equals(key)) {\n  value=FILE_SEPARATOR;\n}\n else if (PATH_SEPARATOR_ALIAS.equals(key)) {\n  value=PATH_SEPARATOR;\n}\n else {\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 118,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 160,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String value=null;\n  String key=string.substring(start + 2,i);\n  if (FILE_SEPARATOR_ALIAS.equals(key)) {\n    value=FILE_SEPARATOR;\n  }\n else   if (PATH_SEPARATOR_ALIAS.equals(key)) {\n    value=PATH_SEPARATOR;\n  }\n else {\n    if (resolver != null)     value=resolver.resolve(key);\n else     value=System.getProperty(key);\n    if (value == null) {\n      int colon=key.indexOf(':');\n      if (colon > 0) {\n        String realKey=key.substring(0,colon);\n        if (resolver != null)         value=resolver.resolve(realKey);\n else         value=System.getProperty(realKey);\n        if (value == null) {\n          value=resolveCompositeKey(realKey,resolver);\n          if (value == null)           value=key.substring(colon + 1);\n        }\n      }\n else {\n        value=resolveCompositeKey(key,resolver);\n      }\n    }\n  }\n  if (value != null) {\n    properties=true;\n    buffer.append(value);\n  }\n else {\n    buffer.append(\"${\");\n    buffer.append(key);\n    buffer.append('}');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (start + 2 == i) {\n  buffer.append(\"${}\");\n}\n else {\n  String value=null;\n  String key=string.substring(start + 2,i);\n  if (FILE_SEPARATOR_ALIAS.equals(key)) {\n    value=FILE_SEPARATOR;\n  }\n else   if (PATH_SEPARATOR_ALIAS.equals(key)) {\n    value=PATH_SEPARATOR;\n  }\n else {\n    if (resolver != null)     value=resolver.resolve(key);\n else     value=System.getProperty(key);\n    if (value == null) {\n      int colon=key.indexOf(':');\n      if (colon > 0) {\n        String realKey=key.substring(0,colon);\n        if (resolver != null)         value=resolver.resolve(realKey);\n else         value=System.getProperty(realKey);\n        if (value == null) {\n          value=resolveCompositeKey(realKey,resolver);\n          if (value == null)           value=key.substring(colon + 1);\n        }\n      }\n else {\n        value=resolveCompositeKey(key,resolver);\n      }\n    }\n  }\n  if (value != null) {\n    properties=true;\n    buffer.append(value);\n  }\n else {\n    buffer.append(\"${\");\n    buffer.append(key);\n    buffer.append('}');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2871,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2920,
        "startLineNumber" : 152,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3090,
        "startLineNumber" : 148,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 213,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3442,
        "startLineNumber" : 143,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 221,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3578,
        "startLineNumber" : 139,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 232,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 130,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '{' && state == SEEN_DOLLAR) {\n  buffer.append(string.substring(start,i - 1));\n  state=IN_BRACKET;\n  start=i - 1;\n  openBracketsCount=1;\n}\n else if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 266,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4148,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '$' && state != IN_BRACKET) state=SEEN_DOLLAR;\n else if (c == '{' && state == SEEN_DOLLAR) {\n  buffer.append(string.substring(start,i - 1));\n  state=IN_BRACKET;\n  start=i - 1;\n  openBracketsCount=1;\n}\n else if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 278,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 4248,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 228,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=chars[i];\n  if (c == '$' && state != IN_BRACKET)   state=SEEN_DOLLAR;\n else   if (c == '{' && state == SEEN_DOLLAR) {\n    buffer.append(string.substring(start,i - 1));\n    state=IN_BRACKET;\n    start=i - 1;\n    openBracketsCount=1;\n  }\n else   if (c == '{' && state == IN_BRACKET)   openBracketsCount++;\n else   if (state == SEEN_DOLLAR)   state=NORMAL;\n else   if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)   openBracketsCount--;\n else   if (c == '}' && state == IN_BRACKET) {\n    if (start + 2 == i) {\n      buffer.append(\"${}\");\n    }\n else {\n      String value=null;\n      String key=string.substring(start + 2,i);\n      if (FILE_SEPARATOR_ALIAS.equals(key)) {\n        value=FILE_SEPARATOR;\n      }\n else       if (PATH_SEPARATOR_ALIAS.equals(key)) {\n        value=PATH_SEPARATOR;\n      }\n else {\n        if (resolver != null)         value=resolver.resolve(key);\n else         value=System.getProperty(key);\n        if (value == null) {\n          int colon=key.indexOf(':');\n          if (colon > 0) {\n            String realKey=key.substring(0,colon);\n            if (resolver != null)             value=resolver.resolve(realKey);\n else             value=System.getProperty(realKey);\n            if (value == null) {\n              value=resolveCompositeKey(realKey,resolver);\n              if (value == null)               value=key.substring(colon + 1);\n            }\n          }\n else {\n            value=resolveCompositeKey(key,resolver);\n          }\n        }\n      }\n      if (value != null) {\n        properties=true;\n        buffer.append(value);\n      }\n else {\n        buffer.append(\"${\");\n        buffer.append(key);\n        buffer.append('}');\n      }\n    }\n    start=i + 1;\n    state=NORMAL;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4295,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 228,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < chars.length; ++i) {\n  char c=chars[i];\n  if (c == '$' && state != IN_BRACKET)   state=SEEN_DOLLAR;\n else   if (c == '{' && state == SEEN_DOLLAR) {\n    buffer.append(string.substring(start,i - 1));\n    state=IN_BRACKET;\n    start=i - 1;\n    openBracketsCount=1;\n  }\n else   if (c == '{' && state == IN_BRACKET)   openBracketsCount++;\n else   if (state == SEEN_DOLLAR)   state=NORMAL;\n else   if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)   openBracketsCount--;\n else   if (c == '}' && state == IN_BRACKET) {\n    if (start + 2 == i) {\n      buffer.append(\"${}\");\n    }\n else {\n      String value=null;\n      String key=string.substring(start + 2,i);\n      if (FILE_SEPARATOR_ALIAS.equals(key)) {\n        value=FILE_SEPARATOR;\n      }\n else       if (PATH_SEPARATOR_ALIAS.equals(key)) {\n        value=PATH_SEPARATOR;\n      }\n else {\n        if (resolver != null)         value=resolver.resolve(key);\n else         value=System.getProperty(key);\n        if (value == null) {\n          int colon=key.indexOf(':');\n          if (colon > 0) {\n            String realKey=key.substring(0,colon);\n            if (resolver != null)             value=resolver.resolve(realKey);\n else             value=System.getProperty(realKey);\n            if (value == null) {\n              value=resolveCompositeKey(realKey,resolver);\n              if (value == null)               value=key.substring(colon + 1);\n            }\n          }\n else {\n            value=resolveCompositeKey(key,resolver);\n          }\n        }\n      }\n      if (value != null) {\n        properties=true;\n        buffer.append(value);\n      }\n else {\n        buffer.append(\"${\");\n        buffer.append(key);\n        buffer.append('}');\n      }\n    }\n    start=i + 1;\n    state=NORMAL;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 299,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5002,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (string == null) {\n    return null;\n  }\n  final char[] chars=string.toCharArray();\n  StringBuilder buffer=new StringBuilder();\n  boolean properties=false;\n  int state=NORMAL;\n  int start=0;\n  int openBracketsCount=0;\n  for (int i=0; i < chars.length; ++i) {\n    char c=chars[i];\n    if (c == '$' && state != IN_BRACKET)     state=SEEN_DOLLAR;\n else     if (c == '{' && state == SEEN_DOLLAR) {\n      buffer.append(string.substring(start,i - 1));\n      state=IN_BRACKET;\n      start=i - 1;\n      openBracketsCount=1;\n    }\n else     if (c == '{' && state == IN_BRACKET)     openBracketsCount++;\n else     if (state == SEEN_DOLLAR)     state=NORMAL;\n else     if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)     openBracketsCount--;\n else     if (c == '}' && state == IN_BRACKET) {\n      if (start + 2 == i) {\n        buffer.append(\"${}\");\n      }\n else {\n        String value=null;\n        String key=string.substring(start + 2,i);\n        if (FILE_SEPARATOR_ALIAS.equals(key)) {\n          value=FILE_SEPARATOR;\n        }\n else         if (PATH_SEPARATOR_ALIAS.equals(key)) {\n          value=PATH_SEPARATOR;\n        }\n else {\n          if (resolver != null)           value=resolver.resolve(key);\n else           value=System.getProperty(key);\n          if (value == null) {\n            int colon=key.indexOf(':');\n            if (colon > 0) {\n              String realKey=key.substring(0,colon);\n              if (resolver != null)               value=resolver.resolve(realKey);\n else               value=System.getProperty(realKey);\n              if (value == null) {\n                value=resolveCompositeKey(realKey,resolver);\n                if (value == null)                 value=key.substring(colon + 1);\n              }\n            }\n else {\n              value=resolveCompositeKey(key,resolver);\n            }\n          }\n        }\n        if (value != null) {\n          properties=true;\n          buffer.append(value);\n        }\n else {\n          buffer.append(\"${\");\n          buffer.append(key);\n          buffer.append('}');\n        }\n      }\n      start=i + 1;\n      state=NORMAL;\n    }\n  }\n  if (!properties)   return string;\n  if (start != chars.length)   buffer.append(string.substring(start,chars.length));\n  if (buffer.indexOf(\"${\") != -1) {\n    return replaceProperties(buffer.toString(),resolver);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 387,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5093,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String replaceProperties(final String string,PropertyResolver resolver){\n  if (string == null) {\n    return null;\n  }\n  final char[] chars=string.toCharArray();\n  StringBuilder buffer=new StringBuilder();\n  boolean properties=false;\n  int state=NORMAL;\n  int start=0;\n  int openBracketsCount=0;\n  for (int i=0; i < chars.length; ++i) {\n    char c=chars[i];\n    if (c == '$' && state != IN_BRACKET)     state=SEEN_DOLLAR;\n else     if (c == '{' && state == SEEN_DOLLAR) {\n      buffer.append(string.substring(start,i - 1));\n      state=IN_BRACKET;\n      start=i - 1;\n      openBracketsCount=1;\n    }\n else     if (c == '{' && state == IN_BRACKET)     openBracketsCount++;\n else     if (state == SEEN_DOLLAR)     state=NORMAL;\n else     if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)     openBracketsCount--;\n else     if (c == '}' && state == IN_BRACKET) {\n      if (start + 2 == i) {\n        buffer.append(\"${}\");\n      }\n else {\n        String value=null;\n        String key=string.substring(start + 2,i);\n        if (FILE_SEPARATOR_ALIAS.equals(key)) {\n          value=FILE_SEPARATOR;\n        }\n else         if (PATH_SEPARATOR_ALIAS.equals(key)) {\n          value=PATH_SEPARATOR;\n        }\n else {\n          if (resolver != null)           value=resolver.resolve(key);\n else           value=System.getProperty(key);\n          if (value == null) {\n            int colon=key.indexOf(':');\n            if (colon > 0) {\n              String realKey=key.substring(0,colon);\n              if (resolver != null)               value=resolver.resolve(realKey);\n else               value=System.getProperty(realKey);\n              if (value == null) {\n                value=resolveCompositeKey(realKey,resolver);\n                if (value == null)                 value=key.substring(colon + 1);\n              }\n            }\n else {\n              value=resolveCompositeKey(key,resolver);\n            }\n          }\n        }\n        if (value != null) {\n          properties=true;\n          buffer.append(value);\n        }\n else {\n          buffer.append(\"${\");\n          buffer.append(key);\n          buffer.append('}');\n        }\n      }\n      start=i + 1;\n      state=NORMAL;\n    }\n  }\n  if (!properties)   return string;\n  if (start != chars.length)   buffer.append(string.substring(start,chars.length));\n  if (buffer.indexOf(\"${\") != -1) {\n    return replaceProperties(buffer.toString(),resolver);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 402,
      "astHeight" : 28
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 177,
        "startColumnNumber" : 24,
        "endLineNumber" : 180,
        "endColumnNumber" : 60
      },
      "nodeContext" : "if (resolver != null) value=resolver.resolve(key);\n else value=System.getProperty(key);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "resolver != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 189,
      "startColumnNumber" : 36,
      "endLineNumber" : 189,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 189,
        "startColumnNumber" : 32,
        "endLineNumber" : 192,
        "endColumnNumber" : 72
      },
      "nodeContext" : "if (resolver != null) value=resolver.resolve(realKey);\n else value=System.getProperty(realKey);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 187,
        "startColumnNumber" : 28,
        "endLineNumber" : 203,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  String realKey=key.substring(0,colon);\n  if (resolver != null)   value=resolver.resolve(realKey);\n else   value=System.getProperty(realKey);\n  if (value == null) {\n    value=resolveCompositeKey(realKey,resolver);\n    if (value == null)     value=key.substring(colon + 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 186,
        "startColumnNumber" : 28,
        "endLineNumber" : 208,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (colon > 0) {\n  String realKey=key.substring(0,colon);\n  if (resolver != null)   value=resolver.resolve(realKey);\n else   value=System.getProperty(realKey);\n  if (value == null) {\n    value=resolveCompositeKey(realKey,resolver);\n    if (value == null)     value=key.substring(colon + 1);\n  }\n}\n else {\n  value=resolveCompositeKey(key,resolver);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 183,
        "startColumnNumber" : 24,
        "endLineNumber" : 209,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  int colon=key.indexOf(':');\n  if (colon > 0) {\n    String realKey=key.substring(0,colon);\n    if (resolver != null)     value=resolver.resolve(realKey);\n else     value=System.getProperty(realKey);\n    if (value == null) {\n      value=resolveCompositeKey(realKey,resolver);\n      if (value == null)       value=key.substring(colon + 1);\n    }\n  }\n else {\n    value=resolveCompositeKey(key,resolver);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 182,
        "startColumnNumber" : 24,
        "endLineNumber" : 209,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (value == null) {\n  int colon=key.indexOf(':');\n  if (colon > 0) {\n    String realKey=key.substring(0,colon);\n    if (resolver != null)     value=resolver.resolve(realKey);\n else     value=System.getProperty(realKey);\n    if (value == null) {\n      value=resolveCompositeKey(realKey,resolver);\n      if (value == null)       value=key.substring(colon + 1);\n    }\n  }\n else {\n    value=resolveCompositeKey(key,resolver);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 170,
        "startColumnNumber" : 25,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (PATH_SEPARATOR_ALIAS.equals(key)) {\n  value=PATH_SEPARATOR;\n}\n else {\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1997,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (FILE_SEPARATOR_ALIAS.equals(key)) {\n  value=FILE_SEPARATOR;\n}\n else if (PATH_SEPARATOR_ALIAS.equals(key)) {\n  value=PATH_SEPARATOR;\n}\n else {\n  if (resolver != null)   value=resolver.resolve(key);\n else   value=System.getProperty(key);\n  if (value == null) {\n    int colon=key.indexOf(':');\n    if (colon > 0) {\n      String realKey=key.substring(0,colon);\n      if (resolver != null)       value=resolver.resolve(realKey);\n else       value=System.getProperty(realKey);\n      if (value == null) {\n        value=resolveCompositeKey(realKey,resolver);\n        if (value == null)         value=key.substring(colon + 1);\n      }\n    }\n else {\n      value=resolveCompositeKey(key,resolver);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 118,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2560,
        "startLineNumber" : 160,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String value=null;\n  String key=string.substring(start + 2,i);\n  if (FILE_SEPARATOR_ALIAS.equals(key)) {\n    value=FILE_SEPARATOR;\n  }\n else   if (PATH_SEPARATOR_ALIAS.equals(key)) {\n    value=PATH_SEPARATOR;\n  }\n else {\n    if (resolver != null)     value=resolver.resolve(key);\n else     value=System.getProperty(key);\n    if (value == null) {\n      int colon=key.indexOf(':');\n      if (colon > 0) {\n        String realKey=key.substring(0,colon);\n        if (resolver != null)         value=resolver.resolve(realKey);\n else         value=System.getProperty(realKey);\n        if (value == null) {\n          value=resolveCompositeKey(realKey,resolver);\n          if (value == null)           value=key.substring(colon + 1);\n        }\n      }\n else {\n        value=resolveCompositeKey(key,resolver);\n      }\n    }\n  }\n  if (value != null) {\n    properties=true;\n    buffer.append(value);\n  }\n else {\n    buffer.append(\"${\");\n    buffer.append(key);\n    buffer.append('}');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 224,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (start + 2 == i) {\n  buffer.append(\"${}\");\n}\n else {\n  String value=null;\n  String key=string.substring(start + 2,i);\n  if (FILE_SEPARATOR_ALIAS.equals(key)) {\n    value=FILE_SEPARATOR;\n  }\n else   if (PATH_SEPARATOR_ALIAS.equals(key)) {\n    value=PATH_SEPARATOR;\n  }\n else {\n    if (resolver != null)     value=resolver.resolve(key);\n else     value=System.getProperty(key);\n    if (value == null) {\n      int colon=key.indexOf(':');\n      if (colon > 0) {\n        String realKey=key.substring(0,colon);\n        if (resolver != null)         value=resolver.resolve(realKey);\n else         value=System.getProperty(realKey);\n        if (value == null) {\n          value=resolveCompositeKey(realKey,resolver);\n          if (value == null)           value=key.substring(colon + 1);\n        }\n      }\n else {\n        value=resolveCompositeKey(key,resolver);\n      }\n    }\n  }\n  if (value != null) {\n    properties=true;\n    buffer.append(value);\n  }\n else {\n    buffer.append(\"${\");\n    buffer.append(key);\n    buffer.append('}');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2871,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2920,
        "startLineNumber" : 152,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3090,
        "startLineNumber" : 148,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 213,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3442,
        "startLineNumber" : 143,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 221,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3578,
        "startLineNumber" : 139,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 232,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 130,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '{' && state == SEEN_DOLLAR) {\n  buffer.append(string.substring(start,i - 1));\n  state=IN_BRACKET;\n  start=i - 1;\n  openBracketsCount=1;\n}\n else if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 266,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4148,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '$' && state != IN_BRACKET) state=SEEN_DOLLAR;\n else if (c == '{' && state == SEEN_DOLLAR) {\n  buffer.append(string.substring(start,i - 1));\n  state=IN_BRACKET;\n  start=i - 1;\n  openBracketsCount=1;\n}\n else if (c == '{' && state == IN_BRACKET) openBracketsCount++;\n else if (state == SEEN_DOLLAR) state=NORMAL;\n else if (c == '}' && state == IN_BRACKET && openBracketsCount > 1) openBracketsCount--;\n else if (c == '}' && state == IN_BRACKET) {\n  if (start + 2 == i) {\n    buffer.append(\"${}\");\n  }\n else {\n    String value=null;\n    String key=string.substring(start + 2,i);\n    if (FILE_SEPARATOR_ALIAS.equals(key)) {\n      value=FILE_SEPARATOR;\n    }\n else     if (PATH_SEPARATOR_ALIAS.equals(key)) {\n      value=PATH_SEPARATOR;\n    }\n else {\n      if (resolver != null)       value=resolver.resolve(key);\n else       value=System.getProperty(key);\n      if (value == null) {\n        int colon=key.indexOf(':');\n        if (colon > 0) {\n          String realKey=key.substring(0,colon);\n          if (resolver != null)           value=resolver.resolve(realKey);\n else           value=System.getProperty(realKey);\n          if (value == null) {\n            value=resolveCompositeKey(realKey,resolver);\n            if (value == null)             value=key.substring(colon + 1);\n          }\n        }\n else {\n          value=resolveCompositeKey(key,resolver);\n        }\n      }\n    }\n    if (value != null) {\n      properties=true;\n      buffer.append(value);\n    }\n else {\n      buffer.append(\"${\");\n      buffer.append(key);\n      buffer.append('}');\n    }\n  }\n  start=i + 1;\n  state=NORMAL;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 278,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 4248,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 228,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=chars[i];\n  if (c == '$' && state != IN_BRACKET)   state=SEEN_DOLLAR;\n else   if (c == '{' && state == SEEN_DOLLAR) {\n    buffer.append(string.substring(start,i - 1));\n    state=IN_BRACKET;\n    start=i - 1;\n    openBracketsCount=1;\n  }\n else   if (c == '{' && state == IN_BRACKET)   openBracketsCount++;\n else   if (state == SEEN_DOLLAR)   state=NORMAL;\n else   if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)   openBracketsCount--;\n else   if (c == '}' && state == IN_BRACKET) {\n    if (start + 2 == i) {\n      buffer.append(\"${}\");\n    }\n else {\n      String value=null;\n      String key=string.substring(start + 2,i);\n      if (FILE_SEPARATOR_ALIAS.equals(key)) {\n        value=FILE_SEPARATOR;\n      }\n else       if (PATH_SEPARATOR_ALIAS.equals(key)) {\n        value=PATH_SEPARATOR;\n      }\n else {\n        if (resolver != null)         value=resolver.resolve(key);\n else         value=System.getProperty(key);\n        if (value == null) {\n          int colon=key.indexOf(':');\n          if (colon > 0) {\n            String realKey=key.substring(0,colon);\n            if (resolver != null)             value=resolver.resolve(realKey);\n else             value=System.getProperty(realKey);\n            if (value == null) {\n              value=resolveCompositeKey(realKey,resolver);\n              if (value == null)               value=key.substring(colon + 1);\n            }\n          }\n else {\n            value=resolveCompositeKey(key,resolver);\n          }\n        }\n      }\n      if (value != null) {\n        properties=true;\n        buffer.append(value);\n      }\n else {\n        buffer.append(\"${\");\n        buffer.append(key);\n        buffer.append('}');\n      }\n    }\n    start=i + 1;\n    state=NORMAL;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4295,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 228,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < chars.length; ++i) {\n  char c=chars[i];\n  if (c == '$' && state != IN_BRACKET)   state=SEEN_DOLLAR;\n else   if (c == '{' && state == SEEN_DOLLAR) {\n    buffer.append(string.substring(start,i - 1));\n    state=IN_BRACKET;\n    start=i - 1;\n    openBracketsCount=1;\n  }\n else   if (c == '{' && state == IN_BRACKET)   openBracketsCount++;\n else   if (state == SEEN_DOLLAR)   state=NORMAL;\n else   if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)   openBracketsCount--;\n else   if (c == '}' && state == IN_BRACKET) {\n    if (start + 2 == i) {\n      buffer.append(\"${}\");\n    }\n else {\n      String value=null;\n      String key=string.substring(start + 2,i);\n      if (FILE_SEPARATOR_ALIAS.equals(key)) {\n        value=FILE_SEPARATOR;\n      }\n else       if (PATH_SEPARATOR_ALIAS.equals(key)) {\n        value=PATH_SEPARATOR;\n      }\n else {\n        if (resolver != null)         value=resolver.resolve(key);\n else         value=System.getProperty(key);\n        if (value == null) {\n          int colon=key.indexOf(':');\n          if (colon > 0) {\n            String realKey=key.substring(0,colon);\n            if (resolver != null)             value=resolver.resolve(realKey);\n else             value=System.getProperty(realKey);\n            if (value == null) {\n              value=resolveCompositeKey(realKey,resolver);\n              if (value == null)               value=key.substring(colon + 1);\n            }\n          }\n else {\n            value=resolveCompositeKey(key,resolver);\n          }\n        }\n      }\n      if (value != null) {\n        properties=true;\n        buffer.append(value);\n      }\n else {\n        buffer.append(\"${\");\n        buffer.append(key);\n        buffer.append('}');\n      }\n    }\n    start=i + 1;\n    state=NORMAL;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 299,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5002,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (string == null) {\n    return null;\n  }\n  final char[] chars=string.toCharArray();\n  StringBuilder buffer=new StringBuilder();\n  boolean properties=false;\n  int state=NORMAL;\n  int start=0;\n  int openBracketsCount=0;\n  for (int i=0; i < chars.length; ++i) {\n    char c=chars[i];\n    if (c == '$' && state != IN_BRACKET)     state=SEEN_DOLLAR;\n else     if (c == '{' && state == SEEN_DOLLAR) {\n      buffer.append(string.substring(start,i - 1));\n      state=IN_BRACKET;\n      start=i - 1;\n      openBracketsCount=1;\n    }\n else     if (c == '{' && state == IN_BRACKET)     openBracketsCount++;\n else     if (state == SEEN_DOLLAR)     state=NORMAL;\n else     if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)     openBracketsCount--;\n else     if (c == '}' && state == IN_BRACKET) {\n      if (start + 2 == i) {\n        buffer.append(\"${}\");\n      }\n else {\n        String value=null;\n        String key=string.substring(start + 2,i);\n        if (FILE_SEPARATOR_ALIAS.equals(key)) {\n          value=FILE_SEPARATOR;\n        }\n else         if (PATH_SEPARATOR_ALIAS.equals(key)) {\n          value=PATH_SEPARATOR;\n        }\n else {\n          if (resolver != null)           value=resolver.resolve(key);\n else           value=System.getProperty(key);\n          if (value == null) {\n            int colon=key.indexOf(':');\n            if (colon > 0) {\n              String realKey=key.substring(0,colon);\n              if (resolver != null)               value=resolver.resolve(realKey);\n else               value=System.getProperty(realKey);\n              if (value == null) {\n                value=resolveCompositeKey(realKey,resolver);\n                if (value == null)                 value=key.substring(colon + 1);\n              }\n            }\n else {\n              value=resolveCompositeKey(key,resolver);\n            }\n          }\n        }\n        if (value != null) {\n          properties=true;\n          buffer.append(value);\n        }\n else {\n          buffer.append(\"${\");\n          buffer.append(key);\n          buffer.append('}');\n        }\n      }\n      start=i + 1;\n      state=NORMAL;\n    }\n  }\n  if (!properties)   return string;\n  if (start != chars.length)   buffer.append(string.substring(start,chars.length));\n  if (buffer.indexOf(\"${\") != -1) {\n    return replaceProperties(buffer.toString(),resolver);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 387,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5093,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String replaceProperties(final String string,PropertyResolver resolver){\n  if (string == null) {\n    return null;\n  }\n  final char[] chars=string.toCharArray();\n  StringBuilder buffer=new StringBuilder();\n  boolean properties=false;\n  int state=NORMAL;\n  int start=0;\n  int openBracketsCount=0;\n  for (int i=0; i < chars.length; ++i) {\n    char c=chars[i];\n    if (c == '$' && state != IN_BRACKET)     state=SEEN_DOLLAR;\n else     if (c == '{' && state == SEEN_DOLLAR) {\n      buffer.append(string.substring(start,i - 1));\n      state=IN_BRACKET;\n      start=i - 1;\n      openBracketsCount=1;\n    }\n else     if (c == '{' && state == IN_BRACKET)     openBracketsCount++;\n else     if (state == SEEN_DOLLAR)     state=NORMAL;\n else     if (c == '}' && state == IN_BRACKET && openBracketsCount > 1)     openBracketsCount--;\n else     if (c == '}' && state == IN_BRACKET) {\n      if (start + 2 == i) {\n        buffer.append(\"${}\");\n      }\n else {\n        String value=null;\n        String key=string.substring(start + 2,i);\n        if (FILE_SEPARATOR_ALIAS.equals(key)) {\n          value=FILE_SEPARATOR;\n        }\n else         if (PATH_SEPARATOR_ALIAS.equals(key)) {\n          value=PATH_SEPARATOR;\n        }\n else {\n          if (resolver != null)           value=resolver.resolve(key);\n else           value=System.getProperty(key);\n          if (value == null) {\n            int colon=key.indexOf(':');\n            if (colon > 0) {\n              String realKey=key.substring(0,colon);\n              if (resolver != null)               value=resolver.resolve(realKey);\n else               value=System.getProperty(realKey);\n              if (value == null) {\n                value=resolveCompositeKey(realKey,resolver);\n                if (value == null)                 value=key.substring(colon + 1);\n              }\n            }\n else {\n              value=resolveCompositeKey(key,resolver);\n            }\n          }\n        }\n        if (value != null) {\n          properties=true;\n          buffer.append(value);\n        }\n else {\n          buffer.append(\"${\");\n          buffer.append(key);\n          buffer.append('}');\n        }\n      }\n      start=i + 1;\n      state=NORMAL;\n    }\n  }\n  if (!properties)   return string;\n  if (start != chars.length)   buffer.append(string.substring(start,chars.length));\n  if (buffer.indexOf(\"${\") != -1) {\n    return replaceProperties(buffer.toString(),resolver);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 402,
      "astHeight" : 28
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 189,
        "startColumnNumber" : 32,
        "endLineNumber" : 192,
        "endColumnNumber" : 72
      },
      "nodeContext" : "if (resolver != null) value=resolver.resolve(realKey);\n else value=System.getProperty(realKey);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 177,
    "startColumnNumber" : 28,
    "endLineNumber" : 177,
    "endColumnNumber" : 44
  }, {
    "charLength" : 16,
    "startLineNumber" : 189,
    "startColumnNumber" : 36,
    "endLineNumber" : 189,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}