{
  "id" : 101,
  "expression" : "inviterUuid",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/groups/ui/invitesandrequests/invited/PendingMemberInvitesRepository.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inviterUuid",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 68,
      "startColumnNumber" : 32,
      "endLineNumber" : 68,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 44
      },
      "nodeContext" : "self.equals(inviterUuid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (self.equals(inviterUuid)) {\n  for (  DecryptedPendingMember pendingMember : invitedMembers) {\n    try {\n      Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n      UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n      byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n    }\n catch (    InvalidInputException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n else {\n  Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n  ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n  for (  DecryptedPendingMember pendingMember : invitedMembers) {\n    try {\n      uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n    }\n catch (    InvalidInputException e) {\n      Log.w(TAG,e);\n    }\n  }\n  byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 64,
        "startColumnNumber" : 14,
        "endLineNumber" : 93,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  ByteString inviterUuid=g.getKey();\n  List<DecryptedPendingMember> invitedMembers=g.getValue();\n  if (self.equals(inviterUuid)) {\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n        UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n        byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n else {\n    Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n    ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n    byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 63,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 15
      },
      "nodeContext" : "g -> {\n  ByteString inviterUuid=g.getKey();\n  List<DecryptedPendingMember> invitedMembers=g.getValue();\n  if (self.equals(inviterUuid)) {\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n        UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n        byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n else {\n    Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n    ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n    byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 150,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 44
      },
      "nodeContext" : "self.equals(inviterUuid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "inviterUuid",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 80,
      "startColumnNumber" : 112,
      "endLineNumber" : 80,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 80,
        "startColumnNumber" : 62,
        "endLineNumber" : 80,
        "endColumnNumber" : 124
      },
      "nodeContext" : "GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 80,
        "startColumnNumber" : 44,
        "endLineNumber" : 80,
        "endColumnNumber" : 124
      },
      "nodeContext" : "inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 80,
        "startColumnNumber" : 18,
        "endLineNumber" : 80,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 79,
        "startColumnNumber" : 23,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n  ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n  for (  DecryptedPendingMember pendingMember : invitedMembers) {\n    try {\n      uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n    }\n catch (    InvalidInputException e) {\n      Log.w(TAG,e);\n    }\n  }\n  byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (self.equals(inviterUuid)) {\n  for (  DecryptedPendingMember pendingMember : invitedMembers) {\n    try {\n      Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n      UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n      byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n    }\n catch (    InvalidInputException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n else {\n  Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n  ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n  for (  DecryptedPendingMember pendingMember : invitedMembers) {\n    try {\n      uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n    }\n catch (    InvalidInputException e) {\n      Log.w(TAG,e);\n    }\n  }\n  byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 64,
        "startColumnNumber" : 14,
        "endLineNumber" : 93,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  ByteString inviterUuid=g.getKey();\n  List<DecryptedPendingMember> invitedMembers=g.getValue();\n  if (self.equals(inviterUuid)) {\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n        UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n        byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n else {\n    Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n    ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n    byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 63,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 15
      },
      "nodeContext" : "g -> {\n  ByteString inviterUuid=g.getKey();\n  List<DecryptedPendingMember> invitedMembers=g.getValue();\n  if (self.equals(inviterUuid)) {\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        Recipient invitee=GroupProtoUtil.pendingMemberToRecipient(context,pendingMember);\n        UuidCiphertext uuidCipherText=new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray());\n        byMe.add(new SinglePendingMemberInvitedByYou(invitee,uuidCipherText));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n else {\n    Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n    ArrayList<UuidCiphertext> uuidCipherTexts=new ArrayList<>(invitedMembers.size());\n    for (    DecryptedPendingMember pendingMember : invitedMembers) {\n      try {\n        uuidCipherTexts.add(new UuidCiphertext(pendingMember.getUuidCipherText().toByteArray()));\n      }\n catch (      InvalidInputException e) {\n        Log.w(TAG,e);\n      }\n    }\n    byOthers.add(new MultiplePendingMembersInvitedByAnother(inviter,uuidCipherTexts));\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 150,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 80,
        "startColumnNumber" : 18,
        "endLineNumber" : 80,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Recipient inviter=GroupProtoUtil.uuidByteStringToRecipient(context,inviterUuid);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 68,
    "startColumnNumber" : 32,
    "endLineNumber" : 68,
    "endColumnNumber" : 43
  }, {
    "charLength" : 11,
    "startLineNumber" : 80,
    "startColumnNumber" : 112,
    "endLineNumber" : 80,
    "endColumnNumber" : 123
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}