{
  "id" : 315,
  "expression" : "!expectedSubprotocol.isEmpty()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker07.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!expectedSubprotocol.isEmpty()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 240,
      "startColumnNumber" : 43,
      "endLineNumber" : 240,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 240,
        "startColumnNumber" : 12,
        "endLineNumber" : 240,
        "endColumnNumber" : 73
      },
      "nodeContext" : "expectedSubprotocol != null && !expectedSubprotocol.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 240,
        "startColumnNumber" : 8,
        "endLineNumber" : 242,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (expectedSubprotocol != null && !expectedSubprotocol.isEmpty()) {\n  headers.set(HttpHeaderNames.SEC_WEBSOCKET_PROTOCOL,expectedSubprotocol);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2123,
        "startLineNumber" : 197,
        "startColumnNumber" : 52,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URI wsURL=uri();\n  byte[] nonce=WebSocketUtil.randomBytes(16);\n  String key=WebSocketUtil.base64(nonce);\n  String acceptSeed=key + MAGIC_GUID;\n  byte[] sha1=WebSocketUtil.sha1(acceptSeed.getBytes(CharsetUtil.US_ASCII));\n  expectedChallengeResponseString=WebSocketUtil.base64(sha1);\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"WebSocket version 07 client handshake key: {}, expected response: {}\",key,expectedChallengeResponseString);\n  }\n  FullHttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,upgradeUrl(wsURL),Unpooled.EMPTY_BUFFER);\n  HttpHeaders headers=request.headers();\n  if (customHeaders != null) {\n    headers.add(customHeaders);\n    if (!headers.contains(HttpHeaderNames.HOST)) {\n      headers.set(HttpHeaderNames.HOST,websocketHostValue(wsURL));\n    }\n  }\n else {\n    headers.set(HttpHeaderNames.HOST,websocketHostValue(wsURL));\n  }\n  headers.set(HttpHeaderNames.UPGRADE,HttpHeaderValues.WEBSOCKET).set(HttpHeaderNames.CONNECTION,HttpHeaderValues.UPGRADE).set(HttpHeaderNames.SEC_WEBSOCKET_KEY,key);\n  if (!headers.contains(HttpHeaderNames.SEC_WEBSOCKET_ORIGIN)) {\n    headers.set(HttpHeaderNames.SEC_WEBSOCKET_ORIGIN,websocketOriginValue(wsURL));\n  }\n  String expectedSubprotocol=expectedSubprotocol();\n  if (expectedSubprotocol != null && !expectedSubprotocol.isEmpty()) {\n    headers.set(HttpHeaderNames.SEC_WEBSOCKET_PROTOCOL,expectedSubprotocol);\n  }\n  headers.set(HttpHeaderNames.SEC_WEBSOCKET_VERSION,version().toAsciiString());\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2632,
        "startLineNumber" : 178,
        "startColumnNumber" : 4,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * / <p> Sends the opening request to the server: </p> <pre> GET /chat HTTP/1.1 Host: server.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ== Sec-WebSocket-Origin: http://example.com Sec-WebSocket-Protocol: chat, superchat Sec-WebSocket-Version: 7 </pre>\n */\n@Override protected FullHttpRequest newHandshakeRequest(){\n  URI wsURL=uri();\n  byte[] nonce=WebSocketUtil.randomBytes(16);\n  String key=WebSocketUtil.base64(nonce);\n  String acceptSeed=key + MAGIC_GUID;\n  byte[] sha1=WebSocketUtil.sha1(acceptSeed.getBytes(CharsetUtil.US_ASCII));\n  expectedChallengeResponseString=WebSocketUtil.base64(sha1);\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"WebSocket version 07 client handshake key: {}, expected response: {}\",key,expectedChallengeResponseString);\n  }\n  FullHttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,upgradeUrl(wsURL),Unpooled.EMPTY_BUFFER);\n  HttpHeaders headers=request.headers();\n  if (customHeaders != null) {\n    headers.add(customHeaders);\n    if (!headers.contains(HttpHeaderNames.HOST)) {\n      headers.set(HttpHeaderNames.HOST,websocketHostValue(wsURL));\n    }\n  }\n else {\n    headers.set(HttpHeaderNames.HOST,websocketHostValue(wsURL));\n  }\n  headers.set(HttpHeaderNames.UPGRADE,HttpHeaderValues.WEBSOCKET).set(HttpHeaderNames.CONNECTION,HttpHeaderValues.UPGRADE).set(HttpHeaderNames.SEC_WEBSOCKET_KEY,key);\n  if (!headers.contains(HttpHeaderNames.SEC_WEBSOCKET_ORIGIN)) {\n    headers.set(HttpHeaderNames.SEC_WEBSOCKET_ORIGIN,websocketOriginValue(wsURL));\n  }\n  String expectedSubprotocol=expectedSubprotocol();\n  if (expectedSubprotocol != null && !expectedSubprotocol.isEmpty()) {\n    headers.set(HttpHeaderNames.SEC_WEBSOCKET_PROTOCOL,expectedSubprotocol);\n  }\n  headers.set(HttpHeaderNames.SEC_WEBSOCKET_VERSION,version().toAsciiString());\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 240,
        "startColumnNumber" : 12,
        "endLineNumber" : 240,
        "endColumnNumber" : 73
      },
      "nodeContext" : "expectedSubprotocol != null && !expectedSubprotocol.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 240,
    "startColumnNumber" : 43,
    "endLineNumber" : 240,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}