{
  "id" : 228,
  "expression" : "3",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/CaseInsensitiveHeadersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 791,
      "startColumnNumber" : 17,
      "endLineNumber" : 791,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 791,
        "startColumnNumber" : 4,
        "endLineNumber" : 791,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertEquals(3,mm.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 791,
        "startColumnNumber" : 4,
        "endLineNumber" : 791,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(3,mm.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 779,
        "startColumnNumber" : 35,
        "endLineNumber" : 806,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MultiMap mm=new CaseInsensitiveHeaders();\n  String name1=\"AZ\";\n  String name2=\"\\u0080Y\";\n  String name3=\"RZ\";\n  assertTrue(\"hash error\",hash(name1) == hash(name2));\n  mm.add(name1,\"value1\");\n  mm.add(name2,\"value2\");\n  mm.add(name3,\"value3\");\n  mm.add(name1,\"value4\");\n  mm.add(name2,\"value5\");\n  mm.add(name3,\"value6\");\n  assertEquals(3,mm.size());\n  mm.remove(name1);\n  mm.remove(name2);\n  assertEquals(1,mm.size());\n  mm=new CaseInsensitiveHeaders();\n  name1=\"A\";\n  name2=\"R\";\n  assertTrue(\"hash error\",index(hash(name1)) == index(hash(name2)));\n  mm.add(name1,\"value1\");\n  mm.add(name2,\"value2\");\n  assertEquals(2,mm.size());\n  mm.remove(name1);\n  mm.remove(name2);\n  assertTrue(\"not empty\",mm.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 778,
        "startColumnNumber" : 2,
        "endLineNumber" : 806,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRemoveHashColl(){\n  MultiMap mm=new CaseInsensitiveHeaders();\n  String name1=\"AZ\";\n  String name2=\"\\u0080Y\";\n  String name3=\"RZ\";\n  assertTrue(\"hash error\",hash(name1) == hash(name2));\n  mm.add(name1,\"value1\");\n  mm.add(name2,\"value2\");\n  mm.add(name3,\"value3\");\n  mm.add(name1,\"value4\");\n  mm.add(name2,\"value5\");\n  mm.add(name3,\"value6\");\n  assertEquals(3,mm.size());\n  mm.remove(name1);\n  mm.remove(name2);\n  assertEquals(1,mm.size());\n  mm=new CaseInsensitiveHeaders();\n  name1=\"A\";\n  name2=\"R\";\n  assertTrue(\"hash error\",index(hash(name1)) == index(hash(name2)));\n  mm.add(name1,\"value1\");\n  mm.add(name2,\"value2\");\n  assertEquals(2,mm.size());\n  mm.remove(name1);\n  mm.remove(name2);\n  assertTrue(\"not empty\",mm.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 791,
        "startColumnNumber" : 4,
        "endLineNumber" : 791,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(3,mm.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 791,
    "startColumnNumber" : 17,
    "endLineNumber" : 791,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}