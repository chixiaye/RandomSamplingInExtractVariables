{
  "id" : 38,
  "expression" : "Intervals.of(\"2016/2017\")",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/server/coordinator/duty/KillUnusedSegmentsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Intervals.of(\"2016/2017\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 49,
      "startColumnNumber" : 52,
      "endLineNumber" : 49,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\")),Intervals.of(\"2014/2017\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 6
      },
      "nodeContext" : "testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\")),Intervals.of(\"2014/2017\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testFindIntervalForKill(null,null);\n  testFindIntervalForKill(ImmutableList.of(),null);\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\")),Intervals.of(\"2014/2015\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\")),Intervals.of(\"2014/2017\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2015/2016\")),Intervals.of(\"2014/2016\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2016\"),Intervals.of(\"2014/2015\")),Intervals.of(\"2014/2016\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2017\"),Intervals.of(\"2014/2016\")),Intervals.of(\"2014/2017\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2019\"),Intervals.of(\"2014/2016\"),Intervals.of(\"2018/2020\")),Intervals.of(\"2014/2020\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2019\"),Intervals.of(\"2014/2016\"),Intervals.of(\"2018/2020\"),Intervals.of(\"2021/2022\")),Intervals.of(\"2014/2022\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1342,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindIntervalForKill(){\n  testFindIntervalForKill(null,null);\n  testFindIntervalForKill(ImmutableList.of(),null);\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\")),Intervals.of(\"2014/2015\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\")),Intervals.of(\"2014/2017\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2015/2016\")),Intervals.of(\"2014/2016\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2016\"),Intervals.of(\"2014/2015\")),Intervals.of(\"2014/2016\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2017\"),Intervals.of(\"2014/2016\")),Intervals.of(\"2014/2017\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2019\"),Intervals.of(\"2014/2016\"),Intervals.of(\"2018/2020\")),Intervals.of(\"2014/2020\"));\n  testFindIntervalForKill(ImmutableList.of(Intervals.of(\"2015/2019\"),Intervals.of(\"2014/2016\"),Intervals.of(\"2018/2020\"),Intervals.of(\"2021/2022\")),Intervals.of(\"2014/2022\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ImmutableList.of(Intervals.of(\"2014/2015\"),Intervals.of(\"2016/2017\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "org.apache.druid.java.util.common.Interval"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 49,
    "startColumnNumber" : 52,
    "endLineNumber" : 49,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}