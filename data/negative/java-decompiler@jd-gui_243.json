{
  "id" : 243,
  "expression" : "i",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/indexer/XmlBasedFileIndexerProvider.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 69,
      "endLineNumber" : 50,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 50,
        "startColumnNumber" : 69,
        "endLineNumber" : 50,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 50,
        "startColumnNumber" : 69,
        "endLineNumber" : 50,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 51,
      "startColumnNumber" : 71,
      "endLineNumber" : 51,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 51,
        "startColumnNumber" : 42,
        "endLineNumber" : 51,
        "endColumnNumber" : 73
      },
      "nodeContext" : "reader.getAttributeLocalName(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 51,
        "startColumnNumber" : 28,
        "endLineNumber" : 51,
        "endColumnNumber" : 74
      },
      "nodeContext" : "stringSet.add(reader.getAttributeLocalName(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 28,
        "endLineNumber" : 51,
        "endColumnNumber" : 75
      },
      "nodeContext" : "stringSet.add(reader.getAttributeLocalName(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 50,
        "startColumnNumber" : 82,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 28,
        "endLineNumber" : 51,
        "endColumnNumber" : 75
      },
      "nodeContext" : "stringSet.add(reader.getAttributeLocalName(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 67,
      "endLineNumber" : 52,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 52,
        "startColumnNumber" : 42,
        "endLineNumber" : 52,
        "endColumnNumber" : 69
      },
      "nodeContext" : "reader.getAttributeValue(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 70
      },
      "nodeContext" : "stringSet.add(reader.getAttributeValue(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 71
      },
      "nodeContext" : "stringSet.add(reader.getAttributeValue(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 50,
        "startColumnNumber" : 82,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 71
      },
      "nodeContext" : "stringSet.add(reader.getAttributeValue(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 54,
      "startColumnNumber" : 69,
      "endLineNumber" : 54,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 54,
        "startColumnNumber" : 69,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 54,
        "startColumnNumber" : 69,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 68,
      "endLineNumber" : 55,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 55,
        "startColumnNumber" : 42,
        "endLineNumber" : 55,
        "endColumnNumber" : 70
      },
      "nodeContext" : "reader.getNamespacePrefix(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 55,
        "startColumnNumber" : 28,
        "endLineNumber" : 55,
        "endColumnNumber" : 71
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 55,
        "startColumnNumber" : 28,
        "endLineNumber" : 55,
        "endColumnNumber" : 72
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 54,
        "startColumnNumber" : 82,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 55,
        "startColumnNumber" : 28,
        "endLineNumber" : 55,
        "endColumnNumber" : 72
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 65,
      "endLineNumber" : 56,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 56,
        "startColumnNumber" : 42,
        "endLineNumber" : 56,
        "endColumnNumber" : 67
      },
      "nodeContext" : "reader.getNamespaceURI(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 28,
        "endLineNumber" : 56,
        "endColumnNumber" : 68
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 28,
        "endLineNumber" : 56,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 54,
        "startColumnNumber" : 82,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 28,
        "endLineNumber" : 56,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 85,
      "startColumnNumber" : 69,
      "endLineNumber" : 85,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 85,
        "startColumnNumber" : 69,
        "endLineNumber" : 85,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 85,
        "startColumnNumber" : 69,
        "endLineNumber" : 85,
        "endColumnNumber" : 75
      },
      "nodeContext" : "i >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 68,
      "endLineNumber" : 86,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 86,
        "endColumnNumber" : 70
      },
      "nodeContext" : "reader.getNamespacePrefix(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 71
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 85,
        "startColumnNumber" : 82,
        "endLineNumber" : 88,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 86,
        "startColumnNumber" : 28,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "stringSet.add(reader.getNamespacePrefix(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 65,
      "endLineNumber" : 87,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 87,
        "startColumnNumber" : 42,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "reader.getNamespaceURI(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 87,
        "startColumnNumber" : 28,
        "endLineNumber" : 87,
        "endColumnNumber" : 68
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 87,
        "startColumnNumber" : 28,
        "endLineNumber" : 87,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 85,
        "startColumnNumber" : 82,
        "endLineNumber" : 88,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 47,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getAttributeLocalName(i));\n  stringSet.add(reader.getAttributeValue(i));\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 240,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getAttributeLocalName(i));\n    stringSet.add(reader.getAttributeValue(i));\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 245,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2769,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3122,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getAttributeLocalName(i));\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3496,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3614,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        stringSet.add(reader.getLocalName());\n      for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n        stringSet.add(reader.getAttributeLocalName(i));\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n      stringSet.add(reader.getNamespacePrefix(i));\n      stringSet.add(reader.getNamespaceURI(i));\n    }\n  break;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 87,
        "startColumnNumber" : 28,
        "endLineNumber" : 87,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stringSet.add(reader.getNamespaceURI(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 69,
    "endLineNumber" : 50,
    "endColumnNumber" : 70
  }, {
    "charLength" : 1,
    "startLineNumber" : 51,
    "startColumnNumber" : 71,
    "endLineNumber" : 51,
    "endColumnNumber" : 72
  }, {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 67,
    "endLineNumber" : 52,
    "endColumnNumber" : 68
  }, {
    "charLength" : 1,
    "startLineNumber" : 54,
    "startColumnNumber" : 69,
    "endLineNumber" : 54,
    "endColumnNumber" : 70
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 68,
    "endLineNumber" : 55,
    "endColumnNumber" : 69
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 65,
    "endLineNumber" : 56,
    "endColumnNumber" : 66
  }, {
    "charLength" : 1,
    "startLineNumber" : 85,
    "startColumnNumber" : 69,
    "endLineNumber" : 85,
    "endColumnNumber" : 70
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 68,
    "endLineNumber" : 86,
    "endColumnNumber" : 69
  }, {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 65,
    "endLineNumber" : 87,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  } ]
}