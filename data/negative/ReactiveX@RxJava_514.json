{
  "id" : 514,
  "expression" : "new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableMergeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 246,
      "startLineNumber" : 971,
      "startColumnNumber" : 13,
      "endLineNumber" : 978,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 38,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 970,
        "startColumnNumber" : 41,
        "endLineNumber" : 978,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 970,
        "startColumnNumber" : 36,
        "endLineNumber" : 978,
        "endColumnNumber" : 10
      },
      "nodeContext" : "os=Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 970,
        "startColumnNumber" : 8,
        "endLineNumber" : 978,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Flowable<Flowable<Integer>> os=Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 969,
        "startColumnNumber" : 94,
        "endLineNumber" : 980,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Flowable<Integer>> os=Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer i){\n      return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n    }\n  }\n);\n  return Flowable.merge(os);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 969,
        "startColumnNumber" : 4,
        "endLineNumber" : 980,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Flowable<Integer> mergeNAsyncStreamsOfN(final int outerSize,final int innerSize){\n  Flowable<Flowable<Integer>> os=Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer i){\n      return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n    }\n  }\n);\n  return Flowable.merge(os);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 970,
        "startColumnNumber" : 41,
        "endLineNumber" : 978,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flowable.range(1,outerSize).map(new Function<Integer,Flowable<Integer>>(){\n  @Override public Flowable<Integer> apply(  Integer i){\n    return Flowable.range(1,innerSize).subscribeOn(Schedulers.computation());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 9
    },
    "tokenLength" : 14,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 246,
    "startLineNumber" : 971,
    "startColumnNumber" : 13,
    "endLineNumber" : 978,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}