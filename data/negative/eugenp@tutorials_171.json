{
  "id" : 171,
  "expression" : "new InputStreamReader(con.getErrorStream())",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-networking-2/src/main/java/com/baeldung/httprequest/FullResponseBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InputStreamReader(con.getErrorStream())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 46,
      "startColumnNumber" : 27,
      "endLineNumber" : 46,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 70
      },
      "nodeContext" : "streamReader=new InputStreamReader(con.getErrorStream())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 71
      },
      "nodeContext" : "streamReader=new InputStreamReader(con.getErrorStream());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 45,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  streamReader=new InputStreamReader(con.getErrorStream());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (con.getResponseCode() > 299) {\n  streamReader=new InputStreamReader(con.getErrorStream());\n}\n else {\n  streamReader=new InputStreamReader(con.getInputStream());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1609,
        "startLineNumber" : 12,
        "startColumnNumber" : 83,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder fullResponseBuilder=new StringBuilder();\n  fullResponseBuilder.append(con.getResponseCode()).append(\" \").append(con.getResponseMessage()).append(\"\\n\");\n  con.getHeaderFields().entrySet().stream().filter(entry -> entry.getKey() != null).forEach(entry -> {\n    fullResponseBuilder.append(entry.getKey()).append(\": \");\n    List<String> headerValues=entry.getValue();\n    Iterator<String> it=headerValues.iterator();\n    if (it.hasNext()) {\n      fullResponseBuilder.append(it.next());\n      while (it.hasNext()) {\n        fullResponseBuilder.append(\", \").append(it.next());\n      }\n    }\n    fullResponseBuilder.append(\"\\n\");\n  }\n);\n  Reader streamReader=null;\n  if (con.getResponseCode() > 299) {\n    streamReader=new InputStreamReader(con.getErrorStream());\n  }\n else {\n    streamReader=new InputStreamReader(con.getInputStream());\n  }\n  BufferedReader in=new BufferedReader(streamReader);\n  String inputLine;\n  StringBuilder content=new StringBuilder();\n  while ((inputLine=in.readLine()) != null) {\n    content.append(inputLine);\n  }\n  in.close();\n  fullResponseBuilder.append(\"Response: \").append(content);\n  return fullResponseBuilder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1688,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getFullResponse(HttpURLConnection con) throws IOException {\n  StringBuilder fullResponseBuilder=new StringBuilder();\n  fullResponseBuilder.append(con.getResponseCode()).append(\" \").append(con.getResponseMessage()).append(\"\\n\");\n  con.getHeaderFields().entrySet().stream().filter(entry -> entry.getKey() != null).forEach(entry -> {\n    fullResponseBuilder.append(entry.getKey()).append(\": \");\n    List<String> headerValues=entry.getValue();\n    Iterator<String> it=headerValues.iterator();\n    if (it.hasNext()) {\n      fullResponseBuilder.append(it.next());\n      while (it.hasNext()) {\n        fullResponseBuilder.append(\", \").append(it.next());\n      }\n    }\n    fullResponseBuilder.append(\"\\n\");\n  }\n);\n  Reader streamReader=null;\n  if (con.getResponseCode() > 299) {\n    streamReader=new InputStreamReader(con.getErrorStream());\n  }\n else {\n    streamReader=new InputStreamReader(con.getInputStream());\n  }\n  BufferedReader in=new BufferedReader(streamReader);\n  String inputLine;\n  StringBuilder content=new StringBuilder();\n  while ((inputLine=in.readLine()) != null) {\n    content.append(inputLine);\n  }\n  in.close();\n  fullResponseBuilder.append(\"Response: \").append(content);\n  return fullResponseBuilder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 71
      },
      "nodeContext" : "streamReader=new InputStreamReader(con.getErrorStream());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.io.InputStreamReader"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 46,
    "startColumnNumber" : 27,
    "endLineNumber" : 46,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}