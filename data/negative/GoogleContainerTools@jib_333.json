{
  "id" : 333,
  "expression" : "mainClassFinderResult",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a502092c5727e68b77064c4946ed5fb61b506c82",
  "filePath" : "jib-core/src/main/java/com/google/cloud/tools/jib/plugins/common/MainClassResolver.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 120,
      "startColumnNumber" : 8,
      "endLineNumber" : 120,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mainClassFinderResult.isSuccess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mainClassFinderResult.isSuccess()) {\n  return mainClassFinderResult.getFoundMainClass();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mainClassFinderResult.isSuccess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  }, {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 121,
      "startColumnNumber" : 13,
      "endLineNumber" : 121,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 121,
        "startColumnNumber" : 13,
        "endLineNumber" : 121,
        "endColumnNumber" : 54
      },
      "nodeContext" : "mainClassFinderResult.getFoundMainClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return mainClassFinderResult.getFoundMainClass();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 120,
        "startColumnNumber" : 43,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return mainClassFinderResult.getFoundMainClass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mainClassFinderResult.isSuccess()) {\n  return mainClassFinderResult.getFoundMainClass();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return mainClassFinderResult.getFoundMainClass();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  }, {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 124,
      "startColumnNumber" : 18,
      "endLineNumber" : 124,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 124,
        "startColumnNumber" : 18,
        "endLineNumber" : 124,
        "endColumnNumber" : 54
      },
      "nodeContext" : "mainClassFinderResult.getErrorType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 124,
        "startColumnNumber" : 18,
        "endLineNumber" : 124,
        "endColumnNumber" : 62
      },
      "nodeContext" : "mainClassFinderResult.getErrorType() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Verify.verify(mainClassFinderResult.getErrorType() != null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Verify.verify(mainClassFinderResult.getErrorType() != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Verify.verify(mainClassFinderResult.getErrorType() != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  }, {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 125,
      "startColumnNumber" : 12,
      "endLineNumber" : 125,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 48
      },
      "nodeContext" : "mainClassFinderResult.getErrorType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 48
      },
      "nodeContext" : "mainClassFinderResult.getErrorType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  }, {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 137,
      "startColumnNumber" : 44,
      "endLineNumber" : 137,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 137,
        "startColumnNumber" : 44,
        "endLineNumber" : 137,
        "endColumnNumber" : 87
      },
      "nodeContext" : "mainClassFinderResult.getFoundMainClasses()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 137,
        "startColumnNumber" : 26,
        "endLineNumber" : 137,
        "endColumnNumber" : 88
      },
      "nodeContext" : "String.join(\", \",mainClassFinderResult.getFoundMainClasses())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 137,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 89
      },
      "nodeContext" : "projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 72
      },
      "nodeContext" : "projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 133,
        "startColumnNumber" : 14,
        "endLineNumber" : 138,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 74
      },
      "nodeContext" : "throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 137,
        "startColumnNumber" : 26,
        "endLineNumber" : 137,
        "endColumnNumber" : 88
      },
      "nodeContext" : "String.join(\", \",mainClassFinderResult.getFoundMainClasses())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  }, {
    "nodeContext" : "mainClassFinderResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 145,
      "startColumnNumber" : 12,
      "endLineNumber" : 145,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 49
      },
      "nodeContext" : "mainClassFinderResult.getErrorCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 141,
        "startColumnNumber" : 14,
        "endLineNumber" : 145,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 51
      },
      "nodeContext" : "throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 106,
        "startColumnNumber" : 41,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1909,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String findMainClassInClassFiles(ProjectProperties projectProperties) throws MainClassInferenceException {\n  projectProperties.getLogger().debug(\"Could not find a valid main class specified in \" + projectProperties.getJarPluginName() + \"; attempting to infer main class.\");\n  ImmutableList<Path> classesSourceFiles=projectProperties.getJavaLayerConfigurations().getClassesLayerEntry().getSourceFiles();\n  MainClassFinder.Result mainClassFinderResult=new MainClassFinder(classesSourceFiles,projectProperties.getLogger()).find();\n  if (mainClassFinderResult.isSuccess()) {\n    return mainClassFinderResult.getFoundMainClass();\n  }\n  Verify.verify(mainClassFinderResult.getErrorType() != null);\nswitch (mainClassFinderResult.getErrorType()) {\ncase MAIN_CLASS_NOT_FOUND:    throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Main class was not found\").forMainClassNotFound(projectProperties.getPluginName()));\ncase MULTIPLE_MAIN_CLASSES:  throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Multiple valid main classes were found: \" + String.join(\", \",mainClassFinderResult.getFoundMainClasses())).forMainClassNotFound(projectProperties.getPluginName()));\ncase IO_EXCEPTION:throw new MainClassInferenceException(projectProperties.getMainClassHelpfulSuggestions(\"Failed to get main class\").forMainClassNotFound(projectProperties.getPluginName()),mainClassFinderResult.getErrorCause());\ndefault:throw new IllegalStateException(\"Cannot reach here\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 49
      },
      "nodeContext" : "mainClassFinderResult.getErrorCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.frontend.MainClassFinder.Result"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 120,
    "startColumnNumber" : 8,
    "endLineNumber" : 120,
    "endColumnNumber" : 29
  }, {
    "charLength" : 21,
    "startLineNumber" : 121,
    "startColumnNumber" : 13,
    "endLineNumber" : 121,
    "endColumnNumber" : 34
  }, {
    "charLength" : 21,
    "startLineNumber" : 124,
    "startColumnNumber" : 18,
    "endLineNumber" : 124,
    "endColumnNumber" : 39
  }, {
    "charLength" : 21,
    "startLineNumber" : 125,
    "startColumnNumber" : 12,
    "endLineNumber" : 125,
    "endColumnNumber" : 33
  }, {
    "charLength" : 21,
    "startLineNumber" : 137,
    "startColumnNumber" : 44,
    "endLineNumber" : 137,
    "endColumnNumber" : 65
  }, {
    "charLength" : 21,
    "startLineNumber" : 145,
    "startColumnNumber" : 12,
    "endLineNumber" : 145,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}