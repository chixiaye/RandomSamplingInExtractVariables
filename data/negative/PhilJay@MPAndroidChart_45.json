{
  "id" : 45,
  "expression" : "j",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "58ad281d635c4d8d9aa79f3c7a83b82a66cd8216",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/renderer/BarChartRenderer.java",
  "occurrences" : 15,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 221,
      "startColumnNumber" : 36,
      "endLineNumber" : 221,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 221,
        "endColumnNumber" : 82
      },
      "nodeContext" : "j < valuePoints.length * mAnimator.getPhaseX()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 221,
        "endColumnNumber" : 82
      },
      "nodeContext" : "j < valuePoints.length * mAnimator.getPhaseX()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 223,
      "startColumnNumber" : 74,
      "endLineNumber" : 223,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 223,
        "startColumnNumber" : 62,
        "endLineNumber" : 223,
        "endColumnNumber" : 76
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 223,
        "startColumnNumber" : 29,
        "endLineNumber" : 223,
        "endColumnNumber" : 77
      },
      "nodeContext" : "mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 223,
        "startColumnNumber" : 24,
        "endLineNumber" : 224,
        "endColumnNumber" : 34
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsRight(valuePoints[j])) break;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 226,
      "startColumnNumber" : 70,
      "endLineNumber" : 226,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 226,
        "startColumnNumber" : 70,
        "endLineNumber" : 226,
        "endColumnNumber" : 75
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 226,
        "startColumnNumber" : 58,
        "endLineNumber" : 226,
        "endColumnNumber" : 76
      },
      "nodeContext" : "valuePoints[j + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 226,
        "startColumnNumber" : 29,
        "endLineNumber" : 226,
        "endColumnNumber" : 77
      },
      "nodeContext" : "mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 226,
        "startColumnNumber" : 28,
        "endLineNumber" : 226,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 226,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 226,
        "startColumnNumber" : 24,
        "endLineNumber" : 228,
        "endColumnNumber" : 37
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 226,
        "startColumnNumber" : 28,
        "endLineNumber" : 226,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 227,
      "startColumnNumber" : 80,
      "endLineNumber" : 227,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 227,
        "startColumnNumber" : 68,
        "endLineNumber" : 227,
        "endColumnNumber" : 82
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 227,
        "startColumnNumber" : 36,
        "endLineNumber" : 227,
        "endColumnNumber" : 83
      },
      "nodeContext" : "mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 227,
        "startColumnNumber" : 35,
        "endLineNumber" : 227,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 226,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 226,
        "startColumnNumber" : 24,
        "endLineNumber" : 228,
        "endColumnNumber" : 37
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 227,
        "startColumnNumber" : 35,
        "endLineNumber" : 227,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 230,
      "startColumnNumber" : 48,
      "endLineNumber" : 230,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 230,
        "startColumnNumber" : 48,
        "endLineNumber" : 230,
        "endColumnNumber" : 53
      },
      "nodeContext" : "j / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 230,
        "startColumnNumber" : 36,
        "endLineNumber" : 230,
        "endColumnNumber" : 54
      },
      "nodeContext" : "entries.get(j / 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 230,
        "startColumnNumber" : 36,
        "endLineNumber" : 230,
        "endColumnNumber" : 63
      },
      "nodeContext" : "entries.get(j / 2).getVal()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 230,
        "startColumnNumber" : 30,
        "endLineNumber" : 230,
        "endColumnNumber" : 63
      },
      "nodeContext" : "val=entries.get(j / 2).getVal()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 230,
        "startColumnNumber" : 24,
        "endLineNumber" : 230,
        "endColumnNumber" : 64
      },
      "nodeContext" : "float val=entries.get(j / 2).getVal();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 230,
        "startColumnNumber" : 24,
        "endLineNumber" : 230,
        "endColumnNumber" : 64
      },
      "nodeContext" : "float val=entries.get(j / 2).getVal();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 232,
      "startColumnNumber" : 54,
      "endLineNumber" : 232,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 232,
        "startColumnNumber" : 42,
        "endLineNumber" : 232,
        "endColumnNumber" : 56
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 232,
        "startColumnNumber" : 24,
        "endLineNumber" : 233,
        "endColumnNumber" : 88
      },
      "nodeContext" : "drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 232,
        "startColumnNumber" : 24,
        "endLineNumber" : 233,
        "endColumnNumber" : 89
      },
      "nodeContext" : "drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 232,
        "startColumnNumber" : 42,
        "endLineNumber" : 232,
        "endColumnNumber" : 56
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 233,
      "startColumnNumber" : 44,
      "endLineNumber" : 233,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 233,
        "startColumnNumber" : 44,
        "endLineNumber" : 233,
        "endColumnNumber" : 49
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 233,
        "startColumnNumber" : 32,
        "endLineNumber" : 233,
        "endColumnNumber" : 50
      },
      "nodeContext" : "valuePoints[j + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 233,
        "startColumnNumber" : 32,
        "endLineNumber" : 233,
        "endColumnNumber" : 87
      },
      "nodeContext" : "valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 232,
        "startColumnNumber" : 24,
        "endLineNumber" : 233,
        "endColumnNumber" : 88
      },
      "nodeContext" : "drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 232,
        "startColumnNumber" : 24,
        "endLineNumber" : 233,
        "endColumnNumber" : 89
      },
      "nodeContext" : "drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 221,
        "startColumnNumber" : 92,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  float val=entries.get(j / 2).getVal();\n  drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 219,
        "startColumnNumber" : 64,
        "endLineNumber" : 237,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 233,
        "startColumnNumber" : 32,
        "endLineNumber" : 233,
        "endColumnNumber" : 87
      },
      "nodeContext" : "valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 239,
      "startColumnNumber" : 36,
      "endLineNumber" : 239,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 239,
        "startColumnNumber" : 36,
        "endLineNumber" : 239,
        "endColumnNumber" : 88
      },
      "nodeContext" : "j < (valuePoints.length - 1) * mAnimator.getPhaseX()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 239,
        "startColumnNumber" : 36,
        "endLineNumber" : 239,
        "endColumnNumber" : 88
      },
      "nodeContext" : "j < (valuePoints.length - 1) * mAnimator.getPhaseX()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 241,
      "startColumnNumber" : 74,
      "endLineNumber" : 241,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 241,
        "startColumnNumber" : 62,
        "endLineNumber" : 241,
        "endColumnNumber" : 76
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 241,
        "startColumnNumber" : 29,
        "endLineNumber" : 241,
        "endColumnNumber" : 77
      },
      "nodeContext" : "mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 241,
        "startColumnNumber" : 28,
        "endLineNumber" : 241,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 241,
        "startColumnNumber" : 24,
        "endLineNumber" : 242,
        "endColumnNumber" : 34
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsRight(valuePoints[j])) break;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 241,
        "startColumnNumber" : 28,
        "endLineNumber" : 241,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsRight(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 244,
      "startColumnNumber" : 70,
      "endLineNumber" : 244,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 244,
        "startColumnNumber" : 70,
        "endLineNumber" : 244,
        "endColumnNumber" : 75
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 244,
        "startColumnNumber" : 58,
        "endLineNumber" : 244,
        "endColumnNumber" : 76
      },
      "nodeContext" : "valuePoints[j + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 244,
        "startColumnNumber" : 29,
        "endLineNumber" : 244,
        "endColumnNumber" : 77
      },
      "nodeContext" : "mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 244,
        "startColumnNumber" : 28,
        "endLineNumber" : 244,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 244,
        "startColumnNumber" : 28,
        "endLineNumber" : 245,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 244,
        "startColumnNumber" : 24,
        "endLineNumber" : 246,
        "endColumnNumber" : 37
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 244,
        "startColumnNumber" : 28,
        "endLineNumber" : 244,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 245,
      "startColumnNumber" : 80,
      "endLineNumber" : 245,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 245,
        "startColumnNumber" : 68,
        "endLineNumber" : 245,
        "endColumnNumber" : 82
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 245,
        "startColumnNumber" : 36,
        "endLineNumber" : 245,
        "endColumnNumber" : 83
      },
      "nodeContext" : "mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 245,
        "startColumnNumber" : 35,
        "endLineNumber" : 245,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 244,
        "startColumnNumber" : 28,
        "endLineNumber" : 245,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 244,
        "startColumnNumber" : 24,
        "endLineNumber" : 246,
        "endColumnNumber" : 37
      },
      "nodeContext" : "if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j])) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 245,
        "startColumnNumber" : 35,
        "endLineNumber" : 245,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!mViewPortHandler.isInBoundsLeft(valuePoints[j])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 248,
      "startColumnNumber" : 49,
      "endLineNumber" : 248,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 248,
        "startColumnNumber" : 49,
        "endLineNumber" : 248,
        "endColumnNumber" : 54
      },
      "nodeContext" : "j / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 248,
        "startColumnNumber" : 37,
        "endLineNumber" : 248,
        "endColumnNumber" : 55
      },
      "nodeContext" : "entries.get(j / 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 248,
        "startColumnNumber" : 33,
        "endLineNumber" : 248,
        "endColumnNumber" : 55
      },
      "nodeContext" : "e=entries.get(j / 2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 248,
        "startColumnNumber" : 24,
        "endLineNumber" : 248,
        "endColumnNumber" : 56
      },
      "nodeContext" : "BarEntry e=entries.get(j / 2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 248,
        "startColumnNumber" : 24,
        "endLineNumber" : 248,
        "endColumnNumber" : 56
      },
      "nodeContext" : "BarEntry e=entries.get(j / 2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 257,
      "startColumnNumber" : 65,
      "endLineNumber" : 257,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 257,
        "startColumnNumber" : 53,
        "endLineNumber" : 257,
        "endColumnNumber" : 67
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 257,
        "startColumnNumber" : 28,
        "endLineNumber" : 258,
        "endColumnNumber" : 99
      },
      "nodeContext" : "drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 257,
        "startColumnNumber" : 28,
        "endLineNumber" : 258,
        "endColumnNumber" : 100
      },
      "nodeContext" : "drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 255,
        "startColumnNumber" : 42,
        "endLineNumber" : 260,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 257,
        "startColumnNumber" : 53,
        "endLineNumber" : 257,
        "endColumnNumber" : 67
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 258,
      "startColumnNumber" : 48,
      "endLineNumber" : 258,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 258,
        "startColumnNumber" : 48,
        "endLineNumber" : 258,
        "endColumnNumber" : 53
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 258,
        "startColumnNumber" : 36,
        "endLineNumber" : 258,
        "endColumnNumber" : 54
      },
      "nodeContext" : "valuePoints[j + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 258,
        "startColumnNumber" : 36,
        "endLineNumber" : 258,
        "endColumnNumber" : 98
      },
      "nodeContext" : "valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 257,
        "startColumnNumber" : 28,
        "endLineNumber" : 258,
        "endColumnNumber" : 99
      },
      "nodeContext" : "drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 257,
        "startColumnNumber" : 28,
        "endLineNumber" : 258,
        "endColumnNumber" : 100
      },
      "nodeContext" : "drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 255,
        "startColumnNumber" : 42,
        "endLineNumber" : 260,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 258,
        "startColumnNumber" : 36,
        "endLineNumber" : 258,
        "endColumnNumber" : 98
      },
      "nodeContext" : "valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 277,
      "startColumnNumber" : 70,
      "endLineNumber" : 277,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 277,
        "startColumnNumber" : 58,
        "endLineNumber" : 277,
        "endColumnNumber" : 72
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 93
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 277,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 94
      },
      "nodeContext" : "drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 275,
        "startColumnNumber" : 76,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 275,
        "startColumnNumber" : 28,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (int k=0; k < transformed.length; k+=2) {\n  drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 260,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 281,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (vals == null) {\n  drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n}\n else {\n  float[] transformed=new float[vals.length * 2];\n  int cnt=0;\n  float add=e.getVal();\n  for (int k=0; k < transformed.length; k+=2) {\n    add-=vals[cnt];\n    transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n    cnt++;\n  }\n  trans.pointValuesToPixel(transformed);\n  for (int k=0; k < transformed.length; k+=2) {\n    drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1749,
        "startLineNumber" : 239,
        "startColumnNumber" : 98,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))   continue;\n  BarEntry e=entries.get(j / 2);\n  float[] vals=e.getVals();\n  if (vals == null) {\n    drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n  }\n else {\n    float[] transformed=new float[vals.length * 2];\n    int cnt=0;\n    float add=e.getVal();\n    for (int k=0; k < transformed.length; k+=2) {\n      add-=vals[cnt];\n      transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n      cnt++;\n    }\n    trans.pointValuesToPixel(transformed);\n    for (int k=0; k < transformed.length; k+=2) {\n      drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 219,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!mChart.isDrawValuesForWholeStackEnabled()) {\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    float val=entries.get(j / 2).getVal();\n    drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n  }\n}\n else {\n  for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))     continue;\n    BarEntry e=entries.get(j / 2);\n    float[] vals=e.getVals();\n    if (vals == null) {\n      drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n    }\n else {\n      float[] transformed=new float[vals.length * 2];\n      int cnt=0;\n      float add=e.getVal();\n      for (int k=0; k < transformed.length; k+=2) {\n        add-=vals[cnt];\n        transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n        cnt++;\n      }\n      trans.pointValuesToPixel(transformed);\n      for (int k=0; k < transformed.length; k+=2) {\n        drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 305,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3233,
        "startLineNumber" : 203,
        "startColumnNumber" : 76,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3297,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n  BarDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  ArrayList<BarEntry> entries=dataSet.getYVals();\n  float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n  if (!mChart.isDrawValuesForWholeStackEnabled()) {\n    for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      float val=entries.get(j / 2).getVal();\n      drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n    }\n  }\n else {\n    for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n      if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))       break;\n      if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))       continue;\n      BarEntry e=entries.get(j / 2);\n      float[] vals=e.getVals();\n      if (vals == null) {\n        drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n      }\n else {\n        float[] transformed=new float[vals.length * 2];\n        int cnt=0;\n        float add=e.getVal();\n        for (int k=0; k < transformed.length; k+=2) {\n          add-=vals[cnt];\n          transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n          cnt++;\n        }\n        trans.pointValuesToPixel(transformed);\n        for (int k=0; k < transformed.length; k+=2) {\n          drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 375,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3959,
        "startLineNumber" : 187,
        "startColumnNumber" : 48,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4076,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n  ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n  float posOffset=0f;\n  float negOffset=0f;\n  boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n  posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n  negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n  for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n    BarDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n    ArrayList<BarEntry> entries=dataSet.getYVals();\n    float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n    if (!mChart.isDrawValuesForWholeStackEnabled()) {\n      for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        float val=entries.get(j / 2).getVal();\n        drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n      }\n    }\n else {\n      for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n        if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))         break;\n        if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))         continue;\n        BarEntry e=entries.get(j / 2);\n        float[] vals=e.getVals();\n        if (vals == null) {\n          drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n        }\n else {\n          float[] transformed=new float[vals.length * 2];\n          int cnt=0;\n          float add=e.getVal();\n          for (int k=0; k < transformed.length; k+=2) {\n            add-=vals[cnt];\n            transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n            cnt++;\n          }\n          trans.pointValuesToPixel(transformed);\n          for (int k=0; k < transformed.length; k+=2) {\n            drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4123,
        "startLineNumber" : 184,
        "startColumnNumber" : 37,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 457,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4170,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  if (mChart.getBarData().getYValCount() < mChart.getMaxVisibleCount() * mViewPortHandler.getScaleX()) {\n    ArrayList<BarDataSet> dataSets=mChart.getBarData().getDataSets();\n    float posOffset=0f;\n    float negOffset=0f;\n    boolean drawValueAboveBar=mChart.isDrawValueAboveBarEnabled();\n    posOffset=(drawValueAboveBar ? -Utils.convertDpToPixel(5) : Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f);\n    negOffset=(drawValueAboveBar ? Utils.calcTextHeight(mValuePaint,\"8\") * 1.5f : -Utils.convertDpToPixel(5));\n    for (int i=0; i < mChart.getBarData().getDataSetCount(); i++) {\n      BarDataSet dataSet=dataSets.get(i);\n      if (!dataSet.isDrawValuesEnabled())       continue;\n      Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n      ArrayList<BarEntry> entries=dataSet.getYVals();\n      float[] valuePoints=trans.generateTransformedValuesBarChart(entries,i,mChart.getBarData(),mAnimator.getPhaseY());\n      if (!mChart.isDrawValuesForWholeStackEnabled()) {\n        for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          float val=entries.get(j / 2).getVal();\n          drawValue(c,val,valuePoints[j],valuePoints[j + 1] + (val >= 0 ? posOffset : negOffset));\n        }\n      }\n else {\n        for (int j=0; j < (valuePoints.length - 1) * mAnimator.getPhaseX(); j+=2) {\n          if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))           break;\n          if (!mViewPortHandler.isInBoundsY(valuePoints[j + 1]) || !mViewPortHandler.isInBoundsLeft(valuePoints[j]))           continue;\n          BarEntry e=entries.get(j / 2);\n          float[] vals=e.getVals();\n          if (vals == null) {\n            drawValue(c,e.getVal(),valuePoints[j],valuePoints[j + 1] + (e.getVal() >= 0 ? posOffset : negOffset));\n          }\n else {\n            float[] transformed=new float[vals.length * 2];\n            int cnt=0;\n            float add=e.getVal();\n            for (int k=0; k < transformed.length; k+=2) {\n              add-=vals[cnt];\n              transformed[k + 1]=(vals[cnt] + add) * mAnimator.getPhaseY();\n              cnt++;\n            }\n            trans.pointValuesToPixel(transformed);\n            for (int k=0; k < transformed.length; k+=2) {\n              drawValue(c,vals[k / 2],valuePoints[j],transformed[k + 1] + (vals[k / 2] >= 0 ? posOffset : negOffset));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 467,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 277,
        "startColumnNumber" : 58,
        "endLineNumber" : 277,
        "endColumnNumber" : 72
      },
      "nodeContext" : "valuePoints[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 221,
    "startColumnNumber" : 36,
    "endLineNumber" : 221,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 223,
    "startColumnNumber" : 74,
    "endLineNumber" : 223,
    "endColumnNumber" : 75
  }, {
    "charLength" : 1,
    "startLineNumber" : 226,
    "startColumnNumber" : 70,
    "endLineNumber" : 226,
    "endColumnNumber" : 71
  }, {
    "charLength" : 1,
    "startLineNumber" : 227,
    "startColumnNumber" : 80,
    "endLineNumber" : 227,
    "endColumnNumber" : 81
  }, {
    "charLength" : 1,
    "startLineNumber" : 230,
    "startColumnNumber" : 48,
    "endLineNumber" : 230,
    "endColumnNumber" : 49
  }, {
    "charLength" : 1,
    "startLineNumber" : 232,
    "startColumnNumber" : 54,
    "endLineNumber" : 232,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 233,
    "startColumnNumber" : 44,
    "endLineNumber" : 233,
    "endColumnNumber" : 45
  }, {
    "charLength" : 1,
    "startLineNumber" : 239,
    "startColumnNumber" : 36,
    "endLineNumber" : 239,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 241,
    "startColumnNumber" : 74,
    "endLineNumber" : 241,
    "endColumnNumber" : 75
  }, {
    "charLength" : 1,
    "startLineNumber" : 244,
    "startColumnNumber" : 70,
    "endLineNumber" : 244,
    "endColumnNumber" : 71
  }, {
    "charLength" : 1,
    "startLineNumber" : 245,
    "startColumnNumber" : 80,
    "endLineNumber" : 245,
    "endColumnNumber" : 81
  }, {
    "charLength" : 1,
    "startLineNumber" : 248,
    "startColumnNumber" : 49,
    "endLineNumber" : 248,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 257,
    "startColumnNumber" : 65,
    "endLineNumber" : 257,
    "endColumnNumber" : 66
  }, {
    "charLength" : 1,
    "startLineNumber" : 258,
    "startColumnNumber" : 48,
    "endLineNumber" : 258,
    "endColumnNumber" : 49
  }, {
    "charLength" : 1,
    "startLineNumber" : 277,
    "startColumnNumber" : 70,
    "endLineNumber" : 277,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 6
  } ]
}