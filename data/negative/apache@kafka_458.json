{
  "id" : 458,
  "expression" : "value == UNCLEAN.value",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/ElectionType.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value == UNCLEAN.value",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 43,
      "startColumnNumber" : 19,
      "endLineNumber" : 43,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 43,
        "startColumnNumber" : 15,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value == UNCLEAN.value) {\n  return UNCLEAN;\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Value %s must be one of %s\",value,Arrays.asList(ElectionType.values())));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value == PREFERRED.value) {\n  return PREFERRED;\n}\n else if (value == UNCLEAN.value) {\n  return UNCLEAN;\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Value %s must be one of %s\",value,Arrays.asList(ElectionType.values())));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 40,
        "startColumnNumber" : 51,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (value == PREFERRED.value) {\n    return PREFERRED;\n  }\n else   if (value == UNCLEAN.value) {\n    return UNCLEAN;\n  }\n else {\n    throw new IllegalArgumentException(String.format(\"Value %s must be one of %s\",value,Arrays.asList(ElectionType.values())));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static ElectionType valueOf(byte value){\n  if (value == PREFERRED.value) {\n    return PREFERRED;\n  }\n else   if (value == UNCLEAN.value) {\n    return UNCLEAN;\n  }\n else {\n    throw new IllegalArgumentException(String.format(\"Value %s must be one of %s\",value,Arrays.asList(ElectionType.values())));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 43,
        "startColumnNumber" : 15,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value == UNCLEAN.value) {\n  return UNCLEAN;\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Value %s must be one of %s\",value,Arrays.asList(ElectionType.values())));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 43,
    "startColumnNumber" : 19,
    "endLineNumber" : 43,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}