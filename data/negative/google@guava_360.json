{
  "id" : 360,
  "expression" : "future.set(\"x\")",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/SettableFutureTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "future.set(\"x\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 128,
      "startColumnNumber" : 16,
      "endLineNumber" : 128,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertFalse(future.set(\"x\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(future.set(\"x\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 123,
        "startColumnNumber" : 47,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SettableFuture<String> future=SettableFuture.create();\n  SettableFuture<String> nested=SettableFuture.create();\n  assertTrue(future.setFuture(nested));\n  assertFalse(future.set(\"x\"));\n  assertFalse(future.setException(new Exception(\"bar\")));\n  assertFalse(future.setFuture(SettableFuture.<String>create()));\n  assertFalse(future.isDone());\n  assertFalse(future.isCancelled());\n  try {\n    future.get(0,TimeUnit.MILLISECONDS);\n    fail(\"Expected TimeoutException\");\n  }\n catch (  TimeoutException expected) {\n  }\n  nested.set(\"foo\");\n  assertTrue(future.isDone());\n  assertFalse(future.isCancelled());\n  assertEquals(\"foo\",future.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSetFuture() throws Exception {\n  SettableFuture<String> future=SettableFuture.create();\n  SettableFuture<String> nested=SettableFuture.create();\n  assertTrue(future.setFuture(nested));\n  assertFalse(future.set(\"x\"));\n  assertFalse(future.setException(new Exception(\"bar\")));\n  assertFalse(future.setFuture(SettableFuture.<String>create()));\n  assertFalse(future.isDone());\n  assertFalse(future.isCancelled());\n  try {\n    future.get(0,TimeUnit.MILLISECONDS);\n    fail(\"Expected TimeoutException\");\n  }\n catch (  TimeoutException expected) {\n  }\n  nested.set(\"foo\");\n  assertTrue(future.isDone());\n  assertFalse(future.isCancelled());\n  assertEquals(\"foo\",future.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(future.set(\"x\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 128,
    "startColumnNumber" : 16,
    "endLineNumber" : 128,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}