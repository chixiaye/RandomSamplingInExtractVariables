{
  "id" : 109,
  "expression" : "startTimeInitialized",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/main/java/io/netty/util/HashedWheelTimer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "startTimeInitialized",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 344,
      "startColumnNumber" : 16,
      "endLineNumber" : 344,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 344,
        "startColumnNumber" : 16,
        "endLineNumber" : 344,
        "endColumnNumber" : 44
      },
      "nodeContext" : "startTimeInitialized.await()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 344,
        "startColumnNumber" : 16,
        "endLineNumber" : 344,
        "endColumnNumber" : 45
      },
      "nodeContext" : "startTimeInitialized.await();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 343,
        "startColumnNumber" : 16,
        "endLineNumber" : 345,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  startTimeInitialized.await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 343,
        "startColumnNumber" : 12,
        "endLineNumber" : 347,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  startTimeInitialized.await();\n}\n catch (InterruptedException ignore) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 342,
        "startColumnNumber" : 31,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    startTimeInitialized.await();\n  }\n catch (  InterruptedException ignore) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 342,
        "startColumnNumber" : 8,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (startTime == 0) {\n  try {\n    startTimeInitialized.await();\n  }\n catch (  InterruptedException ignore) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 326,
        "startColumnNumber" : 24,
        "endLineNumber" : 349,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (WORKER_STATE_UPDATER.get(this)) {\ncase WORKER_STATE_INIT:    if (WORKER_STATE_UPDATER.compareAndSet(this,WORKER_STATE_INIT,WORKER_STATE_STARTED)) {\n      workerThread.start();\n    }\n  break;\ncase WORKER_STATE_STARTED:break;\ncase WORKER_STATE_SHUTDOWN:throw new IllegalStateException(\"cannot be started once stopped\");\ndefault:throw new Error(\"Invalid WorkerState\");\n}\nwhile (startTime == 0) {\ntry {\nstartTimeInitialized.await();\n}\n catch (InterruptedException ignore) {\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1207,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 349,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Starts the background thread explicitly.  The background thread will start automatically on demand even if you did not call this method.\n * @throws IllegalStateException if this timer has been{@linkplain #stop() stopped} already\n */\npublic void start(){\nswitch (WORKER_STATE_UPDATER.get(this)) {\ncase WORKER_STATE_INIT:    if (WORKER_STATE_UPDATER.compareAndSet(this,WORKER_STATE_INIT,WORKER_STATE_STARTED)) {\n      workerThread.start();\n    }\n  break;\ncase WORKER_STATE_STARTED:break;\ncase WORKER_STATE_SHUTDOWN:throw new IllegalStateException(\"cannot be started once stopped\");\ndefault:throw new Error(\"Invalid WorkerState\");\n}\nwhile (startTime == 0) {\ntry {\nstartTimeInitialized.await();\n}\n catch (InterruptedException ignore) {\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 344,
        "startColumnNumber" : 16,
        "endLineNumber" : 344,
        "endColumnNumber" : 45
      },
      "nodeContext" : "startTimeInitialized.await();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CountDownLatch"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 344,
    "startColumnNumber" : 16,
    "endLineNumber" : 344,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}