{
  "id" : 105,
  "expression" : "Color.GREEN",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/specification/src/test/java/com/iluwatar/specification/selector/ColorSelectorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Color.GREEN",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 48,
      "startColumnNumber" : 46,
      "endLineNumber" : 48,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 58
      },
      "nodeContext" : "when(greenCreature.getColor()).thenReturn(Color.GREEN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(greenCreature.getColor()).thenReturn(Color.GREEN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 46,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var greenCreature=mock(Creature.class);\n  when(greenCreature.getColor()).thenReturn(Color.GREEN);\n  final var redCreature=mock(Creature.class);\n  when(redCreature.getColor()).thenReturn(Color.RED);\n  final var greenSelector=new ColorSelector(Color.GREEN);\n  assertTrue(greenSelector.test(greenCreature));\n  assertFalse(greenSelector.test(redCreature));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if the color selector gives the correct results\n */\n@Test public void testColor(){\n  final var greenCreature=mock(Creature.class);\n  when(greenCreature.getColor()).thenReturn(Color.GREEN);\n  final var redCreature=mock(Creature.class);\n  when(redCreature.getColor()).thenReturn(Color.RED);\n  final var greenSelector=new ColorSelector(Color.GREEN);\n  assertTrue(greenSelector.test(greenCreature));\n  assertFalse(greenSelector.test(redCreature));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 59
      },
      "nodeContext" : "when(greenCreature.getColor()).thenReturn(Color.GREEN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.iluwatar.specification.property.Color"
  }, {
    "nodeContext" : "Color.GREEN",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 53,
      "startColumnNumber" : 48,
      "endLineNumber" : 53,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 53,
        "startColumnNumber" : 30,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ColorSelector(Color.GREEN)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 53,
        "startColumnNumber" : 14,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "greenSelector=new ColorSelector(Color.GREEN)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final var greenSelector=new ColorSelector(Color.GREEN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 46,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var greenCreature=mock(Creature.class);\n  when(greenCreature.getColor()).thenReturn(Color.GREEN);\n  final var redCreature=mock(Creature.class);\n  when(redCreature.getColor()).thenReturn(Color.RED);\n  final var greenSelector=new ColorSelector(Color.GREEN);\n  assertTrue(greenSelector.test(greenCreature));\n  assertFalse(greenSelector.test(redCreature));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if the color selector gives the correct results\n */\n@Test public void testColor(){\n  final var greenCreature=mock(Creature.class);\n  when(greenCreature.getColor()).thenReturn(Color.GREEN);\n  final var redCreature=mock(Creature.class);\n  when(redCreature.getColor()).thenReturn(Color.RED);\n  final var greenSelector=new ColorSelector(Color.GREEN);\n  assertTrue(greenSelector.test(greenCreature));\n  assertFalse(greenSelector.test(redCreature));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "final var greenSelector=new ColorSelector(Color.GREEN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.iluwatar.specification.property.Color"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 48,
    "startColumnNumber" : 46,
    "endLineNumber" : 48,
    "endColumnNumber" : 57
  }, {
    "charLength" : 11,
    "startLineNumber" : 53,
    "startColumnNumber" : 48,
    "endLineNumber" : 53,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}