{
  "id" : 473,
  "expression" : "1",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/io/BOMInputStream.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 90,
      "startColumnNumber" : 38,
      "endLineNumber" : 90,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 90,
        "startColumnNumber" : 34,
        "endLineNumber" : 90,
        "endColumnNumber" : 40
      },
      "nodeContext" : "bom[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 90,
        "startColumnNumber" : 34,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "bom[1] == (byte)0x00",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 90,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(bom[1] == (byte)0x00)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 110
      },
      "nodeContext" : "(bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n  charset=\"UTF-32BE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 81,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read-ahead four bytes and check for BOM marks. <br> Extra bytes are unread back to the stream, only BOM bytes are skipped.\n * @throws IOException 读取引起的异常\n */\nprotected void init() throws IOException {\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 110
      },
      "nodeContext" : "(bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 93,
      "startColumnNumber" : 45,
      "endLineNumber" : 93,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 93,
        "startColumnNumber" : 41,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "bom[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 93,
        "startColumnNumber" : 41,
        "endLineNumber" : 93,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bom[1] == (byte)0xFE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 93,
        "startColumnNumber" : 40,
        "endLineNumber" : 93,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[1] == (byte)0xFE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 93,
        "startColumnNumber" : 13,
        "endLineNumber" : 93,
        "endColumnNumber" : 117
      },
      "nodeContext" : "(bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 93,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n  charset=\"UTF-32BE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 81,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read-ahead four bytes and check for BOM marks. <br> Extra bytes are unread back to the stream, only BOM bytes are skipped.\n * @throws IOException 读取引起的异常\n */\nprotected void init() throws IOException {\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 93,
        "startColumnNumber" : 13,
        "endLineNumber" : 93,
        "endColumnNumber" : 117
      },
      "nodeContext" : "(bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 96,
      "startColumnNumber" : 45,
      "endLineNumber" : 96,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 96,
        "startColumnNumber" : 41,
        "endLineNumber" : 96,
        "endColumnNumber" : 47
      },
      "nodeContext" : "bom[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 96,
        "startColumnNumber" : 41,
        "endLineNumber" : 96,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bom[1] == (byte)0xBB",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 96,
        "startColumnNumber" : 40,
        "endLineNumber" : 96,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[1] == (byte)0xBB)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 96,
        "startColumnNumber" : 13,
        "endLineNumber" : 96,
        "endColumnNumber" : 90
      },
      "nodeContext" : "(bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 96,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 93,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n  charset=\"UTF-32BE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 81,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read-ahead four bytes and check for BOM marks. <br> Extra bytes are unread back to the stream, only BOM bytes are skipped.\n * @throws IOException 读取引起的异常\n */\nprotected void init() throws IOException {\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 96,
        "startColumnNumber" : 13,
        "endLineNumber" : 96,
        "endColumnNumber" : 90
      },
      "nodeContext" : "(bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 25,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 99,
      "startColumnNumber" : 45,
      "endLineNumber" : 99,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 99,
        "startColumnNumber" : 41,
        "endLineNumber" : 99,
        "endColumnNumber" : 47
      },
      "nodeContext" : "bom[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 99,
        "startColumnNumber" : 41,
        "endLineNumber" : 99,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bom[1] == (byte)0xFF",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 99,
        "startColumnNumber" : 40,
        "endLineNumber" : 99,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[1] == (byte)0xFF)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 99,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 96,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 93,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n  charset=\"UTF-32BE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 81,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read-ahead four bytes and check for BOM marks. <br> Extra bytes are unread back to the stream, only BOM bytes are skipped.\n * @throws IOException 读取引起的异常\n */\nprotected void init() throws IOException {\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 102,
      "startColumnNumber" : 45,
      "endLineNumber" : 102,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 102,
        "startColumnNumber" : 41,
        "endLineNumber" : 102,
        "endColumnNumber" : 47
      },
      "nodeContext" : "bom[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 102,
        "startColumnNumber" : 41,
        "endLineNumber" : 102,
        "endColumnNumber" : 62
      },
      "nodeContext" : "bom[1] == (byte)0xFE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 102,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[1] == (byte)0xFE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 102,
        "startColumnNumber" : 13,
        "endLineNumber" : 102,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 102,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 99,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 96,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 93,
        "startColumnNumber" : 9,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n  charset=\"UTF-32BE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n  charset=\"UTF-32LE\";\n  unread=n - 4;\n}\n else if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n  charset=\"UTF-8\";\n  unread=n - 3;\n}\n else if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n  charset=\"UTF-16BE\";\n  unread=n - 2;\n}\n else if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n  charset=\"UTF-16LE\";\n  unread=n - 2;\n}\n else {\n  charset=defaultCharset;\n  unread=n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 81,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read-ahead four bytes and check for BOM marks. <br> Extra bytes are unread back to the stream, only BOM bytes are skipped.\n * @throws IOException 读取引起的异常\n */\nprotected void init() throws IOException {\n  if (isInited) {\n    return;\n  }\n  byte[] bom=new byte[BOM_SIZE];\n  int n, unread;\n  n=in.read(bom,0,bom.length);\n  if ((bom[0] == (byte)0x00) && (bom[1] == (byte)0x00) && (bom[2] == (byte)0xFE)&& (bom[3] == (byte)0xFF)) {\n    charset=\"UTF-32BE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE) && (bom[2] == (byte)0x00)&& (bom[3] == (byte)0x00)) {\n    charset=\"UTF-32LE\";\n    unread=n - 4;\n  }\n else   if ((bom[0] == (byte)0xEF) && (bom[1] == (byte)0xBB) && (bom[2] == (byte)0xBF)) {\n    charset=\"UTF-8\";\n    unread=n - 3;\n  }\n else   if ((bom[0] == (byte)0xFE) && (bom[1] == (byte)0xFF)) {\n    charset=\"UTF-16BE\";\n    unread=n - 2;\n  }\n else   if ((bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)) {\n    charset=\"UTF-16LE\";\n    unread=n - 2;\n  }\n else {\n    charset=defaultCharset;\n    unread=n;\n  }\n  if (unread > 0) {\n    in.unread(bom,(n - unread),unread);\n  }\n  isInited=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 102,
        "startColumnNumber" : 13,
        "endLineNumber" : 102,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(bom[0] == (byte)0xFF) && (bom[1] == (byte)0xFE)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 90,
    "startColumnNumber" : 38,
    "endLineNumber" : 90,
    "endColumnNumber" : 39
  }, {
    "charLength" : 1,
    "startLineNumber" : 93,
    "startColumnNumber" : 45,
    "endLineNumber" : 93,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 96,
    "startColumnNumber" : 45,
    "endLineNumber" : 96,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 99,
    "startColumnNumber" : 45,
    "endLineNumber" : 99,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 102,
    "startColumnNumber" : 45,
    "endLineNumber" : 102,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}