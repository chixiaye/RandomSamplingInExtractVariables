{
  "id" : 230,
  "expression" : "\"telnet.service\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/legacy/ChangeTelnetHandlerTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"telnet.service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 56,
      "startColumnNumber" : 39,
      "endLineNumber" : 56,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 14,
        "endLineNumber" : 56,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mockChannel.getAttribute(\"telnet.service\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 57
      },
      "nodeContext" : "given(mockChannel.getAttribute(\"telnet.service\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 127
      },
      "nodeContext" : "given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @BeforeEach public void setUp(){\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"telnet.service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 57,
      "startColumnNumber" : 33,
      "endLineNumber" : 57,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"DemoService\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @BeforeEach public void setUp(){\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"telnet.service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 59,
      "startColumnNumber" : 33,
      "endLineNumber" : 59,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 109
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 110
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @BeforeEach public void setUp(){\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 110
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"telnet.service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 61,
      "startColumnNumber" : 33,
      "endLineNumber" : 61,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"demo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"demo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @BeforeEach public void setUp(){\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mockChannel.setAttribute(\"telnet.service\",\"demo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"telnet.service\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 63,
      "startColumnNumber" : 36,
      "endLineNumber" : 63,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 53
      },
      "nodeContext" : "mockChannel.removeAttribute(\"telnet.service\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 54
      },
      "nodeContext" : "mockChannel.removeAttribute(\"telnet.service\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @BeforeEach public void setUp(){\n  mockChannel=mock(Channel.class);\n  mockInvoker=mock(Invoker.class);\n  given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  mockChannel.setAttribute(\"telnet.service\",\"DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n  givenLastCall();\n  mockChannel.setAttribute(\"telnet.service\",\"demo\");\n  givenLastCall();\n  mockChannel.removeAttribute(\"telnet.service\");\n  givenLastCall();\n  given(mockInvoker.getInterface()).willReturn(DemoService.class);\n  given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20884/demo\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 54
      },
      "nodeContext" : "mockChannel.removeAttribute(\"telnet.service\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 56,
    "startColumnNumber" : 39,
    "endLineNumber" : 56,
    "endColumnNumber" : 55
  }, {
    "charLength" : 16,
    "startLineNumber" : 57,
    "startColumnNumber" : 33,
    "endLineNumber" : 57,
    "endColumnNumber" : 49
  }, {
    "charLength" : 16,
    "startLineNumber" : 59,
    "startColumnNumber" : 33,
    "endLineNumber" : 59,
    "endColumnNumber" : 49
  }, {
    "charLength" : 16,
    "startLineNumber" : 61,
    "startColumnNumber" : 33,
    "endLineNumber" : 61,
    "endColumnNumber" : 49
  }, {
    "charLength" : 16,
    "startLineNumber" : 63,
    "startColumnNumber" : 36,
    "endLineNumber" : 63,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}