{
  "id" : 51,
  "expression" : "'r'",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/StringEscape.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'r'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 100,
      "startColumnNumber" : 35,
      "endLineNumber" : 100,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 39
      },
      "nodeContext" : "buf.append('r')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 40
      },
      "nodeContext" : "buf.append('r');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1331,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (c) {\ncase 0:  buf.append('\\\\');\nbuf.append('0');\nbreak;\ncase '\\n':buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 99,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1409,
        "startLineNumber" : 82,
        "startColumnNumber" : 51,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:    buf.append('\\\\');\n  buf.append('0');\nbreak;\ncase '\\n':buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < stringLength; ++i) {\n  char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:    buf.append('\\\\');\n  buf.append('0');\nbreak;\ncase '\\n':buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 119,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1813,
        "startLineNumber" : 75,
        "startColumnNumber" : 62,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder buf=new StringBuilder((int)(escapeStr.length() * 1.1));\n  for (int i=0; i < stringLength; ++i) {\n    char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:      buf.append('\\\\');\n    buf.append('0');\n  break;\ncase '\\n':buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\nparameterAsString=buf.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isEscapeNeededForString(escapeStr,stringLength)) {\n  StringBuilder buf=new StringBuilder((int)(escapeStr.length() * 1.1));\n  for (int i=0; i < stringLength; ++i) {\n    char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:      buf.append('\\\\');\n    buf.append('0');\n  break;\ncase '\\n':buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\nparameterAsString=buf.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 69,
        "startColumnNumber" : 56,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (escapeStr.matches(\"\\'(.+)\\'\")) {\n    escapeStr=escapeStr.substring(1,escapeStr.length() - 1);\n  }\n  String parameterAsString=escapeStr;\n  int stringLength=escapeStr.length();\n  if (isEscapeNeededForString(escapeStr,stringLength)) {\n    StringBuilder buf=new StringBuilder((int)(escapeStr.length() * 1.1));\n    for (int i=0; i < stringLength; ++i) {\n      char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:        buf.append('\\\\');\n      buf.append('0');\n    break;\ncase '\\n':  buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\nparameterAsString=buf.toString();\n}\nreturn \"\\'\" + parameterAsString + \"\\'\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2278,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 转义字符串\n * @param escapeStr\n * @return\n */\npublic static String escapeString(String escapeStr){\n  if (escapeStr.matches(\"\\'(.+)\\'\")) {\n    escapeStr=escapeStr.substring(1,escapeStr.length() - 1);\n  }\n  String parameterAsString=escapeStr;\n  int stringLength=escapeStr.length();\n  if (isEscapeNeededForString(escapeStr,stringLength)) {\n    StringBuilder buf=new StringBuilder((int)(escapeStr.length() * 1.1));\n    for (int i=0; i < stringLength; ++i) {\n      char c=escapeStr.charAt(i);\nswitch (c) {\ncase 0:        buf.append('\\\\');\n      buf.append('0');\n    break;\ncase '\\n':  buf.append('\\\\');\nbuf.append('n');\nbreak;\ncase '\\r':buf.append('\\\\');\nbuf.append('r');\nbreak;\ncase '\\\\':buf.append('\\\\');\nbuf.append('\\\\');\nbreak;\ncase '\\'':buf.append('\\\\');\nbuf.append('\\'');\nbreak;\ncase '\"':buf.append('\\\\');\nbuf.append('\"');\nbreak;\ncase '\\032':buf.append('\\\\');\nbuf.append('Z');\nbreak;\ndefault:buf.append(c);\n}\n}\nparameterAsString=buf.toString();\n}\nreturn \"\\'\" + parameterAsString + \"\\'\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 40
      },
      "nodeContext" : "buf.append('r');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 100,
    "startColumnNumber" : 35,
    "endLineNumber" : 100,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}