{
  "id" : 467,
  "expression" : "new Thread(){\n  @Override public void run(){\n    mock.simpleMethod(\"foo\");\n  }\n}\n",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/concurrentmockito/ThreadsShareAMockTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Thread(){\n  @Override public void run(){\n    mock.simpleMethod(\"foo\");\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 199,
      "startLineNumber" : 29,
      "startColumnNumber" : 20,
      "endLineNumber" : 34,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 16,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 21
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    mock.simpleMethod(\"foo\");\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 22
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    mock.simpleMethod(\"foo\");\n  }\n}\n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 27,
        "startColumnNumber" : 51,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  listeners[i]=new Thread(){\n    @Override public void run(){\n      mock.simpleMethod(\"foo\");\n    }\n  }\n;\n  listeners[i].start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < listeners.length; i++) {\n  listeners[i]=new Thread(){\n    @Override public void run(){\n      mock.simpleMethod(\"foo\");\n    }\n  }\n;\n  listeners[i].start();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 24,
        "startColumnNumber" : 59,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock=mock(IMethods.class);\n  final Thread[] listeners=new Thread[3];\n  for (int i=0; i < listeners.length; i++) {\n    listeners[i]=new Thread(){\n      @Override public void run(){\n        mock.simpleMethod(\"foo\");\n      }\n    }\n;\n    listeners[i].start();\n  }\n  for (  Thread listener : listeners) {\n    listener.join();\n  }\n  verify(mock,times(listeners.length)).simpleMethod(\"foo\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performTest() throws InterruptedException {\n  mock=mock(IMethods.class);\n  final Thread[] listeners=new Thread[3];\n  for (int i=0; i < listeners.length; i++) {\n    listeners[i]=new Thread(){\n      @Override public void run(){\n        mock.simpleMethod(\"foo\");\n      }\n    }\n;\n    listeners[i].start();\n  }\n  for (  Thread listener : listeners) {\n    listener.join();\n  }\n  verify(mock,times(listeners.length)).simpleMethod(\"foo\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 21
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    mock.simpleMethod(\"foo\");\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 6,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 199,
    "startLineNumber" : 29,
    "startColumnNumber" : 20,
    "endLineNumber" : 34,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}