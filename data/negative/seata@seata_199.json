{
  "id" : 199,
  "expression" : "0",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/DataCompareUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 138,
      "startColumnNumber" : 25,
      "endLineNumber" : 138,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 138,
        "startColumnNumber" : 21,
        "endLineNumber" : 138,
        "endColumnNumber" : 26
      },
      "nodeContext" : "j=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 138,
        "startColumnNumber" : 17,
        "endLineNumber" : 138,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int j=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 138,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < row.getFields().size(); j++) {\n  Field field=row.getFields().get(j);\n  if (field.getName().equalsIgnoreCase(primaryKey)) {\n    rowKey=String.valueOf(field.getValue());\n  }\n  colsMap.put(field.getName().trim().toUpperCase(),field);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 134,
        "startColumnNumber" : 32,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,Field> colsMap=new HashMap<>();\n  String rowKey=null;\n  for (int j=0; j < row.getFields().size(); j++) {\n    Field field=row.getFields().get(j);\n    if (field.getName().equalsIgnoreCase(primaryKey)) {\n      rowKey=String.valueOf(field.getValue());\n    }\n    colsMap.put(field.getName().trim().toUpperCase(),field);\n  }\n  rowMap.put(rowKey,colsMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Row row : rowList) {\n  Map<String,Field> colsMap=new HashMap<>();\n  String rowKey=null;\n  for (int j=0; j < row.getFields().size(); j++) {\n    Field field=row.getFields().get(j);\n    if (field.getName().equalsIgnoreCase(primaryKey)) {\n      rowKey=String.valueOf(field.getValue());\n    }\n    colsMap.put(field.getName().trim().toUpperCase(),field);\n  }\n  rowMap.put(rowKey,colsMap);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 131,
        "startColumnNumber" : 102,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Map<String,Field>> rowMap=new HashMap<>();\n  for (  Row row : rowList) {\n    Map<String,Field> colsMap=new HashMap<>();\n    String rowKey=null;\n    for (int j=0; j < row.getFields().size(); j++) {\n      Field field=row.getFields().get(j);\n      if (field.getName().equalsIgnoreCase(primaryKey)) {\n        rowKey=String.valueOf(field.getValue());\n      }\n      colsMap.put(field.getName().trim().toUpperCase(),field);\n    }\n    rowMap.put(rowKey,colsMap);\n  }\n  return rowMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Map<String,Map<String,Field>> rowListToMap(List<Row> rowList,String primaryKey){\n  Map<String,Map<String,Field>> rowMap=new HashMap<>();\n  for (  Row row : rowList) {\n    Map<String,Field> colsMap=new HashMap<>();\n    String rowKey=null;\n    for (int j=0; j < row.getFields().size(); j++) {\n      Field field=row.getFields().get(j);\n      if (field.getName().equalsIgnoreCase(primaryKey)) {\n        rowKey=String.valueOf(field.getValue());\n      }\n      colsMap.put(field.getName().trim().toUpperCase(),field);\n    }\n    rowMap.put(rowKey,colsMap);\n  }\n  return rowMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 138,
        "startColumnNumber" : 17,
        "endLineNumber" : 138,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int j=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 138,
    "startColumnNumber" : 25,
    "endLineNumber" : 138,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}