{
  "id" : 77,
  "expression" : "applications.getClass()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/configurator/parser/model/ConfigItem.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "applications.getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 70,
      "startColumnNumber" : 64,
      "endLineNumber" : 70,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 70,
        "startColumnNumber" : 36,
        "endLineNumber" : 70,
        "endColumnNumber" : 88
      },
      "nodeContext" : "List.class.isAssignableFrom(applications.getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 88
      },
      "nodeContext" : "applications != null && List.class.isAssignableFrom(applications.getClass())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (applications != null && List.class.isAssignableFrom(applications.getClass())) {\n  configItem.setApplications(((List<Object>)applications).stream().map(String::valueOf).collect(Collectors.toList()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 42,
        "startColumnNumber" : 67,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConfigItem configItem=new ConfigItem();\n  configItem.setType((String)map.get(\"type\"));\n  Object enabled=map.get(\"enabled\");\n  if (enabled != null) {\n    configItem.setEnabled(Boolean.parseBoolean(enabled.toString()));\n  }\n  Object addresses=map.get(\"addresses\");\n  if (addresses != null && List.class.isAssignableFrom(addresses.getClass())) {\n    configItem.setAddresses(((List<Object>)addresses).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object providerAddresses=map.get(\"providerAddresses\");\n  if (providerAddresses != null && List.class.isAssignableFrom(providerAddresses.getClass())) {\n    configItem.setProviderAddresses(((List<Object>)providerAddresses).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object services=map.get(\"services\");\n  if (services != null && List.class.isAssignableFrom(services.getClass())) {\n    configItem.setServices(((List<Object>)services).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object applications=map.get(\"applications\");\n  if (applications != null && List.class.isAssignableFrom(applications.getClass())) {\n    configItem.setApplications(((List<Object>)applications).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object parameters=map.get(\"parameters\");\n  if (parameters != null && Map.class.isAssignableFrom(parameters.getClass())) {\n    configItem.setParameters(((Map<String,Object>)parameters).entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())));\n  }\n  configItem.setSide((String)map.get(\"side\"));\n  return configItem;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2026,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public static ConfigItem parseFromMap(Map<String,Object> map){\n  ConfigItem configItem=new ConfigItem();\n  configItem.setType((String)map.get(\"type\"));\n  Object enabled=map.get(\"enabled\");\n  if (enabled != null) {\n    configItem.setEnabled(Boolean.parseBoolean(enabled.toString()));\n  }\n  Object addresses=map.get(\"addresses\");\n  if (addresses != null && List.class.isAssignableFrom(addresses.getClass())) {\n    configItem.setAddresses(((List<Object>)addresses).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object providerAddresses=map.get(\"providerAddresses\");\n  if (providerAddresses != null && List.class.isAssignableFrom(providerAddresses.getClass())) {\n    configItem.setProviderAddresses(((List<Object>)providerAddresses).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object services=map.get(\"services\");\n  if (services != null && List.class.isAssignableFrom(services.getClass())) {\n    configItem.setServices(((List<Object>)services).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object applications=map.get(\"applications\");\n  if (applications != null && List.class.isAssignableFrom(applications.getClass())) {\n    configItem.setApplications(((List<Object>)applications).stream().map(String::valueOf).collect(Collectors.toList()));\n  }\n  Object parameters=map.get(\"parameters\");\n  if (parameters != null && Map.class.isAssignableFrom(parameters.getClass())) {\n    configItem.setParameters(((Map<String,Object>)parameters).entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())));\n  }\n  configItem.setSide((String)map.get(\"side\"));\n  return configItem;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 88
      },
      "nodeContext" : "applications != null && List.class.isAssignableFrom(applications.getClass())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 70,
    "startColumnNumber" : 64,
    "endLineNumber" : 70,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}