{
  "id" : 296,
  "expression" : "3",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/operators/CachedMatchTaskTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 64,
      "endLineNumber" : 87,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testResettableDriver(testTask,MockMatchStub.class,3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testResettableDriver(testTask,MockMatchStub.class,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  testResettableDriver(testTask,MockMatchStub.class,3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  testResettableDriver(testTask,MockMatchStub.class,3);\n}\n catch (Exception e) {\n  e.printStackTrace();\n  Assert.fail(\"Test caused an exception.\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 67,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int keyCnt1=20;\n  int valCnt1=1;\n  int keyCnt2=10;\n  int valCnt2=2;\n  addInput(new UniformRecordGenerator(keyCnt1,valCnt1,false));\n  addInput(new UniformRecordGenerator(keyCnt2,valCnt2,false));\n  addDriverComparator(this.comparator1);\n  addDriverComparator(this.comparator2);\n  getTaskConfig().setDriverPairComparator(RecordPairComparatorFactory.get());\n  setOutput(this.outList);\n  getTaskConfig().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_FIRST_CACHED);\n  getTaskConfig().setRelativeMemoryDriver(1.0f);\n  BuildFirstCachedJoinDriver<Record,Record,Record> testTask=new BuildFirstCachedJoinDriver<Record,Record,Record>();\n  try {\n    testResettableDriver(testTask,MockMatchStub.class,3);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    Assert.fail(\"Test caused an exception.\");\n  }\n  final int expCnt=valCnt1 * valCnt2 * Math.min(keyCnt1,keyCnt2);\n  Assert.assertEquals(\"Wrong result set size.\",expCnt,this.outList.size());\n  this.outList.clear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHash1MatchTask(){\n  int keyCnt1=20;\n  int valCnt1=1;\n  int keyCnt2=10;\n  int valCnt2=2;\n  addInput(new UniformRecordGenerator(keyCnt1,valCnt1,false));\n  addInput(new UniformRecordGenerator(keyCnt2,valCnt2,false));\n  addDriverComparator(this.comparator1);\n  addDriverComparator(this.comparator2);\n  getTaskConfig().setDriverPairComparator(RecordPairComparatorFactory.get());\n  setOutput(this.outList);\n  getTaskConfig().setDriverStrategy(DriverStrategy.HYBRIDHASH_BUILD_FIRST_CACHED);\n  getTaskConfig().setRelativeMemoryDriver(1.0f);\n  BuildFirstCachedJoinDriver<Record,Record,Record> testTask=new BuildFirstCachedJoinDriver<Record,Record,Record>();\n  try {\n    testResettableDriver(testTask,MockMatchStub.class,3);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    Assert.fail(\"Test caused an exception.\");\n  }\n  final int expCnt=valCnt1 * valCnt2 * Math.min(keyCnt1,keyCnt2);\n  Assert.assertEquals(\"Wrong result set size.\",expCnt,this.outList.size());\n  this.outList.clear();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testResettableDriver(testTask,MockMatchStub.class,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 64,
    "endLineNumber" : 87,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}