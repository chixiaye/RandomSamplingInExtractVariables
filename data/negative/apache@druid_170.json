{
  "id" : 170,
  "expression" : "Collections.singletonList(\"1.2.3.4\")",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-contrib/gce-extensions/src/test/java/org/apache/druid/indexing/overlord/autoscaling/gce/GceAutoScalerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections.singletonList(\"1.2.3.4\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 225,
      "startColumnNumber" : 24,
      "endLineNumber" : 225,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 225,
        "startColumnNumber" : 17,
        "endLineNumber" : 225,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ips3=Collections.singletonList(\"1.2.3.4\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 61
      },
      "nodeContext" : "List<String> ips3=Collections.singletonList(\"1.2.3.4\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2082,
        "startLineNumber" : 179,
        "startColumnNumber" : 2,
        "endLineNumber" : 233,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  GceAutoScaler autoScaler=EasyMock.createMockBuilder(GceAutoScaler.class).withConstructor(int.class,int.class,GceEnvironmentConfig.class).withArgs(2,4,new GceEnvironmentConfig(1,\"proj-x\",\"us-central-1\",\"druid-mig\")).addMockedMethod(\"createComputeServiceImpl\").createMock();\n  EasyMock.expect(autoScaler.createComputeServiceImpl()).andReturn(null);\n  EasyMock.expect(autoScaler.createComputeServiceImpl()).andReturn(mockCompute);\n  EasyMock.replay(autoScaler);\n  List<String> ips1=Collections.emptyList();\n  List<String> ids1=autoScaler.ipToIdLookup(ips1);\n  Assert.assertEquals(0,ids1.size());\n  List<String> ips2=Collections.singletonList(\"foo-bar-baz\");\n  List<String> ids2=autoScaler.ipToIdLookup(ips2);\n  Assert.assertEquals(ips2,ids2);\n  Instance i1=makeInstance(\"foo\",\"1.2.3.5\");\n  Instance i2=makeInstance(\"bar\",\"1.2.3.4\");\n  InstanceList mockResponse=new InstanceList();\n  mockResponse.setNextPageToken(null);\n  mockResponse.setItems(Arrays.asList(i1,i2));\n  EasyMock.expect(mockIpToIdRequest.execute()).andReturn(mockResponse);\n  EasyMock.expect(mockIpToIdRequest.setPageToken(EasyMock.anyString())).andReturn(mockIpToIdRequest);\n  EasyMock.replay(mockIpToIdRequest);\n  EasyMock.expect(mockInstances.list(\"proj-x\",\"us-central-1\")).andReturn(mockIpToIdRequest);\n  EasyMock.replay(mockInstances);\n  EasyMock.expect(mockCompute.instances()).andReturn(mockInstances);\n  EasyMock.replay(mockCompute);\n  List<String> ips3=Collections.singletonList(\"1.2.3.4\");\n  List<String> ids3=autoScaler.ipToIdLookup(ips3);\n  Assert.assertEquals(1,ids3.size());\n  Assert.assertEquals(\"bar\",ids3.get(0));\n  EasyMock.verify(mockCompute);\n  EasyMock.verify(mockInstances);\n  EasyMock.verify(mockIpToIdRequest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 176,
        "startColumnNumber" : 2,
        "endLineNumber" : 233,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testIpToId() throws IOException, GeneralSecurityException, GceServiceException {\n  GceAutoScaler autoScaler=EasyMock.createMockBuilder(GceAutoScaler.class).withConstructor(int.class,int.class,GceEnvironmentConfig.class).withArgs(2,4,new GceEnvironmentConfig(1,\"proj-x\",\"us-central-1\",\"druid-mig\")).addMockedMethod(\"createComputeServiceImpl\").createMock();\n  EasyMock.expect(autoScaler.createComputeServiceImpl()).andReturn(null);\n  EasyMock.expect(autoScaler.createComputeServiceImpl()).andReturn(mockCompute);\n  EasyMock.replay(autoScaler);\n  List<String> ips1=Collections.emptyList();\n  List<String> ids1=autoScaler.ipToIdLookup(ips1);\n  Assert.assertEquals(0,ids1.size());\n  List<String> ips2=Collections.singletonList(\"foo-bar-baz\");\n  List<String> ids2=autoScaler.ipToIdLookup(ips2);\n  Assert.assertEquals(ips2,ids2);\n  Instance i1=makeInstance(\"foo\",\"1.2.3.5\");\n  Instance i2=makeInstance(\"bar\",\"1.2.3.4\");\n  InstanceList mockResponse=new InstanceList();\n  mockResponse.setNextPageToken(null);\n  mockResponse.setItems(Arrays.asList(i1,i2));\n  EasyMock.expect(mockIpToIdRequest.execute()).andReturn(mockResponse);\n  EasyMock.expect(mockIpToIdRequest.setPageToken(EasyMock.anyString())).andReturn(mockIpToIdRequest);\n  EasyMock.replay(mockIpToIdRequest);\n  EasyMock.expect(mockInstances.list(\"proj-x\",\"us-central-1\")).andReturn(mockIpToIdRequest);\n  EasyMock.replay(mockInstances);\n  EasyMock.expect(mockCompute.instances()).andReturn(mockInstances);\n  EasyMock.replay(mockCompute);\n  List<String> ips3=Collections.singletonList(\"1.2.3.4\");\n  List<String> ids3=autoScaler.ipToIdLookup(ips3);\n  Assert.assertEquals(1,ids3.size());\n  Assert.assertEquals(\"bar\",ids3.get(0));\n  EasyMock.verify(mockCompute);\n  EasyMock.verify(mockInstances);\n  EasyMock.verify(mockIpToIdRequest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 61
      },
      "nodeContext" : "List<String> ips3=Collections.singletonList(\"1.2.3.4\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 225,
    "startColumnNumber" : 24,
    "endLineNumber" : 225,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}