{
  "id" : 214,
  "expression" : "\"Number of items does not match. Provided: \"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "2423a17b5c3e5917a1960ffea8f5ecb11ac373a6",
  "filePath" : "src/main/java/rx/observers/TestObserver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Number of items does not match. Provided: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 116,
      "startColumnNumber" : 37,
      "endLineNumber" : 116,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 116,
        "startColumnNumber" : 37,
        "endLineNumber" : 116,
        "endColumnNumber" : 133
      },
      "nodeContext" : "\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 116,
        "startColumnNumber" : 18,
        "endLineNumber" : 116,
        "endColumnNumber" : 134
      },
      "nodeContext" : "new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 135
      },
      "nodeContext" : "throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 115,
        "startColumnNumber" : 49,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (onNextEvents.size() != items.size()) {\n  throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 135
      },
      "nodeContext" : "throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 116,
    "startColumnNumber" : 37,
    "endLineNumber" : 116,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}