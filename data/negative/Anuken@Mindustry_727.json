{
  "id" : 727,
  "expression" : "directory.getName()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "tools/src/mindustry/tools/ScriptMainGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "directory.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 134,
      "startColumnNumber" : 11,
      "endLineNumber" : 134,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 134,
        "startColumnNumber" : 11,
        "endLineNumber" : 134,
        "endColumnNumber" : 47
      },
      "nodeContext" : "directory.getName().endsWith(\".jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (directory.getName().endsWith(\".jar\")) {\n  ZipInputStream zip=new ZipInputStream(new FileInputStream(directory));\n  for (ZipEntry entry=zip.getNextEntry(); entry != null; entry=zip.getNextEntry()) {\n    if (!entry.isDirectory() && entry.getName().endsWith(\".class\")) {\n      String className=entry.getName().replace('/','.');\n      className=className.substring(0,className.length() - \".class\".length());\n      if (className.startsWith(packageName)) {\n        Class res=Class.forName(className,false,Thread.currentThread().getContextClassLoader());\n        classes.add(res);\n      }\n    }\n  }\n}\n else {\n  File[] files=directory.listFiles();\n  for (  File file : files) {\n    if (file.isDirectory()) {\n      classes.addAll(findClasses(file,packageName + \".\" + file.getName()));\n    }\n else     if (file.getName().endsWith(\".class\")) {\n      classes.add(Class.forName(packageName + '.' + file.getName().substring(0,file.getName().length() - 6),false,Thread.currentThread().getContextClassLoader()));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 126,
        "startColumnNumber" : 93,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Seq<Class> classes=new Seq<>();\n  String dir=directory.toString();\n  if (dir.startsWith(\"file:\")) {\n    directory=new File(dir.substring(\"file:\".length()).replace(\"!/arc\",\"\").replace(\"!/mindustry\",\"\"));\n  }\n  if (!directory.exists())   return classes;\n  if (directory.getName().endsWith(\".jar\")) {\n    ZipInputStream zip=new ZipInputStream(new FileInputStream(directory));\n    for (ZipEntry entry=zip.getNextEntry(); entry != null; entry=zip.getNextEntry()) {\n      if (!entry.isDirectory() && entry.getName().endsWith(\".class\")) {\n        String className=entry.getName().replace('/','.');\n        className=className.substring(0,className.length() - \".class\".length());\n        if (className.startsWith(packageName)) {\n          Class res=Class.forName(className,false,Thread.currentThread().getContextClassLoader());\n          classes.add(res);\n        }\n      }\n    }\n  }\n else {\n    File[] files=directory.listFiles();\n    for (    File file : files) {\n      if (file.isDirectory()) {\n        classes.addAll(findClasses(file,packageName + \".\" + file.getName()));\n      }\n else       if (file.getName().endsWith(\".class\")) {\n        classes.add(Class.forName(packageName + '.' + file.getName().substring(0,file.getName().length() - 6),false,Thread.currentThread().getContextClassLoader()));\n      }\n    }\n  }\n  return classes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 232,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1762,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Seq<Class> findClasses(File directory,String packageName) throws Exception {\n  Seq<Class> classes=new Seq<>();\n  String dir=directory.toString();\n  if (dir.startsWith(\"file:\")) {\n    directory=new File(dir.substring(\"file:\".length()).replace(\"!/arc\",\"\").replace(\"!/mindustry\",\"\"));\n  }\n  if (!directory.exists())   return classes;\n  if (directory.getName().endsWith(\".jar\")) {\n    ZipInputStream zip=new ZipInputStream(new FileInputStream(directory));\n    for (ZipEntry entry=zip.getNextEntry(); entry != null; entry=zip.getNextEntry()) {\n      if (!entry.isDirectory() && entry.getName().endsWith(\".class\")) {\n        String className=entry.getName().replace('/','.');\n        className=className.substring(0,className.length() - \".class\".length());\n        if (className.startsWith(packageName)) {\n          Class res=Class.forName(className,false,Thread.currentThread().getContextClassLoader());\n          classes.add(res);\n        }\n      }\n    }\n  }\n else {\n    File[] files=directory.listFiles();\n    for (    File file : files) {\n      if (file.isDirectory()) {\n        classes.addAll(findClasses(file,packageName + \".\" + file.getName()));\n      }\n else       if (file.getName().endsWith(\".class\")) {\n        classes.add(Class.forName(packageName + '.' + file.getName().substring(0,file.getName().length() - 6),false,Thread.currentThread().getContextClassLoader()));\n      }\n    }\n  }\n  return classes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 251,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 134,
        "startColumnNumber" : 11,
        "endLineNumber" : 134,
        "endColumnNumber" : 47
      },
      "nodeContext" : "directory.getName().endsWith(\".jar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 134,
    "startColumnNumber" : 11,
    "endLineNumber" : 134,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}