{
  "id" : 136,
  "expression" : "123",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/TypeReferenceTest8.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "123",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 25,
      "startColumnNumber" : 22,
      "endLineNumber" : 25,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertEquals(123,entity.getList()[0].getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(123,entity.getList()[0].getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 14,
        "startColumnNumber" : 45,
        "endLineNumber" : 26,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TypeReference<Map<String,Entity>> typeRef=new TypeReference<Map<String,Entity>>(){\n  }\n;\n  Map<String,Entity> map=JSON.parseObject(\"{\\\"value\\\":{\\\"id\\\":\\\"abc\\\",\\\"list\\\":[{\\\"id\\\":123}]}}\",typeRef);\n  Entity entity=map.get(\"value\");\n  Assert.assertNotNull(entity);\n  Assert.assertEquals(\"abc\",entity.getId());\n  Assert.assertEquals(1,entity.getList().length);\n  Assert.assertEquals(123,entity.getList()[0].getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 14,
        "startColumnNumber" : 1,
        "endLineNumber" : 26,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void test_typeRef() throws Exception {\n  TypeReference<Map<String,Entity>> typeRef=new TypeReference<Map<String,Entity>>(){\n  }\n;\n  Map<String,Entity> map=JSON.parseObject(\"{\\\"value\\\":{\\\"id\\\":\\\"abc\\\",\\\"list\\\":[{\\\"id\\\":123}]}}\",typeRef);\n  Entity entity=map.get(\"value\");\n  Assert.assertNotNull(entity);\n  Assert.assertEquals(\"abc\",entity.getId());\n  Assert.assertEquals(1,entity.getList().length);\n  Assert.assertEquals(123,entity.getList()[0].getId());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(123,entity.getList()[0].getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 25,
    "startColumnNumber" : 22,
    "endLineNumber" : 25,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}