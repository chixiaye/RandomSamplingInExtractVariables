{
  "id" : 330,
  "expression" : "e.getCause()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/annotation/MockInjectionUsingConstructorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getCause()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 101,
      "startColumnNumber" : 23,
      "endLineNumber" : 101,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(e.getCause())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(e.getCause()).isInstanceOf(IllegalStateException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 96,
        "startColumnNumber" : 37,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(e.getMessage()).contains(\"failingConstructor\").contains(\"constructor\").contains(\"threw an exception\");\n  assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (MockitoException e) {\n  assertThat(e.getMessage()).contains(\"failingConstructor\").contains(\"constructor\").contains(\"threw an exception\");\n  assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MockitoAnnotations.openMocks(new ATest());\n  fail();\n}\n catch (MockitoException e) {\n  assertThat(e.getMessage()).contains(\"failingConstructor\").contains(\"constructor\").contains(\"threw an exception\");\n  assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 91,
        "startColumnNumber" : 29,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    MockitoAnnotations.openMocks(new ATest());\n    fail();\n  }\n catch (  MockitoException e) {\n    assertThat(e.getMessage()).contains(\"failingConstructor\").contains(\"constructor\").contains(\"threw an exception\");\n    assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_report_failure_only_when_object_initialization_throws_exception() throws Exception {\n  try {\n    MockitoAnnotations.openMocks(new ATest());\n    fail();\n  }\n catch (  MockitoException e) {\n    assertThat(e.getMessage()).contains(\"failingConstructor\").contains(\"constructor\").contains(\"threw an exception\");\n    assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(e.getCause()).isInstanceOf(IllegalStateException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 101,
    "startColumnNumber" : 23,
    "endLineNumber" : 101,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}