{
  "id" : 370,
  "expression" : "actualOne.stringValue",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actualOne.stringValue",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 114,
      "startColumnNumber" : 24,
      "endLineNumber" : 114,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(\"one\",actualOne.stringValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"one\",actualOne.stringValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  BagOfPrimitives expectedOne=new BagOfPrimitives(1,1,true,\"one\");\n  writer.write(gson.toJson(expectedOne).toCharArray());\n  BagOfPrimitives expectedTwo=new BagOfPrimitives(2,2,false,\"two\");\n  writer.write(gson.toJson(expectedTwo).toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  BagOfPrimitives actualOne=gson.fromJson(parser.next(),BagOfPrimitives.class);\n  assertEquals(\"one\",actualOne.stringValue);\n  BagOfPrimitives actualTwo=gson.fromJson(parser.next(),BagOfPrimitives.class);\n  assertEquals(\"two\",actualTwo.stringValue);\n  assertFalse(parser.hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testReadWriteTwoObjects() throws IOException {\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  BagOfPrimitives expectedOne=new BagOfPrimitives(1,1,true,\"one\");\n  writer.write(gson.toJson(expectedOne).toCharArray());\n  BagOfPrimitives expectedTwo=new BagOfPrimitives(2,2,false,\"two\");\n  writer.write(gson.toJson(expectedTwo).toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  BagOfPrimitives actualOne=gson.fromJson(parser.next(),BagOfPrimitives.class);\n  assertEquals(\"one\",actualOne.stringValue);\n  BagOfPrimitives actualTwo=gson.fromJson(parser.next(),BagOfPrimitives.class);\n  assertEquals(\"two\",actualTwo.stringValue);\n  assertFalse(parser.hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"one\",actualOne.stringValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 114,
    "startColumnNumber" : 24,
    "endLineNumber" : 114,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}