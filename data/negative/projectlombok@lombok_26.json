{
  "id" : 26,
  "expression" : "changesMade.get()",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/bytecode/SneakyThrowsRemover.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "changesMade.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 76,
      "startColumnNumber" : 9,
      "endLineNumber" : 76,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 76,
        "startColumnNumber" : 9,
        "endLineNumber" : 76,
        "endColumnNumber" : 56
      },
      "nodeContext" : "changesMade.get() ? writer.toByteArray() : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return changesMade.get() ? writer.toByteArray() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1342,
        "startLineNumber" : 41,
        "startColumnNumber" : 113,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!new ClassFileMetaData(original).usesMethod(\"lombok/Lombok\",\"sneakyThrow\"))   return null;\n  byte[] fixedByteCode=fixJSRInlining(original);\n  ClassReader reader=new ClassReader(fixedByteCode);\n  ClassWriter writer=new FixedClassWriter(reader,ClassWriter.COMPUTE_MAXS | ClassWriter.COMPUTE_FRAMES);\n  final AtomicBoolean changesMade=new AtomicBoolean();\nclass SneakyThrowsRemoverVisitor extends MethodVisitor {\n    SneakyThrowsRemoverVisitor(    MethodVisitor mv){\n      super(Opcodes.ASM4,mv);\n    }\n    @Override public void visitMethodInsn(    int opcode,    String owner,    String name,    String desc){\n      if (opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)) {\n        changesMade.set(true);\n        super.visitInsn(Opcodes.ATHROW);\n      }\n else {\n        super.visitMethodInsn(opcode,owner,name,desc);\n      }\n    }\n  }\n  reader.accept(new ClassVisitor(Opcodes.ASM4,writer){\n    @Override public MethodVisitor visitMethod(    int access,    String name,    String desc,    String signature,    String[] exceptions){\n      return new SneakyThrowsRemoverVisitor(super.visitMethod(access,name,desc,signature,exceptions));\n    }\n  }\n,0);\n  return changesMade.get() ? writer.toByteArray() : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 41,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public byte[] applyTransformations(byte[] original,String fileName,DiagnosticsReceiver diagnostics){\n  if (!new ClassFileMetaData(original).usesMethod(\"lombok/Lombok\",\"sneakyThrow\"))   return null;\n  byte[] fixedByteCode=fixJSRInlining(original);\n  ClassReader reader=new ClassReader(fixedByteCode);\n  ClassWriter writer=new FixedClassWriter(reader,ClassWriter.COMPUTE_MAXS | ClassWriter.COMPUTE_FRAMES);\n  final AtomicBoolean changesMade=new AtomicBoolean();\nclass SneakyThrowsRemoverVisitor extends MethodVisitor {\n    SneakyThrowsRemoverVisitor(    MethodVisitor mv){\n      super(Opcodes.ASM4,mv);\n    }\n    @Override public void visitMethodInsn(    int opcode,    String owner,    String name,    String desc){\n      if (opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)) {\n        changesMade.set(true);\n        super.visitInsn(Opcodes.ATHROW);\n      }\n else {\n        super.visitMethodInsn(opcode,owner,name,desc);\n      }\n    }\n  }\n  reader.accept(new ClassVisitor(Opcodes.ASM4,writer){\n    @Override public MethodVisitor visitMethod(    int access,    String name,    String desc,    String signature,    String[] exceptions){\n      return new SneakyThrowsRemoverVisitor(super.visitMethod(access,name,desc,signature,exceptions));\n    }\n  }\n,0);\n  return changesMade.get() ? writer.toByteArray() : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return changesMade.get() ? writer.toByteArray() : null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 76,
    "startColumnNumber" : 9,
    "endLineNumber" : 76,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}