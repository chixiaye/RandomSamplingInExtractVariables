{
  "id" : 6,
  "expression" : "\"ERROR_BEAN\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/web/servlet/error/BasicErrorControllerMockMvcTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ERROR_BEAN\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 126,
      "startColumnNumber" : 31,
      "endLineNumber" : 126,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(content).contains(\"ERROR_BEAN\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(content).contains(\"ERROR_BEAN\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 121,
        "startColumnNumber" : 65,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  MvcResult response=this.mockMvc.perform(get(\"/error\").accept(MediaType.TEXT_HTML)).andExpect(status().is5xxServerError()).andReturn();\n  String content=response.getResponse().getContentAsString();\n  assertThat(content).contains(\"ERROR_BEAN\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 120,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testDirectAccessForBrowserClient() throws Exception {\n  MvcResult response=this.mockMvc.perform(get(\"/error\").accept(MediaType.TEXT_HTML)).andExpect(status().is5xxServerError()).andReturn();\n  String content=response.getResponse().getContentAsString();\n  assertThat(content).contains(\"ERROR_BEAN\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(content).contains(\"ERROR_BEAN\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 126,
    "startColumnNumber" : 31,
    "endLineNumber" : 126,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}