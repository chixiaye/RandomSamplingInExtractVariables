{
  "id" : 158,
  "expression" : "Integer.MAX_VALUE",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/collect/MapMakerInternalMapTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 165,
      "startColumnNumber" : 27,
      "endLineNumber" : 165,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkMaximumSize(1,8,Integer.MAX_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(1,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 155,
        "startColumnNumber" : 35,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSetMaximumSize(){\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(1,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 166,
      "startColumnNumber" : 27,
      "endLineNumber" : 166,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkMaximumSize(2,8,Integer.MAX_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(2,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 155,
        "startColumnNumber" : 35,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSetMaximumSize(){\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(2,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 167,
      "startColumnNumber" : 27,
      "endLineNumber" : 167,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkMaximumSize(4,8,Integer.MAX_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(4,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 155,
        "startColumnNumber" : 35,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSetMaximumSize(){\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(4,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 168,
      "startColumnNumber" : 27,
      "endLineNumber" : 168,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkMaximumSize(8,8,Integer.MAX_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(8,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 155,
        "startColumnNumber" : 35,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSetMaximumSize(){\n  for (int maxSize=1; maxSize < 8; maxSize++) {\n    checkMaximumSize(1,8,maxSize);\n    checkMaximumSize(2,8,maxSize);\n    checkMaximumSize(4,8,maxSize);\n    checkMaximumSize(8,8,maxSize);\n  }\n  checkMaximumSize(1,8,Integer.MAX_VALUE);\n  checkMaximumSize(2,8,Integer.MAX_VALUE);\n  checkMaximumSize(4,8,Integer.MAX_VALUE);\n  checkMaximumSize(8,8,Integer.MAX_VALUE);\n  for (int capacity=0; capacity < 8; capacity++) {\n    checkMaximumSize(1,capacity,4);\n    checkMaximumSize(2,capacity,4);\n    checkMaximumSize(4,capacity,4);\n    checkMaximumSize(8,capacity,4);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 46
      },
      "nodeContext" : "checkMaximumSize(8,8,Integer.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 165,
    "startColumnNumber" : 27,
    "endLineNumber" : 165,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 166,
    "startColumnNumber" : 27,
    "endLineNumber" : 166,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 167,
    "startColumnNumber" : 27,
    "endLineNumber" : 167,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 168,
    "startColumnNumber" : 27,
    "endLineNumber" : 168,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}