{
  "id" : 333,
  "expression" : "this.type",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/skyframe/serialization/DynamicCodec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.type",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 138,
      "startColumnNumber" : 19,
      "endLineNumber" : 138,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 29
      },
      "nodeContext" : "e.addTrail(this.type)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 30
      },
      "nodeContext" : "e.addTrail(this.type);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 135,
        "startColumnNumber" : 41,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n  e.addTrail(this.type);\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (SerializationException e) {\n  logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n  e.addTrail(this.type);\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 133,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n}\n catch (SerializationException e) {\n  logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n  e.addTrail(this.type);\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 132,
        "startColumnNumber" : 11,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n  }\n catch (  SerializationException e) {\n    logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n    e.addTrail(this.type);\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1363,
        "startLineNumber" : 106,
        "startColumnNumber" : 11,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type.isArray()) {\n  Object arr=UnsafeProvider.getInstance().getObject(obj,offset);\n  if (type.getComponentType().equals(byte.class)) {\n    if (arr == null) {\n      codedOut.writeBoolNoTag(false);\n    }\n else {\n      codedOut.writeBoolNoTag(true);\n      codedOut.writeByteArrayNoTag((byte[])arr);\n    }\n    return;\n  }\n  if (arr == null) {\n    codedOut.writeInt32NoTag(-1);\n    return;\n  }\n  int length=Array.getLength(arr);\n  codedOut.writeInt32NoTag(length);\n  int base=UnsafeProvider.getInstance().arrayBaseOffset(type);\n  int scale=UnsafeProvider.getInstance().arrayIndexScale(type);\n  if (scale == 0) {\n    throw new SerializationException(\"Failed to get index scale for type: \" + type);\n  }\n  for (int i=0; i < length; ++i) {\n    serializeField(context,codedOut,arr,type.getComponentType(),base + scale * i);\n  }\n}\n else {\n  try {\n    context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n  }\n catch (  SerializationException e) {\n    logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n    e.addTrail(this.type);\n    throw e;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 181,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2781,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type.isPrimitive()) {\n  if (type.equals(boolean.class)) {\n    codedOut.writeBoolNoTag(UnsafeProvider.getInstance().getBoolean(obj,offset));\n  }\n else   if (type.equals(byte.class)) {\n    codedOut.writeRawByte(UnsafeProvider.getInstance().getByte(obj,offset));\n  }\n else   if (type.equals(short.class)) {\n    ByteBuffer buffer=ByteBuffer.allocate(2).putShort(UnsafeProvider.getInstance().getShort(obj,offset));\n    codedOut.writeRawBytes(buffer);\n  }\n else   if (type.equals(char.class)) {\n    ByteBuffer buffer=ByteBuffer.allocate(2).putChar(UnsafeProvider.getInstance().getChar(obj,offset));\n    codedOut.writeRawBytes(buffer);\n  }\n else   if (type.equals(int.class)) {\n    codedOut.writeInt32NoTag(UnsafeProvider.getInstance().getInt(obj,offset));\n  }\n else   if (type.equals(long.class)) {\n    codedOut.writeInt64NoTag(UnsafeProvider.getInstance().getLong(obj,offset));\n  }\n else   if (type.equals(float.class)) {\n    codedOut.writeFloatNoTag(UnsafeProvider.getInstance().getFloat(obj,offset));\n  }\n else   if (type.equals(double.class)) {\n    codedOut.writeDoubleNoTag(UnsafeProvider.getInstance().getDouble(obj,offset));\n  }\n else   if (type.equals(void.class)) {\n  }\n else {\n    throw new UnsupportedOperationException(\"Unknown primitive type: \" + type);\n  }\n}\n else if (type.isArray()) {\n  Object arr=UnsafeProvider.getInstance().getObject(obj,offset);\n  if (type.getComponentType().equals(byte.class)) {\n    if (arr == null) {\n      codedOut.writeBoolNoTag(false);\n    }\n else {\n      codedOut.writeBoolNoTag(true);\n      codedOut.writeByteArrayNoTag((byte[])arr);\n    }\n    return;\n  }\n  if (arr == null) {\n    codedOut.writeInt32NoTag(-1);\n    return;\n  }\n  int length=Array.getLength(arr);\n  codedOut.writeInt32NoTag(length);\n  int base=UnsafeProvider.getInstance().arrayBaseOffset(type);\n  int scale=UnsafeProvider.getInstance().arrayIndexScale(type);\n  if (scale == 0) {\n    throw new SerializationException(\"Failed to get index scale for type: \" + type);\n  }\n  for (int i=0; i < length; ++i) {\n    serializeField(context,codedOut,arr,type.getComponentType(),base + scale * i);\n  }\n}\n else {\n  try {\n    context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n  }\n catch (  SerializationException e) {\n    logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n    e.addTrail(this.type);\n    throw e;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2791,
        "startLineNumber" : 79,
        "startColumnNumber" : 49,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type.isPrimitive()) {\n    if (type.equals(boolean.class)) {\n      codedOut.writeBoolNoTag(UnsafeProvider.getInstance().getBoolean(obj,offset));\n    }\n else     if (type.equals(byte.class)) {\n      codedOut.writeRawByte(UnsafeProvider.getInstance().getByte(obj,offset));\n    }\n else     if (type.equals(short.class)) {\n      ByteBuffer buffer=ByteBuffer.allocate(2).putShort(UnsafeProvider.getInstance().getShort(obj,offset));\n      codedOut.writeRawBytes(buffer);\n    }\n else     if (type.equals(char.class)) {\n      ByteBuffer buffer=ByteBuffer.allocate(2).putChar(UnsafeProvider.getInstance().getChar(obj,offset));\n      codedOut.writeRawBytes(buffer);\n    }\n else     if (type.equals(int.class)) {\n      codedOut.writeInt32NoTag(UnsafeProvider.getInstance().getInt(obj,offset));\n    }\n else     if (type.equals(long.class)) {\n      codedOut.writeInt64NoTag(UnsafeProvider.getInstance().getLong(obj,offset));\n    }\n else     if (type.equals(float.class)) {\n      codedOut.writeFloatNoTag(UnsafeProvider.getInstance().getFloat(obj,offset));\n    }\n else     if (type.equals(double.class)) {\n      codedOut.writeDoubleNoTag(UnsafeProvider.getInstance().getDouble(obj,offset));\n    }\n else     if (type.equals(void.class)) {\n    }\n else {\n      throw new UnsupportedOperationException(\"Unknown primitive type: \" + type);\n    }\n  }\n else   if (type.isArray()) {\n    Object arr=UnsafeProvider.getInstance().getObject(obj,offset);\n    if (type.getComponentType().equals(byte.class)) {\n      if (arr == null) {\n        codedOut.writeBoolNoTag(false);\n      }\n else {\n        codedOut.writeBoolNoTag(true);\n        codedOut.writeByteArrayNoTag((byte[])arr);\n      }\n      return;\n    }\n    if (arr == null) {\n      codedOut.writeInt32NoTag(-1);\n      return;\n    }\n    int length=Array.getLength(arr);\n    codedOut.writeInt32NoTag(length);\n    int base=UnsafeProvider.getInstance().arrayBaseOffset(type);\n    int scale=UnsafeProvider.getInstance().arrayIndexScale(type);\n    if (scale == 0) {\n      throw new SerializationException(\"Failed to get index scale for type: \" + type);\n    }\n    for (int i=0; i < length; ++i) {\n      serializeField(context,codedOut,arr,type.getComponentType(),base + scale * i);\n    }\n  }\n else {\n    try {\n      context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n    }\n catch (    SerializationException e) {\n      logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n      e.addTrail(this.type);\n      throw e;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 370,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3346,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Serializes a field.\n * @param obj the object containing the field to serialize. Can be an array or plain object.\n * @param type class of the field to serialize\n * @param offset unsafe offset into obj where the field will be found\n */\n@SuppressWarnings(\"LogAndThrow\") private void serializeField(SerializationContext context,CodedOutputStream codedOut,Object obj,Class<?> type,long offset) throws SerializationException, IOException {\n  if (type.isPrimitive()) {\n    if (type.equals(boolean.class)) {\n      codedOut.writeBoolNoTag(UnsafeProvider.getInstance().getBoolean(obj,offset));\n    }\n else     if (type.equals(byte.class)) {\n      codedOut.writeRawByte(UnsafeProvider.getInstance().getByte(obj,offset));\n    }\n else     if (type.equals(short.class)) {\n      ByteBuffer buffer=ByteBuffer.allocate(2).putShort(UnsafeProvider.getInstance().getShort(obj,offset));\n      codedOut.writeRawBytes(buffer);\n    }\n else     if (type.equals(char.class)) {\n      ByteBuffer buffer=ByteBuffer.allocate(2).putChar(UnsafeProvider.getInstance().getChar(obj,offset));\n      codedOut.writeRawBytes(buffer);\n    }\n else     if (type.equals(int.class)) {\n      codedOut.writeInt32NoTag(UnsafeProvider.getInstance().getInt(obj,offset));\n    }\n else     if (type.equals(long.class)) {\n      codedOut.writeInt64NoTag(UnsafeProvider.getInstance().getLong(obj,offset));\n    }\n else     if (type.equals(float.class)) {\n      codedOut.writeFloatNoTag(UnsafeProvider.getInstance().getFloat(obj,offset));\n    }\n else     if (type.equals(double.class)) {\n      codedOut.writeDoubleNoTag(UnsafeProvider.getInstance().getDouble(obj,offset));\n    }\n else     if (type.equals(void.class)) {\n    }\n else {\n      throw new UnsupportedOperationException(\"Unknown primitive type: \" + type);\n    }\n  }\n else   if (type.isArray()) {\n    Object arr=UnsafeProvider.getInstance().getObject(obj,offset);\n    if (type.getComponentType().equals(byte.class)) {\n      if (arr == null) {\n        codedOut.writeBoolNoTag(false);\n      }\n else {\n        codedOut.writeBoolNoTag(true);\n        codedOut.writeByteArrayNoTag((byte[])arr);\n      }\n      return;\n    }\n    if (arr == null) {\n      codedOut.writeInt32NoTag(-1);\n      return;\n    }\n    int length=Array.getLength(arr);\n    codedOut.writeInt32NoTag(length);\n    int base=UnsafeProvider.getInstance().arrayBaseOffset(type);\n    int scale=UnsafeProvider.getInstance().arrayIndexScale(type);\n    if (scale == 0) {\n      throw new SerializationException(\"Failed to get index scale for type: \" + type);\n    }\n    for (int i=0; i < length; ++i) {\n      serializeField(context,codedOut,arr,type.getComponentType(),base + scale * i);\n    }\n  }\n else {\n    try {\n      context.serialize(UnsafeProvider.getInstance().getObject(obj,offset),codedOut);\n    }\n catch (    SerializationException e) {\n      logger.atSevere().withCause(e).log(\"Unserializable object and superclass: %s %s\",obj,obj.getClass().getSuperclass());\n      e.addTrail(this.type);\n      throw e;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 403,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 30
      },
      "nodeContext" : "e.addTrail(this.type);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 138,
    "startColumnNumber" : 19,
    "endLineNumber" : 138,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}