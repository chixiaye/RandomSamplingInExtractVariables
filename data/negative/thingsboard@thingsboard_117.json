{
  "id" : 117,
  "expression" : "\"tb.proxy.system\"",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/edge/DefaultEdgeLicenseService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"tb.proxy.system\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 74,
      "startColumnNumber" : 67,
      "endLineNumber" : 74,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 74,
        "startColumnNumber" : 48,
        "endLineNumber" : 74,
        "endColumnNumber" : 85
      },
      "nodeContext" : "System.getProperty(\"tb.proxy.system\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 74,
        "startColumnNumber" : 37,
        "endLineNumber" : 74,
        "endColumnNumber" : 86
      },
      "nodeContext" : "isNotEmpty(System.getProperty(\"tb.proxy.system\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 74,
        "startColumnNumber" : 37,
        "endLineNumber" : 74,
        "endColumnNumber" : 152
      },
      "nodeContext" : "isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 152
      },
      "nodeContext" : "systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 153
      },
      "nodeContext" : "boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2572,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean jdkHttpClientEnabled=isNotEmpty(System.getProperty(\"tb.proxy.jdk\")) && System.getProperty(\"tb.proxy.jdk\").equalsIgnoreCase(\"true\");\n  boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n  boolean proxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.host\")) && isNotEmpty(System.getProperty(\"tb.proxy.port\"));\n  if (jdkHttpClientEnabled) {\n    log.warn(\"Going to use plain JDK Http Client!\");\n    SimpleClientHttpRequestFactory factory=new SimpleClientHttpRequestFactory();\n    if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      factory.setProxy(new Proxy(Proxy.Type.HTTP,InetSocketAddress.createUnresolved(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")))));\n    }\n    this.restTemplate=new RestTemplate(new SimpleClientHttpRequestFactory());\n  }\n else {\n    CloseableHttpClient httpClient;\n    HttpComponentsClientHttpRequestFactory requestFactory;\n    if (systemProxyEnabled) {\n      log.warn(\"Going to use System Proxy Server!\");\n      httpClient=HttpClients.createSystem();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else     if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).setProxy(new HttpHost(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")),\"https\")).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else {\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2604,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initRestTemplate(){\n  boolean jdkHttpClientEnabled=isNotEmpty(System.getProperty(\"tb.proxy.jdk\")) && System.getProperty(\"tb.proxy.jdk\").equalsIgnoreCase(\"true\");\n  boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n  boolean proxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.host\")) && isNotEmpty(System.getProperty(\"tb.proxy.port\"));\n  if (jdkHttpClientEnabled) {\n    log.warn(\"Going to use plain JDK Http Client!\");\n    SimpleClientHttpRequestFactory factory=new SimpleClientHttpRequestFactory();\n    if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      factory.setProxy(new Proxy(Proxy.Type.HTTP,InetSocketAddress.createUnresolved(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")))));\n    }\n    this.restTemplate=new RestTemplate(new SimpleClientHttpRequestFactory());\n  }\n else {\n    CloseableHttpClient httpClient;\n    HttpComponentsClientHttpRequestFactory requestFactory;\n    if (systemProxyEnabled) {\n      log.warn(\"Going to use System Proxy Server!\");\n      httpClient=HttpClients.createSystem();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else     if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).setProxy(new HttpHost(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")),\"https\")).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else {\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 272,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 153
      },
      "nodeContext" : "boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"tb.proxy.system\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 74,
      "startColumnNumber" : 109,
      "endLineNumber" : 74,
      "endColumnNumber" : 126
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 74,
        "startColumnNumber" : 90,
        "endLineNumber" : 74,
        "endColumnNumber" : 127
      },
      "nodeContext" : "System.getProperty(\"tb.proxy.system\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 74,
        "startColumnNumber" : 90,
        "endLineNumber" : 74,
        "endColumnNumber" : 152
      },
      "nodeContext" : "System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 74,
        "startColumnNumber" : 37,
        "endLineNumber" : 74,
        "endColumnNumber" : 152
      },
      "nodeContext" : "isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 152
      },
      "nodeContext" : "systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 153
      },
      "nodeContext" : "boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2572,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean jdkHttpClientEnabled=isNotEmpty(System.getProperty(\"tb.proxy.jdk\")) && System.getProperty(\"tb.proxy.jdk\").equalsIgnoreCase(\"true\");\n  boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n  boolean proxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.host\")) && isNotEmpty(System.getProperty(\"tb.proxy.port\"));\n  if (jdkHttpClientEnabled) {\n    log.warn(\"Going to use plain JDK Http Client!\");\n    SimpleClientHttpRequestFactory factory=new SimpleClientHttpRequestFactory();\n    if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      factory.setProxy(new Proxy(Proxy.Type.HTTP,InetSocketAddress.createUnresolved(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")))));\n    }\n    this.restTemplate=new RestTemplate(new SimpleClientHttpRequestFactory());\n  }\n else {\n    CloseableHttpClient httpClient;\n    HttpComponentsClientHttpRequestFactory requestFactory;\n    if (systemProxyEnabled) {\n      log.warn(\"Going to use System Proxy Server!\");\n      httpClient=HttpClients.createSystem();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else     if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).setProxy(new HttpHost(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")),\"https\")).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else {\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2604,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initRestTemplate(){\n  boolean jdkHttpClientEnabled=isNotEmpty(System.getProperty(\"tb.proxy.jdk\")) && System.getProperty(\"tb.proxy.jdk\").equalsIgnoreCase(\"true\");\n  boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n  boolean proxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.host\")) && isNotEmpty(System.getProperty(\"tb.proxy.port\"));\n  if (jdkHttpClientEnabled) {\n    log.warn(\"Going to use plain JDK Http Client!\");\n    SimpleClientHttpRequestFactory factory=new SimpleClientHttpRequestFactory();\n    if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      factory.setProxy(new Proxy(Proxy.Type.HTTP,InetSocketAddress.createUnresolved(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")))));\n    }\n    this.restTemplate=new RestTemplate(new SimpleClientHttpRequestFactory());\n  }\n else {\n    CloseableHttpClient httpClient;\n    HttpComponentsClientHttpRequestFactory requestFactory;\n    if (systemProxyEnabled) {\n      log.warn(\"Going to use System Proxy Server!\");\n      httpClient=HttpClients.createSystem();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else     if (proxyEnabled) {\n      log.warn(\"Going to use Proxy Server: [{}:{}]\",System.getProperty(\"tb.proxy.host\"),System.getProperty(\"tb.proxy.port\"));\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).setProxy(new HttpHost(System.getProperty(\"tb.proxy.host\"),Integer.parseInt(System.getProperty(\"tb.proxy.port\")),\"https\")).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n else {\n      httpClient=HttpClients.custom().setSSLHostnameVerifier(new DefaultHostnameVerifier()).build();\n      requestFactory=new HttpComponentsClientHttpRequestFactory();\n      requestFactory.setHttpClient(httpClient);\n      this.restTemplate=new RestTemplate(requestFactory);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 272,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 153
      },
      "nodeContext" : "boolean systemProxyEnabled=isNotEmpty(System.getProperty(\"tb.proxy.system\")) && System.getProperty(\"tb.proxy.system\").equalsIgnoreCase(\"true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 74,
    "startColumnNumber" : 67,
    "endLineNumber" : 74,
    "endColumnNumber" : 84
  }, {
    "charLength" : 17,
    "startLineNumber" : 74,
    "startColumnNumber" : 109,
    "endLineNumber" : 74,
    "endColumnNumber" : 126
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}