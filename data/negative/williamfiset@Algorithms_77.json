{
  "id" : 77,
  "expression" : "newRoot",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/balancedtree/AVLTreeRecursiveOptimized.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newRoot",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 80,
      "startColumnNumber" : 28,
      "endLineNumber" : 80,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 44
      },
      "nodeContext" : "newRoot != TOKEN",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 80,
        "startColumnNumber" : 27,
        "endLineNumber" : 80,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(newRoot != TOKEN)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 45
      },
      "nodeContext" : "insertedNode=(newRoot != TOKEN)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 46
      },
      "nodeContext" : "boolean insertedNode=(newRoot != TOKEN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 77,
        "startColumnNumber" : 33,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (value == null)   return false;\n  Node newRoot=insert(root,value);\n  boolean insertedNode=(newRoot != TOKEN);\n  if (insertedNode) {\n    nodeCount++;\n    root=newRoot;\n  }\n  return insertedNode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean insert(T value){\n  if (value == null)   return false;\n  Node newRoot=insert(root,value);\n  boolean insertedNode=(newRoot != TOKEN);\n  if (insertedNode) {\n    nodeCount++;\n    root=newRoot;\n  }\n  return insertedNode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 46
      },
      "nodeContext" : "boolean insertedNode=(newRoot != TOKEN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node"
  }, {
    "nodeContext" : "newRoot",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 83,
      "startColumnNumber" : 13,
      "endLineNumber" : 83,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 20
      },
      "nodeContext" : "root=newRoot",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 21
      },
      "nodeContext" : "root=newRoot;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 81,
        "startColumnNumber" : 22,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nodeCount++;\n  root=newRoot;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (insertedNode) {\n  nodeCount++;\n  root=newRoot;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 77,
        "startColumnNumber" : 33,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (value == null)   return false;\n  Node newRoot=insert(root,value);\n  boolean insertedNode=(newRoot != TOKEN);\n  if (insertedNode) {\n    nodeCount++;\n    root=newRoot;\n  }\n  return insertedNode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean insert(T value){\n  if (value == null)   return false;\n  Node newRoot=insert(root,value);\n  boolean insertedNode=(newRoot != TOKEN);\n  if (insertedNode) {\n    nodeCount++;\n    root=newRoot;\n  }\n  return insertedNode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 21
      },
      "nodeContext" : "root=newRoot;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 80,
    "startColumnNumber" : 28,
    "endLineNumber" : 80,
    "endColumnNumber" : 35
  }, {
    "charLength" : 7,
    "startLineNumber" : 83,
    "startColumnNumber" : 13,
    "endLineNumber" : 83,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}