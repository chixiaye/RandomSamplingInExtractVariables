{
  "id" : 315,
  "expression" : "CONNID_REGEX",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/federation/sssd/src/main/java/org/freedesktop/dbus/DBusConnection.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CONNID_REGEX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 498,
      "startColumnNumber" : 65,
      "endLineNumber" : 498,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 498,
        "startColumnNumber" : 49,
        "endLineNumber" : 498,
        "endColumnNumber" : 78
      },
      "nodeContext" : "busname.matches(CONNID_REGEX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 498,
        "startColumnNumber" : 48,
        "endLineNumber" : 498,
        "endColumnNumber" : 78
      },
      "nodeContext" : "!busname.matches(CONNID_REGEX)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 498,
        "startColumnNumber" : 13,
        "endLineNumber" : 498,
        "endColumnNumber" : 78
      },
      "nodeContext" : "!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 498,
        "startColumnNumber" : 12,
        "endLineNumber" : 498,
        "endColumnNumber" : 79
      },
      "nodeContext" : "(!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 498,
        "startColumnNumber" : 12,
        "endLineNumber" : 499,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX)) || busname.length() > MAX_NAME_LENGTH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 498,
        "startColumnNumber" : 8,
        "endLineNumber" : 500,
        "endColumnNumber" : 75
      },
      "nodeContext" : "if ((!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX)) || busname.length() > MAX_NAME_LENGTH) throw new DBusException(getString(\"invalidBusName\") + busname);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 495,
        "startColumnNumber" : 101,
        "endLineNumber" : 505,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == busname)   throw new DBusException(getString(\"nullBusName\"));\n  if ((!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX)) || busname.length() > MAX_NAME_LENGTH)   throw new DBusException(getString(\"invalidBusName\") + busname);\n  String unique=_dbus.GetNameOwner(busname);\n  return dynamicProxy(unique,objectpath);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1904,
        "startLineNumber" : 475,
        "startColumnNumber" : 4,
        "endLineNumber" : 505,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return a reference to a remote object. This method will resolve the well known name (if given) to a unique bus name when you call it. This means that if a well known name is released by one process and acquired by another calls to objects gained from this method will continue to operate on the original process. <p> This method will use bus introspection to determine the interfaces on a remote object and so <b>may block</b> and <b>may fail</b>. The resulting proxy object will, however, be castable to any interface it implements. It will also autostart the process if applicable. Also note that the resulting proxy may fail to execute the correct method with overloaded methods and that complex types may fail in interesting ways. Basically, if something odd happens, try specifying the interface explicitly.\n * @param busname    The bus name to connect to. Usually a well known bus name in dot-notation (such as \"org.freedesktop.local\")or may be a DBus address such as \":1-16\".\n * @param objectpath The path on which the process is exporting the object.$\n * @return A reference to a remote object.\n * @throws ClassCastException If type is not a sub-type of DBusInterface\n * @throws DBusException      If busname or objectpath are incorrectly formatted.\n */\npublic DBusInterface getPeerRemoteObject(String busname,String objectpath) throws DBusException {\n  if (null == busname)   throw new DBusException(getString(\"nullBusName\"));\n  if ((!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX)) || busname.length() > MAX_NAME_LENGTH)   throw new DBusException(getString(\"invalidBusName\") + busname);\n  String unique=_dbus.GetNameOwner(busname);\n  return dynamicProxy(unique,objectpath);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 498,
        "startColumnNumber" : 12,
        "endLineNumber" : 498,
        "endColumnNumber" : 79
      },
      "nodeContext" : "(!busname.matches(BUSNAME_REGEX) && !busname.matches(CONNID_REGEX))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 498,
    "startColumnNumber" : 65,
    "endLineNumber" : 498,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}