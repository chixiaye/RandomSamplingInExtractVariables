{
  "id" : 404,
  "expression" : "in",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/compression/ZstdEncoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "in",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 61,
      "startColumnNumber" : 41,
      "endLineNumber" : 61,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 44
      },
      "nodeContext" : "channel.writeOutbound(in)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(in))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(in));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 56,
        "startColumnNumber" : 87,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int dataLength=data.readableBytes();\n  int written=0;\n  ByteBuf in=data.retainedSlice(written,65535);\n  assertTrue(channel.writeOutbound(in));\n  ByteBuf in2=data.retainedSlice(65535,dataLength - 65535);\n  assertTrue(channel.writeOutbound(in2));\n  assertTrue(channel.finish());\n  ByteBuf decompressed=readDecompressed(dataLength);\n  assertEquals(data,decompressed);\n  decompressed.release();\n  data.release();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"largeData\") public void testCompressionOfLargeBatchedFlow(final ByteBuf data) throws Exception {\n  final int dataLength=data.readableBytes();\n  int written=0;\n  ByteBuf in=data.retainedSlice(written,65535);\n  assertTrue(channel.writeOutbound(in));\n  ByteBuf in2=data.retainedSlice(65535,dataLength - 65535);\n  assertTrue(channel.writeOutbound(in2));\n  assertTrue(channel.finish());\n  ByteBuf decompressed=readDecompressed(dataLength);\n  assertEquals(data,decompressed);\n  decompressed.release();\n  data.release();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(in));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.ByteBuf"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 61,
    "startColumnNumber" : 41,
    "endLineNumber" : 61,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}