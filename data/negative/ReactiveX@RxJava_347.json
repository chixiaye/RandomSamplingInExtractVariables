{
  "id" : 347,
  "expression" : "Assert",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/schedulers/SchedulerLifecycleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 134,
      "startColumnNumber" : 8,
      "endLineNumber" : 134,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertTrue(\"Some new threads appeared: \" + rxThreadsAfter,rxThreadsAfter.isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Assert.assertTrue(\"Some new threads appeared: \" + rxThreadsAfter,rxThreadsAfter.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 105,
        "startColumnNumber" : 67,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tryOutSchedulers();\n  System.out.println(\"testStartIdempotence >> giving some time\");\n  Thread.sleep(500);\n  Set<Thread> rxThreadsBefore=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreadsBefore.add(t);\n      System.out.println(\"testStartIdempotence >> \" + t);\n    }\n  }\n  System.out.println(\"testStartIdempotence >> trying to start again\");\n  Schedulers.start();\n  System.out.println(\"testStartIdempotence >> giving some time again\");\n  Thread.sleep(500);\n  Set<Thread> rxThreadsAfter=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreadsAfter.add(t);\n      System.out.println(\"testStartIdempotence >>>> \" + t);\n    }\n  }\n  rxThreadsAfter.removeAll(rxThreadsBefore);\n  Assert.assertTrue(\"Some new threads appeared: \" + rxThreadsAfter,rxThreadsAfter.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStartIdempotence() throws InterruptedException {\n  tryOutSchedulers();\n  System.out.println(\"testStartIdempotence >> giving some time\");\n  Thread.sleep(500);\n  Set<Thread> rxThreadsBefore=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreadsBefore.add(t);\n      System.out.println(\"testStartIdempotence >> \" + t);\n    }\n  }\n  System.out.println(\"testStartIdempotence >> trying to start again\");\n  Schedulers.start();\n  System.out.println(\"testStartIdempotence >> giving some time again\");\n  Thread.sleep(500);\n  Set<Thread> rxThreadsAfter=new HashSet<Thread>();\n  for (  Thread t : Thread.getAllStackTraces().keySet()) {\n    if (t.getName().startsWith(\"Rx\")) {\n      rxThreadsAfter.add(t);\n      System.out.println(\"testStartIdempotence >>>> \" + t);\n    }\n  }\n  rxThreadsAfter.removeAll(rxThreadsBefore);\n  Assert.assertTrue(\"Some new threads appeared: \" + rxThreadsAfter,rxThreadsAfter.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Assert.assertTrue(\"Some new threads appeared: \" + rxThreadsAfter,rxThreadsAfter.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 134,
    "startColumnNumber" : 8,
    "endLineNumber" : 134,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}