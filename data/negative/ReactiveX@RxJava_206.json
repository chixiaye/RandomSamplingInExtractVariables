{
  "id" : 206,
  "expression" : "i % 3",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableWindowWithObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i % 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 69,
      "startColumnNumber" : 16,
      "endLineNumber" : 69,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i % 3 == 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i % 3 == 2 && i < n - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i % 3 == 2 && i < n - 1) {\n  boundary.onNext(i / 3);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 67,
        "startColumnNumber" : 36,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  source.onNext(i);\n  if (i % 3 == 2 && i < n - 1) {\n    boundary.onNext(i / 3);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  source.onNext(i);\n  if (i % 3 == 2 && i < n - 1) {\n    boundary.onNext(i / 3);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 36,
        "startColumnNumber" : 49,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  PublishProcessor<Integer> boundary=PublishProcessor.create();\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  final List<Subscriber<Object>> values=new ArrayList<Subscriber<Object>>();\n  Subscriber<Flowable<Integer>> wo=new DefaultObserver<Flowable<Integer>>(){\n    @Override public void onNext(    Flowable<Integer> args){\n      final Subscriber<Object> mo=TestHelper.mockSubscriber();\n      values.add(mo);\n      args.subscribe(mo);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n;\n  source.window(boundary).subscribe(wo);\n  int n=30;\n  for (int i=0; i < n; i++) {\n    source.onNext(i);\n    if (i % 3 == 2 && i < n - 1) {\n      boundary.onNext(i / 3);\n    }\n  }\n  source.onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  assertEquals(n / 3,values.size());\n  int j=0;\n  for (  Subscriber<Object> mo : values) {\n    verify(mo,never()).onError(any(Throwable.class));\n    for (int i=0; i < 3; i++) {\n      verify(mo).onNext(j + i);\n    }\n    verify(mo).onComplete();\n    j+=3;\n  }\n  verify(o).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWindowViaObservableNormal1(){\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  PublishProcessor<Integer> boundary=PublishProcessor.create();\n  final Subscriber<Object> o=TestHelper.mockSubscriber();\n  final List<Subscriber<Object>> values=new ArrayList<Subscriber<Object>>();\n  Subscriber<Flowable<Integer>> wo=new DefaultObserver<Flowable<Integer>>(){\n    @Override public void onNext(    Flowable<Integer> args){\n      final Subscriber<Object> mo=TestHelper.mockSubscriber();\n      values.add(mo);\n      args.subscribe(mo);\n    }\n    @Override public void onError(    Throwable e){\n      o.onError(e);\n    }\n    @Override public void onComplete(){\n      o.onComplete();\n    }\n  }\n;\n  source.window(boundary).subscribe(wo);\n  int n=30;\n  for (int i=0; i < n; i++) {\n    source.onNext(i);\n    if (i % 3 == 2 && i < n - 1) {\n      boundary.onNext(i / 3);\n    }\n  }\n  source.onComplete();\n  verify(o,never()).onError(any(Throwable.class));\n  assertEquals(n / 3,values.size());\n  int j=0;\n  for (  Subscriber<Object> mo : values) {\n    verify(mo,never()).onError(any(Throwable.class));\n    for (int i=0; i < 3; i++) {\n      verify(mo).onNext(j + i);\n    }\n    verify(mo).onComplete();\n    j+=3;\n  }\n  verify(o).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 39
      },
      "nodeContext" : "i % 3 == 2 && i < n - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 69,
    "startColumnNumber" : 16,
    "endLineNumber" : 69,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}