{
  "id" : 342,
  "expression" : "key",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "hystrix-core/src/main/java/com/netflix/hystrix/HystrixRequestCache.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 152,
      "startColumnNumber" : 12,
      "endLineNumber" : 152,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 23
      },
      "nodeContext" : "key != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key != null) {\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n  if (cacheInstance == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  cacheInstance.remove(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Clear the cache for a given cacheKey.\n * @param cacheKey key as defined by  {@link HystrixCommand#getCacheKey()}\n */\npublic void clear(String cacheKey){\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 23
      },
      "nodeContext" : "key != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixRequestCache.ValueCacheKey"
  }, {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 159,
      "startColumnNumber" : 33,
      "endLineNumber" : 159,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 37
      },
      "nodeContext" : "cacheInstance.remove(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cacheInstance.remove(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 152,
        "startColumnNumber" : 25,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n  if (cacheInstance == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  cacheInstance.remove(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key != null) {\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n  if (cacheInstance == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  cacheInstance.remove(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Clear the cache for a given cacheKey.\n * @param cacheKey key as defined by  {@link HystrixCommand#getCacheKey()}\n */\npublic void clear(String cacheKey){\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> cacheInstance=requestVariableForCache.get(concurrencyStrategy);\n    if (cacheInstance == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    cacheInstance.remove(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cacheInstance.remove(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixRequestCache.ValueCacheKey"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 152,
    "startColumnNumber" : 12,
    "endLineNumber" : 152,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 159,
    "startColumnNumber" : 33,
    "endLineNumber" : 159,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}