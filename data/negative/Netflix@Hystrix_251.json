{
  "id" : 251,
  "expression" : "System",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-examples/src/main/java/com/netflix/hystrix/examples/basic/ObservableCollapserGetWordForNumber.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 87,
      "startColumnNumber" : 2,
      "endLineNumber" : 87,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 12
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 111
      },
      "nodeContext" : "System.out.println(\"Creating batch for \" + requests.size() + \" requests. Total invocations so far: \"+ count)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 112
      },
      "nodeContext" : "System.out.println(\"Creating batch for \" + requests.size() + \" requests. Total invocations so far: \"+ count);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 85,
        "startColumnNumber" : 1,
        "endLineNumber" : 96,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int count=counter.incrementAndGet();\n  System.out.println(\"Creating batch for \" + requests.size() + \" requests. Total invocations so far: \"+ count);\n  final List<Integer> numbers=new ArrayList<Integer>();\n  for (  final CollapsedRequest<String,Integer> request : requests) {\n    numbers.add(request.getArgument());\n  }\n  return new ObservableCommandNumbersToWords(numbers);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 82,
        "startColumnNumber" : 1,
        "endLineNumber" : 96,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"boxing\") @Override protected HystrixObservableCommand<NumberWord> createCommand(final Collection<CollapsedRequest<String,Integer>> requests){\n  final int count=counter.incrementAndGet();\n  System.out.println(\"Creating batch for \" + requests.size() + \" requests. Total invocations so far: \"+ count);\n  final List<Integer> numbers=new ArrayList<Integer>();\n  for (  final CollapsedRequest<String,Integer> request : requests) {\n    numbers.add(request.getArgument());\n  }\n  return new ObservableCommandNumbersToWords(numbers);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 112
      },
      "nodeContext" : "System.out.println(\"Creating batch for \" + requests.size() + \" requests. Total invocations so far: \"+ count);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 87,
    "startColumnNumber" : 2,
    "endLineNumber" : 87,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ ]
}