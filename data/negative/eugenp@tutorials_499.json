{
  "id" : 499,
  "expression" : "5",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lang-math-2/src/test/java/com/baeldung/algorithms/rectanglesoverlap/RectangleUnitTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 15,
      "startColumnNumber" : 46,
      "endLineNumber" : 15,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 15,
        "startColumnNumber" : 45,
        "endLineNumber" : 15,
        "endColumnNumber" : 47
      },
      "nodeContext" : "-5",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 15,
        "endColumnNumber" : 52
      },
      "nodeContext" : "new Point(-5,-2)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 15,
        "startColumnNumber" : 21,
        "endLineNumber" : 15,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new Rectangle(new Point(-5,-2),new Point(2,3))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 10,
        "startColumnNumber" : 89,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoOverlappingRectangles_whenisOverlappingCalled_shouldReturnTrue(){\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 16,
      "startColumnNumber" : 64,
      "endLineNumber" : 16,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 16,
        "startColumnNumber" : 54,
        "endLineNumber" : 16,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new Point(5,2)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 16,
        "startColumnNumber" : 21,
        "endLineNumber" : 16,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new Rectangle(new Point(-2,-1),new Point(5,2))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 10,
        "startColumnNumber" : 89,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoOverlappingRectangles_whenisOverlappingCalled_shouldReturnTrue(){\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 19,
      "startColumnNumber" : 46,
      "endLineNumber" : 19,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 19,
        "startColumnNumber" : 45,
        "endLineNumber" : 19,
        "endColumnNumber" : 47
      },
      "nodeContext" : "-5",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 19,
        "startColumnNumber" : 35,
        "endLineNumber" : 19,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new Point(-5,1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 19,
        "startColumnNumber" : 21,
        "endLineNumber" : 19,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new Rectangle(new Point(-5,1),new Point(2,4))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 69
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,1),new Point(2,4))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 10,
        "startColumnNumber" : 89,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoOverlappingRectangles_whenisOverlappingCalled_shouldReturnTrue(){\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 20,
      "startColumnNumber" : 64,
      "endLineNumber" : 20,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 20,
        "startColumnNumber" : 54,
        "endLineNumber" : 20,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new Point(5,5)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 20,
        "startColumnNumber" : 21,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new Rectangle(new Point(-2,-2),new Point(5,5))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 10,
        "startColumnNumber" : 89,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoOverlappingRectangles_whenisOverlappingCalled_shouldReturnTrue(){\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 20,
      "startColumnNumber" : 67,
      "endLineNumber" : 20,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 20,
        "startColumnNumber" : 54,
        "endLineNumber" : 20,
        "endColumnNumber" : 69
      },
      "nodeContext" : "new Point(5,5)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 20,
        "startColumnNumber" : 21,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new Rectangle(new Point(-2,-2),new Point(5,5))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 10,
        "startColumnNumber" : 89,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoOverlappingRectangles_whenisOverlappingCalled_shouldReturnTrue(){\n  Rectangle rectangle1=new Rectangle(new Point(2,1),new Point(4,3));\n  Rectangle rectangle2=new Rectangle(new Point(1,1),new Point(6,4));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,-2),new Point(2,3));\n  rectangle2=new Rectangle(new Point(-2,-1),new Point(5,2));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n  rectangle1=new Rectangle(new Point(-5,1),new Point(2,4));\n  rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n  assertTrue(rectangle1.isOverlapping(rectangle2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 71
      },
      "nodeContext" : "rectangle2=new Rectangle(new Point(-2,-2),new Point(5,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 15,
    "startColumnNumber" : 46,
    "endLineNumber" : 15,
    "endColumnNumber" : 47
  }, {
    "charLength" : 1,
    "startLineNumber" : 16,
    "startColumnNumber" : 64,
    "endLineNumber" : 16,
    "endColumnNumber" : 65
  }, {
    "charLength" : 1,
    "startLineNumber" : 19,
    "startColumnNumber" : 46,
    "endLineNumber" : 19,
    "endColumnNumber" : 47
  }, {
    "charLength" : 1,
    "startLineNumber" : 20,
    "startColumnNumber" : 64,
    "endLineNumber" : 20,
    "endColumnNumber" : 65
  }, {
    "charLength" : 1,
    "startLineNumber" : 20,
    "startColumnNumber" : 67,
    "endLineNumber" : 20,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 0
  } ]
}