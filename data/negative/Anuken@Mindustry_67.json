{
  "id" : 67,
  "expression" : "mx == 0",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/graphics/MenuRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mx == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 131,
      "startColumnNumber" : 82,
      "endLineNumber" : 131,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 131,
        "startColumnNumber" : 82,
        "endLineNumber" : 131,
        "endColumnNumber" : 100
      },
      "nodeContext" : "mx == 0 || my == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 131,
        "startColumnNumber" : 82,
        "endLineNumber" : 131,
        "endColumnNumber" : 121
      },
      "nodeContext" : "mx == 0 || my == 0 || mx == secSize - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 131,
        "startColumnNumber" : 82,
        "endLineNumber" : 131,
        "endColumnNumber" : 142
      },
      "nodeContext" : "mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 131,
        "startColumnNumber" : 81,
        "endLineNumber" : 131,
        "endColumnNumber" : 143
      },
      "nodeContext" : "(mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 131,
        "endColumnNumber" : 143
      },
      "nodeContext" : "s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 131,
        "startColumnNumber" : 20,
        "endLineNumber" : 141,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n  floor=Blocks.darkPanel3;\n  if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n    floor=Blocks.darkPanel4;\n  }\n  if (wall != Blocks.air && Mathf.chance(0.7)) {\n    wall=Blocks.darkMetal;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 128,
        "startColumnNumber" : 24,
        "endLineNumber" : 142,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int mx=x % secSize, my=y % secSize;\n  int sclx=x / secSize, scly=y / secSize;\n  if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n    floor=Blocks.darkPanel3;\n    if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n      floor=Blocks.darkPanel4;\n    }\n    if (wall != Blocks.air && Mathf.chance(0.7)) {\n      wall=Blocks.darkMetal;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 142,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (tech) {\n  int mx=x % secSize, my=y % secSize;\n  int sclx=x / secSize, scly=y / secSize;\n  if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n    floor=Blocks.darkPanel3;\n    if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n      floor=Blocks.darkPanel4;\n    }\n    if (wall != Blocks.air && Mathf.chance(0.7)) {\n      wall=Blocks.darkMetal;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2677,
        "startLineNumber" : 85,
        "startColumnNumber" : 43,
        "endLineNumber" : 161,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Block floor=floord;\n  Block ore=Blocks.air;\n  Block wall=Blocks.air;\n  if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n    wall=walld;\n  }\n  if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n    floor=floord2;\n    if (wall != Blocks.air) {\n      wall=walld2;\n    }\n  }\n  if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n    ore=ore1;\n  }\n  if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n    ore=ore2;\n  }\n  if (doheat) {\n    double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n    double base=0.65;\n    if (heat > base) {\n      ore=Blocks.air;\n      wall=Blocks.air;\n      floor=Blocks.basalt;\n      if (heat > base + 0.1) {\n        floor=Blocks.hotrock;\n        if (heat > base + 0.15) {\n          floor=Blocks.magmarock;\n        }\n      }\n    }\n  }\n  if (tech) {\n    int mx=x % secSize, my=y % secSize;\n    int sclx=x / secSize, scly=y / secSize;\n    if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n      floor=Blocks.darkPanel3;\n      if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n        floor=Blocks.darkPanel4;\n      }\n      if (wall != Blocks.air && Mathf.chance(0.7)) {\n        wall=Blocks.darkMetal;\n      }\n    }\n  }\n  if (tendrils) {\n    if (rid.getValue(x,y,1f / 17f) > 0f) {\n      floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n      if (wall != Blocks.air) {\n        wall=Blocks.sporeWall;\n      }\n    }\n  }\n  Tile tile;\n  tiles.set(x,y,(tile=new CachedTile()));\n  tile.x=(short)x;\n  tile.y=(short)y;\n  tile.setFloor(floor.asFloor());\n  tile.setBlock(wall);\n  tile.setOverlay(ore);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 384,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  Block floor=floord;\n  Block ore=Blocks.air;\n  Block wall=Blocks.air;\n  if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n    wall=walld;\n  }\n  if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n    floor=floord2;\n    if (wall != Blocks.air) {\n      wall=walld2;\n    }\n  }\n  if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n    ore=ore1;\n  }\n  if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n    ore=ore2;\n  }\n  if (doheat) {\n    double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n    double base=0.65;\n    if (heat > base) {\n      ore=Blocks.air;\n      wall=Blocks.air;\n      floor=Blocks.basalt;\n      if (heat > base + 0.1) {\n        floor=Blocks.hotrock;\n        if (heat > base + 0.15) {\n          floor=Blocks.magmarock;\n        }\n      }\n    }\n  }\n  if (tech) {\n    int mx=x % secSize, my=y % secSize;\n    int sclx=x / secSize, scly=y / secSize;\n    if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n      floor=Blocks.darkPanel3;\n      if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n        floor=Blocks.darkPanel4;\n      }\n      if (wall != Blocks.air && Mathf.chance(0.7)) {\n        wall=Blocks.darkMetal;\n      }\n    }\n  }\n  if (tendrils) {\n    if (rid.getValue(x,y,1f / 17f) > 0f) {\n      floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n      if (wall != Blocks.air) {\n        wall=Blocks.sporeWall;\n      }\n    }\n  }\n  Tile tile;\n  tiles.set(x,y,(tile=new CachedTile()));\n  tile.x=(short)x;\n  tile.y=(short)y;\n  tile.setFloor(floor.asFloor());\n  tile.setBlock(wall);\n  tile.setOverlay(ore);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 395,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2732,
        "startLineNumber" : 84,
        "startColumnNumber" : 38,
        "endLineNumber" : 162,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int y=0; y < height; y++) {\n    Block floor=floord;\n    Block ore=Blocks.air;\n    Block wall=Blocks.air;\n    if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n      wall=walld;\n    }\n    if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n      floor=floord2;\n      if (wall != Blocks.air) {\n        wall=walld2;\n      }\n    }\n    if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n      ore=ore1;\n    }\n    if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n      ore=ore2;\n    }\n    if (doheat) {\n      double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n      double base=0.65;\n      if (heat > base) {\n        ore=Blocks.air;\n        wall=Blocks.air;\n        floor=Blocks.basalt;\n        if (heat > base + 0.1) {\n          floor=Blocks.hotrock;\n          if (heat > base + 0.15) {\n            floor=Blocks.magmarock;\n          }\n        }\n      }\n    }\n    if (tech) {\n      int mx=x % secSize, my=y % secSize;\n      int sclx=x / secSize, scly=y / secSize;\n      if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n        floor=Blocks.darkPanel3;\n        if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n          floor=Blocks.darkPanel4;\n        }\n        if (wall != Blocks.air && Mathf.chance(0.7)) {\n          wall=Blocks.darkMetal;\n        }\n      }\n    }\n    if (tendrils) {\n      if (rid.getValue(x,y,1f / 17f) > 0f) {\n        floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n        if (wall != Blocks.air) {\n          wall=Blocks.sporeWall;\n        }\n      }\n    }\n    Tile tile;\n    tiles.set(x,y,(tile=new CachedTile()));\n    tile.x=(short)x;\n    tile.y=(short)y;\n    tile.setFloor(floor.asFloor());\n    tile.setBlock(wall);\n    tile.setOverlay(ore);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 396,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2762,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  for (int y=0; y < height; y++) {\n    Block floor=floord;\n    Block ore=Blocks.air;\n    Block wall=Blocks.air;\n    if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n      wall=walld;\n    }\n    if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n      floor=floord2;\n      if (wall != Blocks.air) {\n        wall=walld2;\n      }\n    }\n    if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n      ore=ore1;\n    }\n    if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n      ore=ore2;\n    }\n    if (doheat) {\n      double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n      double base=0.65;\n      if (heat > base) {\n        ore=Blocks.air;\n        wall=Blocks.air;\n        floor=Blocks.basalt;\n        if (heat > base + 0.1) {\n          floor=Blocks.hotrock;\n          if (heat > base + 0.15) {\n            floor=Blocks.magmarock;\n          }\n        }\n      }\n    }\n    if (tech) {\n      int mx=x % secSize, my=y % secSize;\n      int sclx=x / secSize, scly=y / secSize;\n      if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n        floor=Blocks.darkPanel3;\n        if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n          floor=Blocks.darkPanel4;\n        }\n        if (wall != Blocks.air && Mathf.chance(0.7)) {\n          wall=Blocks.darkMetal;\n        }\n      }\n    }\n    if (tendrils) {\n      if (rid.getValue(x,y,1f / 17f) > 0f) {\n        floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n        if (wall != Blocks.air) {\n          wall=Blocks.sporeWall;\n        }\n      }\n    }\n    Tile tile;\n    tiles.set(x,y,(tile=new CachedTile()));\n    tile.x=(short)x;\n    tile.y=(short)y;\n    tile.setFloor(floor.asFloor());\n    tile.setBlock(wall);\n    tile.setOverlay(ore);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 407,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4566,
        "startLineNumber" : 42,
        "startColumnNumber" : 27,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  world.beginMapLoad();\n  Tiles tiles=world.resize(width,height);\n  Seq<Block> ores=content.blocks().select(b -> b instanceof OreBlock);\n  shadows=new FrameBuffer(width,height);\n  int offset=Mathf.random(100000);\n  Simplex s1=new Simplex(offset);\n  Simplex s2=new Simplex(offset + 1);\n  Simplex s3=new Simplex(offset + 2);\n  RidgedPerlin rid=new RidgedPerlin(1 + offset,1);\n  Block[] selected=Structs.select(new Block[]{Blocks.sand,Blocks.sandWall},new Block[]{Blocks.shale,Blocks.shaleWall},new Block[]{Blocks.ice,Blocks.iceWall},new Block[]{Blocks.sand,Blocks.sandWall},new Block[]{Blocks.shale,Blocks.shaleWall},new Block[]{Blocks.ice,Blocks.iceWall},new Block[]{Blocks.moss,Blocks.sporePine});\n  Block[] selected2=Structs.select(new Block[]{Blocks.basalt,Blocks.duneWall},new Block[]{Blocks.basalt,Blocks.duneWall},new Block[]{Blocks.stone,Blocks.stoneWall},new Block[]{Blocks.stone,Blocks.stoneWall},new Block[]{Blocks.moss,Blocks.sporeWall},new Block[]{Blocks.salt,Blocks.saltWall});\n  Block ore1=ores.random();\n  ores.remove(ore1);\n  Block ore2=ores.random();\n  double tr1=Mathf.random(0.65f,0.85f);\n  double tr2=Mathf.random(0.65f,0.85f);\n  boolean doheat=Mathf.chance(0.25);\n  boolean tendrils=Mathf.chance(0.25);\n  boolean tech=Mathf.chance(0.25);\n  int secSize=10;\n  Block floord=selected[0], walld=selected[1];\n  Block floord2=selected2[0], walld2=selected2[1];\n  for (int x=0; x < width; x++) {\n    for (int y=0; y < height; y++) {\n      Block floor=floord;\n      Block ore=Blocks.air;\n      Block wall=Blocks.air;\n      if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n        wall=walld;\n      }\n      if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n        floor=floord2;\n        if (wall != Blocks.air) {\n          wall=walld2;\n        }\n      }\n      if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n        ore=ore1;\n      }\n      if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n        ore=ore2;\n      }\n      if (doheat) {\n        double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n        double base=0.65;\n        if (heat > base) {\n          ore=Blocks.air;\n          wall=Blocks.air;\n          floor=Blocks.basalt;\n          if (heat > base + 0.1) {\n            floor=Blocks.hotrock;\n            if (heat > base + 0.15) {\n              floor=Blocks.magmarock;\n            }\n          }\n        }\n      }\n      if (tech) {\n        int mx=x % secSize, my=y % secSize;\n        int sclx=x / secSize, scly=y / secSize;\n        if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n          floor=Blocks.darkPanel3;\n          if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n            floor=Blocks.darkPanel4;\n          }\n          if (wall != Blocks.air && Mathf.chance(0.7)) {\n            wall=Blocks.darkMetal;\n          }\n        }\n      }\n      if (tendrils) {\n        if (rid.getValue(x,y,1f / 17f) > 0f) {\n          floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n          if (wall != Blocks.air) {\n            wall=Blocks.sporeWall;\n          }\n        }\n      }\n      Tile tile;\n      tiles.set(x,y,(tile=new CachedTile()));\n      tile.x=(short)x;\n      tile.y=(short)y;\n      tile.setFloor(floor.asFloor());\n      tile.setBlock(wall);\n      tile.setOverlay(ore);\n    }\n  }\n  world.endMapLoad();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 775,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4589,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void generate(){\n  world.beginMapLoad();\n  Tiles tiles=world.resize(width,height);\n  Seq<Block> ores=content.blocks().select(b -> b instanceof OreBlock);\n  shadows=new FrameBuffer(width,height);\n  int offset=Mathf.random(100000);\n  Simplex s1=new Simplex(offset);\n  Simplex s2=new Simplex(offset + 1);\n  Simplex s3=new Simplex(offset + 2);\n  RidgedPerlin rid=new RidgedPerlin(1 + offset,1);\n  Block[] selected=Structs.select(new Block[]{Blocks.sand,Blocks.sandWall},new Block[]{Blocks.shale,Blocks.shaleWall},new Block[]{Blocks.ice,Blocks.iceWall},new Block[]{Blocks.sand,Blocks.sandWall},new Block[]{Blocks.shale,Blocks.shaleWall},new Block[]{Blocks.ice,Blocks.iceWall},new Block[]{Blocks.moss,Blocks.sporePine});\n  Block[] selected2=Structs.select(new Block[]{Blocks.basalt,Blocks.duneWall},new Block[]{Blocks.basalt,Blocks.duneWall},new Block[]{Blocks.stone,Blocks.stoneWall},new Block[]{Blocks.stone,Blocks.stoneWall},new Block[]{Blocks.moss,Blocks.sporeWall},new Block[]{Blocks.salt,Blocks.saltWall});\n  Block ore1=ores.random();\n  ores.remove(ore1);\n  Block ore2=ores.random();\n  double tr1=Mathf.random(0.65f,0.85f);\n  double tr2=Mathf.random(0.65f,0.85f);\n  boolean doheat=Mathf.chance(0.25);\n  boolean tendrils=Mathf.chance(0.25);\n  boolean tech=Mathf.chance(0.25);\n  int secSize=10;\n  Block floord=selected[0], walld=selected[1];\n  Block floord2=selected2[0], walld2=selected2[1];\n  for (int x=0; x < width; x++) {\n    for (int y=0; y < height; y++) {\n      Block floor=floord;\n      Block ore=Blocks.air;\n      Block wall=Blocks.air;\n      if (s1.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n        wall=walld;\n      }\n      if (s3.octaveNoise2D(3,0.5,1 / 20.0,x,y) > 0.5) {\n        floor=floord2;\n        if (wall != Blocks.air) {\n          wall=walld2;\n        }\n      }\n      if (s2.octaveNoise2D(3,0.3,1 / 30.0,x,y) > tr1) {\n        ore=ore1;\n      }\n      if (s2.octaveNoise2D(2,0.2,1 / 15.0,x,y + 99999) > tr2) {\n        ore=ore2;\n      }\n      if (doheat) {\n        double heat=s3.octaveNoise2D(4,0.6,1 / 50.0,x,y + 9999);\n        double base=0.65;\n        if (heat > base) {\n          ore=Blocks.air;\n          wall=Blocks.air;\n          floor=Blocks.basalt;\n          if (heat > base + 0.1) {\n            floor=Blocks.hotrock;\n            if (heat > base + 0.15) {\n              floor=Blocks.magmarock;\n            }\n          }\n        }\n      }\n      if (tech) {\n        int mx=x % secSize, my=y % secSize;\n        int sclx=x / secSize, scly=y / secSize;\n        if (s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)) {\n          floor=Blocks.darkPanel3;\n          if (Mathf.dst(mx,my,secSize / 2,secSize / 2) > secSize / 2f + 1) {\n            floor=Blocks.darkPanel4;\n          }\n          if (wall != Blocks.air && Mathf.chance(0.7)) {\n            wall=Blocks.darkMetal;\n          }\n        }\n      }\n      if (tendrils) {\n        if (rid.getValue(x,y,1f / 17f) > 0f) {\n          floor=Mathf.chance(0.2) ? Blocks.sporeMoss : Blocks.moss;\n          if (wall != Blocks.air) {\n            wall=Blocks.sporeWall;\n          }\n        }\n      }\n      Tile tile;\n      tiles.set(x,y,(tile=new CachedTile()));\n      tile.x=(short)x;\n      tile.y=(short)y;\n      tile.setFloor(floor.asFloor());\n      tile.setBlock(wall);\n      tile.setOverlay(ore);\n    }\n  }\n  world.endMapLoad();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 779,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 131,
        "endColumnNumber" : 143
      },
      "nodeContext" : "s1.octaveNoise2D(2,1f / 10f,0.5f,sclx,scly) > 0.4f && (mx == 0 || my == 0 || mx == secSize - 1 || my == secSize - 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 33,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 131,
    "startColumnNumber" : 82,
    "endLineNumber" : 131,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}