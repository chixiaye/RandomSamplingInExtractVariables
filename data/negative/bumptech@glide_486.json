{
  "id" : 486,
  "expression" : "other",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/androidTest/java/com/bumptech/glide/request/BaseRequestOptionsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "other",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 28,
      "startColumnNumber" : 4,
      "endLineNumber" : 28,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 61
      },
      "nodeContext" : "other.transform(Object.class,mock(Transformation.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 62
      },
      "nodeContext" : "other.transform(Object.class,mock(Transformation.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 26,
        "startColumnNumber" : 83,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestOptions other=new TestOptions();\n  other.transform(Object.class,mock(Transformation.class));\n  options.apply(other);\n  assertThat(options.isTransformationSet()).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTransformationIsSetAfterApplyingOtherOptionsWithTransformation(){\n  TestOptions other=new TestOptions();\n  other.transform(Object.class,mock(Transformation.class));\n  options.apply(other);\n  assertThat(options.isTransformationSet()).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 62
      },
      "nodeContext" : "other.transform(Object.class,mock(Transformation.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.request.BaseRequestOptionsTest.TestOptions"
  }, {
    "nodeContext" : "other",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 29,
      "startColumnNumber" : 18,
      "endLineNumber" : 29,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 24
      },
      "nodeContext" : "options.apply(other)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 25
      },
      "nodeContext" : "options.apply(other);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 26,
        "startColumnNumber" : 83,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestOptions other=new TestOptions();\n  other.transform(Object.class,mock(Transformation.class));\n  options.apply(other);\n  assertThat(options.isTransformationSet()).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTransformationIsSetAfterApplyingOtherOptionsWithTransformation(){\n  TestOptions other=new TestOptions();\n  other.transform(Object.class,mock(Transformation.class));\n  options.apply(other);\n  assertThat(options.isTransformationSet()).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 25
      },
      "nodeContext" : "options.apply(other);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.request.BaseRequestOptionsTest.TestOptions"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 28,
    "startColumnNumber" : 4,
    "endLineNumber" : 28,
    "endColumnNumber" : 9
  }, {
    "charLength" : 5,
    "startLineNumber" : 29,
    "startColumnNumber" : 18,
    "endLineNumber" : 29,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}