{
  "id" : 217,
  "expression" : "pagingSelect",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/pagination/dialects/DB2Dialect.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 53,
      "startColumnNumber" : 12,
      "endLineNumber" : 53,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 50
      },
      "nodeContext" : "pagingSelect.append(\" row_.* from ( \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 95
      },
      "nodeContext" : "pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 116
      },
      "nodeContext" : "pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 117
      },
      "nodeContext" : "pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 52,
        "startColumnNumber" : 38,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hasDistinct(originalSql)) {\n  pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n}\n else {\n  pagingSelect.append(originalSql.substring(startOfSelect + 6));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 117
      },
      "nodeContext" : "pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 55,
      "startColumnNumber" : 12,
      "endLineNumber" : 55,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 73
      },
      "nodeContext" : "pagingSelect.append(originalSql.substring(startOfSelect + 6))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pagingSelect.append(originalSql.substring(startOfSelect + 6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  pagingSelect.append(originalSql.substring(startOfSelect + 6));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hasDistinct(originalSql)) {\n  pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n}\n else {\n  pagingSelect.append(originalSql.substring(startOfSelect + 6));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pagingSelect.append(originalSql.substring(startOfSelect + 6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 57,
      "startColumnNumber" : 8,
      "endLineNumber" : 57,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pagingSelect.append(\" ) as temp_ where rownumber_ \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pagingSelect.append(\" ) as temp_ where rownumber_ \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pagingSelect.append(\" ) as temp_ where rownumber_ \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 62,
      "startColumnNumber" : 12,
      "endLineNumber" : 62,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "pagingSelect.append(\"between \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 58
      },
      "nodeContext" : "pagingSelect.append(\"between \").append(offset)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 76
      },
      "nodeContext" : "pagingSelect.append(\"between \").append(offset).append(\"+1 and \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 94
      },
      "nodeContext" : "pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String endString=offset + \"+\" + limit;\n  pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (offset > 0) {\n  String endString=offset + \"+\" + limit;\n  pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n}\n else {\n  pagingSelect.append(\"<= \").append(limit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 64,
      "startColumnNumber" : 12,
      "endLineNumber" : 64,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pagingSelect.append(\"<= \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 52
      },
      "nodeContext" : "pagingSelect.append(\"<= \").append(limit)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "pagingSelect.append(\"<= \").append(limit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 63,
        "startColumnNumber" : 15,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  pagingSelect.append(\"<= \").append(limit);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (offset > 0) {\n  String endString=offset + \"+\" + limit;\n  pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n}\n else {\n  pagingSelect.append(\"<= \").append(limit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "pagingSelect.append(\"<= \").append(limit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "pagingSelect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 66,
      "startColumnNumber" : 15,
      "endLineNumber" : 66,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 66,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pagingSelect.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return pagingSelect.toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String buildPaginationSql(String originalSql,int offset,int limit){\n  int startOfSelect=originalSql.toLowerCase().indexOf(\"select\");\n  StringBuilder pagingSelect=new StringBuilder(originalSql.length() + 100).append(originalSql.substring(0,startOfSelect)).append(\"select * from ( select \").append(getRowNumber(originalSql));\n  if (hasDistinct(originalSql)) {\n    pagingSelect.append(\" row_.* from ( \").append(originalSql.substring(startOfSelect)).append(\" ) as row_\");\n  }\n else {\n    pagingSelect.append(originalSql.substring(startOfSelect + 6));\n  }\n  pagingSelect.append(\" ) as temp_ where rownumber_ \");\n  if (offset > 0) {\n    String endString=offset + \"+\" + limit;\n    pagingSelect.append(\"between \").append(offset).append(\"+1 and \").append(endString);\n  }\n else {\n    pagingSelect.append(\"<= \").append(limit);\n  }\n  return pagingSelect.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return pagingSelect.toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 53,
    "startColumnNumber" : 12,
    "endLineNumber" : 53,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 55,
    "startColumnNumber" : 12,
    "endLineNumber" : 55,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 57,
    "startColumnNumber" : 8,
    "endLineNumber" : 57,
    "endColumnNumber" : 20
  }, {
    "charLength" : 12,
    "startLineNumber" : 62,
    "startColumnNumber" : 12,
    "endLineNumber" : 62,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 64,
    "startColumnNumber" : 12,
    "endLineNumber" : 64,
    "endColumnNumber" : 24
  }, {
    "charLength" : 12,
    "startLineNumber" : 66,
    "startColumnNumber" : 15,
    "endLineNumber" : 66,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}