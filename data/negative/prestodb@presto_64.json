{
  "id" : 64,
  "expression" : "actual.getDefinitionLevels()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-parquet/src/main/java/com/facebook/presto/parquet/ParquetResultVerifierUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actual.getDefinitionLevels()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 82,
      "startColumnNumber" : 30,
      "endLineNumber" : 82,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 82,
        "startColumnNumber" : 18,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "actualDLs=actual.getDefinitionLevels()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 59
      },
      "nodeContext" : "int[] actualDLs=actual.getDefinitionLevels();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 68,
        "startColumnNumber" : 28,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int[] actualRLs=actual.getRepetitionLevels();\n  int[] expectedRLs=expected.getRepetitionLevels();\n  if (actualRLs.length != expectedRLs.length) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedRLs.length,actualRLs.length,column,type,sourceId));\n  }\n  for (int i=0; i < actualRLs.length; i++) {\n    if (actualRLs[i] != expectedRLs[i]) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedRLs[i],actualRLs[i],column,type,sourceId));\n    }\n  }\n  int[] actualDLs=actual.getDefinitionLevels();\n  int[] expectedDLs=expected.getDefinitionLevels();\n  if (actualDLs.length != expectedDLs.length) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong DL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedDLs.length,actualDLs.length,column,type,sourceId));\n  }\n  for (int i=0; i < actualDLs.length; i++) {\n    if (actualDLs[i] != expectedDLs[i]) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedDLs[i],actualDLs[i],column,type,sourceId));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1672,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isNestedColumn) {\n  int[] actualRLs=actual.getRepetitionLevels();\n  int[] expectedRLs=expected.getRepetitionLevels();\n  if (actualRLs.length != expectedRLs.length) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedRLs.length,actualRLs.length,column,type,sourceId));\n  }\n  for (int i=0; i < actualRLs.length; i++) {\n    if (actualRLs[i] != expectedRLs[i]) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedRLs[i],actualRLs[i],column,type,sourceId));\n    }\n  }\n  int[] actualDLs=actual.getDefinitionLevels();\n  int[] expectedDLs=expected.getDefinitionLevels();\n  if (actualDLs.length != expectedDLs.length) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong DL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedDLs.length,actualDLs.length,column,type,sourceId));\n  }\n  for (int i=0; i < actualDLs.length; i++) {\n    if (actualDLs[i] != expectedDLs[i]) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedDLs[i],actualDLs[i],column,type,sourceId));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 181,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3625,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Block actualBlock=actual.getBlock();\n  Block expectedBlock=expected.getBlock();\n  Type type=field.getType();\n  String column=Joiner.on(\".\").join(field.getDescriptor().getPath());\n  if (actualBlock.getPositionCount() != expectedBlock.getPositionCount()) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong count: ex=%d, act=%d, col=%s, file=%s\",expectedBlock.getPositionCount(),actualBlock.getPositionCount(),column,sourceId));\n  }\n  for (int position=0; position < actualBlock.getPositionCount(); position++) {\n    Object actualValue;\n    Object expectedValue;\n    if (type.equals(TIMESTAMP)) {\n      actualValue=actualBlock.isNull(position) ? null : type.getLong(actualBlock,position);\n      expectedValue=expectedBlock.isNull(position) ? null : type.getLong(expectedBlock,position);\n    }\n else {\n      actualValue=type.getObjectValue(null,actualBlock,position);\n      expectedValue=type.getObjectValue(null,expectedBlock,position);\n    }\n    if (actualValue == null || expectedValue == null) {\n      if (actualValue != expectedValue) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",position,expectedValue,actualValue,column,type,sourceId));\n      }\n    }\n else {\n      if (!actualValue.equals(expectedValue)) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",position,expectedValue,actualValue,column,type,sourceId));\n      }\n    }\n  }\n  if (isNestedColumn) {\n    int[] actualRLs=actual.getRepetitionLevels();\n    int[] expectedRLs=expected.getRepetitionLevels();\n    if (actualRLs.length != expectedRLs.length) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedRLs.length,actualRLs.length,column,type,sourceId));\n    }\n    for (int i=0; i < actualRLs.length; i++) {\n      if (actualRLs[i] != expectedRLs[i]) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedRLs[i],actualRLs[i],column,type,sourceId));\n      }\n    }\n    int[] actualDLs=actual.getDefinitionLevels();\n    int[] expectedDLs=expected.getDefinitionLevels();\n    if (actualDLs.length != expectedDLs.length) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong DL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedDLs.length,actualDLs.length,column,type,sourceId));\n    }\n    for (int i=0; i < actualDLs.length; i++) {\n      if (actualDLs[i] != expectedDLs[i]) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedDLs[i],actualDLs[i],column,type,sourceId));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 380,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3785,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void verifyColumnChunks(ColumnChunk actual,ColumnChunk expected,boolean isNestedColumn,PrimitiveField field,ParquetDataSourceId sourceId){\n  Block actualBlock=actual.getBlock();\n  Block expectedBlock=expected.getBlock();\n  Type type=field.getType();\n  String column=Joiner.on(\".\").join(field.getDescriptor().getPath());\n  if (actualBlock.getPositionCount() != expectedBlock.getPositionCount()) {\n    throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong count: ex=%d, act=%d, col=%s, file=%s\",expectedBlock.getPositionCount(),actualBlock.getPositionCount(),column,sourceId));\n  }\n  for (int position=0; position < actualBlock.getPositionCount(); position++) {\n    Object actualValue;\n    Object expectedValue;\n    if (type.equals(TIMESTAMP)) {\n      actualValue=actualBlock.isNull(position) ? null : type.getLong(actualBlock,position);\n      expectedValue=expectedBlock.isNull(position) ? null : type.getLong(expectedBlock,position);\n    }\n else {\n      actualValue=type.getObjectValue(null,actualBlock,position);\n      expectedValue=type.getObjectValue(null,expectedBlock,position);\n    }\n    if (actualValue == null || expectedValue == null) {\n      if (actualValue != expectedValue) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",position,expectedValue,actualValue,column,type,sourceId));\n      }\n    }\n else {\n      if (!actualValue.equals(expectedValue)) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",position,expectedValue,actualValue,column,type,sourceId));\n      }\n    }\n  }\n  if (isNestedColumn) {\n    int[] actualRLs=actual.getRepetitionLevels();\n    int[] expectedRLs=expected.getRepetitionLevels();\n    if (actualRLs.length != expectedRLs.length) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedRLs.length,actualRLs.length,column,type,sourceId));\n    }\n    for (int i=0; i < actualRLs.length; i++) {\n      if (actualRLs[i] != expectedRLs[i]) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedRLs[i],actualRLs[i],column,type,sourceId));\n      }\n    }\n    int[] actualDLs=actual.getDefinitionLevels();\n    int[] expectedDLs=expected.getDefinitionLevels();\n    if (actualDLs.length != expectedDLs.length) {\n      throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong DL count: ex=%s, act=%s, col=%s-%s, file=%s\",expectedDLs.length,actualDLs.length,column,type,sourceId));\n    }\n    for (int i=0; i < actualDLs.length; i++) {\n      if (actualDLs[i] != expectedDLs[i]) {\n        throw new PrestoException(ParquetErrorCode.PARQUET_INCORRECT_DECODING,format(\"Wrong RL value: pos=%d, ex=%s, act=%s, col=%s-%s, file=%s\",i,expectedDLs[i],actualDLs[i],column,type,sourceId));\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 404,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 59
      },
      "nodeContext" : "int[] actualDLs=actual.getDefinitionLevels();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 82,
    "startColumnNumber" : 30,
    "endLineNumber" : 82,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}