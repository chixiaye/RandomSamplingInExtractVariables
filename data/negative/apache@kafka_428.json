{
  "id" : 428,
  "expression" : "context",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 122,
      "startColumnNumber" : 15,
      "endLineNumber" : 122,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 122,
        "startColumnNumber" : 15,
        "endLineNumber" : 122,
        "endColumnNumber" : 38
      },
      "nodeContext" : "context.applicationId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 39
      },
      "nodeContext" : "expect(context.applicationId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expect(context.applicationId()).andStubReturn(APPLICATION_ID)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 112,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void before(){\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.InternalProcessorContext"
  }, {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 123,
      "startColumnNumber" : 15,
      "endLineNumber" : 123,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 123,
        "startColumnNumber" : 15,
        "endLineNumber" : 123,
        "endColumnNumber" : 32
      },
      "nodeContext" : "context.metrics()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 33
      },
      "nodeContext" : "expect(context.metrics())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 107
      },
      "nodeContext" : "expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 108
      },
      "nodeContext" : "expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 112,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void before(){\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 33
      },
      "nodeContext" : "expect(context.metrics())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.InternalProcessorContext"
  }, {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 125,
      "startColumnNumber" : 15,
      "endLineNumber" : 125,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 125,
        "startColumnNumber" : 15,
        "endLineNumber" : 125,
        "endColumnNumber" : 31
      },
      "nodeContext" : "context.taskId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 32
      },
      "nodeContext" : "expect(context.taskId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 54
      },
      "nodeContext" : "expect(context.taskId()).andStubReturn(taskId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 55
      },
      "nodeContext" : "expect(context.taskId()).andStubReturn(taskId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 112,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void before(){\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 55
      },
      "nodeContext" : "expect(context.taskId()).andStubReturn(taskId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.InternalProcessorContext"
  }, {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 126,
      "startColumnNumber" : 15,
      "endLineNumber" : 126,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 126,
        "startColumnNumber" : 15,
        "endLineNumber" : 126,
        "endColumnNumber" : 47
      },
      "nodeContext" : "context.changelogFor(STORE_NAME)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 48
      },
      "nodeContext" : "expect(context.changelogFor(STORE_NAME))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 79
      },
      "nodeContext" : "expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 80
      },
      "nodeContext" : "expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 112,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void before(){\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 80
      },
      "nodeContext" : "expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.InternalProcessorContext"
  }, {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 129,
      "startColumnNumber" : 15,
      "endLineNumber" : 129,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 129,
        "startColumnNumber" : 15,
        "endLineNumber" : 129,
        "endColumnNumber" : 35
      },
      "nodeContext" : "context.appConfigs()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 36
      },
      "nodeContext" : "expect(context.appConfigs())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 59
      },
      "nodeContext" : "expect(context.appConfigs()).andStubReturn(CONFIGS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expect(context.appConfigs()).andStubReturn(CONFIGS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 112,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void before(){\n  final Time mockTime=new MockTime();\n  metered=new MeteredTimestampedKeyValueStore<>(inner,\"scope\",mockTime,Serdes.String(),new ValueAndTimestampSerde<>(Serdes.String()));\n  metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG);\n  expect(context.applicationId()).andStubReturn(APPLICATION_ID);\n  expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime));\n  expect(context.taskId()).andStubReturn(taskId);\n  expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n  expectSerdes();\n  expect(inner.name()).andStubReturn(STORE_NAME);\n  expect(context.appConfigs()).andStubReturn(CONFIGS);\n  tags=mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expect(context.appConfigs()).andStubReturn(CONFIGS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.internals.InternalProcessorContext"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 122,
    "startColumnNumber" : 15,
    "endLineNumber" : 122,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 123,
    "startColumnNumber" : 15,
    "endLineNumber" : 123,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 125,
    "startColumnNumber" : 15,
    "endLineNumber" : 125,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 126,
    "startColumnNumber" : 15,
    "endLineNumber" : 126,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 129,
    "startColumnNumber" : 15,
    "endLineNumber" : 129,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}