{
  "id" : 171,
  "expression" : "new Thread(){\n  @Override public void run(){\n    try {\n      Thread.sleep(x * 10);\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    mock.simpleMethod();\n  }\n}\n",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/concurrentmockito/ThreadVerifiesContinuouslyInteractingMockTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Thread(){\n  @Override public void run(){\n    try {\n      Thread.sleep(x * 10);\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    mock.simpleMethod();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 443,
      "startLineNumber" : 33,
      "startColumnNumber" : 20,
      "endLineNumber" : 43,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 35,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 21
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    try {\n      Thread.sleep(x * 10);\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    mock.simpleMethod();\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 39,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 22
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    try {\n      Thread.sleep(x * 10);\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    mock.simpleMethod();\n  }\n}\n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 40,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 30,
        "startColumnNumber" : 51,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int x=i;\n  listeners[i]=new Thread(){\n    @Override public void run(){\n      try {\n        Thread.sleep(x * 10);\n      }\n catch (      InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n      mock.simpleMethod();\n    }\n  }\n;\n  listeners[i].start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < listeners.length; i++) {\n  final int x=i;\n  listeners[i]=new Thread(){\n    @Override public void run(){\n      try {\n        Thread.sleep(x * 10);\n      }\n catch (      InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n      mock.simpleMethod();\n    }\n  }\n;\n  listeners[i].start();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 27,
        "startColumnNumber" : 59,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.simpleMethod();\n  final Thread[] listeners=new Thread[2];\n  for (int i=0; i < listeners.length; i++) {\n    final int x=i;\n    listeners[i]=new Thread(){\n      @Override public void run(){\n        try {\n          Thread.sleep(x * 10);\n        }\n catch (        InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        mock.simpleMethod();\n      }\n    }\n;\n    listeners[i].start();\n  }\n  verify(mock,atLeastOnce()).simpleMethod();\n  for (  Thread listener : listeners) {\n    listener.join();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performTest() throws InterruptedException {\n  mock.simpleMethod();\n  final Thread[] listeners=new Thread[2];\n  for (int i=0; i < listeners.length; i++) {\n    final int x=i;\n    listeners[i]=new Thread(){\n      @Override public void run(){\n        try {\n          Thread.sleep(x * 10);\n        }\n catch (        InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        mock.simpleMethod();\n      }\n    }\n;\n    listeners[i].start();\n  }\n  verify(mock,atLeastOnce()).simpleMethod();\n  for (  Thread listener : listeners) {\n    listener.join();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 21
      },
      "nodeContext" : "listeners[i]=new Thread(){\n  @Override public void run(){\n    try {\n      Thread.sleep(x * 10);\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    mock.simpleMethod();\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 39,
      "astHeight" : 12
    },
    "tokenLength" : 14,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 443,
    "startLineNumber" : 33,
    "startColumnNumber" : 20,
    "endLineNumber" : 43,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}