{
  "id" : 164,
  "expression" : "local",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/eventbus/impl/HandlerRegistration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "local",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 189,
      "startColumnNumber" : 45,
      "endLineNumber" : 189,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 189,
        "startColumnNumber" : 10,
        "endLineNumber" : 189,
        "endColumnNumber" : 51
      },
      "nodeContext" : "metrics.beginHandleMessage(metric,local)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 189,
        "startColumnNumber" : 10,
        "endLineNumber" : 189,
        "endColumnNumber" : 52
      },
      "nodeContext" : "metrics.beginHandleMessage(metric,local);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 180,
        "startColumnNumber" : 33,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean local=true;\n  if (message instanceof ClusteredMessage) {\n    ClusteredMessage cmsg=(ClusteredMessage)message;\n    if (cmsg.isFromWire()) {\n      local=false;\n    }\n  }\n  metrics.beginHandleMessage(metric,local);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (metrics.isEnabled()) {\n  boolean local=true;\n  if (message instanceof ClusteredMessage) {\n    ClusteredMessage cmsg=(ClusteredMessage)message;\n    if (cmsg.isFromWire()) {\n      local=false;\n    }\n  }\n  metrics.beginHandleMessage(metric,local);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 178,
        "startColumnNumber" : 13,
        "endLineNumber" : 192,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  checkNextTick();\n  if (metrics.isEnabled()) {\n    boolean local=true;\n    if (message instanceof ClusteredMessage) {\n      ClusteredMessage cmsg=(ClusteredMessage)message;\n      if (cmsg.isFromWire()) {\n        local=false;\n      }\n    }\n    metrics.beginHandleMessage(metric,local);\n  }\n  theHandler=handler;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 192,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (paused) {\n  if (pending.size() < maxBufferedMessages) {\n    pending.add(message);\n  }\n else {\n    if (discardHandler != null) {\n      discardHandler.handle(message);\n    }\n else {\n      log.warn(\"Discarding message as more than \" + maxBufferedMessages + \" buffered in paused consumer\");\n    }\n  }\n}\n else {\n  checkNextTick();\n  if (metrics.isEnabled()) {\n    boolean local=true;\n    if (message instanceof ClusteredMessage) {\n      ClusteredMessage cmsg=(ClusteredMessage)message;\n      if (cmsg.isFromWire()) {\n        local=false;\n      }\n    }\n    metrics.beginHandleMessage(metric,local);\n  }\n  theHandler=handler;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 167,
        "startColumnNumber" : 24,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (paused) {\n    if (pending.size() < maxBufferedMessages) {\n      pending.add(message);\n    }\n else {\n      if (discardHandler != null) {\n        discardHandler.handle(message);\n      }\n else {\n        log.warn(\"Discarding message as more than \" + maxBufferedMessages + \" buffered in paused consumer\");\n      }\n    }\n  }\n else {\n    checkNextTick();\n    if (metrics.isEnabled()) {\n      boolean local=true;\n      if (message instanceof ClusteredMessage) {\n        ClusteredMessage cmsg=(ClusteredMessage)message;\n        if (cmsg.isFromWire()) {\n          local=false;\n        }\n      }\n      metrics.beginHandleMessage(metric,local);\n    }\n    theHandler=handler;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (this) {\n  if (paused) {\n    if (pending.size() < maxBufferedMessages) {\n      pending.add(message);\n    }\n else {\n      if (discardHandler != null) {\n        discardHandler.handle(message);\n      }\n else {\n        log.warn(\"Discarding message as more than \" + maxBufferedMessages + \" buffered in paused consumer\");\n      }\n    }\n  }\n else {\n    checkNextTick();\n    if (metrics.isEnabled()) {\n      boolean local=true;\n      if (message instanceof ClusteredMessage) {\n        ClusteredMessage cmsg=(ClusteredMessage)message;\n        if (cmsg.isFromWire()) {\n          local=false;\n        }\n      }\n      metrics.beginHandleMessage(metric,local);\n    }\n    theHandler=handler;\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Handler<Message<T>> theHandler=null;\nsynchronized (this) {\n    if (paused) {\n      if (pending.size() < maxBufferedMessages) {\n        pending.add(message);\n      }\n else {\n        if (discardHandler != null) {\n          discardHandler.handle(message);\n        }\n else {\n          log.warn(\"Discarding message as more than \" + maxBufferedMessages + \" buffered in paused consumer\");\n        }\n      }\n    }\n else {\n      checkNextTick();\n      if (metrics.isEnabled()) {\n        boolean local=true;\n        if (message instanceof ClusteredMessage) {\n          ClusteredMessage cmsg=(ClusteredMessage)message;\n          if (cmsg.isFromWire()) {\n            local=false;\n          }\n        }\n        metrics.beginHandleMessage(metric,local);\n      }\n      theHandler=handler;\n    }\n  }\n  if (theHandler != null) {\n    String creditsAddress=message.headers().get(MessageProducerImpl.CREDIT_ADDRESS_HEADER_NAME);\n    if (creditsAddress != null) {\n      eventBus.send(creditsAddress,1);\n    }\n    handleMessage(theHandler,message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1307,
        "startLineNumber" : 164,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void handle(Message<T> message){\n  Handler<Message<T>> theHandler=null;\nsynchronized (this) {\n    if (paused) {\n      if (pending.size() < maxBufferedMessages) {\n        pending.add(message);\n      }\n else {\n        if (discardHandler != null) {\n          discardHandler.handle(message);\n        }\n else {\n          log.warn(\"Discarding message as more than \" + maxBufferedMessages + \" buffered in paused consumer\");\n        }\n      }\n    }\n else {\n      checkNextTick();\n      if (metrics.isEnabled()) {\n        boolean local=true;\n        if (message instanceof ClusteredMessage) {\n          ClusteredMessage cmsg=(ClusteredMessage)message;\n          if (cmsg.isFromWire()) {\n            local=false;\n          }\n        }\n        metrics.beginHandleMessage(metric,local);\n      }\n      theHandler=handler;\n    }\n  }\n  if (theHandler != null) {\n    String creditsAddress=message.headers().get(MessageProducerImpl.CREDIT_ADDRESS_HEADER_NAME);\n    if (creditsAddress != null) {\n      eventBus.send(creditsAddress,1);\n    }\n    handleMessage(theHandler,message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 189,
        "startColumnNumber" : 10,
        "endLineNumber" : 189,
        "endColumnNumber" : 52
      },
      "nodeContext" : "metrics.beginHandleMessage(metric,local);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 189,
    "startColumnNumber" : 45,
    "endLineNumber" : 189,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}