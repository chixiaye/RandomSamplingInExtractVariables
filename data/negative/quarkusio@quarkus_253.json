{
  "id" : 253,
  "expression" : "\"kafka.apicurio.registry.url\"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/apicurio-registry-avro/runtime/src/main/java/io/quarkus/apicurio/registry/binding/ServiceRegistryBindingConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"kafka.apicurio.registry.url\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 44,
      "startColumnNumber" : 27,
      "endLineNumber" : 44,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 70
      },
      "nodeContext" : "properties.put(\"kafka.apicurio.registry.url\",registryUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 43,
        "startColumnNumber" : 33,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (registryUrl != null) {\n  properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 26,
        "startColumnNumber" : 94,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var matchingByType=ServiceBinding.singleMatchingByType(\"serviceregistry\",serviceBindings);\n  Config config=ConfigProvider.getConfig();\n  if (matchingByType.isEmpty()) {\n    return Optional.empty();\n  }\n  var binding=matchingByType.get();\n  List<String> channels=extractChannels(config);\n  Map<String,String> properties=new HashMap<>();\n  String registryUrl=binding.getProperties().get(\"registryUrl\");\n  if (registryUrl == null) {\n    registryUrl=binding.getProperties().get(\"registryurl\");\n  }\n  if (registryUrl != null) {\n    properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n  }\n  for (  String channel : channels) {\n    String prefix=channel;\n    String oauthTokenUrl=binding.getProperties().get(\"oauthTokenUrl\");\n    if (oauthTokenUrl == null) {\n      oauthTokenUrl=binding.getProperties().get(\"oauthtokenurl\");\n    }\n    if (oauthTokenUrl != null) {\n      properties.put(prefix + \"apicurio.auth.service.token.endpoint\",oauthTokenUrl);\n    }\n    String clientId=binding.getProperties().get(\"clientId\");\n    if (clientId == null) {\n      clientId=binding.getProperties().get(\"clientid\");\n    }\n    if (clientId != null) {\n      properties.put(prefix + \"apicurio.auth.client.id\",clientId);\n    }\n    String clientSecret=binding.getProperties().get(\"clientSecret\");\n    if (clientSecret == null) {\n      clientSecret=binding.getProperties().get(\"clientsecret\");\n    }\n    if (clientSecret != null) {\n      properties.put(prefix + \"apicurio.auth.client.secret\",clientSecret);\n    }\n    if (registryUrl != null) {\n      properties.put(prefix + \"apicurio.registry.url\",registryUrl);\n    }\n  }\n  return Optional.of(new ServiceBindingConfigSource(\"serviceregistry-k8s-service-binding-source\",properties));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<ServiceBindingConfigSource> convert(List<ServiceBinding> serviceBindings){\n  var matchingByType=ServiceBinding.singleMatchingByType(\"serviceregistry\",serviceBindings);\n  Config config=ConfigProvider.getConfig();\n  if (matchingByType.isEmpty()) {\n    return Optional.empty();\n  }\n  var binding=matchingByType.get();\n  List<String> channels=extractChannels(config);\n  Map<String,String> properties=new HashMap<>();\n  String registryUrl=binding.getProperties().get(\"registryUrl\");\n  if (registryUrl == null) {\n    registryUrl=binding.getProperties().get(\"registryurl\");\n  }\n  if (registryUrl != null) {\n    properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n  }\n  for (  String channel : channels) {\n    String prefix=channel;\n    String oauthTokenUrl=binding.getProperties().get(\"oauthTokenUrl\");\n    if (oauthTokenUrl == null) {\n      oauthTokenUrl=binding.getProperties().get(\"oauthtokenurl\");\n    }\n    if (oauthTokenUrl != null) {\n      properties.put(prefix + \"apicurio.auth.service.token.endpoint\",oauthTokenUrl);\n    }\n    String clientId=binding.getProperties().get(\"clientId\");\n    if (clientId == null) {\n      clientId=binding.getProperties().get(\"clientid\");\n    }\n    if (clientId != null) {\n      properties.put(prefix + \"apicurio.auth.client.id\",clientId);\n    }\n    String clientSecret=binding.getProperties().get(\"clientSecret\");\n    if (clientSecret == null) {\n      clientSecret=binding.getProperties().get(\"clientsecret\");\n    }\n    if (clientSecret != null) {\n      properties.put(prefix + \"apicurio.auth.client.secret\",clientSecret);\n    }\n    if (registryUrl != null) {\n      properties.put(prefix + \"apicurio.registry.url\",registryUrl);\n    }\n  }\n  return Optional.of(new ServiceBindingConfigSource(\"serviceregistry-k8s-service-binding-source\",properties));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "properties.put(\"kafka.apicurio.registry.url\",registryUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 44,
    "startColumnNumber" : 27,
    "endLineNumber" : 44,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}