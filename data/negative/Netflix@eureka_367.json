{
  "id" : 367,
  "expression" : "new InstanceInfo.Builder().withInstanceInfo(original)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/registry/SourcedEurekaRegistryImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InstanceInfo.Builder().withInstanceInfo(original)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 160,
      "startColumnNumber" : 39,
      "endLineNumber" : 161,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 160,
        "startColumnNumber" : 39,
        "endLineNumber" : 162,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 160,
        "startColumnNumber" : 39,
        "endLineNumber" : 162,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 160,
        "startColumnNumber" : 21,
        "endLineNumber" : 162,
        "endColumnNumber" : 71
      },
      "nodeContext" : "newInstanceInfo=new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 72
      },
      "nodeContext" : "InstanceInfo newInstanceInfo=new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1146,
        "startLineNumber" : 144,
        "startColumnNumber" : 39,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InstanceInfo original=SampleInstanceInfo.DiscoveryServer.builder().withStatus(InstanceInfo.Status.UP).build();\n  registry.register(original,localSource);\n  testScheduler.triggerActions();\n  ConcurrentHashMap<String,NotifyingInstanceInfoHolder> internalStore=registry.getInternalStore();\n  assertThat(internalStore.size(),equalTo(1));\n  MultiSourcedDataHolder<InstanceInfo> holder=internalStore.values().iterator().next();\n  assertThat(holder.size(),equalTo(1));\n  InstanceInfo snapshot1=holder.get();\n  assertThat(snapshot1,equalTo(original));\n  InstanceInfo newInstanceInfo=new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE).build();\n  registry.register(newInstanceInfo,localSource);\n  testScheduler.triggerActions();\n  assertThat(internalStore.size(),equalTo(1));\n  assertThat(holder.size(),equalTo(1));\n  InstanceInfo snapshot2=holder.get();\n  assertThat(snapshot2,equalTo(newInstanceInfo));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRegisterAsUpdate(){\n  InstanceInfo original=SampleInstanceInfo.DiscoveryServer.builder().withStatus(InstanceInfo.Status.UP).build();\n  registry.register(original,localSource);\n  testScheduler.triggerActions();\n  ConcurrentHashMap<String,NotifyingInstanceInfoHolder> internalStore=registry.getInternalStore();\n  assertThat(internalStore.size(),equalTo(1));\n  MultiSourcedDataHolder<InstanceInfo> holder=internalStore.values().iterator().next();\n  assertThat(holder.size(),equalTo(1));\n  InstanceInfo snapshot1=holder.get();\n  assertThat(snapshot1,equalTo(original));\n  InstanceInfo newInstanceInfo=new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE).build();\n  registry.register(newInstanceInfo,localSource);\n  testScheduler.triggerActions();\n  assertThat(internalStore.size(),equalTo(1));\n  assertThat(holder.size(),equalTo(1));\n  InstanceInfo snapshot2=holder.get();\n  assertThat(snapshot2,equalTo(newInstanceInfo));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 160,
        "startColumnNumber" : 39,
        "endLineNumber" : 162,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new InstanceInfo.Builder().withInstanceInfo(original).withStatus(InstanceInfo.Status.OUT_OF_SERVICE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "com.netflix.eureka2.registry.instance.InstanceInfo.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 160,
    "startColumnNumber" : 39,
    "endLineNumber" : 161,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}