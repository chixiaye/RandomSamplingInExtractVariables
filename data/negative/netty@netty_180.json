{
  "id" : 180,
  "expression" : "2",
  "projectName" : "netty@netty",
  "commitID" : "575c2d16de98dc217179b7f5d4879cffc50dae74",
  "filePath" : "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 390,
      "startColumnNumber" : 47,
      "endLineNumber" : 390,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 390,
        "startColumnNumber" : 47,
        "endLineNumber" : 390,
        "endColumnNumber" : 80
      },
      "nodeContext" : "2 + propertiesBuf.readableBytes()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 390,
        "startColumnNumber" : 20,
        "endLineNumber" : 390,
        "endColumnNumber" : 80
      },
      "nodeContext" : "variableHeaderBufferSize=2 + propertiesBuf.readableBytes()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 81
      },
      "nodeContext" : "int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 389,
        "startColumnNumber" : 16,
        "endLineNumber" : 408,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n  MqttUnsubAckPayload payload=message.payload();\n  int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n  int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n  int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n  ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n  buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n  writeVariableLengthInt(buf,variablePartSize);\n  buf.writeShort(message.variableHeader().messageId());\n  buf.writeBytes(propertiesBuf);\n  if (payload != null) {\n    for (    Short reasonCode : payload.unsubscribeReasonCodes()) {\n      buf.writeByte(reasonCode);\n    }\n  }\n  return buf;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 389,
        "startColumnNumber" : 12,
        "endLineNumber" : 410,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n  MqttUnsubAckPayload payload=message.payload();\n  int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n  int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n  int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n  ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n  buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n  writeVariableLengthInt(buf,variablePartSize);\n  buf.writeShort(message.variableHeader().messageId());\n  buf.writeBytes(propertiesBuf);\n  if (payload != null) {\n    for (    Short reasonCode : payload.unsubscribeReasonCodes()) {\n      buf.writeByte(reasonCode);\n    }\n  }\n  return buf;\n}\n  finally {\n  propertiesBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 384,
        "startColumnNumber" : 91,
        "endLineNumber" : 411,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MqttVersion mqttVersion=getMqttVersion(ctx);\n  ByteBuf propertiesBuf=encodePropertiesIfNeeded(mqttVersion,ctx.alloc(),message.idAndPropertiesVariableHeader().properties());\n  try {\n    int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n    MqttUnsubAckPayload payload=message.payload();\n    int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n    int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n    int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n    ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n    buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n    writeVariableLengthInt(buf,variablePartSize);\n    buf.writeShort(message.variableHeader().messageId());\n    buf.writeBytes(propertiesBuf);\n    if (payload != null) {\n      for (      Short reasonCode : payload.unsubscribeReasonCodes()) {\n        buf.writeByte(reasonCode);\n      }\n    }\n    return buf;\n  }\n  finally {\n    propertiesBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 384,
        "startColumnNumber" : 8,
        "endLineNumber" : 413,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message.variableHeader() instanceof MqttMessageIdAndPropertiesVariableHeader) {\n  MqttVersion mqttVersion=getMqttVersion(ctx);\n  ByteBuf propertiesBuf=encodePropertiesIfNeeded(mqttVersion,ctx.alloc(),message.idAndPropertiesVariableHeader().properties());\n  try {\n    int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n    MqttUnsubAckPayload payload=message.payload();\n    int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n    int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n    int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n    ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n    buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n    writeVariableLengthInt(buf,variablePartSize);\n    buf.writeShort(message.variableHeader().messageId());\n    buf.writeBytes(propertiesBuf);\n    if (payload != null) {\n      for (      Short reasonCode : payload.unsubscribeReasonCodes()) {\n        buf.writeByte(reasonCode);\n      }\n    }\n    return buf;\n  }\n  finally {\n    propertiesBuf.release();\n  }\n}\n else {\n  return encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(ctx.alloc(),message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 156,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1603,
        "startLineNumber" : 383,
        "startColumnNumber" : 41,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message.variableHeader() instanceof MqttMessageIdAndPropertiesVariableHeader) {\n    MqttVersion mqttVersion=getMqttVersion(ctx);\n    ByteBuf propertiesBuf=encodePropertiesIfNeeded(mqttVersion,ctx.alloc(),message.idAndPropertiesVariableHeader().properties());\n    try {\n      int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n      MqttUnsubAckPayload payload=message.payload();\n      int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n      int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n      int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n      ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n      buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n      writeVariableLengthInt(buf,variablePartSize);\n      buf.writeShort(message.variableHeader().messageId());\n      buf.writeBytes(propertiesBuf);\n      if (payload != null) {\n        for (        Short reasonCode : payload.unsubscribeReasonCodes()) {\n          buf.writeByte(reasonCode);\n        }\n      }\n      return buf;\n    }\n  finally {\n      propertiesBuf.release();\n    }\n  }\n else {\n    return encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(ctx.alloc(),message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1731,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static ByteBuf encodeUnsubAckMessage(ChannelHandlerContext ctx,MqttUnsubAckMessage message){\n  if (message.variableHeader() instanceof MqttMessageIdAndPropertiesVariableHeader) {\n    MqttVersion mqttVersion=getMqttVersion(ctx);\n    ByteBuf propertiesBuf=encodePropertiesIfNeeded(mqttVersion,ctx.alloc(),message.idAndPropertiesVariableHeader().properties());\n    try {\n      int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n      MqttUnsubAckPayload payload=message.payload();\n      int payloadBufferSize=payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n      int variablePartSize=variableHeaderBufferSize + payloadBufferSize;\n      int fixedHeaderBufferSize=1 + getVariableLengthInt(variablePartSize);\n      ByteBuf buf=ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n      buf.writeByte(getFixedHeaderByte1(message.fixedHeader()));\n      writeVariableLengthInt(buf,variablePartSize);\n      buf.writeShort(message.variableHeader().messageId());\n      buf.writeBytes(propertiesBuf);\n      if (payload != null) {\n        for (        Short reasonCode : payload.unsubscribeReasonCodes()) {\n          buf.writeByte(reasonCode);\n        }\n      }\n      return buf;\n    }\n  finally {\n      propertiesBuf.release();\n    }\n  }\n else {\n    return encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(ctx.alloc(),message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 81
      },
      "nodeContext" : "int variableHeaderBufferSize=2 + propertiesBuf.readableBytes();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 390,
    "startColumnNumber" : 47,
    "endLineNumber" : 390,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}