{
  "id" : 161,
  "expression" : "m_userDataBuffer.data",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/org/jbox2d/particle/ParticleSystem.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m_userDataBuffer.data",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 232,
      "startColumnNumber" : 8,
      "endLineNumber" : 232,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 232,
        "startColumnNumber" : 8,
        "endLineNumber" : 232,
        "endColumnNumber" : 37
      },
      "nodeContext" : "m_userDataBuffer.data != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 232,
        "startColumnNumber" : 8,
        "endLineNumber" : 232,
        "endColumnNumber" : 61
      },
      "nodeContext" : "m_userDataBuffer.data != null || def.userData != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (m_userDataBuffer.data != null || def.userData != null) {\n  m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n  m_userDataBuffer.data[index]=def.userData;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3231,
        "startLineNumber" : 181,
        "startColumnNumber" : 45,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3274,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public int createParticle(ParticleDef def){\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 382,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 232,
        "startColumnNumber" : 8,
        "endLineNumber" : 232,
        "endColumnNumber" : 61
      },
      "nodeContext" : "m_userDataBuffer.data != null || def.userData != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object[]"
  }, {
    "nodeContext" : "m_userDataBuffer.data",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 234,
      "startColumnNumber" : 60,
      "endLineNumber" : 234,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 234,
        "startColumnNumber" : 10,
        "endLineNumber" : 234,
        "endColumnNumber" : 82
      },
      "nodeContext" : "requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 233,
        "startColumnNumber" : 6,
        "endLineNumber" : 234,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 233,
        "startColumnNumber" : 6,
        "endLineNumber" : 234,
        "endColumnNumber" : 83
      },
      "nodeContext" : "m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 232,
        "startColumnNumber" : 63,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n  m_userDataBuffer.data[index]=def.userData;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (m_userDataBuffer.data != null || def.userData != null) {\n  m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n  m_userDataBuffer.data[index]=def.userData;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3231,
        "startLineNumber" : 181,
        "startColumnNumber" : 45,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3274,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public int createParticle(ParticleDef def){\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 382,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 234,
        "startColumnNumber" : 10,
        "endLineNumber" : 234,
        "endColumnNumber" : 82
      },
      "nodeContext" : "requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object[]"
  }, {
    "nodeContext" : "m_userDataBuffer.data",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 235,
      "startColumnNumber" : 6,
      "endLineNumber" : 235,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 235,
        "endColumnNumber" : 34
      },
      "nodeContext" : "m_userDataBuffer.data[index]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 235,
        "endColumnNumber" : 49
      },
      "nodeContext" : "m_userDataBuffer.data[index]=def.userData",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 235,
        "endColumnNumber" : 50
      },
      "nodeContext" : "m_userDataBuffer.data[index]=def.userData;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 232,
        "startColumnNumber" : 63,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n  m_userDataBuffer.data[index]=def.userData;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (m_userDataBuffer.data != null || def.userData != null) {\n  m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n  m_userDataBuffer.data[index]=def.userData;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3231,
        "startLineNumber" : 181,
        "startColumnNumber" : 45,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3274,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public int createParticle(ParticleDef def){\n  if (m_count >= m_internalAllocatedCapacity) {\n    int capacity=m_count != 0 ? 2 * m_count : Settings.minParticleBufferCapacity;\n    capacity=limitCapacity(capacity,m_maxCount);\n    capacity=limitCapacity(capacity,m_flagsBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_positionBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_velocityBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_colorBuffer.userSuppliedCapacity);\n    capacity=limitCapacity(capacity,m_userDataBuffer.userSuppliedCapacity);\n    if (m_internalAllocatedCapacity < capacity) {\n      m_flagsBuffer.data=reallocateBuffer(m_flagsBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_positionBuffer.data=reallocateBuffer(m_positionBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_velocityBuffer.data=reallocateBuffer(m_velocityBuffer,m_internalAllocatedCapacity,capacity,false);\n      m_accumulationBuffer=BufferUtils.reallocateBuffer(m_accumulationBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_accumulation2Buffer=BufferUtils.reallocateBuffer(Vec2.class,m_accumulation2Buffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_depthBuffer=BufferUtils.reallocateBuffer(m_depthBuffer,0,m_internalAllocatedCapacity,capacity,true);\n      m_colorBuffer.data=reallocateBuffer(m_colorBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_groupBuffer=BufferUtils.reallocateBuffer(ParticleGroup.class,m_groupBuffer,0,m_internalAllocatedCapacity,capacity,false);\n      m_userDataBuffer.data=reallocateBuffer(m_userDataBuffer,m_internalAllocatedCapacity,capacity,true);\n      m_internalAllocatedCapacity=capacity;\n    }\n  }\n  if (m_count >= m_internalAllocatedCapacity) {\n    return Settings.invalidParticleIndex;\n  }\n  int index=m_count++;\n  m_flagsBuffer.data[index]=def.flags;\n  m_positionBuffer.data[index].set(def.position);\n  m_velocityBuffer.data[index].set(def.velocity);\n  m_groupBuffer[index]=null;\n  if (m_depthBuffer != null) {\n    m_depthBuffer[index]=0;\n  }\n  if (m_colorBuffer.data != null || def.color != null) {\n    m_colorBuffer.data=requestParticleBuffer(m_colorBuffer.dataClass,m_colorBuffer.data);\n    m_colorBuffer.data[index].set(def.color);\n  }\n  if (m_userDataBuffer.data != null || def.userData != null) {\n    m_userDataBuffer.data=requestParticleBuffer(m_userDataBuffer.dataClass,m_userDataBuffer.data);\n    m_userDataBuffer.data[index]=def.userData;\n  }\n  if (m_proxyCount >= m_proxyCapacity) {\n    int oldCapacity=m_proxyCapacity;\n    int newCapacity=m_proxyCount != 0 ? 2 * m_proxyCount : Settings.minParticleBufferCapacity;\n    m_proxyBuffer=BufferUtils.reallocateBuffer(Proxy.class,m_proxyBuffer,oldCapacity,newCapacity);\n    m_proxyCapacity=newCapacity;\n  }\n  m_proxyBuffer[m_proxyCount++].index=index;\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 382,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 235,
        "endColumnNumber" : 50
      },
      "nodeContext" : "m_userDataBuffer.data[index]=def.userData;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 232,
    "startColumnNumber" : 8,
    "endLineNumber" : 232,
    "endColumnNumber" : 29
  }, {
    "charLength" : 21,
    "startLineNumber" : 234,
    "startColumnNumber" : 60,
    "endLineNumber" : 234,
    "endColumnNumber" : 81
  }, {
    "charLength" : 21,
    "startLineNumber" : 235,
    "startColumnNumber" : 6,
    "endLineNumber" : 235,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}