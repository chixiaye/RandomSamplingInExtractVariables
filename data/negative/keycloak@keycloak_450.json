{
  "id" : 450,
  "expression" : "response.getRefreshToken()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/authz/UmaGrantTypeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response.getRefreshToken()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 423,
      "startColumnNumber" : 30,
      "endLineNumber" : 423,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 423,
        "startColumnNumber" : 15,
        "endLineNumber" : 423,
        "endColumnNumber" : 56
      },
      "nodeContext" : "refreshToken=response.getRefreshToken()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 423,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String refreshToken=response.getRefreshToken();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3156,
        "startLineNumber" : 405,
        "startColumnNumber" : 33,
        "endLineNumber" : 482,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AccessTokenResponse accessTokenResponse=getAuthzClient().obtainAccessToken(\"marta\",\"password\");\n  AuthorizationResponse response=authorize(null,null,null,null,accessTokenResponse.getToken(),null,null,new PermissionRequest(\"Resource A\",\"ScopeA\",\"ScopeB\"));\n  String rpt=response.getToken();\n  assertNotNull(rpt);\n  AccessToken accessToken=toAccessToken(rpt);\n  AccessToken.Authorization authorization=accessToken.getAuthorization();\n  assertNotNull(authorization);\n  Collection<Permission> permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n  String refreshToken=response.getRefreshToken();\n  assertNotNull(refreshToken);\n  AccessToken refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  Client client=AdminClientUtil.createResteasyClient();\n  UriBuilder builder=UriBuilder.fromUri(AUTH_SERVER_ROOT);\n  URI uri=OIDCLoginProtocolService.tokenUrl(builder).build(REALM_NAME);\n  WebTarget target=client.target(uri);\n  Form parameters=new Form();\n  parameters.param(\"grant_type\",OAuth2Constants.REFRESH_TOKEN);\n  parameters.param(OAuth2Constants.REFRESH_TOKEN,refreshToken);\n  AccessTokenResponse refreshTokenResponse=target.request().header(HttpHeaders.AUTHORIZATION,BasicAuthHelper.createHeader(\"resource-server-test\",\"secret\")).post(Entity.form(parameters)).readEntity(AccessTokenResponse.class);\n  assertNotNull(refreshTokenResponse.getToken());\n  refreshToken=refreshTokenResponse.getRefreshToken();\n  refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  AccessToken refreshedToken=toAccessToken(rpt);\n  authorization=refreshedToken.getAuthorization();\n  assertNotNull(authorization);\n  permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n  refreshTokenResponse=target.request().header(HttpHeaders.AUTHORIZATION,BasicAuthHelper.createHeader(\"resource-server-test\",\"secret\")).post(Entity.form(parameters)).readEntity(AccessTokenResponse.class);\n  assertNotNull(refreshTokenResponse.getToken());\n  refreshToken=refreshTokenResponse.getRefreshToken();\n  refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  refreshedToken=toAccessToken(rpt);\n  authorization=refreshedToken.getAuthorization();\n  assertNotNull(authorization);\n  permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 368,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3195,
        "startLineNumber" : 404,
        "startColumnNumber" : 4,
        "endLineNumber" : 482,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRefreshRpt(){\n  AccessTokenResponse accessTokenResponse=getAuthzClient().obtainAccessToken(\"marta\",\"password\");\n  AuthorizationResponse response=authorize(null,null,null,null,accessTokenResponse.getToken(),null,null,new PermissionRequest(\"Resource A\",\"ScopeA\",\"ScopeB\"));\n  String rpt=response.getToken();\n  assertNotNull(rpt);\n  AccessToken accessToken=toAccessToken(rpt);\n  AccessToken.Authorization authorization=accessToken.getAuthorization();\n  assertNotNull(authorization);\n  Collection<Permission> permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n  String refreshToken=response.getRefreshToken();\n  assertNotNull(refreshToken);\n  AccessToken refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  Client client=AdminClientUtil.createResteasyClient();\n  UriBuilder builder=UriBuilder.fromUri(AUTH_SERVER_ROOT);\n  URI uri=OIDCLoginProtocolService.tokenUrl(builder).build(REALM_NAME);\n  WebTarget target=client.target(uri);\n  Form parameters=new Form();\n  parameters.param(\"grant_type\",OAuth2Constants.REFRESH_TOKEN);\n  parameters.param(OAuth2Constants.REFRESH_TOKEN,refreshToken);\n  AccessTokenResponse refreshTokenResponse=target.request().header(HttpHeaders.AUTHORIZATION,BasicAuthHelper.createHeader(\"resource-server-test\",\"secret\")).post(Entity.form(parameters)).readEntity(AccessTokenResponse.class);\n  assertNotNull(refreshTokenResponse.getToken());\n  refreshToken=refreshTokenResponse.getRefreshToken();\n  refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  AccessToken refreshedToken=toAccessToken(rpt);\n  authorization=refreshedToken.getAuthorization();\n  assertNotNull(authorization);\n  permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n  refreshTokenResponse=target.request().header(HttpHeaders.AUTHORIZATION,BasicAuthHelper.createHeader(\"resource-server-test\",\"secret\")).post(Entity.form(parameters)).readEntity(AccessTokenResponse.class);\n  assertNotNull(refreshTokenResponse.getToken());\n  refreshToken=refreshTokenResponse.getRefreshToken();\n  refreshTokenToken=toAccessToken(refreshToken);\n  assertNotNull(refreshTokenToken.getAuthorization());\n  refreshedToken=toAccessToken(rpt);\n  authorization=refreshedToken.getAuthorization();\n  assertNotNull(authorization);\n  permissions=authorization.getPermissions();\n  assertNotNull(permissions);\n  assertPermissions(permissions,\"Resource A\",\"ScopeA\",\"ScopeB\");\n  assertTrue(permissions.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 374,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 423,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String refreshToken=response.getRefreshToken();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 423,
    "startColumnNumber" : 30,
    "endLineNumber" : 423,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}