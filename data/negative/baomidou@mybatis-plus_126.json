{
  "id" : 126,
  "expression" : "false",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "4be088ec5c30fbdf2f257518023c3adf44195e64",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/framework/service/impl/ServiceImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 147,
      "startColumnNumber" : 96,
      "endLineNumber" : 147,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 147,
        "startColumnNumber" : 31,
        "endLineNumber" : 147,
        "endColumnNumber" : 102
      },
      "nodeContext" : "tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 147,
        "startColumnNumber" : 13,
        "endLineNumber" : 147,
        "endColumnNumber" : 102
      },
      "nodeContext" : "batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 103
      },
      "nodeContext" : "SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 139,
        "startColumnNumber" : 87,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 批量插入\n * @param entityList\n * @param batchSize\n * @param isSelective\n * @return\n */\nprotected boolean insertBatch(List<T> entityList,int batchSize,boolean isSelective){\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 103
      },
      "nodeContext" : "SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 163,
      "startColumnNumber" : 10,
      "endLineNumber" : 163,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 163,
        "startColumnNumber" : 3,
        "endLineNumber" : 163,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 161,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (Exception e) {\n  logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n  return false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 148,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  int size=entityList.size();\n  for (int i=0; i < size; i++) {\n    if (isSelective) {\n      baseMapper.insertSelective(entityList.get(0));\n    }\n else {\n      baseMapper.insert(entityList.get(0));\n    }\n    if (i % batchSize == 0) {\n      batchSqlSession.flushStatements();\n    }\n  }\n  batchSqlSession.flushStatements();\n}\n catch (Exception e) {\n  logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 139,
        "startColumnNumber" : 87,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 批量插入\n * @param entityList\n * @param batchSize\n * @param isSelective\n * @return\n */\nprotected boolean insertBatch(List<T> entityList,int batchSize,boolean isSelective){\n  if (null == entityList) {\n    throw new IllegalArgumentException(\"entityList must not be empty\");\n  }\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(currentModleClass());\n  if (null == tableInfo) {\n    throw new MybatisPlusException(\"Error: insertBatch Fail, ClassGenricType not found .\");\n  }\n  SqlSession batchSqlSession=tableInfo.getSqlSessionFactory().openSession(ExecutorType.BATCH,false);\n  try {\n    int size=entityList.size();\n    for (int i=0; i < size; i++) {\n      if (isSelective) {\n        baseMapper.insertSelective(entityList.get(0));\n      }\n else {\n        baseMapper.insert(entityList.get(0));\n      }\n      if (i % batchSize == 0) {\n        batchSqlSession.flushStatements();\n      }\n    }\n    batchSqlSession.flushStatements();\n  }\n catch (  Exception e) {\n    logger.warning(\"Warn: Method insertBatch Fail. Cause:\" + e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 163,
        "startColumnNumber" : 3,
        "endLineNumber" : 163,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 147,
    "startColumnNumber" : 96,
    "endLineNumber" : 147,
    "endColumnNumber" : 101
  }, {
    "charLength" : 5,
    "startLineNumber" : 163,
    "startColumnNumber" : 10,
    "endLineNumber" : 163,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}