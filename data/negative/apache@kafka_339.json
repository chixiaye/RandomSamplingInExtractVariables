{
  "id" : 339,
  "expression" : "new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\")",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/security/oauthbearer/secured/Retry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 112,
      "startLineNumber" : 101,
      "startColumnNumber" : 43,
      "endLineNumber" : 101,
      "endColumnNumber" : 155
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 156
      },
      "nodeContext" : "new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 156
      },
      "nodeContext" : "error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 157
      },
      "nodeContext" : "error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 157
      },
      "nodeContext" : "if (error == null) error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1539,
        "startLineNumber" : 61,
        "startColumnNumber" : 71,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long endMs=time.milliseconds() + retryBackoffMaxMs;\n  int currAttempt=0;\n  ExecutionException error=null;\n  while (time.milliseconds() <= endMs) {\n    currAttempt++;\n    try {\n      return retryable.call();\n    }\n catch (    UnretryableException e) {\n      if (error == null)       error=new ExecutionException(e);\n      break;\n    }\ncatch (    ExecutionException e) {\n      log.warn(\"Error during retry attempt {}\",currAttempt,e);\n      if (error == null)       error=e;\n      long waitMs=retryBackoffMs * (long)Math.pow(2,currAttempt - 1);\n      long diff=endMs - time.milliseconds();\n      waitMs=Math.min(waitMs,diff);\n      if (waitMs <= 0)       break;\n      String message=String.format(\"Attempt %s to make call resulted in an error; sleeping %s ms before retrying\",currAttempt,waitMs);\n      log.warn(message,e);\n      time.sleep(waitMs);\n    }\n  }\n  if (error == null)   error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"));\n  throw error;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public R execute(Retryable<R> retryable) throws ExecutionException {\n  long endMs=time.milliseconds() + retryBackoffMaxMs;\n  int currAttempt=0;\n  ExecutionException error=null;\n  while (time.milliseconds() <= endMs) {\n    currAttempt++;\n    try {\n      return retryable.call();\n    }\n catch (    UnretryableException e) {\n      if (error == null)       error=new ExecutionException(e);\n      break;\n    }\ncatch (    ExecutionException e) {\n      log.warn(\"Error during retry attempt {}\",currAttempt,e);\n      if (error == null)       error=e;\n      long waitMs=retryBackoffMs * (long)Math.pow(2,currAttempt - 1);\n      long diff=endMs - time.milliseconds();\n      waitMs=Math.min(waitMs,diff);\n      if (waitMs <= 0)       break;\n      String message=String.format(\"Attempt %s to make call resulted in an error; sleeping %s ms before retrying\",currAttempt,waitMs);\n      log.warn(message,e);\n      time.sleep(waitMs);\n    }\n  }\n  if (error == null)   error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"));\n  throw error;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 157
      },
      "nodeContext" : "error=new ExecutionException(new IllegalStateException(\"Exhausted all retry attempts but no attempt returned value or encountered exception\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 13,
    "type" : "java.lang.IllegalStateException"
  } ],
  "positionList" : [ {
    "charLength" : 112,
    "startLineNumber" : 101,
    "startColumnNumber" : 43,
    "endLineNumber" : 101,
    "endColumnNumber" : 155
  } ],
  "layoutRelationDataList" : [ ]
}