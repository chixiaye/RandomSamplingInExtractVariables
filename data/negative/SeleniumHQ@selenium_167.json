{
  "id" : 167,
  "expression" : "networkSettings.get(\"IPAddress\")",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/docker/v1_40/InspectContainer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "networkSettings.get(\"IPAddress\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 61,
      "startColumnNumber" : 25,
      "endLineNumber" : 61,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(String)networkSettings.get(\"IPAddress\")",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 61,
        "startColumnNumber" : 11,
        "endLineNumber" : 61,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ip=(String)networkSettings.get(\"IPAddress\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "String ip=(String)networkSettings.get(\"IPAddress\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 49,
        "startColumnNumber" : 45,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"Container id\",id);\n  HttpResponse res=client.execute(new HttpRequest(GET,String.format(\"/v1.40/containers/%s/json\",id)).addHeader(\"Content-Length\",\"0\").addHeader(\"Content-Type\",\"text/plain\"));\n  if (res.getStatus() != HTTP_OK) {\n    LOG.warning(\"Unable to inspect container \" + id);\n  }\n  Map<String,Object> rawInspectInfo=JSON.toType(Contents.string(res),MAP_TYPE);\n  Map<String,Object> networkSettings=(Map<String,Object>)rawInspectInfo.get(\"NetworkSettings\");\n  String ip=(String)networkSettings.get(\"IPAddress\");\n  ArrayList<Object> mounts=(ArrayList<Object>)rawInspectInfo.get(\"Mounts\");\n  List<Map<String,Object>> mountedVolumes=mounts.stream().map(mount -> (Map<String,Object>)mount).collect(Collectors.toList());\n  return new ContainerInfo(id,ip,mountedVolumes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public ContainerInfo apply(ContainerId id){\n  Require.nonNull(\"Container id\",id);\n  HttpResponse res=client.execute(new HttpRequest(GET,String.format(\"/v1.40/containers/%s/json\",id)).addHeader(\"Content-Length\",\"0\").addHeader(\"Content-Type\",\"text/plain\"));\n  if (res.getStatus() != HTTP_OK) {\n    LOG.warning(\"Unable to inspect container \" + id);\n  }\n  Map<String,Object> rawInspectInfo=JSON.toType(Contents.string(res),MAP_TYPE);\n  Map<String,Object> networkSettings=(Map<String,Object>)rawInspectInfo.get(\"NetworkSettings\");\n  String ip=(String)networkSettings.get(\"IPAddress\");\n  ArrayList<Object> mounts=(ArrayList<Object>)rawInspectInfo.get(\"Mounts\");\n  List<Map<String,Object>> mountedVolumes=mounts.stream().map(mount -> (Map<String,Object>)mount).collect(Collectors.toList());\n  return new ContainerInfo(id,ip,mountedVolumes);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "String ip=(String)networkSettings.get(\"IPAddress\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 61,
    "startColumnNumber" : 25,
    "endLineNumber" : 61,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}