{
  "id" : 170,
  "expression" : "MapperRegistry.class.getDeclaredField(\"knownMappers\")",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/spring/MybatisMapperRefresh.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MapperRegistry.class.getDeclaredField(\"knownMappers\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 202,
      "startColumnNumber" : 26,
      "endLineNumber" : 202,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 202,
        "startColumnNumber" : 18,
        "endLineNumber" : 202,
        "endColumnNumber" : 79
      },
      "nodeContext" : "field=MapperRegistry.class.getDeclaredField(\"knownMappers\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Field loadedResourcesField=isSupper ? configuration.getClass().getSuperclass().getDeclaredField(\"loadedResources\") : configuration.getClass().getDeclaredField(\"loadedResources\");\n  loadedResourcesField.setAccessible(true);\n  Set loadedResourcesSet=((Set)loadedResourcesField.get(configuration));\n  XPathParser xPathParser=new XPathParser(resource.getInputStream(),true,configuration.getVariables(),new XMLMapperEntityResolver());\n  XNode context=xPathParser.evalNode(\"/mapper\");\n  String namespace=context.getStringAttribute(\"namespace\");\n  Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n  field.setAccessible(true);\n  Map mapConfig=(Map)field.get(configuration.getMapperRegistry());\n  mapConfig.remove(Resources.classForName(namespace));\n  loadedResourcesSet.remove(resource.toString());\n  configuration.getCacheNames().remove(namespace);\n  cleanParameterMap(context.evalNodes(\"/mapper/parameterMap\"),namespace);\n  cleanResultMap(context.evalNodes(\"/mapper/resultMap\"),namespace);\n  cleanKeyGenerators(context.evalNodes(\"insert|update\"),namespace);\n  cleanSqlElement(context.evalNodes(\"/mapper/sql\"),namespace);\n  XMLMapperBuilder xmlMapperBuilder=new XMLMapperBuilder(resource.getInputStream(),sqlSessionFactory.getConfiguration(),resource.toString(),sqlSessionFactory.getConfiguration().getSqlFragments());\n  xmlMapperBuilder.parse();\n  logger.debug(\"refresh: '\" + resource + \"', success!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Field loadedResourcesField=isSupper ? configuration.getClass().getSuperclass().getDeclaredField(\"loadedResources\") : configuration.getClass().getDeclaredField(\"loadedResources\");\n  loadedResourcesField.setAccessible(true);\n  Set loadedResourcesSet=((Set)loadedResourcesField.get(configuration));\n  XPathParser xPathParser=new XPathParser(resource.getInputStream(),true,configuration.getVariables(),new XMLMapperEntityResolver());\n  XNode context=xPathParser.evalNode(\"/mapper\");\n  String namespace=context.getStringAttribute(\"namespace\");\n  Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n  field.setAccessible(true);\n  Map mapConfig=(Map)field.get(configuration.getMapperRegistry());\n  mapConfig.remove(Resources.classForName(namespace));\n  loadedResourcesSet.remove(resource.toString());\n  configuration.getCacheNames().remove(namespace);\n  cleanParameterMap(context.evalNodes(\"/mapper/parameterMap\"),namespace);\n  cleanResultMap(context.evalNodes(\"/mapper/resultMap\"),namespace);\n  cleanKeyGenerators(context.evalNodes(\"insert|update\"),namespace);\n  cleanSqlElement(context.evalNodes(\"/mapper/sql\"),namespace);\n  XMLMapperBuilder xmlMapperBuilder=new XMLMapperBuilder(resource.getInputStream(),sqlSessionFactory.getConfiguration(),resource.toString(),sqlSessionFactory.getConfiguration().getSqlFragments());\n  xmlMapperBuilder.parse();\n  logger.debug(\"refresh: '\" + resource + \"', success!\");\n}\n catch (IOException e) {\n  logger.error(\"Refresh IOException :\" + e.getMessage());\n}\n finally {\n  ErrorContext.instance().reset();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 217,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2056,
        "startLineNumber" : 190,
        "startColumnNumber" : 120,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.configuration=sqlSessionFactory.getConfiguration();\n  boolean isSupper=configuration.getClass().getSuperclass() == Configuration.class;\n  try {\n    Field loadedResourcesField=isSupper ? configuration.getClass().getSuperclass().getDeclaredField(\"loadedResources\") : configuration.getClass().getDeclaredField(\"loadedResources\");\n    loadedResourcesField.setAccessible(true);\n    Set loadedResourcesSet=((Set)loadedResourcesField.get(configuration));\n    XPathParser xPathParser=new XPathParser(resource.getInputStream(),true,configuration.getVariables(),new XMLMapperEntityResolver());\n    XNode context=xPathParser.evalNode(\"/mapper\");\n    String namespace=context.getStringAttribute(\"namespace\");\n    Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n    field.setAccessible(true);\n    Map mapConfig=(Map)field.get(configuration.getMapperRegistry());\n    mapConfig.remove(Resources.classForName(namespace));\n    loadedResourcesSet.remove(resource.toString());\n    configuration.getCacheNames().remove(namespace);\n    cleanParameterMap(context.evalNodes(\"/mapper/parameterMap\"),namespace);\n    cleanResultMap(context.evalNodes(\"/mapper/resultMap\"),namespace);\n    cleanKeyGenerators(context.evalNodes(\"insert|update\"),namespace);\n    cleanSqlElement(context.evalNodes(\"/mapper/sql\"),namespace);\n    XMLMapperBuilder xmlMapperBuilder=new XMLMapperBuilder(resource.getInputStream(),sqlSessionFactory.getConfiguration(),resource.toString(),sqlSessionFactory.getConfiguration().getSqlFragments());\n    xmlMapperBuilder.parse();\n    logger.debug(\"refresh: '\" + resource + \"', success!\");\n  }\n catch (  IOException e) {\n    logger.error(\"Refresh IOException :\" + e.getMessage());\n  }\n finally {\n    ErrorContext.instance().reset();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2270,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 刷新mapper\n * @throws Exception\n */\n@SuppressWarnings(\"rawtypes\") private void refresh(Resource resource) throws ClassNotFoundException, NoSuchFieldException, IllegalAccessException {\n  this.configuration=sqlSessionFactory.getConfiguration();\n  boolean isSupper=configuration.getClass().getSuperclass() == Configuration.class;\n  try {\n    Field loadedResourcesField=isSupper ? configuration.getClass().getSuperclass().getDeclaredField(\"loadedResources\") : configuration.getClass().getDeclaredField(\"loadedResources\");\n    loadedResourcesField.setAccessible(true);\n    Set loadedResourcesSet=((Set)loadedResourcesField.get(configuration));\n    XPathParser xPathParser=new XPathParser(resource.getInputStream(),true,configuration.getVariables(),new XMLMapperEntityResolver());\n    XNode context=xPathParser.evalNode(\"/mapper\");\n    String namespace=context.getStringAttribute(\"namespace\");\n    Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n    field.setAccessible(true);\n    Map mapConfig=(Map)field.get(configuration.getMapperRegistry());\n    mapConfig.remove(Resources.classForName(namespace));\n    loadedResourcesSet.remove(resource.toString());\n    configuration.getCacheNames().remove(namespace);\n    cleanParameterMap(context.evalNodes(\"/mapper/parameterMap\"),namespace);\n    cleanResultMap(context.evalNodes(\"/mapper/resultMap\"),namespace);\n    cleanKeyGenerators(context.evalNodes(\"insert|update\"),namespace);\n    cleanSqlElement(context.evalNodes(\"/mapper/sql\"),namespace);\n    XMLMapperBuilder xmlMapperBuilder=new XMLMapperBuilder(resource.getInputStream(),sqlSessionFactory.getConfiguration(),resource.toString(),sqlSessionFactory.getConfiguration().getSqlFragments());\n    xmlMapperBuilder.parse();\n    logger.debug(\"refresh: '\" + resource + \"', success!\");\n  }\n catch (  IOException e) {\n    logger.error(\"Refresh IOException :\" + e.getMessage());\n  }\n finally {\n    ErrorContext.instance().reset();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Field field=MapperRegistry.class.getDeclaredField(\"knownMappers\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.reflect.Field"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 202,
    "startColumnNumber" : 26,
    "endLineNumber" : 202,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}