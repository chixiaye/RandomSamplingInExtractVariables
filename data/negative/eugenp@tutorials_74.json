{
  "id" : 74,
  "expression" : "m1 - m2",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lang-math-2/src/main/java/com/baeldung/algorithms/linesintersection/LinesIntersectionService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m1 - m2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 14,
      "startColumnNumber" : 32,
      "endLineNumber" : 14,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 14,
        "startColumnNumber" : 31,
        "endLineNumber" : 14,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(m1 - m2)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 14,
        "startColumnNumber" : 19,
        "endLineNumber" : 14,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(b2 - b1) / (m1 - m2)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 14,
        "startColumnNumber" : 15,
        "endLineNumber" : 14,
        "endColumnNumber" : 40
      },
      "nodeContext" : "x=(b2 - b1) / (m1 - m2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 41
      },
      "nodeContext" : "double x=(b2 - b1) / (m1 - m2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 8,
        "startColumnNumber" : 98,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (m1 == m2) {\n    return Optional.empty();\n  }\n  double x=(b2 - b1) / (m1 - m2);\n  double y=m1 * x + b1;\n  Point point=new Point();\n  point.setLocation(x,y);\n  return Optional.of(point);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Optional<Point> calculateIntersectionPoint(double m1,double b1,double m2,double b2){\n  if (m1 == m2) {\n    return Optional.empty();\n  }\n  double x=(b2 - b1) / (m1 - m2);\n  double y=m1 * x + b1;\n  Point point=new Point();\n  point.setLocation(x,y);\n  return Optional.of(point);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 41
      },
      "nodeContext" : "double x=(b2 - b1) / (m1 - m2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 14,
    "startColumnNumber" : 32,
    "endLineNumber" : 14,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}