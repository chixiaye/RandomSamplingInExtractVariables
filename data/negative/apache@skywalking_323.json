{
  "id" : 323,
  "expression" : "hostIpItem[1].trim()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/plugin/scenarios/elasticsearch-6.x-scenario/src/main/java/org/apache/skywalking/apm/testcase/elasticsearch/config/TransportClientConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hostIpItem[1].trim()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 66,
      "startColumnNumber" : 30,
      "endLineNumber" : 66,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 66,
        "startColumnNumber" : 23,
        "endLineNumber" : 66,
        "endColumnNumber" : 50
      },
      "nodeContext" : "port=hostIpItem[1].trim()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String port=hostIpItem[1].trim();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 63,
        "startColumnNumber" : 52,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String[] hostIpItem=hostIp[i].split(\":\");\n  String ip=hostIpItem[0].trim();\n  String port=hostIpItem[1].trim();\n  transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < hostIp.length; ++i) {\n  String[] hostIpItem=hostIp[i].split(\":\");\n  String ip=hostIpItem[0].trim();\n  String port=hostIpItem[1].trim();\n  transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 59,
        "startColumnNumber" : 42,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] hostIp=elasticsearchHost.split(\",\");\n  transportAddresses=new TransportAddress[hostIp.length];\n  for (int i=0; i < hostIp.length; ++i) {\n    String[] hostIpItem=hostIp[i].split(\":\");\n    String ip=hostIpItem[0].trim();\n    String port=hostIpItem[1].trim();\n    transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!elasticsearchHost.isEmpty()) {\n  String[] hostIp=elasticsearchHost.split(\",\");\n  transportAddresses=new TransportAddress[hostIp.length];\n  for (int i=0; i < hostIp.length; ++i) {\n    String[] hostIpItem=hostIp[i].split(\":\");\n    String ip=hostIpItem[0].trim();\n    String port=hostIpItem[1].trim();\n    transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 57,
        "startColumnNumber" : 25,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TransportAddress[] transportAddresses=null;\n  if (!elasticsearchHost.isEmpty()) {\n    String[] hostIp=elasticsearchHost.split(\",\");\n    transportAddresses=new TransportAddress[hostIp.length];\n    for (int i=0; i < hostIp.length; ++i) {\n      String[] hostIpItem=hostIp[i].split(\":\");\n      String ip=hostIpItem[0].trim();\n      String port=hostIpItem[1].trim();\n      transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n    }\n  }\n  return transportAddresses;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private TransportAddress[] parseEsHost() throws Exception {\n  TransportAddress[] transportAddresses=null;\n  if (!elasticsearchHost.isEmpty()) {\n    String[] hostIp=elasticsearchHost.split(\",\");\n    transportAddresses=new TransportAddress[hostIp.length];\n    for (int i=0; i < hostIp.length; ++i) {\n      String[] hostIpItem=hostIp[i].split(\":\");\n      String ip=hostIpItem[0].trim();\n      String port=hostIpItem[1].trim();\n      transportAddresses[i]=new TransportAddress(InetAddress.getByName(ip),PORT);\n    }\n  }\n  return transportAddresses;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String port=hostIpItem[1].trim();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 66,
    "startColumnNumber" : 30,
    "endLineNumber" : 66,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}