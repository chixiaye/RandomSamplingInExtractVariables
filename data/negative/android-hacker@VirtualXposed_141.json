{
  "id" : 141,
  "expression" : "record.userId == userId && record.authTokenType.equals(accountType)",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/accounts/VAccountManagerService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "record.userId == userId && record.authTokenType.equals(accountType)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 766,
      "startColumnNumber" : 9,
      "endLineNumber" : 766,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 766,
        "startColumnNumber" : 9,
        "endLineNumber" : 767,
        "endColumnNumber" : 44
      },
      "nodeContext" : "record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 766,
        "startColumnNumber" : 5,
        "endLineNumber" : 769,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n  iterator.remove();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 764,
        "startColumnNumber" : 31,
        "endLineNumber" : 770,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AuthTokenRecord record=iterator.next();\n  if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n    iterator.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 764,
        "startColumnNumber" : 4,
        "endLineNumber" : 770,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  AuthTokenRecord record=iterator.next();\n  if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n    iterator.remove();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 762,
        "startColumnNumber" : 35,
        "endLineNumber" : 771,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n  while (iterator.hasNext()) {\n    AuthTokenRecord record=iterator.next();\n    if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n      iterator.remove();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 762,
        "startColumnNumber" : 3,
        "endLineNumber" : 771,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (authTokenRecords) {\n  Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n  while (iterator.hasNext()) {\n    AuthTokenRecord record=iterator.next();\n    if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n      iterator.remove();\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 748,
        "startColumnNumber" : 34,
        "endLineNumber" : 772,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<VAccount> accounts=accountsByUserId.get(userId);\n  if (accounts != null) {\n    boolean changed=false;\n    for (    VAccount account : accounts) {\n      if (account.type.equals(accountType)) {\n        account.authTokens.values().remove(authToken);\n        changed=true;\n      }\n    }\n    if (changed) {\n      saveAllAccounts();\n    }\n  }\nsynchronized (authTokenRecords) {\n    Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n    while (iterator.hasNext()) {\n      AuthTokenRecord record=iterator.next();\n      if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n        iterator.remove();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 748,
        "startColumnNumber" : 2,
        "endLineNumber" : 772,
        "endColumnNumber" : 3
      },
      "nodeContext" : "synchronized (accountsByUserId) {\n  List<VAccount> accounts=accountsByUserId.get(userId);\n  if (accounts != null) {\n    boolean changed=false;\n    for (    VAccount account : accounts) {\n      if (account.type.equals(accountType)) {\n        account.authTokens.values().remove(authToken);\n        changed=true;\n      }\n    }\n    if (changed) {\n      saveAllAccounts();\n    }\n  }\nsynchronized (authTokenRecords) {\n    Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n    while (iterator.hasNext()) {\n      AuthTokenRecord record=iterator.next();\n      if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n        iterator.remove();\n      }\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 745,
        "startColumnNumber" : 83,
        "endLineNumber" : 773,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (accountType == null)   throw new IllegalArgumentException(\"accountType is null\");\n  if (authToken == null)   throw new IllegalArgumentException(\"authToken is null\");\nsynchronized (accountsByUserId) {\n    List<VAccount> accounts=accountsByUserId.get(userId);\n    if (accounts != null) {\n      boolean changed=false;\n      for (      VAccount account : accounts) {\n        if (account.type.equals(accountType)) {\n          account.authTokens.values().remove(authToken);\n          changed=true;\n        }\n      }\n      if (changed) {\n        saveAllAccounts();\n      }\n    }\nsynchronized (authTokenRecords) {\n      Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n      while (iterator.hasNext()) {\n        AuthTokenRecord record=iterator.next();\n        if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n          iterator.remove();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 744,
        "startColumnNumber" : 1,
        "endLineNumber" : 773,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void invalidateAuthToken(int userId,String accountType,String authToken){\n  if (accountType == null)   throw new IllegalArgumentException(\"accountType is null\");\n  if (authToken == null)   throw new IllegalArgumentException(\"authToken is null\");\nsynchronized (accountsByUserId) {\n    List<VAccount> accounts=accountsByUserId.get(userId);\n    if (accounts != null) {\n      boolean changed=false;\n      for (      VAccount account : accounts) {\n        if (account.type.equals(accountType)) {\n          account.authTokens.values().remove(authToken);\n          changed=true;\n        }\n      }\n      if (changed) {\n        saveAllAccounts();\n      }\n    }\nsynchronized (authTokenRecords) {\n      Iterator<AuthTokenRecord> iterator=authTokenRecords.iterator();\n      while (iterator.hasNext()) {\n        AuthTokenRecord record=iterator.next();\n        if (record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)) {\n          iterator.remove();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 766,
        "startColumnNumber" : 9,
        "endLineNumber" : 767,
        "endColumnNumber" : 44
      },
      "nodeContext" : "record.userId == userId && record.authTokenType.equals(accountType) && record.authToken.equals(authToken)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 67,
    "startLineNumber" : 766,
    "startColumnNumber" : 9,
    "endLineNumber" : 766,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}