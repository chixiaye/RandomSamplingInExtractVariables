{
  "id" : 261,
  "expression" : "String.format(\"found {} revisions\",revisions.size())",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/hibernate-envers/deployment/src/test/java/io/quarkus/hibernate/orm/envers/EnversTestValidationResource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(\"found {} revisions\",revisions.size())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 44,
      "startColumnNumber" : 48,
      "endLineNumber" : 44,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 44,
        "startColumnNumber" : 22,
        "endLineNumber" : 44,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new IllegalStateException(String.format(\"found {} revisions\",revisions.size()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 103
      },
      "nodeContext" : "throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 43,
        "startColumnNumber" : 39,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (revisions.size() != 2) {\n  throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  transaction.begin();\n  MyAuditedEntity entity=new MyAuditedEntity();\n  entity.setName(\"initial\");\n  em.persist(entity);\n  transaction.commit();\n  transaction.begin();\n  entity.setName(name);\n  em.merge(entity);\n  em.flush();\n  transaction.commit();\n  AuditReader auditReader=AuditReaderFactory.get(em);\n  List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n  if (revisions.size() != 2) {\n    throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n  }\n  MyRevisionEntity revEntity=auditReader.findRevision(MyRevisionEntity.class,revisions.get(0));\n  if (revEntity.getListenerValue() == null) {\n    throw new IllegalStateException(\"revision listener failed to update revision entity\");\n  }\n  return \"OK\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  transaction.begin();\n  MyAuditedEntity entity=new MyAuditedEntity();\n  entity.setName(\"initial\");\n  em.persist(entity);\n  transaction.commit();\n  transaction.begin();\n  entity.setName(name);\n  em.merge(entity);\n  em.flush();\n  transaction.commit();\n  AuditReader auditReader=AuditReaderFactory.get(em);\n  List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n  if (revisions.size() != 2) {\n    throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n  }\n  MyRevisionEntity revEntity=auditReader.findRevision(MyRevisionEntity.class,revisions.get(0));\n  if (revEntity.getListenerValue() == null) {\n    throw new IllegalStateException(\"revision listener failed to update revision entity\");\n  }\n  return \"OK\";\n}\n catch (Exception exception) {\n  return exception.getMessage();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    transaction.begin();\n    MyAuditedEntity entity=new MyAuditedEntity();\n    entity.setName(\"initial\");\n    em.persist(entity);\n    transaction.commit();\n    transaction.begin();\n    entity.setName(name);\n    em.merge(entity);\n    em.flush();\n    transaction.commit();\n    AuditReader auditReader=AuditReaderFactory.get(em);\n    List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n    if (revisions.size() != 2) {\n      throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n    }\n    MyRevisionEntity revEntity=auditReader.findRevision(MyRevisionEntity.class,revisions.get(0));\n    if (revEntity.getListenerValue() == null) {\n      throw new IllegalStateException(\"revision listener failed to update revision entity\");\n    }\n    return \"OK\";\n  }\n catch (  Exception exception) {\n    return exception.getMessage();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@POST public String save(String name){\n  try {\n    transaction.begin();\n    MyAuditedEntity entity=new MyAuditedEntity();\n    entity.setName(\"initial\");\n    em.persist(entity);\n    transaction.commit();\n    transaction.begin();\n    entity.setName(name);\n    em.merge(entity);\n    em.flush();\n    transaction.commit();\n    AuditReader auditReader=AuditReaderFactory.get(em);\n    List<Number> revisions=auditReader.getRevisions(MyAuditedEntity.class,entity.getId());\n    if (revisions.size() != 2) {\n      throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n    }\n    MyRevisionEntity revEntity=auditReader.findRevision(MyRevisionEntity.class,revisions.get(0));\n    if (revEntity.getListenerValue() == null) {\n      throw new IllegalStateException(\"revision listener failed to update revision entity\");\n    }\n    return \"OK\";\n  }\n catch (  Exception exception) {\n    return exception.getMessage();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 103
      },
      "nodeContext" : "throw new IllegalStateException(String.format(\"found {} revisions\",revisions.size()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 44,
    "startColumnNumber" : 48,
    "endLineNumber" : 44,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}