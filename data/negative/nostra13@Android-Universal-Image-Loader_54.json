{
  "id" : 54,
  "expression" : "options",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "ff62a10bd85d60931de42fec90aa554b9fd65a96",
  "filePath" : "UniversalImageLoader/src/com/nostra13/universalimageloader/imageloader/ImageLoader.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "options",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 171,
      "startColumnNumber" : 6,
      "endLineNumber" : 171,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 171,
        "startColumnNumber" : 6,
        "endLineNumber" : 171,
        "endColumnNumber" : 21
      },
      "nodeContext" : "options == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 171,
        "startColumnNumber" : 2,
        "endLineNumber" : 173,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (options == null) {\n  options=configuration.defaultDisplayImageOptions;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 161,
        "startColumnNumber" : 119,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 140,
        "startColumnNumber" : 1,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Adds display image task to execution pool. Image will be set to ImageView when it's turn.<br /> <b>NOTE:</b>  {@link #init(ImageLoaderConfiguration)} method must be called before this method call\n * @param url Image URL (i.e. \"http://site.com/image.png\", \"file:///mnt/sdcard/image.png\")\n * @param imageView {@link ImageView} which should display image\n * @param options {@linkplain DisplayImageOptions Display image options} for image displaying. If <b>null</b> - defaultdisplay image options {@linkplain ImageLoaderConfiguration.Builder#defaultDisplayImageOptions(DisplayImageOptions) fromconfiguration} will be used.\n * @param listener {@linkplain ImageLoadingListener Listener} for image loading process. Listener fires events only ifthere is no image for loading in memory cache. If there is image for loading in memory cache then image is displayed at ImageView but listener does not fire any event. Listener fires events on UI thread.\n * @throws RuntimeException if  {@link #init(ImageLoaderConfiguration)} method wasn't called before\n */\npublic void displayImage(String url,ImageView imageView,DisplayImageOptions options,ImageLoadingListener listener){\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 171,
        "startColumnNumber" : 6,
        "endLineNumber" : 171,
        "endColumnNumber" : 21
      },
      "nodeContext" : "options == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.nostra13.universalimageloader.imageloader.DisplayImageOptions"
  }, {
    "nodeContext" : "options",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 188,
      "startColumnNumber" : 87,
      "endLineNumber" : 188,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 188,
        "startColumnNumber" : 39,
        "endLineNumber" : 188,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new ImageLoadingInfo(url,imageView,imageSize,options,listener)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 188,
        "endColumnNumber" : 105
      },
      "nodeContext" : "imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 188,
        "startColumnNumber" : 3,
        "endLineNumber" : 188,
        "endColumnNumber" : 106
      },
      "nodeContext" : "ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 182,
        "startColumnNumber" : 9,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 180,
        "startColumnNumber" : 2,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (bmp != null && !bmp.isRecycled()) {\n  imageView.setImageBitmap(bmp);\n}\n else {\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 161,
        "startColumnNumber" : 119,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 140,
        "startColumnNumber" : 1,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Adds display image task to execution pool. Image will be set to ImageView when it's turn.<br /> <b>NOTE:</b>  {@link #init(ImageLoaderConfiguration)} method must be called before this method call\n * @param url Image URL (i.e. \"http://site.com/image.png\", \"file:///mnt/sdcard/image.png\")\n * @param imageView {@link ImageView} which should display image\n * @param options {@linkplain DisplayImageOptions Display image options} for image displaying. If <b>null</b> - defaultdisplay image options {@linkplain ImageLoaderConfiguration.Builder#defaultDisplayImageOptions(DisplayImageOptions) fromconfiguration} will be used.\n * @param listener {@linkplain ImageLoadingListener Listener} for image loading process. Listener fires events only ifthere is no image for loading in memory cache. If there is image for loading in memory cache then image is displayed at ImageView but listener does not fire any event. Listener fires events on UI thread.\n * @throws RuntimeException if  {@link #init(ImageLoaderConfiguration)} method wasn't called before\n */\npublic void displayImage(String url,ImageView imageView,DisplayImageOptions options,ImageLoadingListener listener){\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 188,
        "startColumnNumber" : 3,
        "endLineNumber" : 188,
        "endColumnNumber" : 106
      },
      "nodeContext" : "ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.nostra13.universalimageloader.imageloader.DisplayImageOptions"
  }, {
    "nodeContext" : "options",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 191,
      "startColumnNumber" : 7,
      "endLineNumber" : 191,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 191,
        "startColumnNumber" : 7,
        "endLineNumber" : 191,
        "endColumnNumber" : 32
      },
      "nodeContext" : "options.isShowStubImage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 191,
        "startColumnNumber" : 3,
        "endLineNumber" : 195,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (options.isShowStubImage()) {\n  imageView.setImageResource(options.getStubImage());\n}\n else {\n  imageView.setImageBitmap(null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 182,
        "startColumnNumber" : 9,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 180,
        "startColumnNumber" : 2,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (bmp != null && !bmp.isRecycled()) {\n  imageView.setImageBitmap(bmp);\n}\n else {\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 161,
        "startColumnNumber" : 119,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 140,
        "startColumnNumber" : 1,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Adds display image task to execution pool. Image will be set to ImageView when it's turn.<br /> <b>NOTE:</b>  {@link #init(ImageLoaderConfiguration)} method must be called before this method call\n * @param url Image URL (i.e. \"http://site.com/image.png\", \"file:///mnt/sdcard/image.png\")\n * @param imageView {@link ImageView} which should display image\n * @param options {@linkplain DisplayImageOptions Display image options} for image displaying. If <b>null</b> - defaultdisplay image options {@linkplain ImageLoaderConfiguration.Builder#defaultDisplayImageOptions(DisplayImageOptions) fromconfiguration} will be used.\n * @param listener {@linkplain ImageLoadingListener Listener} for image loading process. Listener fires events only ifthere is no image for loading in memory cache. If there is image for loading in memory cache then image is displayed at ImageView but listener does not fire any event. Listener fires events on UI thread.\n * @throws RuntimeException if  {@link #init(ImageLoaderConfiguration)} method wasn't called before\n */\npublic void displayImage(String url,ImageView imageView,DisplayImageOptions options,ImageLoadingListener listener){\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 191,
        "startColumnNumber" : 7,
        "endLineNumber" : 191,
        "endColumnNumber" : 32
      },
      "nodeContext" : "options.isShowStubImage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.nostra13.universalimageloader.imageloader.DisplayImageOptions"
  }, {
    "nodeContext" : "options",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 192,
      "startColumnNumber" : 31,
      "endLineNumber" : 192,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 192,
        "startColumnNumber" : 31,
        "endLineNumber" : 192,
        "endColumnNumber" : 53
      },
      "nodeContext" : "options.getStubImage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 54
      },
      "nodeContext" : "imageView.setImageResource(options.getStubImage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 55
      },
      "nodeContext" : "imageView.setImageResource(options.getStubImage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 191,
        "startColumnNumber" : 34,
        "endLineNumber" : 193,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  imageView.setImageResource(options.getStubImage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 191,
        "startColumnNumber" : 3,
        "endLineNumber" : 195,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (options.isShowStubImage()) {\n  imageView.setImageResource(options.getStubImage());\n}\n else {\n  imageView.setImageBitmap(null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 182,
        "startColumnNumber" : 9,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 180,
        "startColumnNumber" : 2,
        "endLineNumber" : 196,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (bmp != null && !bmp.isRecycled()) {\n  imageView.setImageBitmap(bmp);\n}\n else {\n  listener.onLoadingStarted();\n  if (imageLoadingExecutor.isShutdown()) {\n    imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n  }\n  ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n  imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n  if (options.isShowStubImage()) {\n    imageView.setImageResource(options.getStubImage());\n  }\n else {\n    imageView.setImageBitmap(null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 161,
        "startColumnNumber" : 119,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 140,
        "startColumnNumber" : 1,
        "endLineNumber" : 197,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Adds display image task to execution pool. Image will be set to ImageView when it's turn.<br /> <b>NOTE:</b>  {@link #init(ImageLoaderConfiguration)} method must be called before this method call\n * @param url Image URL (i.e. \"http://site.com/image.png\", \"file:///mnt/sdcard/image.png\")\n * @param imageView {@link ImageView} which should display image\n * @param options {@linkplain DisplayImageOptions Display image options} for image displaying. If <b>null</b> - defaultdisplay image options {@linkplain ImageLoaderConfiguration.Builder#defaultDisplayImageOptions(DisplayImageOptions) fromconfiguration} will be used.\n * @param listener {@linkplain ImageLoadingListener Listener} for image loading process. Listener fires events only ifthere is no image for loading in memory cache. If there is image for loading in memory cache then image is displayed at ImageView but listener does not fire any event. Listener fires events on UI thread.\n * @throws RuntimeException if  {@link #init(ImageLoaderConfiguration)} method wasn't called before\n */\npublic void displayImage(String url,ImageView imageView,DisplayImageOptions options,ImageLoadingListener listener){\n  if (configuration == null) {\n    throw new RuntimeException(ERROR_NOT_INIT);\n  }\n  if (url == null || url.length() == 0 || imageView == null) {\n    return;\n  }\n  if (listener == null) {\n    listener=emptyListener;\n  }\n  if (options == null) {\n    options=configuration.defaultDisplayImageOptions;\n  }\n  ImageSize imageSize=getImageSizeScaleTo(imageView);\n  String memoryCacheKey=getMemoryCacheKey(url,imageSize);\n  imageView.setTag(IMAGE_TAG_KEY,memoryCacheKey);\n  Bitmap bmp=configuration.memoryCache.get(memoryCacheKey);\n  if (bmp != null && !bmp.isRecycled()) {\n    imageView.setImageBitmap(bmp);\n  }\n else {\n    listener.onLoadingStarted();\n    if (imageLoadingExecutor.isShutdown()) {\n      imageLoadingExecutor=Executors.newFixedThreadPool(configuration.threadPoolSize);\n    }\n    ImageLoadingInfo imageLoadingInfo=new ImageLoadingInfo(url,imageView,imageSize,options,listener);\n    imageLoadingExecutor.submit(new DisplayImageTask(imageLoadingInfo));\n    if (options.isShowStubImage()) {\n      imageView.setImageResource(options.getStubImage());\n    }\n else {\n      imageView.setImageBitmap(null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 55
      },
      "nodeContext" : "imageView.setImageResource(options.getStubImage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.nostra13.universalimageloader.imageloader.DisplayImageOptions"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 171,
    "startColumnNumber" : 6,
    "endLineNumber" : 171,
    "endColumnNumber" : 13
  }, {
    "charLength" : 7,
    "startLineNumber" : 188,
    "startColumnNumber" : 87,
    "endLineNumber" : 188,
    "endColumnNumber" : 94
  }, {
    "charLength" : 7,
    "startLineNumber" : 191,
    "startColumnNumber" : 7,
    "endLineNumber" : 191,
    "endColumnNumber" : 14
  }, {
    "charLength" : 7,
    "startLineNumber" : 192,
    "startColumnNumber" : 31,
    "endLineNumber" : 192,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}