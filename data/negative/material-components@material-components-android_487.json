{
  "id" : 487,
  "expression" : "COMPONENT_OVERRIDE_KEY",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/catalog/java/io/material/catalog/application/CatalogApplication.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "COMPONENT_OVERRIDE_KEY",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 65,
      "startColumnNumber" : 60,
      "endLineNumber" : 65,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 65,
        "startColumnNumber" : 25,
        "endLineNumber" : 65,
        "endColumnNumber" : 83
      },
      "nodeContext" : "applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 65,
        "startColumnNumber" : 13,
        "endLineNumber" : 65,
        "endColumnNumber" : 83
      },
      "nodeContext" : "className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 84
      },
      "nodeContext" : "String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo(getPackageName(),PackageManager.GET_META_DATA);\n  String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n  if (className == null) {\n    Log.i(TAG,\"Component override metadata not found, using default component.\");\n    return false;\n  }\n  Log.i(TAG,className);\n  Object builderObject=Class.forName(className).getMethod(\"builder\").invoke(null);\n  Class<?> builderClass=builderObject.getClass();\n  builderClass.getMethod(\"application\",Application.class).invoke(builderObject,catalogApplication);\n  Object component=builderClass.getMethod(\"build\").invoke(builderObject);\n  component.getClass().getMethod(\"inject\",CatalogApplication.class).invoke(component,catalogApplication);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo(getPackageName(),PackageManager.GET_META_DATA);\n  String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n  if (className == null) {\n    Log.i(TAG,\"Component override metadata not found, using default component.\");\n    return false;\n  }\n  Log.i(TAG,className);\n  Object builderObject=Class.forName(className).getMethod(\"builder\").invoke(null);\n  Class<?> builderClass=builderObject.getClass();\n  builderClass.getMethod(\"application\",Application.class).invoke(builderObject,catalogApplication);\n  Object component=builderClass.getMethod(\"build\").invoke(builderObject);\n  component.getClass().getMethod(\"inject\",CatalogApplication.class).invoke(component,catalogApplication);\n  return true;\n}\n catch (PackageManager.NameNotFoundException|ClassNotFoundException|NoSuchMethodException|InvocationTargetException|IllegalAccessException e) {\n  Log.e(TAG,\"Component override failed with exception:\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 135,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 61,
        "startColumnNumber" : 86,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo(getPackageName(),PackageManager.GET_META_DATA);\n    String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n    if (className == null) {\n      Log.i(TAG,\"Component override metadata not found, using default component.\");\n      return false;\n    }\n    Log.i(TAG,className);\n    Object builderObject=Class.forName(className).getMethod(\"builder\").invoke(null);\n    Class<?> builderClass=builderObject.getClass();\n    builderClass.getMethod(\"application\",Application.class).invoke(builderObject,catalogApplication);\n    Object component=builderClass.getMethod(\"build\").invoke(builderObject);\n    component.getClass().getMethod(\"inject\",CatalogApplication.class).invoke(component,catalogApplication);\n    return true;\n  }\n catch (  PackageManager.NameNotFoundException|ClassNotFoundException|NoSuchMethodException|InvocationTargetException|IllegalAccessException e) {\n    Log.e(TAG,\"Component override failed with exception:\",e);\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1899,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Replaces the application component by the one specified in AndroidManifest.xml metadata with key  {@link #COMPONENT_OVERRIDE_KEY}. Returns  {@code true} if the component was properlyinitialized and replaced, otherwise returns  {@code false}. <p>This assumes that the replacement component can be initialized exactly the same way as the default component. <p>Suppressing unchecked warnings because there is no way we have a statically typed class argument for instances of Class in this method.\n */\n@SuppressWarnings(\"unchecked\") private boolean overrideApplicationComponent(CatalogApplication catalogApplication){\n  try {\n    ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo(getPackageName(),PackageManager.GET_META_DATA);\n    String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n    if (className == null) {\n      Log.i(TAG,\"Component override metadata not found, using default component.\");\n      return false;\n    }\n    Log.i(TAG,className);\n    Object builderObject=Class.forName(className).getMethod(\"builder\").invoke(null);\n    Class<?> builderClass=builderObject.getClass();\n    builderClass.getMethod(\"application\",Application.class).invoke(builderObject,catalogApplication);\n    Object component=builderClass.getMethod(\"build\").invoke(builderObject);\n    component.getClass().getMethod(\"inject\",CatalogApplication.class).invoke(component,catalogApplication);\n    return true;\n  }\n catch (  PackageManager.NameNotFoundException|ClassNotFoundException|NoSuchMethodException|InvocationTargetException|IllegalAccessException e) {\n    Log.e(TAG,\"Component override failed with exception:\",e);\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 84
      },
      "nodeContext" : "String className=applicationInfo.metaData.getString(COMPONENT_OVERRIDE_KEY);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 65,
    "startColumnNumber" : 60,
    "endLineNumber" : 65,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}