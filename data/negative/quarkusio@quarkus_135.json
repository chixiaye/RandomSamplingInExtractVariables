{
  "id" : 135,
  "expression" : "throwable",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/VertxInputStream.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "throwable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 236,
      "startColumnNumber" : 40,
      "endLineNumber" : 236,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 236,
        "startColumnNumber" : 24,
        "endLineNumber" : 236,
        "endColumnNumber" : 49
      },
      "nodeContext" : "readException=throwable",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 236,
        "startColumnNumber" : 24,
        "endLineNumber" : 236,
        "endColumnNumber" : 50
      },
      "nodeContext" : "readException=throwable;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 231,
        "startColumnNumber" : 34,
        "endLineNumber" : 238,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  request.connection().close();\n  IOException throwable=new IOException(\"Read timed out\");\n  readException=throwable;\n  throw throwable;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 231,
        "startColumnNumber" : 20,
        "endLineNumber" : 238,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (rem <= 0) {\n  request.connection().close();\n  IOException throwable=new IOException(\"Read timed out\");\n  readException=throwable;\n  throw throwable;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1087,
        "startLineNumber" : 229,
        "startColumnNumber" : 72,
        "endLineNumber" : 251,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long rem=expire - System.currentTimeMillis();\n  if (rem <= 0) {\n    request.connection().close();\n    IOException throwable=new IOException(\"Read timed out\");\n    readException=throwable;\n    throw throwable;\n  }\n  try {\n    if (Context.isOnEventLoopThread()) {\n      throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n    }\n    waiting=true;\n    request.connection().wait(rem);\n  }\n catch (  InterruptedException e) {\n    throw new InterruptedIOException(e.getMessage());\n  }\n finally {\n    waiting=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 229,
        "startColumnNumber" : 16,
        "endLineNumber" : 251,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (input1 == null && !eof && readException == null) {\n  long rem=expire - System.currentTimeMillis();\n  if (rem <= 0) {\n    request.connection().close();\n    IOException throwable=new IOException(\"Read timed out\");\n    readException=throwable;\n    throw throwable;\n  }\n  try {\n    if (Context.isOnEventLoopThread()) {\n      throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n    }\n    waiting=true;\n    request.connection().wait(rem);\n  }\n catch (  InterruptedException e) {\n    throw new InterruptedIOException(e.getMessage());\n  }\n finally {\n    waiting=false;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1719,
        "startLineNumber" : 228,
        "startColumnNumber" : 48,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while (input1 == null && !eof && readException == null) {\n    long rem=expire - System.currentTimeMillis();\n    if (rem <= 0) {\n      request.connection().close();\n      IOException throwable=new IOException(\"Read timed out\");\n      readException=throwable;\n      throw throwable;\n    }\n    try {\n      if (Context.isOnEventLoopThread()) {\n        throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n      }\n      waiting=true;\n      request.connection().wait(rem);\n    }\n catch (    InterruptedException e) {\n      throw new InterruptedIOException(e.getMessage());\n    }\n finally {\n      waiting=false;\n    }\n  }\n  if (readException != null) {\n    throw new IOException(readException);\n  }\n  Buffer ret=input1;\n  input1=null;\n  if (inputOverflow != null) {\n    input1=inputOverflow.poll();\n    if (input1 == null) {\n      request.fetch(1);\n    }\n  }\n else   if (!eof) {\n    request.fetch(1);\n  }\n  return ret == null ? null : ret.getByteBuf();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 228,
        "startColumnNumber" : 12,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "synchronized (request.connection()) {\n  while (input1 == null && !eof && readException == null) {\n    long rem=expire - System.currentTimeMillis();\n    if (rem <= 0) {\n      request.connection().close();\n      IOException throwable=new IOException(\"Read timed out\");\n      readException=throwable;\n      throw throwable;\n    }\n    try {\n      if (Context.isOnEventLoopThread()) {\n        throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n      }\n      waiting=true;\n      request.connection().wait(rem);\n    }\n catch (    InterruptedException e) {\n      throw new InterruptedIOException(e.getMessage());\n    }\n finally {\n      waiting=false;\n    }\n  }\n  if (readException != null) {\n    throw new IOException(readException);\n  }\n  Buffer ret=input1;\n  input1=null;\n  if (inputOverflow != null) {\n    input1=inputOverflow.poll();\n    if (input1 == null) {\n      request.fetch(1);\n    }\n  }\n else   if (!eof) {\n    request.fetch(1);\n  }\n  return ret == null ? null : ret.getByteBuf();\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1843,
        "startLineNumber" : 226,
        "startColumnNumber" : 60,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long expire=System.currentTimeMillis() + timeout;\nsynchronized (request.connection()) {\n    while (input1 == null && !eof && readException == null) {\n      long rem=expire - System.currentTimeMillis();\n      if (rem <= 0) {\n        request.connection().close();\n        IOException throwable=new IOException(\"Read timed out\");\n        readException=throwable;\n        throw throwable;\n      }\n      try {\n        if (Context.isOnEventLoopThread()) {\n          throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n        }\n        waiting=true;\n        request.connection().wait(rem);\n      }\n catch (      InterruptedException e) {\n        throw new InterruptedIOException(e.getMessage());\n      }\n finally {\n        waiting=false;\n      }\n    }\n    if (readException != null) {\n      throw new IOException(readException);\n    }\n    Buffer ret=input1;\n    input1=null;\n    if (inputOverflow != null) {\n      input1=inputOverflow.poll();\n      if (input1 == null) {\n        request.fetch(1);\n      }\n    }\n else     if (!eof) {\n      request.fetch(1);\n    }\n    return ret == null ? null : ret.getByteBuf();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "protected ByteBuf readBlocking() throws IOException {\n  long expire=System.currentTimeMillis() + timeout;\nsynchronized (request.connection()) {\n    while (input1 == null && !eof && readException == null) {\n      long rem=expire - System.currentTimeMillis();\n      if (rem <= 0) {\n        request.connection().close();\n        IOException throwable=new IOException(\"Read timed out\");\n        readException=throwable;\n        throw throwable;\n      }\n      try {\n        if (Context.isOnEventLoopThread()) {\n          throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n        }\n        waiting=true;\n        request.connection().wait(rem);\n      }\n catch (      InterruptedException e) {\n        throw new InterruptedIOException(e.getMessage());\n      }\n finally {\n        waiting=false;\n      }\n    }\n    if (readException != null) {\n      throw new IOException(readException);\n    }\n    Buffer ret=input1;\n    input1=null;\n    if (inputOverflow != null) {\n      input1=inputOverflow.poll();\n      if (input1 == null) {\n        request.fetch(1);\n      }\n    }\n else     if (!eof) {\n      request.fetch(1);\n    }\n    return ret == null ? null : ret.getByteBuf();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 236,
        "startColumnNumber" : 24,
        "endLineNumber" : 236,
        "endColumnNumber" : 50
      },
      "nodeContext" : "readException=throwable;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  }, {
    "nodeContext" : "throwable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 237,
      "startColumnNumber" : 30,
      "endLineNumber" : 237,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 40
      },
      "nodeContext" : "throw throwable;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 231,
        "startColumnNumber" : 34,
        "endLineNumber" : 238,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  request.connection().close();\n  IOException throwable=new IOException(\"Read timed out\");\n  readException=throwable;\n  throw throwable;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 231,
        "startColumnNumber" : 20,
        "endLineNumber" : 238,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (rem <= 0) {\n  request.connection().close();\n  IOException throwable=new IOException(\"Read timed out\");\n  readException=throwable;\n  throw throwable;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1087,
        "startLineNumber" : 229,
        "startColumnNumber" : 72,
        "endLineNumber" : 251,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long rem=expire - System.currentTimeMillis();\n  if (rem <= 0) {\n    request.connection().close();\n    IOException throwable=new IOException(\"Read timed out\");\n    readException=throwable;\n    throw throwable;\n  }\n  try {\n    if (Context.isOnEventLoopThread()) {\n      throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n    }\n    waiting=true;\n    request.connection().wait(rem);\n  }\n catch (  InterruptedException e) {\n    throw new InterruptedIOException(e.getMessage());\n  }\n finally {\n    waiting=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 229,
        "startColumnNumber" : 16,
        "endLineNumber" : 251,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (input1 == null && !eof && readException == null) {\n  long rem=expire - System.currentTimeMillis();\n  if (rem <= 0) {\n    request.connection().close();\n    IOException throwable=new IOException(\"Read timed out\");\n    readException=throwable;\n    throw throwable;\n  }\n  try {\n    if (Context.isOnEventLoopThread()) {\n      throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n    }\n    waiting=true;\n    request.connection().wait(rem);\n  }\n catch (  InterruptedException e) {\n    throw new InterruptedIOException(e.getMessage());\n  }\n finally {\n    waiting=false;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1719,
        "startLineNumber" : 228,
        "startColumnNumber" : 48,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while (input1 == null && !eof && readException == null) {\n    long rem=expire - System.currentTimeMillis();\n    if (rem <= 0) {\n      request.connection().close();\n      IOException throwable=new IOException(\"Read timed out\");\n      readException=throwable;\n      throw throwable;\n    }\n    try {\n      if (Context.isOnEventLoopThread()) {\n        throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n      }\n      waiting=true;\n      request.connection().wait(rem);\n    }\n catch (    InterruptedException e) {\n      throw new InterruptedIOException(e.getMessage());\n    }\n finally {\n      waiting=false;\n    }\n  }\n  if (readException != null) {\n    throw new IOException(readException);\n  }\n  Buffer ret=input1;\n  input1=null;\n  if (inputOverflow != null) {\n    input1=inputOverflow.poll();\n    if (input1 == null) {\n      request.fetch(1);\n    }\n  }\n else   if (!eof) {\n    request.fetch(1);\n  }\n  return ret == null ? null : ret.getByteBuf();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 228,
        "startColumnNumber" : 12,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "synchronized (request.connection()) {\n  while (input1 == null && !eof && readException == null) {\n    long rem=expire - System.currentTimeMillis();\n    if (rem <= 0) {\n      request.connection().close();\n      IOException throwable=new IOException(\"Read timed out\");\n      readException=throwable;\n      throw throwable;\n    }\n    try {\n      if (Context.isOnEventLoopThread()) {\n        throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n      }\n      waiting=true;\n      request.connection().wait(rem);\n    }\n catch (    InterruptedException e) {\n      throw new InterruptedIOException(e.getMessage());\n    }\n finally {\n      waiting=false;\n    }\n  }\n  if (readException != null) {\n    throw new IOException(readException);\n  }\n  Buffer ret=input1;\n  input1=null;\n  if (inputOverflow != null) {\n    input1=inputOverflow.poll();\n    if (input1 == null) {\n      request.fetch(1);\n    }\n  }\n else   if (!eof) {\n    request.fetch(1);\n  }\n  return ret == null ? null : ret.getByteBuf();\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1843,
        "startLineNumber" : 226,
        "startColumnNumber" : 60,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long expire=System.currentTimeMillis() + timeout;\nsynchronized (request.connection()) {\n    while (input1 == null && !eof && readException == null) {\n      long rem=expire - System.currentTimeMillis();\n      if (rem <= 0) {\n        request.connection().close();\n        IOException throwable=new IOException(\"Read timed out\");\n        readException=throwable;\n        throw throwable;\n      }\n      try {\n        if (Context.isOnEventLoopThread()) {\n          throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n        }\n        waiting=true;\n        request.connection().wait(rem);\n      }\n catch (      InterruptedException e) {\n        throw new InterruptedIOException(e.getMessage());\n      }\n finally {\n        waiting=false;\n      }\n    }\n    if (readException != null) {\n      throw new IOException(readException);\n    }\n    Buffer ret=input1;\n    input1=null;\n    if (inputOverflow != null) {\n      input1=inputOverflow.poll();\n      if (input1 == null) {\n        request.fetch(1);\n      }\n    }\n else     if (!eof) {\n      request.fetch(1);\n    }\n    return ret == null ? null : ret.getByteBuf();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 267,
        "endColumnNumber" : 9
      },
      "nodeContext" : "protected ByteBuf readBlocking() throws IOException {\n  long expire=System.currentTimeMillis() + timeout;\nsynchronized (request.connection()) {\n    while (input1 == null && !eof && readException == null) {\n      long rem=expire - System.currentTimeMillis();\n      if (rem <= 0) {\n        request.connection().close();\n        IOException throwable=new IOException(\"Read timed out\");\n        readException=throwable;\n        throw throwable;\n      }\n      try {\n        if (Context.isOnEventLoopThread()) {\n          throw new BlockingNotAllowedException(\"Attempting a blocking read on io thread\");\n        }\n        waiting=true;\n        request.connection().wait(rem);\n      }\n catch (      InterruptedException e) {\n        throw new InterruptedIOException(e.getMessage());\n      }\n finally {\n        waiting=false;\n      }\n    }\n    if (readException != null) {\n      throw new IOException(readException);\n    }\n    Buffer ret=input1;\n    input1=null;\n    if (inputOverflow != null) {\n      input1=inputOverflow.poll();\n      if (input1 == null) {\n        request.fetch(1);\n      }\n    }\n else     if (!eof) {\n      request.fetch(1);\n    }\n    return ret == null ? null : ret.getByteBuf();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 40
      },
      "nodeContext" : "throw throwable;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 236,
    "startColumnNumber" : 40,
    "endLineNumber" : 236,
    "endColumnNumber" : 49
  }, {
    "charLength" : 9,
    "startLineNumber" : 237,
    "startColumnNumber" : 30,
    "endLineNumber" : 237,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}