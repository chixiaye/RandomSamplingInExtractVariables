{
  "id" : 463,
  "expression" : "shouldRunFlag",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/install/InstallUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "shouldRunFlag",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 147,
      "startColumnNumber" : 52,
      "endLineNumber" : 147,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 147,
        "startColumnNumber" : 28,
        "endLineNumber" : 147,
        "endColumnNumber" : 66
      },
      "nodeContext" : "\"true\".equalsIgnoreCase(shouldRunFlag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 147,
        "endColumnNumber" : 66
      },
      "nodeContext" : "shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 67
      },
      "nodeContext" : "boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2458,
        "startLineNumber" : 134,
        "startColumnNumber" : 57,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String stateOverride=System.getProperty(\"jenkins.install.state\",System.getenv(\"jenkins.install.state\"));\n  if (stateOverride != null) {\n    try {\n      return InstallState.valueOf(stateOverride.toUpperCase());\n    }\n catch (    RuntimeException e) {\n      throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");\n    }\n  }\n  String shouldRunFlag=SystemProperties.getString(\"jenkins.install.runSetupWizard\");\n  boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n  boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n  if (!shouldRun) {\n    if (Functions.getIsUnitTest()) {\n      return InstallState.TEST;\n    }\n    if (SystemProperties.getBoolean(\"hudson.Main.development\")) {\n      return InstallState.DEVELOPMENT;\n    }\n  }\n  VersionNumber lastRunVersion=new VersionNumber(getLastExecVersion());\n  if (!SetupWizard.getUpdateStateFile().exists()) {\n    Jenkins j=Jenkins.get();\n    if (shouldNotRun) {\n      try {\n        InstallState.INITIAL_SETUP_COMPLETED.initializeState();\n        return j.getInstallState();\n      }\n catch (      RuntimeException e) {\n        throw e;\n      }\ncatch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return InstallState.INITIAL_SECURITY_SETUP;\n  }\n  VersionNumber currentRunVersion=new VersionNumber(getCurrentExecVersion());\n  if (lastRunVersion.isOlderThan(currentRunVersion)) {\n    return InstallState.UPGRADE;\n  }\n else   if (lastRunVersion.isNewerThan(currentRunVersion)) {\n    return InstallState.DOWNGRADE;\n  }\n else {\n    return InstallState.RESTART;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static InstallState getDefaultInstallState(){\n  String stateOverride=System.getProperty(\"jenkins.install.state\",System.getenv(\"jenkins.install.state\"));\n  if (stateOverride != null) {\n    try {\n      return InstallState.valueOf(stateOverride.toUpperCase());\n    }\n catch (    RuntimeException e) {\n      throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");\n    }\n  }\n  String shouldRunFlag=SystemProperties.getString(\"jenkins.install.runSetupWizard\");\n  boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n  boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n  if (!shouldRun) {\n    if (Functions.getIsUnitTest()) {\n      return InstallState.TEST;\n    }\n    if (SystemProperties.getBoolean(\"hudson.Main.development\")) {\n      return InstallState.DEVELOPMENT;\n    }\n  }\n  VersionNumber lastRunVersion=new VersionNumber(getLastExecVersion());\n  if (!SetupWizard.getUpdateStateFile().exists()) {\n    Jenkins j=Jenkins.get();\n    if (shouldNotRun) {\n      try {\n        InstallState.INITIAL_SETUP_COMPLETED.initializeState();\n        return j.getInstallState();\n      }\n catch (      RuntimeException e) {\n        throw e;\n      }\ncatch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return InstallState.INITIAL_SECURITY_SETUP;\n  }\n  VersionNumber currentRunVersion=new VersionNumber(getCurrentExecVersion());\n  if (lastRunVersion.isOlderThan(currentRunVersion)) {\n    return InstallState.UPGRADE;\n  }\n else   if (lastRunVersion.isNewerThan(currentRunVersion)) {\n    return InstallState.DOWNGRADE;\n  }\n else {\n    return InstallState.RESTART;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 67
      },
      "nodeContext" : "boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "shouldRunFlag",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 148,
      "startColumnNumber" : 56,
      "endLineNumber" : 148,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 148,
        "startColumnNumber" : 31,
        "endLineNumber" : 148,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"false\".equalsIgnoreCase(shouldRunFlag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 148,
        "startColumnNumber" : 16,
        "endLineNumber" : 148,
        "endColumnNumber" : 70
      },
      "nodeContext" : "shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 71
      },
      "nodeContext" : "boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2458,
        "startLineNumber" : 134,
        "startColumnNumber" : 57,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String stateOverride=System.getProperty(\"jenkins.install.state\",System.getenv(\"jenkins.install.state\"));\n  if (stateOverride != null) {\n    try {\n      return InstallState.valueOf(stateOverride.toUpperCase());\n    }\n catch (    RuntimeException e) {\n      throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");\n    }\n  }\n  String shouldRunFlag=SystemProperties.getString(\"jenkins.install.runSetupWizard\");\n  boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n  boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n  if (!shouldRun) {\n    if (Functions.getIsUnitTest()) {\n      return InstallState.TEST;\n    }\n    if (SystemProperties.getBoolean(\"hudson.Main.development\")) {\n      return InstallState.DEVELOPMENT;\n    }\n  }\n  VersionNumber lastRunVersion=new VersionNumber(getLastExecVersion());\n  if (!SetupWizard.getUpdateStateFile().exists()) {\n    Jenkins j=Jenkins.get();\n    if (shouldNotRun) {\n      try {\n        InstallState.INITIAL_SETUP_COMPLETED.initializeState();\n        return j.getInstallState();\n      }\n catch (      RuntimeException e) {\n        throw e;\n      }\ncatch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return InstallState.INITIAL_SECURITY_SETUP;\n  }\n  VersionNumber currentRunVersion=new VersionNumber(getCurrentExecVersion());\n  if (lastRunVersion.isOlderThan(currentRunVersion)) {\n    return InstallState.UPGRADE;\n  }\n else   if (lastRunVersion.isNewerThan(currentRunVersion)) {\n    return InstallState.DOWNGRADE;\n  }\n else {\n    return InstallState.RESTART;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static InstallState getDefaultInstallState(){\n  String stateOverride=System.getProperty(\"jenkins.install.state\",System.getenv(\"jenkins.install.state\"));\n  if (stateOverride != null) {\n    try {\n      return InstallState.valueOf(stateOverride.toUpperCase());\n    }\n catch (    RuntimeException e) {\n      throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");\n    }\n  }\n  String shouldRunFlag=SystemProperties.getString(\"jenkins.install.runSetupWizard\");\n  boolean shouldRun=\"true\".equalsIgnoreCase(shouldRunFlag);\n  boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n  if (!shouldRun) {\n    if (Functions.getIsUnitTest()) {\n      return InstallState.TEST;\n    }\n    if (SystemProperties.getBoolean(\"hudson.Main.development\")) {\n      return InstallState.DEVELOPMENT;\n    }\n  }\n  VersionNumber lastRunVersion=new VersionNumber(getLastExecVersion());\n  if (!SetupWizard.getUpdateStateFile().exists()) {\n    Jenkins j=Jenkins.get();\n    if (shouldNotRun) {\n      try {\n        InstallState.INITIAL_SETUP_COMPLETED.initializeState();\n        return j.getInstallState();\n      }\n catch (      RuntimeException e) {\n        throw e;\n      }\ncatch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return InstallState.INITIAL_SECURITY_SETUP;\n  }\n  VersionNumber currentRunVersion=new VersionNumber(getCurrentExecVersion());\n  if (lastRunVersion.isOlderThan(currentRunVersion)) {\n    return InstallState.UPGRADE;\n  }\n else   if (lastRunVersion.isNewerThan(currentRunVersion)) {\n    return InstallState.DOWNGRADE;\n  }\n else {\n    return InstallState.RESTART;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 71
      },
      "nodeContext" : "boolean shouldNotRun=\"false\".equalsIgnoreCase(shouldRunFlag);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 147,
    "startColumnNumber" : 52,
    "endLineNumber" : 147,
    "endColumnNumber" : 65
  }, {
    "charLength" : 13,
    "startLineNumber" : 148,
    "startColumnNumber" : 56,
    "endLineNumber" : 148,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}