{
  "id" : 20,
  "expression" : "tmp",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/android/AndroidResourceOutputsTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 47,
      "startColumnNumber" : 18,
      "endLineNumber" : 47,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 47,
        "startColumnNumber" : 18,
        "endLineNumber" : 47,
        "endColumnNumber" : 43
      },
      "nodeContext" : "tmp.resolve(\"actual.zip\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 47,
        "startColumnNumber" : 9,
        "endLineNumber" : 47,
        "endColumnNumber" : 43
      },
      "nodeContext" : "output=tmp.resolve(\"actual.zip\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Path output=tmp.resolve(\"actual.zip\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Path output=tmp.resolve(\"actual.zip\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  }, {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 48,
      "startColumnNumber" : 28,
      "endLineNumber" : 48,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 48,
        "startColumnNumber" : 28,
        "endLineNumber" : 48,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tmp.resolve(\"foo/bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Files.createDirectories(tmp.resolve(\"foo/bar\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Files.createDirectories(tmp.resolve(\"foo/bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Files.createDirectories(tmp.resolve(\"foo/bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  }, {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 49,
      "startColumnNumber" : 16,
      "endLineNumber" : 49,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "tmp.resolve(\"foo/data1.txt\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  }, {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 50,
      "startColumnNumber" : 16,
      "endLineNumber" : 50,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 48
      },
      "nodeContext" : "tmp.resolve(\"foo/bar/data2.txt\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  }, {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 55,
      "startColumnNumber" : 60,
      "endLineNumber" : 55,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 55,
        "endColumnNumber" : 78
      },
      "nodeContext" : "tmp.resolve(\"foo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 53,
        "startColumnNumber" : 47,
        "endLineNumber" : 55,
        "endColumnNumber" : 94
      },
      "nodeContext" : "visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 55,
        "endColumnNumber" : 95
      },
      "nodeContext" : "AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 52,
        "startColumnNumber" : 84,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n  Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n  visitor.writeEntries();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n  AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n  Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n  visitor.writeEntries();\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 55,
        "endColumnNumber" : 78
      },
      "nodeContext" : "tmp.resolve(\"foo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  }, {
    "nodeContext" : "tmp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 56,
      "startColumnNumber" : 25,
      "endLineNumber" : 56,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 25,
        "endLineNumber" : 56,
        "endColumnNumber" : 43
      },
      "nodeContext" : "tmp.resolve(\"foo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Files.walkFileTree(tmp.resolve(\"foo\"),visitor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 52,
        "startColumnNumber" : 84,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n  Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n  visitor.writeEntries();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n  AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n  Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n  visitor.writeEntries();\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testZipEntryPaths() throws Exception {\n  Path output=tmp.resolve(\"actual.zip\");\n  Files.createDirectories(tmp.resolve(\"foo/bar\"));\n  Files.write(tmp.resolve(\"foo/data1.txt\"),\"hello\".getBytes(Charset.defaultCharset()));\n  Files.write(tmp.resolve(\"foo/bar/data2.txt\"),\"world\".getBytes(Charset.defaultCharset()));\n  try (ZipOutputStream zout=new ZipOutputStream(Files.newOutputStream(output))){\n    AndroidResourceOutputs.ZipBuilderVisitor visitor=new AndroidResourceOutputs.ZipBuilderVisitor(AndroidResourceOutputs.ZipBuilder.wrap(zout),tmp.resolve(\"foo\"),\"some/prefix\");\n    Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n    visitor.writeEntries();\n  }\n   List<String> entries=new ArrayList<>();\n  try (ZipInputStream zin=new ZipInputStream(Files.newInputStream(output))){\n    ZipEntry entry=null;\n    while ((entry=zin.getNextEntry()) != null) {\n      entries.add(entry.getName());\n    }\n  }\n   assertThat(entries).containsExactly(\"some/prefix/data1.txt\",\"some/prefix/bar/data2.txt\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Files.walkFileTree(tmp.resolve(\"foo\"),visitor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Path"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 47,
    "startColumnNumber" : 18,
    "endLineNumber" : 47,
    "endColumnNumber" : 21
  }, {
    "charLength" : 3,
    "startLineNumber" : 48,
    "startColumnNumber" : 28,
    "endLineNumber" : 48,
    "endColumnNumber" : 31
  }, {
    "charLength" : 3,
    "startLineNumber" : 49,
    "startColumnNumber" : 16,
    "endLineNumber" : 49,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 50,
    "startColumnNumber" : 16,
    "endLineNumber" : 50,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 55,
    "startColumnNumber" : 60,
    "endLineNumber" : 55,
    "endColumnNumber" : 63
  }, {
    "charLength" : 3,
    "startLineNumber" : 56,
    "startColumnNumber" : 25,
    "endLineNumber" : 56,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}