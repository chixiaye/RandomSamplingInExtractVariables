{
  "id" : 312,
  "expression" : "path.charAt(i)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/net/URLEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "path.charAt(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 240,
      "startColumnNumber" : 7,
      "endLineNumber" : 240,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 240,
        "startColumnNumber" : 3,
        "endLineNumber" : 240,
        "endColumnNumber" : 21
      },
      "nodeContext" : "c=path.charAt(i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 240,
        "startColumnNumber" : 3,
        "endLineNumber" : 240,
        "endColumnNumber" : 22
      },
      "nodeContext" : "c=path.charAt(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 239,
        "startColumnNumber" : 42,
        "endLineNumber" : 264,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  c=path.charAt(i);\n  if (safeCharacters.get(c)) {\n    rewrittenPath.append((char)c);\n  }\n else   if (encodeSpaceAsPlus && c == CharUtil.SPACE) {\n    rewrittenPath.append('+');\n  }\n else {\n    try {\n      writer.write((char)c);\n      writer.flush();\n    }\n catch (    IOException e) {\n      buf.reset();\n      continue;\n    }\n    byte[] ba=buf.toByteArray();\n    for (    byte toEncode : ba) {\n      rewrittenPath.append('%');\n      HexUtil.appendHex(rewrittenPath,toEncode,false);\n    }\n    buf.reset();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 239,
        "startColumnNumber" : 2,
        "endLineNumber" : 264,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < path.length(); i++) {\n  c=path.charAt(i);\n  if (safeCharacters.get(c)) {\n    rewrittenPath.append((char)c);\n  }\n else   if (encodeSpaceAsPlus && c == CharUtil.SPACE) {\n    rewrittenPath.append('+');\n  }\n else {\n    try {\n      writer.write((char)c);\n      writer.flush();\n    }\n catch (    IOException e) {\n      buf.reset();\n      continue;\n    }\n    byte[] ba=buf.toByteArray();\n    for (    byte toEncode : ba) {\n      rewrittenPath.append('%');\n      HexUtil.appendHex(rewrittenPath,toEncode,false);\n    }\n    buf.reset();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 233,
        "startColumnNumber" : 52,
        "endLineNumber" : 266,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final StringBuilder rewrittenPath=new StringBuilder(path.length());\n  ByteArrayOutputStream buf=new ByteArrayOutputStream();\n  OutputStreamWriter writer=new OutputStreamWriter(buf,charset);\n  int c;\n  for (int i=0; i < path.length(); i++) {\n    c=path.charAt(i);\n    if (safeCharacters.get(c)) {\n      rewrittenPath.append((char)c);\n    }\n else     if (encodeSpaceAsPlus && c == CharUtil.SPACE) {\n      rewrittenPath.append('+');\n    }\n else {\n      try {\n        writer.write((char)c);\n        writer.flush();\n      }\n catch (      IOException e) {\n        buf.reset();\n        continue;\n      }\n      byte[] ba=buf.toByteArray();\n      for (      byte toEncode : ba) {\n        rewrittenPath.append('%');\n        HexUtil.appendHex(rewrittenPath,toEncode,false);\n      }\n      buf.reset();\n    }\n  }\n  return rewrittenPath.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 226,
        "startColumnNumber" : 1,
        "endLineNumber" : 266,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将URL中的字符串编码为%形式\n * @param path    需要编码的字符串\n * @param charset 编码\n * @return 编码后的字符串\n */\npublic String encode(String path,Charset charset){\n  final StringBuilder rewrittenPath=new StringBuilder(path.length());\n  ByteArrayOutputStream buf=new ByteArrayOutputStream();\n  OutputStreamWriter writer=new OutputStreamWriter(buf,charset);\n  int c;\n  for (int i=0; i < path.length(); i++) {\n    c=path.charAt(i);\n    if (safeCharacters.get(c)) {\n      rewrittenPath.append((char)c);\n    }\n else     if (encodeSpaceAsPlus && c == CharUtil.SPACE) {\n      rewrittenPath.append('+');\n    }\n else {\n      try {\n        writer.write((char)c);\n        writer.flush();\n      }\n catch (      IOException e) {\n        buf.reset();\n        continue;\n      }\n      byte[] ba=buf.toByteArray();\n      for (      byte toEncode : ba) {\n        rewrittenPath.append('%');\n        HexUtil.appendHex(rewrittenPath,toEncode,false);\n      }\n      buf.reset();\n    }\n  }\n  return rewrittenPath.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 240,
        "startColumnNumber" : 3,
        "endLineNumber" : 240,
        "endColumnNumber" : 22
      },
      "nodeContext" : "c=path.charAt(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 240,
    "startColumnNumber" : 7,
    "endLineNumber" : 240,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}