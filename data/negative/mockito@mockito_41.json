{
  "id" : 41,
  "expression" : "\"2\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/matchers/MatchersMixedWithRawArgumentsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"2\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 40,
      "startColumnNumber" : 26,
      "endLineNumber" : 40,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mock.varargs(\"1\",\"2\",\"3\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mock.varargs(\"1\",\"2\",\"3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 39,
        "startColumnNumber" : 60,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.varargs(\"1\",\"2\",\"3\");\n  verify(mock).varargs(\"1\",anyString(),\"3\");\n  verify(mock).varargs(anyBoolean(),false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Ignore(\"prototyping new feature that allows to avoid eq() matchers when raw args passed\") @Test public void shouldAllowMixingRawArgumentsWithMatchers(){\n  mock.varargs(\"1\",\"2\",\"3\");\n  verify(mock).varargs(\"1\",anyString(),\"3\");\n  verify(mock).varargs(anyBoolean(),false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 36,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mock.varargs(\"1\",\"2\",\"3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 40,
    "startColumnNumber" : 26,
    "endLineNumber" : 40,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}