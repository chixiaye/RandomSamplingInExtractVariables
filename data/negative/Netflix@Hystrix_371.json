{
  "id" : 371,
  "expression" : "i",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-metrics-event-stream-jaxrs/src/test/java/com/netflix/hystrix/contrib/metrics/controller/HystricsMetricsControllerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 108,
      "startColumnNumber" : 18,
      "endLineNumber" : 108,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 108,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 23
      },
      "nodeContext" : "i < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  EventInput stream=getStream();\n  System.out.println(\"Received Response for Request#\" + (i + 1));\n  streamList.add(stream);\n  validateStream(stream,1000);\n  System.out.println(\"Validated Response#\" + (i + 1));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 104,
        "startColumnNumber" : 48,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1116,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testConcurrency() throws Exception {\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 108,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 23
      },
      "nodeContext" : "i < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 110,
      "startColumnNumber" : 58,
      "endLineNumber" : 110,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 110,
        "startColumnNumber" : 58,
        "endLineNumber" : 110,
        "endColumnNumber" : 63
      },
      "nodeContext" : "i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 110,
        "startColumnNumber" : 57,
        "endLineNumber" : 110,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(i + 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 110,
        "startColumnNumber" : 22,
        "endLineNumber" : 110,
        "endColumnNumber" : 64
      },
      "nodeContext" : "\"Received Response for Request#\" + (i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 65
      },
      "nodeContext" : "System.out.println(\"Received Response for Request#\" + (i + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 66
      },
      "nodeContext" : "System.out.println(\"Received Response for Request#\" + (i + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 108,
        "startColumnNumber" : 30,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EventInput stream=getStream();\n  System.out.println(\"Received Response for Request#\" + (i + 1));\n  streamList.add(stream);\n  validateStream(stream,1000);\n  System.out.println(\"Validated Response#\" + (i + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  EventInput stream=getStream();\n  System.out.println(\"Received Response for Request#\" + (i + 1));\n  streamList.add(stream);\n  validateStream(stream,1000);\n  System.out.println(\"Validated Response#\" + (i + 1));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 104,
        "startColumnNumber" : 48,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1116,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testConcurrency() throws Exception {\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 66
      },
      "nodeContext" : "System.out.println(\"Received Response for Request#\" + (i + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 113,
      "startColumnNumber" : 47,
      "endLineNumber" : 113,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 113,
        "startColumnNumber" : 47,
        "endLineNumber" : 113,
        "endColumnNumber" : 52
      },
      "nodeContext" : "i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 113,
        "startColumnNumber" : 46,
        "endLineNumber" : 113,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(i + 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 113,
        "startColumnNumber" : 22,
        "endLineNumber" : 113,
        "endColumnNumber" : 53
      },
      "nodeContext" : "\"Validated Response#\" + (i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"Validated Response#\" + (i + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"Validated Response#\" + (i + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 108,
        "startColumnNumber" : 30,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EventInput stream=getStream();\n  System.out.println(\"Received Response for Request#\" + (i + 1));\n  streamList.add(stream);\n  validateStream(stream,1000);\n  System.out.println(\"Validated Response#\" + (i + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  EventInput stream=getStream();\n  System.out.println(\"Received Response for Request#\" + (i + 1));\n  streamList.add(stream);\n  validateStream(stream,1000);\n  System.out.println(\"Validated Response#\" + (i + 1));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 104,
        "startColumnNumber" : 48,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1116,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testConcurrency() throws Exception {\n  executeHystrixCommand();\n  List<EventInput> streamList=new ArrayList<EventInput>();\n  for (int i=0; i < 5; i++) {\n    EventInput stream=getStream();\n    System.out.println(\"Received Response for Request#\" + (i + 1));\n    streamList.add(stream);\n    validateStream(stream,1000);\n    System.out.println(\"Validated Response#\" + (i + 1));\n  }\n  try {\n    streamList.add(getStreamFailFast());\n    Assert.fail(\"Expected 'ServiceUnavailableException' but, request went through.\");\n  }\n catch (  ServiceUnavailableException e) {\n    System.out.println(\"Got ServiceUnavailableException as expected.\");\n  }\n  streamList.get(0).close();\n  EventInput eventInput=getStream();\n  streamList.add(eventInput);\n  validateStream(eventInput,1000);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"Validated Response#\" + (i + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 108,
    "startColumnNumber" : 18,
    "endLineNumber" : 108,
    "endColumnNumber" : 19
  }, {
    "charLength" : 1,
    "startLineNumber" : 110,
    "startColumnNumber" : 58,
    "endLineNumber" : 110,
    "endColumnNumber" : 59
  }, {
    "charLength" : 1,
    "startLineNumber" : 113,
    "startColumnNumber" : 47,
    "endLineNumber" : 113,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}