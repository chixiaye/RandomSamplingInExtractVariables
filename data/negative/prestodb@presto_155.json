{
  "id" : 155,
  "expression" : "unpackedZone",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/util/TestTimeZoneUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unpackedZone",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 113,
      "startColumnNumber" : 41,
      "endLineNumber" : 113,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertDateTimeZoneEquals(zoneId,unpackedZone)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertDateTimeZoneEquals(zoneId,unpackedZone);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long packWithDateTime=packDateTimeWithZone(new DateTime(42,dateTimeZone));\n  long packWithZoneId=packDateTimeWithZone(42L,ZoneId.of(dateTimeZone.getID()).getId());\n  if (packWithDateTime != packWithZoneId) {\n    fail(format(\"packWithDateTime and packWithZoneId differ for zone [%s] / [%s]: %s [%s %s] and %s [%s %s]\",zoneId,dateTimeZone,packWithDateTime,unpackMillisUtc(packWithDateTime),unpackZoneKey(packWithDateTime),packWithZoneId,unpackMillisUtc(packWithZoneId),unpackZoneKey(packWithZoneId)));\n  }\n  DateTimeZone unpackedZone=unpackDateTimeZone(packWithDateTime);\n  assertDateTimeZoneEquals(zoneId,unpackedZone);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void assertTimeZone(String zoneId,DateTimeZone dateTimeZone){\n  long packWithDateTime=packDateTimeWithZone(new DateTime(42,dateTimeZone));\n  long packWithZoneId=packDateTimeWithZone(42L,ZoneId.of(dateTimeZone.getID()).getId());\n  if (packWithDateTime != packWithZoneId) {\n    fail(format(\"packWithDateTime and packWithZoneId differ for zone [%s] / [%s]: %s [%s %s] and %s [%s %s]\",zoneId,dateTimeZone,packWithDateTime,unpackMillisUtc(packWithDateTime),unpackZoneKey(packWithDateTime),packWithZoneId,unpackMillisUtc(packWithZoneId),unpackZoneKey(packWithZoneId)));\n  }\n  DateTimeZone unpackedZone=unpackDateTimeZone(packWithDateTime);\n  assertDateTimeZoneEquals(zoneId,unpackedZone);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertDateTimeZoneEquals(zoneId,unpackedZone);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.util.DateTimeZone"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 113,
    "startColumnNumber" : 41,
    "endLineNumber" : 113,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}