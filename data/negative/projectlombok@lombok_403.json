{
  "id" : 403,
  "expression" : "\"org.eclipse.jdt.\"",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/experimental/src/lombok/javac/disableCheckedExceptions/DisableCheckedExceptionsAgent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"org.eclipse.jdt.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 52,
      "startColumnNumber" : 27,
      "endLineNumber" : 52,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 46
      },
      "nodeContext" : "className.startsWith(\"org.eclipse.jdt.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (className.startsWith(\"org.eclipse.jdt.\")) {\n  errorToShow=\"This version of disableCheckedExceptions is not compatible with eclipse. javac only; sorry.\";\n  procEnv.getMessager().printMessage(Kind.WARNING,errorToShow);\n}\n else if (!procEnv.getClass().getName().equals(\"com.sun.tools.javac.processing.JavacProcessingEnvironment\")) {\n  procEnv.getMessager().printMessage(Kind.WARNING,\"You aren't using a compiler based around javac v1.6, so disableCheckedExceptions will not work.\\n\" + \"Your processor class is: \" + className);\n}\n else {\n  new LiveInjector().inject(LiveInjector.findPathJar(DisableCheckedExceptionsAgent.class));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 49,
        "startColumnNumber" : 59,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.init(procEnv);\n  String className=procEnv.getClass().getName();\n  if (className.startsWith(\"org.eclipse.jdt.\")) {\n    errorToShow=\"This version of disableCheckedExceptions is not compatible with eclipse. javac only; sorry.\";\n    procEnv.getMessager().printMessage(Kind.WARNING,errorToShow);\n  }\n else   if (!procEnv.getClass().getName().equals(\"com.sun.tools.javac.processing.JavacProcessingEnvironment\")) {\n    procEnv.getMessager().printMessage(Kind.WARNING,\"You aren't using a compiler based around javac v1.6, so disableCheckedExceptions will not work.\\n\" + \"Your processor class is: \" + className);\n  }\n else {\n    new LiveInjector().inject(LiveInjector.findPathJar(DisableCheckedExceptionsAgent.class));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Inject an agent if we're on a sun-esque JVM. \n */\n@Override public void init(ProcessingEnvironment procEnv){\n  super.init(procEnv);\n  String className=procEnv.getClass().getName();\n  if (className.startsWith(\"org.eclipse.jdt.\")) {\n    errorToShow=\"This version of disableCheckedExceptions is not compatible with eclipse. javac only; sorry.\";\n    procEnv.getMessager().printMessage(Kind.WARNING,errorToShow);\n  }\n else   if (!procEnv.getClass().getName().equals(\"com.sun.tools.javac.processing.JavacProcessingEnvironment\")) {\n    procEnv.getMessager().printMessage(Kind.WARNING,\"You aren't using a compiler based around javac v1.6, so disableCheckedExceptions will not work.\\n\" + \"Your processor class is: \" + className);\n  }\n else {\n    new LiveInjector().inject(LiveInjector.findPathJar(DisableCheckedExceptionsAgent.class));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 46
      },
      "nodeContext" : "className.startsWith(\"org.eclipse.jdt.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 52,
    "startColumnNumber" : 27,
    "endLineNumber" : 52,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}