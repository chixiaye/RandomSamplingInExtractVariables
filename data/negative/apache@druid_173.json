{
  "id" : 173,
  "expression" : "IllegalArgumentException.class",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-contrib/materialized-view-maintenance/src/test/java/org/apache/druid/indexing/materializedview/DerivativeDataSourceMetadataTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "IllegalArgumentException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 39,
      "startColumnNumber" : 53,
      "endLineNumber" : 39,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 39,
        "startColumnNumber" : 29,
        "endLineNumber" : 39,
        "endColumnNumber" : 84
      },
      "nodeContext" : "CoreMatchers.instanceOf(IllegalArgumentException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 85
      },
      "nodeContext" : "expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 86
      },
      "nodeContext" : "expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n  expectedException.expectMessage(\"baseDataSource cannot be null or empty. Please provide a baseDataSource.\");\n  String baseDataSource=\"\";\n  Set<String> dims=Sets.newHashSet(\"dim1\",\"dim2\",\"dim3\");\n  Set<String> metrics=Sets.newHashSet(\"cost\");\n  DerivativeDataSourceMetadata metadata=new DerivativeDataSourceMetadata(baseDataSource,dims,metrics);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEmptyBaseDataSource(){\n  expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n  expectedException.expectMessage(\"baseDataSource cannot be null or empty. Please provide a baseDataSource.\");\n  String baseDataSource=\"\";\n  Set<String> dims=Sets.newHashSet(\"dim1\",\"dim2\",\"dim3\");\n  Set<String> metrics=Sets.newHashSet(\"cost\");\n  DerivativeDataSourceMetadata metadata=new DerivativeDataSourceMetadata(baseDataSource,dims,metrics);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 86
      },
      "nodeContext" : "expectedException.expect(CoreMatchers.instanceOf(IllegalArgumentException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.IllegalArgumentException>"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 39,
    "startColumnNumber" : 53,
    "endLineNumber" : 39,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}