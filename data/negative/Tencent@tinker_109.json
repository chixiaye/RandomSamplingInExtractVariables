{
  "id" : 109,
  "expression" : "dexElementsField.get(originalDexPathList)",
  "projectName" : "Tencent@tinker",
  "commitID" : "643f7143c385b91dfe7100d3788960ba514fc07b",
  "filePath" : "tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dexElementsField.get(originalDexPathList)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 71,
      "startColumnNumber" : 48,
      "endLineNumber" : 71,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 71,
        "startColumnNumber" : 37,
        "endLineNumber" : 71,
        "endColumnNumber" : 89
      },
      "nodeContext" : "(Object[])dexElementsField.get(originalDexPathList)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 71,
        "startColumnNumber" : 23,
        "endLineNumber" : 71,
        "endColumnNumber" : 89
      },
      "nodeContext" : "dexElements=(Object[])dexElementsField.get(originalDexPathList)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 90
      },
      "nodeContext" : "final Object[] dexElements=(Object[])dexElementsField.get(originalDexPathList);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2420,
        "startLineNumber" : 65,
        "startColumnNumber" : 147,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Constructor<?> dexPathListConstructor=ShareReflectUtil.findConstructor(originalDexPathList,ClassLoader.class,String.class,String.class,File.class);\n  if (createEmptyOne) {\n    return dexPathListConstructor.newInstance(newDefiningContext,\"\",null,null);\n  }\n  final Field dexElementsField=ShareReflectUtil.findField(originalDexPathList,\"dexElements\");\n  final Object[] dexElements=(Object[])dexElementsField.get(originalDexPathList);\n  final Field nativeLibraryDirectoriesField=ShareReflectUtil.findField(originalDexPathList,\"nativeLibraryDirectories\");\n  final List<File> nativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(originalDexPathList);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final Field dexFileField=ShareReflectUtil.findField(dexElements.getClass().getComponentType(),\"dexFile\");\n  boolean isFirstItem=true;\n  for (  Object dexElement : dexElements) {\n    final DexFile dexFile=(DexFile)dexFileField.get(dexElement);\n    if (dexFile == null || dexFile.getName() == null) {\n      continue;\n    }\n    final String dexFileName=dexFile.getName();\n    if (!dexFileName.contains(\"/\" + packageName)) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(dexFile.getName());\n  }\n  final String dexPath=dexPathBuilder.toString();\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  isFirstItem=true;\n  for (  File libDir : nativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String libraryPath=libraryPathBuilder.toString();\n  return dexPathListConstructor.newInstance(newDefiningContext,dexPath,libraryPath,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2598,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private static Object recreateDexPathList(Object originalDexPathList,ClassLoader newDefiningContext,boolean createEmptyOne) throws Exception {\n  final Constructor<?> dexPathListConstructor=ShareReflectUtil.findConstructor(originalDexPathList,ClassLoader.class,String.class,String.class,File.class);\n  if (createEmptyOne) {\n    return dexPathListConstructor.newInstance(newDefiningContext,\"\",null,null);\n  }\n  final Field dexElementsField=ShareReflectUtil.findField(originalDexPathList,\"dexElements\");\n  final Object[] dexElements=(Object[])dexElementsField.get(originalDexPathList);\n  final Field nativeLibraryDirectoriesField=ShareReflectUtil.findField(originalDexPathList,\"nativeLibraryDirectories\");\n  final List<File> nativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(originalDexPathList);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final Field dexFileField=ShareReflectUtil.findField(dexElements.getClass().getComponentType(),\"dexFile\");\n  boolean isFirstItem=true;\n  for (  Object dexElement : dexElements) {\n    final DexFile dexFile=(DexFile)dexFileField.get(dexElement);\n    if (dexFile == null || dexFile.getName() == null) {\n      continue;\n    }\n    final String dexFileName=dexFile.getName();\n    if (!dexFileName.contains(\"/\" + packageName)) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(dexFile.getName());\n  }\n  final String dexPath=dexPathBuilder.toString();\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  isFirstItem=true;\n  for (  File libDir : nativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String libraryPath=libraryPathBuilder.toString();\n  return dexPathListConstructor.newInstance(newDefiningContext,dexPath,libraryPath,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 292,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 90
      },
      "nodeContext" : "final Object[] dexElements=(Object[])dexElementsField.get(originalDexPathList);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 71,
    "startColumnNumber" : 48,
    "endLineNumber" : 71,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}