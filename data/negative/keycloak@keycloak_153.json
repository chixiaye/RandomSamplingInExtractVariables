{
  "id" : 153,
  "expression" : "\"Test completed\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "ebfc24d6c105971f00f86d1c96fc0dc2aed45bf9",
  "filePath" : "testsuite/model/src/test/java/org/keycloak/testsuite/model/infinispan/CacheExpirationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Test completed\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 119,
      "startColumnNumber" : 26,
      "endLineNumber" : 119,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 43
      },
      "nodeContext" : "log.debug(\"Test completed\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 44
      },
      "nodeContext" : "log.debug(\"Test completed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 87,
        "startColumnNumber" : 45,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2334,
        "startLineNumber" : 87,
        "startColumnNumber" : 34,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "session -> {\n  InfinispanConnectionProvider provider=session.getProvider(InfinispanConnectionProvider.class);\n  Cache<String,Object> cache=provider.getCache(InfinispanConnectionProvider.WORK_CACHE_NAME);\n  log.debug(\"Waiting for caches to join the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (!cache.getAdvancedCache().getDistributionManager().isJoinComplete());\n  String site=CONFIG.scope(\"connectionsInfinispan\",\"default\").get(\"siteName\");\n  log.debug(\"Cluster joined \" + site);\n  log.debug(\"Waiting for cache to receive the two elements within the cluster\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (cache.entrySet().stream().filter(me -> me.getValue() instanceof AuthenticationSessionAuthNoteUpdateEvent).count() != 2);\n  assertThat(cache.get(\"1-2\"),notNullValue());\n  assertThat(cache.get(\"1-2-3\"),notNullValue());\n  log.debug(\"Waiting for garbage collection to collect the entries across all caches in JVM\");\n  do {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException ex) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(ex);\n    }\n  }\n while (getNumberOfInstancesOfClass(AuthenticationSessionAuthNoteUpdateEvent.class) > previousInstancesOfClass);\n  log.debug(\"Test completed\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 202,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 44
      },
      "nodeContext" : "log.debug(\"Test completed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 119,
    "startColumnNumber" : 26,
    "endLineNumber" : 119,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}