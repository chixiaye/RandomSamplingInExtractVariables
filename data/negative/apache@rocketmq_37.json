{
  "id" : 37,
  "expression" : "null == findBrokerResult",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/client/src/main/java/org/apache/rocketmq/client/impl/consumer/PullAPIWrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null == findBrokerResult",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 159,
      "startColumnNumber" : 12,
      "endLineNumber" : 159,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == findBrokerResult) {\n  this.mQClientFactory.updateTopicRouteInfoFromNameServer(mq.getTopic());\n  findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2787,
        "startLineNumber" : 155,
        "startColumnNumber" : 91,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FindBrokerResult findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n  if (null == findBrokerResult) {\n    this.mQClientFactory.updateTopicRouteInfoFromNameServer(mq.getTopic());\n    findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n  }\n  if (findBrokerResult != null) {\n{\n      if (!ExpressionType.isTagType(expressionType) && findBrokerResult.getBrokerVersion() < MQVersion.Version.V4_1_0_SNAPSHOT.ordinal()) {\n        throw new MQClientException(\"The broker[\" + mq.getBrokerName() + \", \"+ findBrokerResult.getBrokerVersion()+ \"] does not upgrade to support for filter message by \"+ expressionType,null);\n      }\n    }\n    int sysFlagInner=sysFlag;\n    if (findBrokerResult.isSlave()) {\n      sysFlagInner=PullSysFlag.clearCommitOffsetFlag(sysFlagInner);\n    }\n    String snodeAddr=this.mQClientFactory.findSnodeAddressInPublish();\n    if (snodeAddr == null) {\n      this.mQClientFactory.updateSnodeInfoFromNameServer();\n      snodeAddr=this.mQClientFactory.findSnodeAddressInPublish();\n    }\n    if (snodeAddr == null) {\n      throw new MQClientException(\"The snode addr is null.\",null);\n    }\n    PullMessageRequestHeader requestHeader=new PullMessageRequestHeader();\n    requestHeader.setConsumerGroup(this.consumerGroup);\n    requestHeader.setTopic(mq.getTopic());\n    requestHeader.setQueueId(mq.getQueueId());\n    requestHeader.setQueueOffset(offset);\n    requestHeader.setMaxMsgNums(maxNums);\n    requestHeader.setSysFlag(sysFlagInner);\n    requestHeader.setCommitOffset(commitOffset);\n    requestHeader.setSuspendTimeoutMillis(brokerSuspendMaxTimeMillis);\n    requestHeader.setSubscription(subExpression);\n    requestHeader.setSubVersion(subVersion);\n    requestHeader.setExpressionType(expressionType);\n    requestHeader.setEnodeName(mq.getBrokerName());\n    PullResult pullResult=this.mQClientFactory.getMQClientAPIImpl().pullMessage(snodeAddr,requestHeader,timeoutMillis,communicationMode,pullCallback);\n    return pullResult;\n  }\n  throw new MQClientException(\"The broker[\" + mq.getBrokerName() + \"] not exist\",null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3333,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PullResult pullKernelImpl(final MessageQueue mq,final String subExpression,final String expressionType,final long subVersion,final long offset,final int maxNums,final int sysFlag,final long commitOffset,final long brokerSuspendMaxTimeMillis,final long timeoutMillis,final CommunicationMode communicationMode,final PullCallback pullCallback) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {\n  FindBrokerResult findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n  if (null == findBrokerResult) {\n    this.mQClientFactory.updateTopicRouteInfoFromNameServer(mq.getTopic());\n    findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n  }\n  if (findBrokerResult != null) {\n{\n      if (!ExpressionType.isTagType(expressionType) && findBrokerResult.getBrokerVersion() < MQVersion.Version.V4_1_0_SNAPSHOT.ordinal()) {\n        throw new MQClientException(\"The broker[\" + mq.getBrokerName() + \", \"+ findBrokerResult.getBrokerVersion()+ \"] does not upgrade to support for filter message by \"+ expressionType,null);\n      }\n    }\n    int sysFlagInner=sysFlag;\n    if (findBrokerResult.isSlave()) {\n      sysFlagInner=PullSysFlag.clearCommitOffsetFlag(sysFlagInner);\n    }\n    String snodeAddr=this.mQClientFactory.findSnodeAddressInPublish();\n    if (snodeAddr == null) {\n      this.mQClientFactory.updateSnodeInfoFromNameServer();\n      snodeAddr=this.mQClientFactory.findSnodeAddressInPublish();\n    }\n    if (snodeAddr == null) {\n      throw new MQClientException(\"The snode addr is null.\",null);\n    }\n    PullMessageRequestHeader requestHeader=new PullMessageRequestHeader();\n    requestHeader.setConsumerGroup(this.consumerGroup);\n    requestHeader.setTopic(mq.getTopic());\n    requestHeader.setQueueId(mq.getQueueId());\n    requestHeader.setQueueOffset(offset);\n    requestHeader.setMaxMsgNums(maxNums);\n    requestHeader.setSysFlag(sysFlagInner);\n    requestHeader.setCommitOffset(commitOffset);\n    requestHeader.setSuspendTimeoutMillis(brokerSuspendMaxTimeMillis);\n    requestHeader.setSubscription(subExpression);\n    requestHeader.setSubVersion(subVersion);\n    requestHeader.setExpressionType(expressionType);\n    requestHeader.setEnodeName(mq.getBrokerName());\n    PullResult pullResult=this.mQClientFactory.getMQClientAPIImpl().pullMessage(snodeAddr,requestHeader,timeoutMillis,communicationMode,pullCallback);\n    return pullResult;\n  }\n  throw new MQClientException(\"The broker[\" + mq.getBrokerName() + \"] not exist\",null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 319,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == findBrokerResult) {\n  this.mQClientFactory.updateTopicRouteInfoFromNameServer(mq.getTopic());\n  findBrokerResult=this.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),this.recalculatePullFromWhichNode(mq),false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 159,
    "startColumnNumber" : 12,
    "endLineNumber" : 159,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}