{
  "id" : 164,
  "expression" : "\"foo2\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/entities/ApplicationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"foo2\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 57,
      "endLineNumber" : 56,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 56,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Registration.create(\"foo2\",\"http://health\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 56,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Registration.create(\"foo2\",\"http://health\").build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 56,
        "startColumnNumber" : 21,
        "endLineNumber" : 56,
        "endColumnNumber" : 89
      },
      "nodeContext" : "registration2=Registration.create(\"foo2\",\"http://health\").build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Registration registration2=Registration.create(\"foo2\",\"http://health\").build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Registration registration=Registration.create(\"foo\",\"http://health\").build();\n  Registration registration2=Registration.create(\"foo2\",\"http://health\").build();\n  Info info=Info.from(Collections.singletonMap(\"foo\",\"bar\"));\n  Application application=Application.create(ApplicationId.of(\"id\"));\n  assertThat(application.isRegistered()).isFalse();\n  assertThat(application.getRegistration()).isNull();\n  assertThat(application.getInfo()).isEqualTo(Info.empty());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUnknown());\n  assertThat(application.getUnsavedEvents()).isEmpty();\n  application=application.register(registration).register(registration);\n  assertThat(application.getRegistration()).isEqualTo(registration);\n  assertThat(application.isRegistered()).isTrue();\n  assertThat(application.getVersion()).isEqualTo(0L);\n  application=application.register(registration2);\n  assertThat(application.getRegistration()).isEqualTo(registration2);\n  assertThat(application.isRegistered()).isTrue();\n  assertThat(application.getVersion()).isEqualTo(1L);\n  application=application.withStatusInfo(StatusInfo.ofUp()).withStatusInfo(StatusInfo.ofUp());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUp());\n  assertThat(application.getVersion()).isEqualTo(2L);\n  application=application.withInfo(info).withInfo(info);\n  assertThat(application.getInfo()).isEqualTo(info);\n  assertThat(application.getVersion()).isEqualTo(3L);\n  application=application.deregister().deregister();\n  assertThat(application.isRegistered()).isFalse();\n  assertThat(application.getRegistration()).isNull();\n  assertThat(application.getInfo()).isEqualTo(Info.empty());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUnknown());\n  assertThat(application.getVersion()).isEqualTo(4L);\n  assertThat(application.getUnsavedEvents().stream().map(ClientApplicationEvent::getType)).containsExactly(\"REGISTERED\",\"REGISTRATION_UPDATED\",\"STATUS_CHANGED\",\"INFO_CHANGED\",\"DEREGISTERED\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 302,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2282,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shoud_track_unsaved_events(){\n  Registration registration=Registration.create(\"foo\",\"http://health\").build();\n  Registration registration2=Registration.create(\"foo2\",\"http://health\").build();\n  Info info=Info.from(Collections.singletonMap(\"foo\",\"bar\"));\n  Application application=Application.create(ApplicationId.of(\"id\"));\n  assertThat(application.isRegistered()).isFalse();\n  assertThat(application.getRegistration()).isNull();\n  assertThat(application.getInfo()).isEqualTo(Info.empty());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUnknown());\n  assertThat(application.getUnsavedEvents()).isEmpty();\n  application=application.register(registration).register(registration);\n  assertThat(application.getRegistration()).isEqualTo(registration);\n  assertThat(application.isRegistered()).isTrue();\n  assertThat(application.getVersion()).isEqualTo(0L);\n  application=application.register(registration2);\n  assertThat(application.getRegistration()).isEqualTo(registration2);\n  assertThat(application.isRegistered()).isTrue();\n  assertThat(application.getVersion()).isEqualTo(1L);\n  application=application.withStatusInfo(StatusInfo.ofUp()).withStatusInfo(StatusInfo.ofUp());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUp());\n  assertThat(application.getVersion()).isEqualTo(2L);\n  application=application.withInfo(info).withInfo(info);\n  assertThat(application.getInfo()).isEqualTo(info);\n  assertThat(application.getVersion()).isEqualTo(3L);\n  application=application.deregister().deregister();\n  assertThat(application.isRegistered()).isFalse();\n  assertThat(application.getRegistration()).isNull();\n  assertThat(application.getInfo()).isEqualTo(Info.empty());\n  assertThat(application.getStatusInfo()).isEqualTo(StatusInfo.ofUnknown());\n  assertThat(application.getVersion()).isEqualTo(4L);\n  assertThat(application.getUnsavedEvents().stream().map(ClientApplicationEvent::getType)).containsExactly(\"REGISTERED\",\"REGISTRATION_UPDATED\",\"STATUS_CHANGED\",\"INFO_CHANGED\",\"DEREGISTERED\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Registration registration2=Registration.create(\"foo2\",\"http://health\").build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 57,
    "endLineNumber" : 56,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}