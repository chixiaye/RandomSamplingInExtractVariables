{
  "id" : 34,
  "expression" : "TransactionalMessageUtil.REMOVETAG",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/broker/src/main/java/org/apache/rocketmq/broker/transaction/queue/TransactionalMessageServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TransactionalMessageUtil.REMOVETAG",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 297,
      "startColumnNumber" : 16,
      "endLineNumber" : 297,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 297,
        "startColumnNumber" : 16,
        "endLineNumber" : 297,
        "endColumnNumber" : 81
      },
      "nodeContext" : "TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 297,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())) {\n  if (queueOffset < miniOffset) {\n    doneOpOffset.add(opMessageExt.getQueueOffset());\n  }\n else {\n    removeMap.put(queueOffset,opMessageExt.getQueueOffset());\n  }\n}\n else {\n  log.error(\"Found a illegal tag in opMessageExt= {} \",opMessageExt);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 293,
        "startColumnNumber" : 46,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Long queueOffset=getLong(new String(opMessageExt.getBody(),TransactionalMessageUtil.charset));\n  log.info(\"Topic: {} tags: {}, OpOffset: {}, HalfOffset: {}\",opMessageExt.getTopic(),opMessageExt.getTags(),opMessageExt.getQueueOffset(),queueOffset);\n  if (TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())) {\n    if (queueOffset < miniOffset) {\n      doneOpOffset.add(opMessageExt.getQueueOffset());\n    }\n else {\n      removeMap.put(queueOffset,opMessageExt.getQueueOffset());\n    }\n  }\n else {\n    log.error(\"Found a illegal tag in opMessageExt= {} \",opMessageExt);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 293,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (MessageExt opMessageExt : opMsg) {\n  Long queueOffset=getLong(new String(opMessageExt.getBody(),TransactionalMessageUtil.charset));\n  log.info(\"Topic: {} tags: {}, OpOffset: {}, HalfOffset: {}\",opMessageExt.getTopic(),opMessageExt.getTags(),opMessageExt.getQueueOffset(),queueOffset);\n  if (TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())) {\n    if (queueOffset < miniOffset) {\n      doneOpOffset.add(opMessageExt.getQueueOffset());\n    }\n else {\n      removeMap.put(queueOffset,opMessageExt.getQueueOffset());\n    }\n  }\n else {\n    log.error(\"Found a illegal tag in opMessageExt= {} \",opMessageExt);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 272,
        "startColumnNumber" : 93,
        "endLineNumber" : 310,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PullResult pullResult=pullOpMsg(opQueue,pullOffsetOfOp,32);\n  if (null == pullResult) {\n    return null;\n  }\n  if (pullResult.getPullStatus() == PullStatus.OFFSET_ILLEGAL || pullResult.getPullStatus() == PullStatus.NO_MATCHED_MSG) {\n    log.warn(\"The miss op offset={} in queue={} is illegal, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    transactionalMessageBridge.updateConsumeOffset(opQueue,pullResult.getNextBeginOffset());\n    return pullResult;\n  }\n else   if (pullResult.getPullStatus() == PullStatus.NO_NEW_MSG) {\n    log.warn(\"The miss op offset={} in queue={} is NO_NEW_MSG, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    return pullResult;\n  }\n  List<MessageExt> opMsg=pullResult.getMsgFoundList();\n  if (opMsg == null) {\n    log.warn(\"The miss op offset={} in queue={} is empty, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    return pullResult;\n  }\n  for (  MessageExt opMessageExt : opMsg) {\n    Long queueOffset=getLong(new String(opMessageExt.getBody(),TransactionalMessageUtil.charset));\n    log.info(\"Topic: {} tags: {}, OpOffset: {}, HalfOffset: {}\",opMessageExt.getTopic(),opMessageExt.getTags(),opMessageExt.getQueueOffset(),queueOffset);\n    if (TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())) {\n      if (queueOffset < miniOffset) {\n        doneOpOffset.add(opMessageExt.getQueueOffset());\n      }\n else {\n        removeMap.put(queueOffset,opMessageExt.getQueueOffset());\n      }\n    }\n else {\n      log.error(\"Found a illegal tag in opMessageExt= {} \",opMessageExt);\n    }\n  }\n  log.debug(\"Remove map: {}\",removeMap);\n  log.debug(\"Done op list: {}\",doneOpOffset);\n  return pullResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2608,
        "startLineNumber" : 261,
        "startColumnNumber" : 4,
        "endLineNumber" : 310,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Read op message, parse op message, and fill removeMap\n * @param removeMap Half message to be remove, key:halfOffset, value: opOffset.\n * @param opQueue Op message queue.\n * @param pullOffsetOfOp The begin offset of op message queue.\n * @param miniOffset The current minimum offset of half message queue.\n * @param doneOpOffset Stored op messages that have been processed.\n * @return Op message result.\n */\nprivate PullResult fillOpRemoveMap(HashMap<Long,Long> removeMap,MessageQueue opQueue,long pullOffsetOfOp,long miniOffset,List<Long> doneOpOffset){\n  PullResult pullResult=pullOpMsg(opQueue,pullOffsetOfOp,32);\n  if (null == pullResult) {\n    return null;\n  }\n  if (pullResult.getPullStatus() == PullStatus.OFFSET_ILLEGAL || pullResult.getPullStatus() == PullStatus.NO_MATCHED_MSG) {\n    log.warn(\"The miss op offset={} in queue={} is illegal, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    transactionalMessageBridge.updateConsumeOffset(opQueue,pullResult.getNextBeginOffset());\n    return pullResult;\n  }\n else   if (pullResult.getPullStatus() == PullStatus.NO_NEW_MSG) {\n    log.warn(\"The miss op offset={} in queue={} is NO_NEW_MSG, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    return pullResult;\n  }\n  List<MessageExt> opMsg=pullResult.getMsgFoundList();\n  if (opMsg == null) {\n    log.warn(\"The miss op offset={} in queue={} is empty, pullResult={}\",pullOffsetOfOp,opQueue,pullResult);\n    return pullResult;\n  }\n  for (  MessageExt opMessageExt : opMsg) {\n    Long queueOffset=getLong(new String(opMessageExt.getBody(),TransactionalMessageUtil.charset));\n    log.info(\"Topic: {} tags: {}, OpOffset: {}, HalfOffset: {}\",opMessageExt.getTopic(),opMessageExt.getTags(),opMessageExt.getQueueOffset(),queueOffset);\n    if (TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())) {\n      if (queueOffset < miniOffset) {\n        doneOpOffset.add(opMessageExt.getQueueOffset());\n      }\n else {\n        removeMap.put(queueOffset,opMessageExt.getQueueOffset());\n      }\n    }\n else {\n      log.error(\"Found a illegal tag in opMessageExt= {} \",opMessageExt);\n    }\n  }\n  log.debug(\"Remove map: {}\",removeMap);\n  log.debug(\"Done op list: {}\",doneOpOffset);\n  return pullResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 220,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 297,
        "startColumnNumber" : 16,
        "endLineNumber" : 297,
        "endColumnNumber" : 81
      },
      "nodeContext" : "TransactionalMessageUtil.REMOVETAG.equals(opMessageExt.getTags())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 297,
    "startColumnNumber" : 16,
    "endLineNumber" : 297,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}