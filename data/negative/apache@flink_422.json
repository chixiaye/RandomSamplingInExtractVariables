{
  "id" : 422,
  "expression" : "jobEntry.getKey()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/slotmanager/FineGrainedSlotManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jobEntry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 562,
      "startColumnNumber" : 32,
      "endLineNumber" : 562,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 562,
        "startColumnNumber" : 24,
        "endLineNumber" : 562,
        "endColumnNumber" : 49
      },
      "nodeContext" : "jobID=jobEntry.getKey()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 562,
        "startColumnNumber" : 12,
        "endLineNumber" : 562,
        "endColumnNumber" : 50
      },
      "nodeContext" : "final JobID jobID=jobEntry.getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 561,
        "startColumnNumber" : 94,
        "endLineNumber" : 577,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final JobID jobID=jobEntry.getKey();\n  for (  Map.Entry<InstanceID,ResourceCounter> tmEntry : jobEntry.getValue().entrySet()) {\n    final InstanceID instanceID=tmEntry.getKey();\n    for (    Map.Entry<ResourceProfile,Integer> slotEntry : tmEntry.getValue().getResourcesWithCount()) {\n      for (int i=0; i < slotEntry.getValue(); ++i) {\n        allocationFutures.add(slotStatusSyncer.allocateSlot(instanceID,jobID,jobMasterTargetAddresses.get(jobID),slotEntry.getKey()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 561,
        "startColumnNumber" : 8,
        "endLineNumber" : 577,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<JobID,Map<InstanceID,ResourceCounter>> jobEntry : result.entrySet()) {\n  final JobID jobID=jobEntry.getKey();\n  for (  Map.Entry<InstanceID,ResourceCounter> tmEntry : jobEntry.getValue().entrySet()) {\n    final InstanceID instanceID=tmEntry.getKey();\n    for (    Map.Entry<ResourceProfile,Integer> slotEntry : tmEntry.getValue().getResourcesWithCount()) {\n      for (int i=0; i < slotEntry.getValue(); ++i) {\n        allocationFutures.add(slotStatusSyncer.allocateSlot(instanceID,jobID,jobMasterTargetAddresses.get(jobID),slotEntry.getKey()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 559,
        "startColumnNumber" : 95,
        "endLineNumber" : 587,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<CompletableFuture<Void>> allocationFutures=new ArrayList<>();\n  for (  Map.Entry<JobID,Map<InstanceID,ResourceCounter>> jobEntry : result.entrySet()) {\n    final JobID jobID=jobEntry.getKey();\n    for (    Map.Entry<InstanceID,ResourceCounter> tmEntry : jobEntry.getValue().entrySet()) {\n      final InstanceID instanceID=tmEntry.getKey();\n      for (      Map.Entry<ResourceProfile,Integer> slotEntry : tmEntry.getValue().getResourcesWithCount()) {\n        for (int i=0; i < slotEntry.getValue(); ++i) {\n          allocationFutures.add(slotStatusSyncer.allocateSlot(instanceID,jobID,jobMasterTargetAddresses.get(jobID),slotEntry.getKey()));\n        }\n      }\n    }\n  }\n  FutureUtils.combineAll(allocationFutures).whenCompleteAsync((s,t) -> {\n    if (t != null) {\n      checkResourceRequirementsWithDelay();\n    }\n  }\n,mainThreadExecutor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 559,
        "startColumnNumber" : 4,
        "endLineNumber" : 587,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void allocateSlotsAccordingTo(Map<JobID,Map<InstanceID,ResourceCounter>> result){\n  final List<CompletableFuture<Void>> allocationFutures=new ArrayList<>();\n  for (  Map.Entry<JobID,Map<InstanceID,ResourceCounter>> jobEntry : result.entrySet()) {\n    final JobID jobID=jobEntry.getKey();\n    for (    Map.Entry<InstanceID,ResourceCounter> tmEntry : jobEntry.getValue().entrySet()) {\n      final InstanceID instanceID=tmEntry.getKey();\n      for (      Map.Entry<ResourceProfile,Integer> slotEntry : tmEntry.getValue().getResourcesWithCount()) {\n        for (int i=0; i < slotEntry.getValue(); ++i) {\n          allocationFutures.add(slotStatusSyncer.allocateSlot(instanceID,jobID,jobMasterTargetAddresses.get(jobID),slotEntry.getKey()));\n        }\n      }\n    }\n  }\n  FutureUtils.combineAll(allocationFutures).whenCompleteAsync((s,t) -> {\n    if (t != null) {\n      checkResourceRequirementsWithDelay();\n    }\n  }\n,mainThreadExecutor);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 562,
        "startColumnNumber" : 12,
        "endLineNumber" : 562,
        "endColumnNumber" : 50
      },
      "nodeContext" : "final JobID jobID=jobEntry.getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.flink.api.common.JobID"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 562,
    "startColumnNumber" : 32,
    "endLineNumber" : 562,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}