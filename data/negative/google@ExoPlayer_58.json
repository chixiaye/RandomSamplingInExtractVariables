{
  "id" : 58,
  "expression" : "position + length",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/datasource/src/main/java/com/google/android/exoplayer2/upstream/HttpUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "position + length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 59,
      "startColumnNumber" : 24,
      "endLineNumber" : 59,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 45
      },
      "nodeContext" : "position + length - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 46
      },
      "nodeContext" : "rangeValue.append(position + length - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rangeValue.append(position + length - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 34,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rangeValue.append(position + length - 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (length != C.LENGTH_UNSET) {\n  rangeValue.append(position + length - 1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 50,
        "startColumnNumber" : 75,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (position == 0 && length == C.LENGTH_UNSET) {\n    return null;\n  }\n  StringBuilder rangeValue=new StringBuilder();\n  rangeValue.append(\"bytes=\");\n  rangeValue.append(position);\n  rangeValue.append(\"-\");\n  if (length != C.LENGTH_UNSET) {\n    rangeValue.append(position + length - 1);\n  }\n  return rangeValue.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Builds a  {@link HttpHeaders#RANGE Range header} for the given position and length.\n * @param position The request position.\n * @param length The request length, or {@link C#LENGTH_UNSET} if the request is unbounded.\n * @return The corresponding range header, or {@code null} if a header is unnecessary because thewhole resource is being requested.\n */\n@Nullable public static String buildRangeRequestHeader(long position,long length){\n  if (position == 0 && length == C.LENGTH_UNSET) {\n    return null;\n  }\n  StringBuilder rangeValue=new StringBuilder();\n  rangeValue.append(\"bytes=\");\n  rangeValue.append(position);\n  rangeValue.append(\"-\");\n  if (length != C.LENGTH_UNSET) {\n    rangeValue.append(position + length - 1);\n  }\n  return rangeValue.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rangeValue.append(position + length - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 59,
    "startColumnNumber" : 24,
    "endLineNumber" : 59,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}