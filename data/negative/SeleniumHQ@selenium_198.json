{
  "id" : 198,
  "expression" : "GET",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/netty/server/RequestConverterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "GET",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 47,
      "startColumnNumber" : 42,
      "endLineNumber" : 47,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(req.getMethod()).isEqualTo(GET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(req.getMethod()).isEqualTo(GET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 36,
        "startColumnNumber" : 41,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  RequestConverter converter=new RequestConverter();\n  EmbeddedChannel channel=new EmbeddedChannel(converter);\n  FullHttpRequest httpRequest=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,\"/cheese\");\n  httpRequest.headers().add(\"How-Good\",\"Delicious\");\n  assertThat(channel.writeInbound(httpRequest)).isTrue();\n  HttpRequest req=channel.readInbound();\n  assertThat(req.getMethod()).isEqualTo(GET);\n  assertThat(req.getUri()).isEqualTo(\"/cheese\");\n  assertThat(req.getHeader(\"How-Good\")).isEqualTo(\"Delicious\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void canConvertASimpleRequest(){\n  RequestConverter converter=new RequestConverter();\n  EmbeddedChannel channel=new EmbeddedChannel(converter);\n  FullHttpRequest httpRequest=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.GET,\"/cheese\");\n  httpRequest.headers().add(\"How-Good\",\"Delicious\");\n  assertThat(channel.writeInbound(httpRequest)).isTrue();\n  HttpRequest req=channel.readInbound();\n  assertThat(req.getMethod()).isEqualTo(GET);\n  assertThat(req.getUri()).isEqualTo(\"/cheese\");\n  assertThat(req.getHeader(\"How-Good\")).isEqualTo(\"Delicious\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(req.getMethod()).isEqualTo(GET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.remote.http.HttpMethod"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 47,
    "startColumnNumber" : 42,
    "endLineNumber" : 47,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}