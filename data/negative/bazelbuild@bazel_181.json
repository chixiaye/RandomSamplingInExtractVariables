{
  "id" : 181,
  "expression" : "item",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/packages/StarlarkLibrary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 198,
      "startColumnNumber" : 33,
      "endLineNumber" : 198,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 198,
        "startColumnNumber" : 14,
        "endLineNumber" : 198,
        "endColumnNumber" : 38
      },
      "nodeContext" : "fieldElement(name,item)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 198,
        "startColumnNumber" : 14,
        "endLineNumber" : 198,
        "endColumnNumber" : 39
      },
      "nodeContext" : "fieldElement(name,item);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 197,
        "startColumnNumber" : 16,
        "endLineNumber" : 199,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  fieldElement(name,item);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 201,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  fieldElement(name,item);\n}\n catch (EvalException ex) {\n  throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 196,
        "startColumnNumber" : 46,
        "endLineNumber" : 203,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  try {\n    fieldElement(name,item);\n  }\n catch (  EvalException ex) {\n    throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n  }\n  i++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 196,
        "startColumnNumber" : 10,
        "endLineNumber" : 203,
        "endColumnNumber" : 11
      },
      "nodeContext" : "for (Object item : (Sequence<?>)v) {\n  try {\n    fieldElement(name,item);\n  }\n catch (  EvalException ex) {\n    throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n  }\n  i++;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 194,
        "startColumnNumber" : 35,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int i=0;\n  for (  Object item : (Sequence<?>)v) {\n    try {\n      fieldElement(name,item);\n    }\n catch (    EvalException ex) {\n      throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n    }\n    i++;\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (v instanceof Sequence) {\n  int i=0;\n  for (  Object item : (Sequence<?>)v) {\n    try {\n      fieldElement(name,item);\n    }\n catch (    EvalException ex) {\n      throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n    }\n    i++;\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1326,
        "startLineNumber" : 168,
        "startColumnNumber" : 69,
        "endLineNumber" : 209,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (v instanceof Dict) {\n    Dict<?,?> dict=(Dict<?,?>)v;\n    for (    Map.Entry<?,?> entry : dict.entrySet()) {\n      Object key=entry.getKey();\n      if (!(key instanceof String || key instanceof StarlarkInt)) {\n        throw Starlark.errorf(\"invalid dict key: got %s, want int or string\",Starlark.type(key));\n      }\n      emitLine(name,\" {\");\n      indent++;\n      fieldElement(\"key\",key);\n      try {\n        fieldElement(\"value\",entry.getValue());\n      }\n catch (      EvalException ex) {\n        throw Starlark.errorf(\"in value for dict key %s: %s\",Starlark.repr(key),ex.getMessage());\n      }\n      indent--;\n      emitLine(\"}\");\n    }\n    return;\n  }\n  if (v instanceof Sequence) {\n    int i=0;\n    for (    Object item : (Sequence<?>)v) {\n      try {\n        fieldElement(name,item);\n      }\n catch (      EvalException ex) {\n        throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n      }\n      i++;\n    }\n    return;\n  }\n  fieldElement(name,v);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 209,
        "endColumnNumber" : 7
      },
      "nodeContext" : "private void field(String name,Object v) throws EvalException {\n  if (v instanceof Dict) {\n    Dict<?,?> dict=(Dict<?,?>)v;\n    for (    Map.Entry<?,?> entry : dict.entrySet()) {\n      Object key=entry.getKey();\n      if (!(key instanceof String || key instanceof StarlarkInt)) {\n        throw Starlark.errorf(\"invalid dict key: got %s, want int or string\",Starlark.type(key));\n      }\n      emitLine(name,\" {\");\n      indent++;\n      fieldElement(\"key\",key);\n      try {\n        fieldElement(\"value\",entry.getValue());\n      }\n catch (      EvalException ex) {\n        throw Starlark.errorf(\"in value for dict key %s: %s\",Starlark.repr(key),ex.getMessage());\n      }\n      indent--;\n      emitLine(\"}\");\n    }\n    return;\n  }\n  if (v instanceof Sequence) {\n    int i=0;\n    for (    Object item : (Sequence<?>)v) {\n      try {\n        fieldElement(name,item);\n      }\n catch (      EvalException ex) {\n        throw Starlark.errorf(\"at %s index %d: %s\",Starlark.type(v),i,ex.getMessage());\n      }\n      i++;\n    }\n    return;\n  }\n  fieldElement(name,v);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 198,
        "startColumnNumber" : 14,
        "endLineNumber" : 198,
        "endColumnNumber" : 39
      },
      "nodeContext" : "fieldElement(name,item);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 198,
    "startColumnNumber" : 33,
    "endLineNumber" : 198,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}