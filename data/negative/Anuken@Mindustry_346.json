{
  "id" : 346,
  "expression" : "false",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/Lightning.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 43,
      "startColumnNumber" : 15,
      "endLineNumber" : 43,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 20
      },
      "nodeContext" : "bhit=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 21
      },
      "nodeContext" : "bhit=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 37,
        "startColumnNumber" : 166,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  random.setSeed(seed);\n  hit.clear();\n  BulletType hitCreate=hitter == null || hitter.type.lightningType == null ? Bullets.damageLightning : hitter.type.lightningType;\n  Seq<Vec2> lines=new Seq<>();\n  bhit=false;\n  for (int i=0; i < length / 2; i++) {\n    hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n    lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n    if (lines.size > 1) {\n      bhit=false;\n      Vec2 from=lines.get(lines.size - 2);\n      Vec2 to=lines.get(lines.size - 1);\n      world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n        Tile tile=world.tile(wx,wy);\n        if (tile != null && tile.block().insulated && tile.team() != team) {\n          bhit=true;\n          lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n          return true;\n        }\n        return false;\n      }\n);\n      if (bhit)       break;\n    }\n    rect.setSize(hitRange).setCenter(x,y);\n    entities.clear();\n    if (hit.size < maxChain) {\n      Units.nearbyEnemies(team,rect,u -> {\n        if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n          entities.add(u);\n        }\n      }\n);\n    }\n    Unitc furthest=Geometry.findFurthest(x,y,entities);\n    if (furthest != null) {\n      hit.add(furthest.id());\n      x=furthest.x();\n      y=furthest.y();\n    }\n else {\n      rotation+=random.range(20f);\n      x+=Angles.trnsx(rotation,hitRange / 2f);\n      y+=Angles.trnsy(rotation,hitRange / 2f);\n    }\n  }\n  Fx.lightning.at(x,y,rotation,color,lines);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void createLightningInternal(@Nullable Bullet hitter,int seed,Team team,Color color,float damage,float x,float y,float rotation,int length){\n  random.setSeed(seed);\n  hit.clear();\n  BulletType hitCreate=hitter == null || hitter.type.lightningType == null ? Bullets.damageLightning : hitter.type.lightningType;\n  Seq<Vec2> lines=new Seq<>();\n  bhit=false;\n  for (int i=0; i < length / 2; i++) {\n    hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n    lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n    if (lines.size > 1) {\n      bhit=false;\n      Vec2 from=lines.get(lines.size - 2);\n      Vec2 to=lines.get(lines.size - 1);\n      world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n        Tile tile=world.tile(wx,wy);\n        if (tile != null && tile.block().insulated && tile.team() != team) {\n          bhit=true;\n          lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n          return true;\n        }\n        return false;\n      }\n);\n      if (bhit)       break;\n    }\n    rect.setSize(hitRange).setCenter(x,y);\n    entities.clear();\n    if (hit.size < maxChain) {\n      Units.nearbyEnemies(team,rect,u -> {\n        if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n          entities.add(u);\n        }\n      }\n);\n    }\n    Unitc furthest=Geometry.findFurthest(x,y,entities);\n    if (furthest != null) {\n      hit.add(furthest.id());\n      x=furthest.x();\n      y=furthest.y();\n    }\n else {\n      rotation+=random.range(20f);\n      x+=Angles.trnsx(rotation,hitRange / 2f);\n      y+=Angles.trnsy(rotation,hitRange / 2f);\n    }\n  }\n  Fx.lightning.at(x,y,rotation,color,lines);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 397,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 21
      },
      "nodeContext" : "bhit=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 23,
      "endLineNumber" : 50,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 28
      },
      "nodeContext" : "bhit=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 29
      },
      "nodeContext" : "bhit=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 49,
        "startColumnNumber" : 30,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  bhit=false;\n  Vec2 from=lines.get(lines.size - 2);\n  Vec2 to=lines.get(lines.size - 1);\n  world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n    Tile tile=world.tile(wx,wy);\n    if (tile != null && tile.block().insulated && tile.team() != team) {\n      bhit=true;\n      lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n      return true;\n    }\n    return false;\n  }\n);\n  if (bhit)   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (lines.size > 1) {\n  bhit=false;\n  Vec2 from=lines.get(lines.size - 2);\n  Vec2 to=lines.get(lines.size - 1);\n  world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n    Tile tile=world.tile(wx,wy);\n    if (tile != null && tile.block().insulated && tile.team() != team) {\n      bhit=true;\n      lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n      return true;\n    }\n    return false;\n  }\n);\n  if (bhit)   break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1780,
        "startLineNumber" : 45,
        "startColumnNumber" : 43,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n  lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n  if (lines.size > 1) {\n    bhit=false;\n    Vec2 from=lines.get(lines.size - 2);\n    Vec2 to=lines.get(lines.size - 1);\n    world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n      Tile tile=world.tile(wx,wy);\n      if (tile != null && tile.block().insulated && tile.team() != team) {\n        bhit=true;\n        lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n        return true;\n      }\n      return false;\n    }\n);\n    if (bhit)     break;\n  }\n  rect.setSize(hitRange).setCenter(x,y);\n  entities.clear();\n  if (hit.size < maxChain) {\n    Units.nearbyEnemies(team,rect,u -> {\n      if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n        entities.add(u);\n      }\n    }\n);\n  }\n  Unitc furthest=Geometry.findFurthest(x,y,entities);\n  if (furthest != null) {\n    hit.add(furthest.id());\n    x=furthest.x();\n    y=furthest.y();\n  }\n else {\n    rotation+=random.range(20f);\n    x+=Angles.trnsx(rotation,hitRange / 2f);\n    y+=Angles.trnsy(rotation,hitRange / 2f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1815,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < length / 2; i++) {\n  hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n  lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n  if (lines.size > 1) {\n    bhit=false;\n    Vec2 from=lines.get(lines.size - 2);\n    Vec2 to=lines.get(lines.size - 1);\n    world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n      Tile tile=world.tile(wx,wy);\n      if (tile != null && tile.block().insulated && tile.team() != team) {\n        bhit=true;\n        lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n        return true;\n      }\n      return false;\n    }\n);\n    if (bhit)     break;\n  }\n  rect.setSize(hitRange).setCenter(x,y);\n  entities.clear();\n  if (hit.size < maxChain) {\n    Units.nearbyEnemies(team,rect,u -> {\n      if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n        entities.add(u);\n      }\n    }\n);\n  }\n  Unitc furthest=Geometry.findFurthest(x,y,entities);\n  if (furthest != null) {\n    hit.add(furthest.id());\n    x=furthest.x();\n    y=furthest.y();\n  }\n else {\n    rotation+=random.range(20f);\n    x+=Angles.trnsx(rotation,hitRange / 2f);\n    y+=Angles.trnsy(rotation,hitRange / 2f);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 298,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 37,
        "startColumnNumber" : 166,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  random.setSeed(seed);\n  hit.clear();\n  BulletType hitCreate=hitter == null || hitter.type.lightningType == null ? Bullets.damageLightning : hitter.type.lightningType;\n  Seq<Vec2> lines=new Seq<>();\n  bhit=false;\n  for (int i=0; i < length / 2; i++) {\n    hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n    lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n    if (lines.size > 1) {\n      bhit=false;\n      Vec2 from=lines.get(lines.size - 2);\n      Vec2 to=lines.get(lines.size - 1);\n      world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n        Tile tile=world.tile(wx,wy);\n        if (tile != null && tile.block().insulated && tile.team() != team) {\n          bhit=true;\n          lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n          return true;\n        }\n        return false;\n      }\n);\n      if (bhit)       break;\n    }\n    rect.setSize(hitRange).setCenter(x,y);\n    entities.clear();\n    if (hit.size < maxChain) {\n      Units.nearbyEnemies(team,rect,u -> {\n        if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n          entities.add(u);\n        }\n      }\n);\n    }\n    Unitc furthest=Geometry.findFurthest(x,y,entities);\n    if (furthest != null) {\n      hit.add(furthest.id());\n      x=furthest.x();\n      y=furthest.y();\n    }\n else {\n      rotation+=random.range(20f);\n      x+=Angles.trnsx(rotation,hitRange / 2f);\n      y+=Angles.trnsy(rotation,hitRange / 2f);\n    }\n  }\n  Fx.lightning.at(x,y,rotation,color,lines);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void createLightningInternal(@Nullable Bullet hitter,int seed,Team team,Color color,float damage,float x,float y,float rotation,int length){\n  random.setSeed(seed);\n  hit.clear();\n  BulletType hitCreate=hitter == null || hitter.type.lightningType == null ? Bullets.damageLightning : hitter.type.lightningType;\n  Seq<Vec2> lines=new Seq<>();\n  bhit=false;\n  for (int i=0; i < length / 2; i++) {\n    hitCreate.create(null,team,x,y,0f,damage,1f,1f,hitter);\n    lines.add(new Vec2(x + Mathf.range(3f),y + Mathf.range(3f)));\n    if (lines.size > 1) {\n      bhit=false;\n      Vec2 from=lines.get(lines.size - 2);\n      Vec2 to=lines.get(lines.size - 1);\n      world.raycastEach(World.toTile(from.getX()),World.toTile(from.getY()),World.toTile(to.getX()),World.toTile(to.getY()),(wx,wy) -> {\n        Tile tile=world.tile(wx,wy);\n        if (tile != null && tile.block().insulated && tile.team() != team) {\n          bhit=true;\n          lines.get(lines.size - 1).set(wx * tilesize,wy * tilesize);\n          return true;\n        }\n        return false;\n      }\n);\n      if (bhit)       break;\n    }\n    rect.setSize(hitRange).setCenter(x,y);\n    entities.clear();\n    if (hit.size < maxChain) {\n      Units.nearbyEnemies(team,rect,u -> {\n        if (!hit.contains(u.id()) && (hitter == null || u.checkTarget(hitter.type.collidesAir,hitter.type.collidesGround))) {\n          entities.add(u);\n        }\n      }\n);\n    }\n    Unitc furthest=Geometry.findFurthest(x,y,entities);\n    if (furthest != null) {\n      hit.add(furthest.id());\n      x=furthest.x();\n      y=furthest.y();\n    }\n else {\n      rotation+=random.range(20f);\n      x+=Angles.trnsx(rotation,hitRange / 2f);\n      y+=Angles.trnsy(rotation,hitRange / 2f);\n    }\n  }\n  Fx.lightning.at(x,y,rotation,color,lines);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 397,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 29
      },
      "nodeContext" : "bhit=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 43,
    "startColumnNumber" : 15,
    "endLineNumber" : 43,
    "endColumnNumber" : 20
  }, {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 23,
    "endLineNumber" : 50,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}