{
  "id" : 124,
  "expression" : "\"text/html;charset=UTF-8\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-websocket/src/test/java/org/springframework/web/socket/sockjs/transport/handler/HttpSendingTransportHandlerTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"text/html;charset=UTF-8\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 121,
      "startColumnNumber" : 15,
      "endLineNumber" : 121,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 97
      },
      "nodeContext" : "assertEquals(\"text/html;charset=UTF-8\",this.response.getHeaders().getContentType().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertEquals(\"text/html;charset=UTF-8\",this.response.getHeaders().getContentType().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 105,
        "startColumnNumber" : 50,
        "endLineNumber" : 124,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HtmlFileTransportHandler transportHandler=new HtmlFileTransportHandler();\n  transportHandler.initialize(this.sockJsConfig);\n  StreamingSockJsSession session=transportHandler.createSession(\"1\",this.webSocketHandler,null);\n  transportHandler.handleRequest(this.request,this.response,this.webSocketHandler,session);\n  assertEquals(500,this.servletResponse.getStatus());\n  assertEquals(\"\\\"callback\\\" parameter required\",this.servletResponse.getContentAsString());\n  resetRequestAndResponse();\n  setRequest(\"POST\",\"/\");\n  this.servletRequest.setQueryString(\"c=callback\");\n  this.servletRequest.addParameter(\"c\",\"callback\");\n  transportHandler.handleRequest(this.request,this.response,this.webSocketHandler,session);\n  assertEquals(\"text/html;charset=UTF-8\",this.response.getHeaders().getContentType().toString());\n  assertTrue(\"Streaming request not started\",this.servletRequest.isAsyncStarted());\n  verify(this.webSocketHandler).afterConnectionEstablished(session);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 104,
        "startColumnNumber" : 1,
        "endLineNumber" : 124,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void htmlFileTransport() throws Exception {\n  HtmlFileTransportHandler transportHandler=new HtmlFileTransportHandler();\n  transportHandler.initialize(this.sockJsConfig);\n  StreamingSockJsSession session=transportHandler.createSession(\"1\",this.webSocketHandler,null);\n  transportHandler.handleRequest(this.request,this.response,this.webSocketHandler,session);\n  assertEquals(500,this.servletResponse.getStatus());\n  assertEquals(\"\\\"callback\\\" parameter required\",this.servletResponse.getContentAsString());\n  resetRequestAndResponse();\n  setRequest(\"POST\",\"/\");\n  this.servletRequest.setQueryString(\"c=callback\");\n  this.servletRequest.addParameter(\"c\",\"callback\");\n  transportHandler.handleRequest(this.request,this.response,this.webSocketHandler,session);\n  assertEquals(\"text/html;charset=UTF-8\",this.response.getHeaders().getContentType().toString());\n  assertTrue(\"Streaming request not started\",this.servletRequest.isAsyncStarted());\n  verify(this.webSocketHandler).afterConnectionEstablished(session);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertEquals(\"text/html;charset=UTF-8\",this.response.getHeaders().getContentType().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 121,
    "startColumnNumber" : 15,
    "endLineNumber" : 121,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}