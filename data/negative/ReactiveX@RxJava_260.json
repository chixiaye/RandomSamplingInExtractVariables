{
  "id" : 260,
  "expression" : "Observable.<Event>generate(new Consumer<Observer<Event>>(){\n  @Override public void accept(  Observer<Event> s){\n    s.onNext(randomEvent(type,numInstances));\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      Thread.currentThread().interrupt();\n      s.onError(e);\n    }\n  }\n}\n)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/observable/ObservableEventStream.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Observable.<Event>generate(new Consumer<Observer<Event>>(){\n  @Override public void accept(  Observer<Event> s){\n    s.onNext(randomEvent(type,numInstances));\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      Thread.currentThread().interrupt();\n      s.onError(e);\n    }\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 494,
      "startLineNumber" : 32,
      "startColumnNumber" : 15,
      "endLineNumber" : 44,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 61,
    "astHeight" : 12,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 32,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Observable.<Event>generate(new Consumer<Observer<Event>>(){\n  @Override public void accept(  Observer<Event> s){\n    s.onNext(randomEvent(type,numInstances));\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      Thread.currentThread().interrupt();\n      s.onError(e);\n    }\n  }\n}\n).subscribeOn(Schedulers.newThread())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 66,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return Observable.<Event>generate(new Consumer<Observer<Event>>(){\n  @Override public void accept(  Observer<Event> s){\n    s.onNext(randomEvent(type,numInstances));\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      Thread.currentThread().interrupt();\n      s.onError(e);\n    }\n  }\n}\n).subscribeOn(Schedulers.newThread());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 67,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 30,
        "startColumnNumber" : 94,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Observable.<Event>generate(new Consumer<Observer<Event>>(){\n    @Override public void accept(    Observer<Event> s){\n      s.onNext(randomEvent(type,numInstances));\n      try {\n        Thread.sleep(50);\n      }\n catch (      InterruptedException e) {\n        Thread.currentThread().interrupt();\n        s.onError(e);\n      }\n    }\n  }\n).subscribeOn(Schedulers.newThread());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Observable<Event> getEventStream(final String type,final int numInstances){\n  return Observable.<Event>generate(new Consumer<Observer<Event>>(){\n    @Override public void accept(    Observer<Event> s){\n      s.onNext(randomEvent(type,numInstances));\n      try {\n        Thread.sleep(50);\n      }\n catch (      InterruptedException e) {\n        Thread.currentThread().interrupt();\n        s.onError(e);\n      }\n    }\n  }\n).subscribeOn(Schedulers.newThread());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return Observable.<Event>generate(new Consumer<Observer<Event>>(){\n  @Override public void accept(  Observer<Event> s){\n    s.onNext(randomEvent(type,numInstances));\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n      Thread.currentThread().interrupt();\n      s.onError(e);\n    }\n  }\n}\n).subscribeOn(Schedulers.newThread());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 67,
      "astHeight" : 14
    },
    "tokenLength" : 23,
    "type" : "io.reactivex.Observable<io.reactivex.observable.ObservableEventStream.Event>"
  } ],
  "positionList" : [ {
    "charLength" : 494,
    "startLineNumber" : 32,
    "startColumnNumber" : 15,
    "endLineNumber" : 44,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}