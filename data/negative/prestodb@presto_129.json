{
  "id" : 129,
  "expression" : "DICT_ENCODING",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-kudu/src/main/java/com/facebook/presto/kudu/properties/KuduTableProperties.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DICT_ENCODING",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 677,
      "startColumnNumber" : 17,
      "endLineNumber" : 677,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 677,
        "startColumnNumber" : 12,
        "endLineNumber" : 677,
        "endColumnNumber" : 31
      },
      "nodeContext" : "case DICT_ENCODING:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 672,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (encoding) {\ncase AUTO_ENCODING:  return \"auto\";\ncase BIT_SHUFFLE:return \"bitshuffle\";\ncase DICT_ENCODING:return \"dictionary\";\ncase PLAIN_ENCODING:return \"plain\";\ncase PREFIX_ENCODING:return \"prefix\";\ncase RLE:return \"runlength\";\ncase GROUP_VARINT:return \"group_varint\";\ndefault:return \"unknown\";\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 33,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 671,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (encoding) {\ncase AUTO_ENCODING:    return \"auto\";\ncase BIT_SHUFFLE:  return \"bitshuffle\";\ncase DICT_ENCODING:return \"dictionary\";\ncase PLAIN_ENCODING:return \"plain\";\ncase PREFIX_ENCODING:return \"prefix\";\ncase RLE:return \"runlength\";\ncase GROUP_VARINT:return \"group_varint\";\ndefault:return \"unknown\";\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 670,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String lookupEncodingString(ColumnSchema.Encoding encoding){\nswitch (encoding) {\ncase AUTO_ENCODING:    return \"auto\";\ncase BIT_SHUFFLE:  return \"bitshuffle\";\ncase DICT_ENCODING:return \"dictionary\";\ncase PLAIN_ENCODING:return \"plain\";\ncase PREFIX_ENCODING:return \"prefix\";\ncase RLE:return \"runlength\";\ncase GROUP_VARINT:return \"group_varint\";\ndefault:return \"unknown\";\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 677,
        "startColumnNumber" : 12,
        "endLineNumber" : 677,
        "endColumnNumber" : 31
      },
      "nodeContext" : "case DICT_ENCODING:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 677,
    "startColumnNumber" : 17,
    "endLineNumber" : 677,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}