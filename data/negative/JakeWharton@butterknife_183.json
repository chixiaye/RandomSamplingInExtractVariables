{
  "id" : 183,
  "expression" : "injector.getMethod(\"inject\",Finder.class,cls,Object.class)",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "7f01c9d8fd3b75a5853c607536442240657d6878",
  "filePath" : "butterknife/src/main/java/butterknife/Views.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "injector.getMethod(\"inject\",Finder.class,cls,Object.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 129,
      "startColumnNumber" : 15,
      "endLineNumber" : 129,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 76
      },
      "nodeContext" : "inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 77
      },
      "nodeContext" : "inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> injector=Class.forName(clsName + InjectViewProcessor.SUFFIX);\n  inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Class<?> injector=Class.forName(clsName + InjectViewProcessor.SUFFIX);\n  inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n}\n catch (ClassNotFoundException e) {\n  inject=findInjectorForClass(cls.getSuperclass());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 118,
        "startColumnNumber" : 80,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Method inject=INJECTORS.get(cls);\n  if (inject != null) {\n    return inject;\n  }\n  String clsName=cls.getName();\n  if (clsName.startsWith(\"android.\") || clsName.startsWith(\"java.\")) {\n    return NO_OP;\n  }\n  try {\n    Class<?> injector=Class.forName(clsName + InjectViewProcessor.SUFFIX);\n    inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n  }\n catch (  ClassNotFoundException e) {\n    inject=findInjectorForClass(cls.getSuperclass());\n  }\n  INJECTORS.put(cls,inject);\n  return inject;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 118,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static Method findInjectorForClass(Class<?> cls) throws NoSuchMethodException {\n  Method inject=INJECTORS.get(cls);\n  if (inject != null) {\n    return inject;\n  }\n  String clsName=cls.getName();\n  if (clsName.startsWith(\"android.\") || clsName.startsWith(\"java.\")) {\n    return NO_OP;\n  }\n  try {\n    Class<?> injector=Class.forName(clsName + InjectViewProcessor.SUFFIX);\n    inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n  }\n catch (  ClassNotFoundException e) {\n    inject=findInjectorForClass(cls.getSuperclass());\n  }\n  INJECTORS.put(cls,inject);\n  return inject;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 77
      },
      "nodeContext" : "inject=injector.getMethod(\"inject\",Finder.class,cls,Object.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 129,
    "startColumnNumber" : 15,
    "endLineNumber" : 129,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}