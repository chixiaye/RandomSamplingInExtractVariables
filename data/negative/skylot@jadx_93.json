{
  "id" : 93,
  "expression" : "fieldNode",
  "projectName" : "skylot@jadx",
  "commitID" : "a4a8b05ef089d605d6a535e4218cf02900dcebc2",
  "filePath" : "jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fieldNode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 124,
      "startColumnNumber" : 7,
      "endLineNumber" : 124,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 124,
        "endColumnNumber" : 24
      },
      "nodeContext" : "fieldNode != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fieldNode != null && !fieldNode.getName().equals(resName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 128,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n  fieldNode.getFieldInfo().setAlias(resName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 101,
        "startColumnNumber" : 59,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1152,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (ResourceEntry resource : resStorage.getResources()) {\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 93,
        "startColumnNumber" : 105,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void addResourceFields(ClassNode resCls,ResourceStorage resStorage,boolean rClsExists){\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 124,
        "endColumnNumber" : 24
      },
      "nodeContext" : "fieldNode != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.FieldNode"
  }, {
    "nodeContext" : "fieldNode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 125,
      "startColumnNumber" : 9,
      "endLineNumber" : 125,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 125,
        "startColumnNumber" : 9,
        "endLineNumber" : 125,
        "endColumnNumber" : 28
      },
      "nodeContext" : "fieldNode.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 125,
        "startColumnNumber" : 9,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fieldNode.getName().equals(resName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "!fieldNode.getName().equals(resName)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fieldNode != null && !fieldNode.getName().equals(resName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 128,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n  fieldNode.getFieldInfo().setAlias(resName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 101,
        "startColumnNumber" : 59,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1152,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (ResourceEntry resource : resStorage.getResources()) {\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 93,
        "startColumnNumber" : 105,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void addResourceFields(ClassNode resCls,ResourceStorage resStorage,boolean rClsExists){\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 44
      },
      "nodeContext" : "!fieldNode.getName().equals(resName)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.FieldNode"
  }, {
    "nodeContext" : "fieldNode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 127,
      "startColumnNumber" : 4,
      "endLineNumber" : 127,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 28
      },
      "nodeContext" : "fieldNode.getFieldInfo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 46
      },
      "nodeContext" : "fieldNode.getFieldInfo().setAlias(resName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 47
      },
      "nodeContext" : "fieldNode.getFieldInfo().setAlias(resName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 126,
        "startColumnNumber" : 47,
        "endLineNumber" : 128,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  fieldNode.getFieldInfo().setAlias(resName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 128,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n  fieldNode.getFieldInfo().setAlias(resName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 101,
        "startColumnNumber" : 59,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1152,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (ResourceEntry resource : resStorage.getResources()) {\n  final String resTypeName=resource.getTypeName();\n  ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n  final String resName;\n  if (\"style\".equals(resTypeName)) {\n    resName=resource.getKeyName().replace('.','_');\n  }\n else {\n    resName=resource.getKeyName();\n  }\n  FieldNode rField=typeCls.searchFieldByName(resName);\n  if (rField == null) {\n    FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n    rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n    rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n    typeCls.getFields().add(rField);\n    if (rClsExists) {\n      rField.addAttr(AType.COMMENTS,\"added by JADX\");\n    }\n  }\n  FieldNode fieldNode=resFieldsMap.get(resource.getId());\n  if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n    fieldNode.getFieldInfo().setAlias(resName);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 93,
        "startColumnNumber" : 105,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void addResourceFields(ClassNode resCls,ResourceStorage resStorage,boolean rClsExists){\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 47
      },
      "nodeContext" : "fieldNode.getFieldInfo().setAlias(resName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.FieldNode"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 124,
    "startColumnNumber" : 7,
    "endLineNumber" : 124,
    "endColumnNumber" : 16
  }, {
    "charLength" : 9,
    "startLineNumber" : 125,
    "startColumnNumber" : 9,
    "endLineNumber" : 125,
    "endColumnNumber" : 18
  }, {
    "charLength" : 9,
    "startLineNumber" : 127,
    "startColumnNumber" : 4,
    "endLineNumber" : 127,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}