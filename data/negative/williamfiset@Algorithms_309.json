{
  "id" : 309,
  "expression" : "edge",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "81d084f7eae21b9e01022004c8b5cac5729ec593",
  "filePath" : "com/williamfiset/algorithms/graphtheory/networkflow/Dinics.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "edge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 25,
      "endLineNumber" : 61,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 38
      },
      "nodeContext" : "edge.capacity",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "edge.capacity - edge.flow",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "cap=edge.capacity - edge.flow",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final long cap=edge.capacity - edge.flow;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[node]) {\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!q.isEmpty()) {\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final long cap=edge.capacity - edge.flow;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge"
  }, {
    "nodeContext" : "edge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 41,
      "endLineNumber" : 61,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 41,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "edge.flow",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "edge.capacity - edge.flow",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "cap=edge.capacity - edge.flow",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final long cap=edge.capacity - edge.flow;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[node]) {\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!q.isEmpty()) {\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final long cap=edge.capacity - edge.flow;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge"
  }, {
    "nodeContext" : "edge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 62,
      "startColumnNumber" : 29,
      "endLineNumber" : 62,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 62,
        "startColumnNumber" : 29,
        "endLineNumber" : 62,
        "endColumnNumber" : 36
      },
      "nodeContext" : "edge.to",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 37
      },
      "nodeContext" : "level[edge.to]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "level[edge.to] == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cap > 0 && level[edge.to] == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cap > 0 && level[edge.to] == -1) {\n  level[edge.to]=level[node] + 1;\n  q.offer(edge.to);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[node]) {\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!q.isEmpty()) {\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cap > 0 && level[edge.to] == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge"
  }, {
    "nodeContext" : "edge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 63,
      "startColumnNumber" : 16,
      "endLineNumber" : 63,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 23
      },
      "nodeContext" : "edge.to",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 24
      },
      "nodeContext" : "level[edge.to]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "level[edge.to]=level[node] + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 43
      },
      "nodeContext" : "level[edge.to]=level[node] + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 45,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  level[edge.to]=level[node] + 1;\n  q.offer(edge.to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cap > 0 && level[edge.to] == -1) {\n  level[edge.to]=level[node] + 1;\n  q.offer(edge.to);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[node]) {\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!q.isEmpty()) {\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 43
      },
      "nodeContext" : "level[edge.to]=level[node] + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge"
  }, {
    "nodeContext" : "edge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 64,
      "startColumnNumber" : 18,
      "endLineNumber" : 64,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 64,
        "startColumnNumber" : 18,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "edge.to",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 26
      },
      "nodeContext" : "q.offer(edge.to)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 27
      },
      "nodeContext" : "q.offer(edge.to);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 45,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  level[edge.to]=level[node] + 1;\n  q.offer(edge.to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cap > 0 && level[edge.to] == -1) {\n  level[edge.to]=level[node] + 1;\n  q.offer(edge.to);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[node]) {\n  final long cap=edge.capacity - edge.flow;\n  if (cap > 0 && level[edge.to] == -1) {\n    level[edge.to]=level[node] + 1;\n    q.offer(edge.to);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!q.isEmpty()) {\n  int node=q.poll();\n  for (  Edge edge : graph[node]) {\n    final long cap=edge.capacity - edge.flow;\n    if (cap > 0 && level[edge.to] == -1) {\n      level[edge.to]=level[node] + 1;\n      q.offer(edge.to);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 27
      },
      "nodeContext" : "q.offer(edge.to);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 25,
    "endLineNumber" : 61,
    "endColumnNumber" : 29
  }, {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 41,
    "endLineNumber" : 61,
    "endColumnNumber" : 45
  }, {
    "charLength" : 4,
    "startLineNumber" : 62,
    "startColumnNumber" : 29,
    "endLineNumber" : 62,
    "endColumnNumber" : 33
  }, {
    "charLength" : 4,
    "startLineNumber" : 63,
    "startColumnNumber" : 16,
    "endLineNumber" : 63,
    "endColumnNumber" : 20
  }, {
    "charLength" : 4,
    "startLineNumber" : 64,
    "startColumnNumber" : 18,
    "endLineNumber" : 64,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}