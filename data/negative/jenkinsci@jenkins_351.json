{
  "id" : 351,
  "expression" : "\"aCause\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/cli/DisconnectNodeCommandTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"aCause\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 130,
      "startColumnNumber" : 47,
      "endLineNumber" : 130,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 128,
        "startColumnNumber" : 42,
        "endLineNumber" : 130,
        "endColumnNumber" : 56
      },
      "nodeContext" : "command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 128,
        "startColumnNumber" : 33,
        "endLineNumber" : 130,
        "endColumnNumber" : 56
      },
      "nodeContext" : "result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 57
      },
      "nodeContext" : "CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 122,
        "startColumnNumber" : 72,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DumbSlave slave=j.createSlave(\"aNode\",\"\",null);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n  slave.toComputer().connect(true);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"anotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"anotherCause\"));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"yetAnotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"yetAnotherCause\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2055,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void disconnectNodeShouldSucceedWithCause() throws Exception {\n  DumbSlave slave=j.createSlave(\"aNode\",\"\",null);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n  slave.toComputer().connect(true);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"anotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"anotherCause\"));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"yetAnotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"yetAnotherCause\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 128,
        "startColumnNumber" : 42,
        "endLineNumber" : 130,
        "endColumnNumber" : 56
      },
      "nodeContext" : "command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"aCause\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 134,
      "startColumnNumber" : 96,
      "endLineNumber" : 134,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 134,
        "startColumnNumber" : 88,
        "endLineNumber" : 134,
        "endColumnNumber" : 105
      },
      "nodeContext" : "equalTo(\"aCause\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 106
      },
      "nodeContext" : "assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 107
      },
      "nodeContext" : "assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 122,
        "startColumnNumber" : 72,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DumbSlave slave=j.createSlave(\"aNode\",\"\",null);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n  slave.toComputer().connect(true);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"anotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"anotherCause\"));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"yetAnotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"yetAnotherCause\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2055,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void disconnectNodeShouldSucceedWithCause() throws Exception {\n  DumbSlave slave=j.createSlave(\"aNode\",\"\",null);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  CLICommandInvoker.Result result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"aCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n  slave.toComputer().connect(true);\n  slave.toComputer().waitUntilOnline();\n  assertThat(slave.toComputer().isOnline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),equalTo(null));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"anotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"anotherCause\"));\n  result=command.authorizedTo(Computer.DISCONNECT,Jenkins.READ).invokeWithArgs(\"aNode\",\"-m\",\"yetAnotherCause\");\n  assertThat(result,succeededSilently());\n  assertThat(slave.toComputer().isOffline(),equalTo(true));\n  assertThat(slave.toComputer().getOfflineCause(),instanceOf(OfflineCause.ByCLI.class));\n  assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"yetAnotherCause\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 107
      },
      "nodeContext" : "assertThat(((OfflineCause.ByCLI)slave.toComputer().getOfflineCause()).message,equalTo(\"aCause\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 130,
    "startColumnNumber" : 47,
    "endLineNumber" : 130,
    "endColumnNumber" : 55
  }, {
    "charLength" : 8,
    "startLineNumber" : 134,
    "startColumnNumber" : 96,
    "endLineNumber" : 134,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}