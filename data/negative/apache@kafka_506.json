{
  "id" : 506,
  "expression" : "new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/clients/producer/internals/StickyPartitionCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 10,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 44,
        "startColumnNumber" : 44,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 44,
        "startColumnNumber" : 28,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "allPartitions=asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 44,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 10
      },
      "nodeContext" : "List<PartitionInfo> allPartitions=asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1766,
        "startLineNumber" : 43,
        "startColumnNumber" : 43,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<PartitionInfo> allPartitions=asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES));\n  Cluster testCluster=new Cluster(\"clusterId\",asList(NODES),allPartitions,Collections.emptySet(),Collections.emptySet());\n  StickyPartitionCache stickyPartitionCache=new StickyPartitionCache();\n  int partA=stickyPartitionCache.partition(TOPIC_A,testCluster);\n  assertEquals(partA,stickyPartitionCache.partition(TOPIC_A,testCluster));\n  int partB=stickyPartitionCache.partition(TOPIC_B,testCluster);\n  assertEquals(partB,stickyPartitionCache.partition(TOPIC_B,testCluster));\n  int changedPartA=stickyPartitionCache.nextPartition(TOPIC_A,testCluster,partA);\n  assertEquals(changedPartA,stickyPartitionCache.partition(TOPIC_A,testCluster));\n  assertNotEquals(partA,changedPartA);\n  int changedPartA2=stickyPartitionCache.partition(TOPIC_A,testCluster);\n  assertEquals(changedPartA2,changedPartA);\n  int changedPartA3=stickyPartitionCache.nextPartition(TOPIC_A,testCluster,partA);\n  assertEquals(changedPartA3,changedPartA2);\n  int changedPartB=stickyPartitionCache.nextPartition(TOPIC_B,testCluster,partB);\n  assertEquals(changedPartB,stickyPartitionCache.partition(TOPIC_B,testCluster));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1815,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStickyPartitionCache(){\n  List<PartitionInfo> allPartitions=asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES));\n  Cluster testCluster=new Cluster(\"clusterId\",asList(NODES),allPartitions,Collections.emptySet(),Collections.emptySet());\n  StickyPartitionCache stickyPartitionCache=new StickyPartitionCache();\n  int partA=stickyPartitionCache.partition(TOPIC_A,testCluster);\n  assertEquals(partA,stickyPartitionCache.partition(TOPIC_A,testCluster));\n  int partB=stickyPartitionCache.partition(TOPIC_B,testCluster);\n  assertEquals(partB,stickyPartitionCache.partition(TOPIC_B,testCluster));\n  int changedPartA=stickyPartitionCache.nextPartition(TOPIC_A,testCluster,partA);\n  assertEquals(changedPartA,stickyPartitionCache.partition(TOPIC_A,testCluster));\n  assertNotEquals(partA,changedPartA);\n  int changedPartA2=stickyPartitionCache.partition(TOPIC_A,testCluster);\n  assertEquals(changedPartA2,changedPartA);\n  int changedPartA3=stickyPartitionCache.nextPartition(TOPIC_A,testCluster,partA);\n  assertEquals(changedPartA3,changedPartA2);\n  int changedPartB=stickyPartitionCache.nextPartition(TOPIC_B,testCluster,partB);\n  assertEquals(changedPartB,stickyPartitionCache.partition(TOPIC_B,testCluster));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 44,
        "startColumnNumber" : 44,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "asList(new PartitionInfo(TOPIC_A,0,NODES[0],NODES,NODES),new PartitionInfo(TOPIC_A,1,NODES[1],NODES,NODES),new PartitionInfo(TOPIC_A,2,NODES[2],NODES,NODES),new PartitionInfo(TOPIC_B,0,NODES[0],NODES,NODES))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "org.apache.kafka.common.PartitionInfo"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}