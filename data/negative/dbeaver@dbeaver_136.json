{
  "id" : 136,
  "expression" : "versionSpec.length()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.registry/src/org/jkiss/dbeaver/registry/maven/MavenArtifact.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "versionSpec.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 217,
      "startColumnNumber" : 74,
      "endLineNumber" : 217,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 217,
        "startColumnNumber" : 74,
        "endLineNumber" : 217,
        "endColumnNumber" : 98
      },
      "nodeContext" : "versionSpec.length() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 217,
        "startColumnNumber" : 49,
        "endLineNumber" : 217,
        "endColumnNumber" : 99
      },
      "nodeContext" : "versionSpec.substring(1,versionSpec.length() - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 217,
        "startColumnNumber" : 33,
        "endLineNumber" : 217,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 217,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 100
      },
      "nodeContext" : "versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 217,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 101
      },
      "nodeContext" : "versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 216,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 216,
        "startColumnNumber" : 12,
        "endLineNumber" : 220,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n}\n catch (Exception e) {\n  log.error(\"Bad version pattern: \" + versionSpec);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 214,
        "startColumnNumber" : 70,
        "endLineNumber" : 221,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n  }\n catch (  Exception e) {\n    log.error(\"Bad version pattern: \" + versionSpec);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (versionSpec.startsWith(\"{\") && versionSpec.endsWith(\"}\")) {\n  try {\n    versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n  }\n catch (  Exception e) {\n    log.error(\"Bad version pattern: \" + versionSpec);\n  }\n}\n else {\n  try {\n    versionRange=VersionRange.createFromVersionSpec(versionSpec);\n  }\n catch (  Exception e) {\n    log.error(\"Bad version specification: \" + versionSpec);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1508,
        "startLineNumber" : 204,
        "startColumnNumber" : 118,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CommonUtils.isEmpty(versions) && !metadataLoaded) {\n    loadMetadata(monitor);\n  }\n  if (!isVersionPattern(versionSpec)) {\n    return versions;\n  }\n  Pattern versionPattern=null;\n  VersionRange versionRange=null;\n  if (versionSpec.startsWith(\"{\") && versionSpec.endsWith(\"}\")) {\n    try {\n      versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n    }\n catch (    Exception e) {\n      log.error(\"Bad version pattern: \" + versionSpec);\n    }\n  }\n else {\n    try {\n      versionRange=VersionRange.createFromVersionSpec(versionSpec);\n    }\n catch (    Exception e) {\n      log.error(\"Bad version specification: \" + versionSpec);\n    }\n  }\n  List<String> filtered=new ArrayList<>();\n  for (  String version : versions) {\n    boolean matches;\n    if (versionPattern != null) {\n      matches=versionPattern.matcher(version).matches();\n    }\n else     if (versionRange != null) {\n      matches=versionRange.containsVersion(new DefaultArtifactVersion(version));\n    }\n else {\n      matches=true;\n    }\n    if (matches) {\n      filtered.add(version);\n    }\n  }\n  return filtered;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 203,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Nullable public Collection<String> getAvailableVersions(DBRProgressMonitor monitor,String versionSpec) throws IOException {\n  if (CommonUtils.isEmpty(versions) && !metadataLoaded) {\n    loadMetadata(monitor);\n  }\n  if (!isVersionPattern(versionSpec)) {\n    return versions;\n  }\n  Pattern versionPattern=null;\n  VersionRange versionRange=null;\n  if (versionSpec.startsWith(\"{\") && versionSpec.endsWith(\"}\")) {\n    try {\n      versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n    }\n catch (    Exception e) {\n      log.error(\"Bad version pattern: \" + versionSpec);\n    }\n  }\n else {\n    try {\n      versionRange=VersionRange.createFromVersionSpec(versionSpec);\n    }\n catch (    Exception e) {\n      log.error(\"Bad version specification: \" + versionSpec);\n    }\n  }\n  List<String> filtered=new ArrayList<>();\n  for (  String version : versions) {\n    boolean matches;\n    if (versionPattern != null) {\n      matches=versionPattern.matcher(version).matches();\n    }\n else     if (versionRange != null) {\n      matches=versionRange.containsVersion(new DefaultArtifactVersion(version));\n    }\n else {\n      matches=true;\n    }\n    if (matches) {\n      filtered.add(version);\n    }\n  }\n  return filtered;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 217,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 101
      },
      "nodeContext" : "versionPattern=Pattern.compile(versionSpec.substring(1,versionSpec.length() - 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 217,
    "startColumnNumber" : 74,
    "endLineNumber" : 217,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}