{
  "id" : 309,
  "expression" : "ctrlC",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/view/component/List.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ctrlC",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 30,
      "startColumnNumber" : 21,
      "endLineNumber" : 30,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 35
      },
      "nodeContext" : "inputMap.put(ctrlC,\"none\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inputMap.put(ctrlC,\"none\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 20,
        "startColumnNumber" : 18,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  Toolkit toolkit=Toolkit.getDefaultToolkit();\n  KeyStroke ctrlA=KeyStroke.getKeyStroke(KeyEvent.VK_A,toolkit.getMenuShortcutKeyMask());\n  KeyStroke ctrlC=KeyStroke.getKeyStroke(KeyEvent.VK_C,toolkit.getMenuShortcutKeyMask());\n  KeyStroke ctrlV=KeyStroke.getKeyStroke(KeyEvent.VK_V,toolkit.getMenuShortcutKeyMask());\n  InputMap inputMap=getInputMap();\n  inputMap.put(ctrlA,\"none\");\n  inputMap.put(ctrlC,\"none\");\n  inputMap.put(ctrlV,\"none\");\n  setCellRenderer(new Renderer());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public List(){\n  super();\n  Toolkit toolkit=Toolkit.getDefaultToolkit();\n  KeyStroke ctrlA=KeyStroke.getKeyStroke(KeyEvent.VK_A,toolkit.getMenuShortcutKeyMask());\n  KeyStroke ctrlC=KeyStroke.getKeyStroke(KeyEvent.VK_C,toolkit.getMenuShortcutKeyMask());\n  KeyStroke ctrlV=KeyStroke.getKeyStroke(KeyEvent.VK_V,toolkit.getMenuShortcutKeyMask());\n  InputMap inputMap=getInputMap();\n  inputMap.put(ctrlA,\"none\");\n  inputMap.put(ctrlC,\"none\");\n  inputMap.put(ctrlV,\"none\");\n  setCellRenderer(new Renderer());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inputMap.put(ctrlC,\"none\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "javax.swing.KeyStroke"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 30,
    "startColumnNumber" : 21,
    "endLineNumber" : 30,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}