{
  "id" : 352,
  "expression" : "markupFileName",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/test/java/org/openapitools/codegen/asciidoc/AsciidocSampleGeneratorTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "markupFileName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 66,
      "endLineNumber" : 84,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"expected project spec.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * ensure api-docs.json includes sample and spec files into markup.\n */\n@Test public void testSampleAsciidocMarkupGenerationFromJsonWithIncludes(){\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"expected project spec.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "markupFileName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 87,
      "startColumnNumber" : 76,
      "endLineNumber" : 87,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"expected project implementation.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * ensure api-docs.json includes sample and spec files into markup.\n */\n@Test public void testSampleAsciidocMarkupGenerationFromJsonWithIncludes(){\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"expected project implementation.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "markupFileName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 90,
      "startColumnNumber" : 74,
      "endLineNumber" : 90,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"expected project http-request.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * ensure api-docs.json includes sample and spec files into markup.\n */\n@Test public void testSampleAsciidocMarkupGenerationFromJsonWithIncludes(){\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"expected project http-request.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "markupFileName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 93,
      "startColumnNumber" : 75,
      "endLineNumber" : 93,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 89
      },
      "nodeContext" : "\"expected project http-response.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * ensure api-docs.json includes sample and spec files into markup.\n */\n@Test public void testSampleAsciidocMarkupGenerationFromJsonWithIncludes(){\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 89
      },
      "nodeContext" : "\"expected project http-response.adoc to be included in \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "markupFileName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 96,
      "startColumnNumber" : 55,
      "endLineNumber" : 96,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"expected link: not found in file: \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * ensure api-docs.json includes sample and spec files into markup.\n */\n@Test public void testSampleAsciidocMarkupGenerationFromJsonWithIncludes(){\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/spec.adoc[\"),\"expected project spec.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{specDir}rest/project/GET/implementation.adoc[\"),\"expected project implementation.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-request.adoc[\"),\"expected project http-request.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"include::{snippetDir}rest/project/GET/http-response.adoc[\"),\"expected project http-response.adoc to be included in \" + markupFileName);\n  Assert.assertTrue(markupContent.contains(\"link:rest/project/GET/GET.json[\"),\"expected link: not found in file: \" + markupFileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"expected link: not found in file: \" + markupFileName",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 66,
    "endLineNumber" : 84,
    "endColumnNumber" : 80
  }, {
    "charLength" : 14,
    "startLineNumber" : 87,
    "startColumnNumber" : 76,
    "endLineNumber" : 87,
    "endColumnNumber" : 90
  }, {
    "charLength" : 14,
    "startLineNumber" : 90,
    "startColumnNumber" : 74,
    "endLineNumber" : 90,
    "endColumnNumber" : 88
  }, {
    "charLength" : 14,
    "startLineNumber" : 93,
    "startColumnNumber" : 75,
    "endLineNumber" : 93,
    "endColumnNumber" : 89
  }, {
    "charLength" : 14,
    "startLineNumber" : 96,
    "startColumnNumber" : 55,
    "endLineNumber" : 96,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}