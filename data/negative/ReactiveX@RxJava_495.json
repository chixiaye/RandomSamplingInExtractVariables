{
  "id" : 495,
  "expression" : "nextNotification",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/flowable/BlockingFlowableNext.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nextNotification",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 100,
      "startColumnNumber" : 29,
      "endLineNumber" : 100,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 46
      },
      "nodeContext" : "isOnNext(nextNotification)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isOnNext(nextNotification)) {\n  isNextConsumed=false;\n  next=nextNotification.value().get();\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n catch (InterruptedException e) {\n  observer.dispose();\n  Thread.currentThread().interrupt();\n  error=e;\n  throw Exceptions.propagate(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean moveToNext(){\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 46
      },
      "nodeContext" : "isOnNext(nextNotification)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Try<io.reactivex.Optional<T>>"
  }, {
    "nodeContext" : "nextNotification",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 102,
      "startColumnNumber" : 27,
      "endLineNumber" : 102,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 102,
        "startColumnNumber" : 27,
        "endLineNumber" : 102,
        "endColumnNumber" : 51
      },
      "nodeContext" : "nextNotification.value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 102,
        "startColumnNumber" : 27,
        "endLineNumber" : 102,
        "endColumnNumber" : 57
      },
      "nodeContext" : "nextNotification.value().get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 57
      },
      "nodeContext" : "next=nextNotification.value().get()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 58
      },
      "nodeContext" : "next=nextNotification.value().get();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 100,
        "startColumnNumber" : 48,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  isNextConsumed=false;\n  next=nextNotification.value().get();\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isOnNext(nextNotification)) {\n  isNextConsumed=false;\n  next=nextNotification.value().get();\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n catch (InterruptedException e) {\n  observer.dispose();\n  Thread.currentThread().interrupt();\n  error=e;\n  throw Exceptions.propagate(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean moveToNext(){\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 58
      },
      "nodeContext" : "next=nextNotification.value().get();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Try<io.reactivex.Optional<T>>"
  }, {
    "nodeContext" : "nextNotification",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 108,
      "startColumnNumber" : 33,
      "endLineNumber" : 108,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 50
      },
      "nodeContext" : "isOnComplete(nextNotification)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isOnComplete(nextNotification)) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n catch (InterruptedException e) {\n  observer.dispose();\n  Thread.currentThread().interrupt();\n  error=e;\n  throw Exceptions.propagate(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean moveToNext(){\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 50
      },
      "nodeContext" : "isOnComplete(nextNotification)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Try<io.reactivex.Optional<T>>"
  }, {
    "nodeContext" : "nextNotification",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 111,
      "startColumnNumber" : 20,
      "endLineNumber" : 111,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 47
      },
      "nodeContext" : "nextNotification.hasError()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (nextNotification.hasError()) {\n  error=nextNotification.error();\n  throw Exceptions.propagate(error);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n catch (InterruptedException e) {\n  observer.dispose();\n  Thread.currentThread().interrupt();\n  error=e;\n  throw Exceptions.propagate(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean moveToNext(){\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 47
      },
      "nodeContext" : "nextNotification.hasError()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Try<io.reactivex.Optional<T>>"
  }, {
    "nodeContext" : "nextNotification",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 112,
      "startColumnNumber" : 28,
      "endLineNumber" : 112,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 112,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 52
      },
      "nodeContext" : "nextNotification.error()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 52
      },
      "nodeContext" : "error=nextNotification.error()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 53
      },
      "nodeContext" : "error=nextNotification.error();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 111,
        "startColumnNumber" : 49,
        "endLineNumber" : 114,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  error=nextNotification.error();\n  throw Exceptions.propagate(error);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (nextNotification.hasError()) {\n  error=nextNotification.error();\n  throw Exceptions.propagate(error);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (!started) {\n    started=true;\n    observer.setWaiting(1);\n    Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n  }\n  Try<Optional<T>> nextNotification=observer.takeNext();\n  if (isOnNext(nextNotification)) {\n    isNextConsumed=false;\n    next=nextNotification.value().get();\n    return true;\n  }\n  hasNext=false;\n  if (isOnComplete(nextNotification)) {\n    return false;\n  }\n  if (nextNotification.hasError()) {\n    error=nextNotification.error();\n    throw Exceptions.propagate(error);\n  }\n  throw new IllegalStateException(\"Should not reach here\");\n}\n catch (InterruptedException e) {\n  observer.dispose();\n  Thread.currentThread().interrupt();\n  error=e;\n  throw Exceptions.propagate(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean moveToNext(){\n  try {\n    if (!started) {\n      started=true;\n      observer.setWaiting(1);\n      Flowable.<T>fromPublisher(items).materialize().subscribe(observer);\n    }\n    Try<Optional<T>> nextNotification=observer.takeNext();\n    if (isOnNext(nextNotification)) {\n      isNextConsumed=false;\n      next=nextNotification.value().get();\n      return true;\n    }\n    hasNext=false;\n    if (isOnComplete(nextNotification)) {\n      return false;\n    }\n    if (nextNotification.hasError()) {\n      error=nextNotification.error();\n      throw Exceptions.propagate(error);\n    }\n    throw new IllegalStateException(\"Should not reach here\");\n  }\n catch (  InterruptedException e) {\n    observer.dispose();\n    Thread.currentThread().interrupt();\n    error=e;\n    throw Exceptions.propagate(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 53
      },
      "nodeContext" : "error=nextNotification.error();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Try<io.reactivex.Optional<T>>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 100,
    "startColumnNumber" : 29,
    "endLineNumber" : 100,
    "endColumnNumber" : 45
  }, {
    "charLength" : 16,
    "startLineNumber" : 102,
    "startColumnNumber" : 27,
    "endLineNumber" : 102,
    "endColumnNumber" : 43
  }, {
    "charLength" : 16,
    "startLineNumber" : 108,
    "startColumnNumber" : 33,
    "endLineNumber" : 108,
    "endColumnNumber" : 49
  }, {
    "charLength" : 16,
    "startLineNumber" : 111,
    "startColumnNumber" : 20,
    "endLineNumber" : 111,
    "endColumnNumber" : 36
  }, {
    "charLength" : 16,
    "startLineNumber" : 112,
    "startColumnNumber" : 28,
    "endLineNumber" : 112,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}