{
  "id" : 300,
  "expression" : "\"key\"",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/DOMStorage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"key\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 85,
      "startColumnNumber" : 34,
      "endLineNumber" : 85,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 85,
        "startColumnNumber" : 17,
        "endLineNumber" : 85,
        "endColumnNumber" : 40
      },
      "nodeContext" : "params.getString(\"key\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 85,
        "startColumnNumber" : 11,
        "endLineNumber" : 85,
        "endColumnNumber" : 40
      },
      "nodeContext" : "key=params.getString(\"key\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String key=params.getString(\"key\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2010,
        "startLineNumber" : 81,
        "startColumnNumber" : 45,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StorageId storage=mObjectMapper.convertValue(params.getJSONObject(\"storageId\"),StorageId.class);\n  String key=params.getString(\"key\");\n  String value=params.getString(\"value\");\n  if (storage.isLocalStorage) {\n    SharedPreferences prefs=mContext.getSharedPreferences(storage.securityOrigin,Context.MODE_PRIVATE);\n    Object existingValue=prefs.getAll().get(key);\n    try {\n      if (existingValue == null) {\n        throw new DOMStorageAssignmentException(\"Unsupported: cannot add new key \" + key + \" due to lack of type inference\");\n      }\n else {\n        SharedPreferences.Editor editor=prefs.edit();\n        try {\n          assignByType(editor,key,SharedPreferencesHelper.valueFromString(value,existingValue));\n          editor.apply();\n        }\n catch (        IllegalArgumentException e) {\n          throw new DOMStorageAssignmentException(String.format(Locale.US,\"Type mismatch setting %s to %s (expected %s)\",key,value,existingValue.getClass().getSimpleName()));\n        }\n      }\n    }\n catch (    DOMStorageAssignmentException e) {\n      CLog.writeToConsole(mDOMStoragePeerManager,Console.MessageLevel.ERROR,Console.MessageSource.STORAGE,e.getMessage());\n      if (prefs.contains(key)) {\n        mDOMStoragePeerManager.signalItemUpdated(storage,key,value,SharedPreferencesHelper.valueToString(existingValue));\n      }\n else {\n        mDOMStoragePeerManager.signalItemRemoved(storage,key);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@ChromeDevtoolsMethod public void setDOMStorageItem(JsonRpcPeer peer,JSONObject params) throws JSONException, JsonRpcException {\n  StorageId storage=mObjectMapper.convertValue(params.getJSONObject(\"storageId\"),StorageId.class);\n  String key=params.getString(\"key\");\n  String value=params.getString(\"value\");\n  if (storage.isLocalStorage) {\n    SharedPreferences prefs=mContext.getSharedPreferences(storage.securityOrigin,Context.MODE_PRIVATE);\n    Object existingValue=prefs.getAll().get(key);\n    try {\n      if (existingValue == null) {\n        throw new DOMStorageAssignmentException(\"Unsupported: cannot add new key \" + key + \" due to lack of type inference\");\n      }\n else {\n        SharedPreferences.Editor editor=prefs.edit();\n        try {\n          assignByType(editor,key,SharedPreferencesHelper.valueFromString(value,existingValue));\n          editor.apply();\n        }\n catch (        IllegalArgumentException e) {\n          throw new DOMStorageAssignmentException(String.format(Locale.US,\"Type mismatch setting %s to %s (expected %s)\",key,value,existingValue.getClass().getSimpleName()));\n        }\n      }\n    }\n catch (    DOMStorageAssignmentException e) {\n      CLog.writeToConsole(mDOMStoragePeerManager,Console.MessageLevel.ERROR,Console.MessageSource.STORAGE,e.getMessage());\n      if (prefs.contains(key)) {\n        mDOMStoragePeerManager.signalItemUpdated(storage,key,value,SharedPreferencesHelper.valueToString(existingValue));\n      }\n else {\n        mDOMStoragePeerManager.signalItemRemoved(storage,key);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 41
      },
      "nodeContext" : "String key=params.getString(\"key\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 85,
    "startColumnNumber" : 34,
    "endLineNumber" : 85,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}