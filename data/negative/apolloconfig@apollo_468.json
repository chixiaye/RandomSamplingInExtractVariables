{
  "id" : 468,
  "expression" : "name",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/controller/AppNamespaceControllerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 25,
      "startColumnNumber" : 16,
      "endLineNumber" : 25,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 21
      },
      "nodeContext" : "dto.setName(name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 22
      },
      "nodeContext" : "dto.setName(name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 19,
        "startColumnNumber" : 26,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String name=\"testnamespace\";\n  String comment=\"comment\";\n  AppNamespaceDTO dto=new AppNamespaceDTO();\n  dto.setAppId(appId);\n  dto.setName(name);\n  dto.setComment(comment);\n  dto.setDataChangeCreatedBy(\"apollo\");\n  AppNamespaceDTO resultDto=restTemplate.postForEntity(String.format(\"http://localhost:%d/apps/%s/appnamespaces\",port,appId),dto,AppNamespaceDTO.class).getBody();\n  Assert.assertEquals(appId,resultDto.getAppId());\n  Assert.assertTrue(resultDto.getId() > 0);\n  AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n  Assert.assertNotNull(savedAppNs);\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedBy());\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedBy());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/controller/cleanup.sql\",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testCreate(){\n  String appId=\"6666\";\n  String name=\"testnamespace\";\n  String comment=\"comment\";\n  AppNamespaceDTO dto=new AppNamespaceDTO();\n  dto.setAppId(appId);\n  dto.setName(name);\n  dto.setComment(comment);\n  dto.setDataChangeCreatedBy(\"apollo\");\n  AppNamespaceDTO resultDto=restTemplate.postForEntity(String.format(\"http://localhost:%d/apps/%s/appnamespaces\",port,appId),dto,AppNamespaceDTO.class).getBody();\n  Assert.assertEquals(appId,resultDto.getAppId());\n  Assert.assertTrue(resultDto.getId() > 0);\n  AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n  Assert.assertNotNull(savedAppNs);\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedBy());\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedBy());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 22
      },
      "nodeContext" : "dto.setName(name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 35,
      "startColumnNumber" : 76,
      "endLineNumber" : 35,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 35,
        "startColumnNumber" : 30,
        "endLineNumber" : 35,
        "endColumnNumber" : 81
      },
      "nodeContext" : "namespaceRepository.findByAppIdAndName(appId,name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 35,
        "startColumnNumber" : 17,
        "endLineNumber" : 35,
        "endColumnNumber" : 81
      },
      "nodeContext" : "savedAppNs=namespaceRepository.findByAppIdAndName(appId,name)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 19,
        "startColumnNumber" : 26,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String name=\"testnamespace\";\n  String comment=\"comment\";\n  AppNamespaceDTO dto=new AppNamespaceDTO();\n  dto.setAppId(appId);\n  dto.setName(name);\n  dto.setComment(comment);\n  dto.setDataChangeCreatedBy(\"apollo\");\n  AppNamespaceDTO resultDto=restTemplate.postForEntity(String.format(\"http://localhost:%d/apps/%s/appnamespaces\",port,appId),dto,AppNamespaceDTO.class).getBody();\n  Assert.assertEquals(appId,resultDto.getAppId());\n  Assert.assertTrue(resultDto.getId() > 0);\n  AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n  Assert.assertNotNull(savedAppNs);\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedBy());\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedBy());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/controller/cleanup.sql\",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testCreate(){\n  String appId=\"6666\";\n  String name=\"testnamespace\";\n  String comment=\"comment\";\n  AppNamespaceDTO dto=new AppNamespaceDTO();\n  dto.setAppId(appId);\n  dto.setName(name);\n  dto.setComment(comment);\n  dto.setDataChangeCreatedBy(\"apollo\");\n  AppNamespaceDTO resultDto=restTemplate.postForEntity(String.format(\"http://localhost:%d/apps/%s/appnamespaces\",port,appId),dto,AppNamespaceDTO.class).getBody();\n  Assert.assertEquals(appId,resultDto.getAppId());\n  Assert.assertTrue(resultDto.getId() > 0);\n  AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n  Assert.assertNotNull(savedAppNs);\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedTime());\n  Assert.assertNotNull(savedAppNs.getDataChangeLastModifiedBy());\n  Assert.assertNotNull(savedAppNs.getDataChangeCreatedBy());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AppNamespace savedAppNs=namespaceRepository.findByAppIdAndName(appId,name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 25,
    "startColumnNumber" : 16,
    "endLineNumber" : 25,
    "endColumnNumber" : 20
  }, {
    "charLength" : 4,
    "startLineNumber" : 35,
    "startColumnNumber" : 76,
    "endLineNumber" : 35,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}