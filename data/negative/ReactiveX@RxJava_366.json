{
  "id" : 366,
  "expression" : "0",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableDeferTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 48,
      "startColumnNumber" : 36,
      "endLineNumber" : 48,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 48,
        "startColumnNumber" : 30,
        "endLineNumber" : 48,
        "endColumnNumber" : 38
      },
      "nodeContext" : "times(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 39
      },
      "nodeContext" : "verify(firstObserver,times(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"three\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 56
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"three\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 30,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1371,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDefer() throws Throwable {\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 56
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"three\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 36,
      "endLineNumber" : 49,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 49,
        "startColumnNumber" : 30,
        "endLineNumber" : 49,
        "endColumnNumber" : 38
      },
      "nodeContext" : "times(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "verify(firstObserver,times(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 54
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"four\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"four\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 30,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1371,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDefer() throws Throwable {\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(firstObserver,times(0)).onNext(\"four\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 37,
      "endLineNumber" : 56,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 56,
        "startColumnNumber" : 31,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "times(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(secondObserver,times(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 54
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"one\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"one\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 30,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1371,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDefer() throws Throwable {\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"one\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 37,
      "endLineNumber" : 57,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 57,
        "startColumnNumber" : 31,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "times(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(secondObserver,times(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 54
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 30,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1371,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDefer() throws Throwable {\n  Supplier<Observable<String>> factory=mock(Supplier.class);\n  Observable<String> firstObservable=Observable.just(\"one\",\"two\");\n  Observable<String> secondObservable=Observable.just(\"three\",\"four\");\n  when(factory.get()).thenReturn(firstObservable,secondObservable);\n  Observable<String> deferred=Observable.defer(factory);\n  verifyZeroInteractions(factory);\n  Observer<String> firstObserver=TestHelper.mockObserver();\n  deferred.subscribe(firstObserver);\n  verify(factory,times(1)).get();\n  verify(firstObserver,times(1)).onNext(\"one\");\n  verify(firstObserver,times(1)).onNext(\"two\");\n  verify(firstObserver,times(0)).onNext(\"three\");\n  verify(firstObserver,times(0)).onNext(\"four\");\n  verify(firstObserver,times(1)).onComplete();\n  Observer<String> secondObserver=TestHelper.mockObserver();\n  deferred.subscribe(secondObserver);\n  verify(factory,times(2)).get();\n  verify(secondObserver,times(0)).onNext(\"one\");\n  verify(secondObserver,times(0)).onNext(\"two\");\n  verify(secondObserver,times(1)).onNext(\"three\");\n  verify(secondObserver,times(1)).onNext(\"four\");\n  verify(secondObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 55
      },
      "nodeContext" : "verify(secondObserver,times(0)).onNext(\"two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 48,
    "startColumnNumber" : 36,
    "endLineNumber" : 48,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 36,
    "endLineNumber" : 49,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 37,
    "endLineNumber" : 56,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 37,
    "endLineNumber" : 57,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}