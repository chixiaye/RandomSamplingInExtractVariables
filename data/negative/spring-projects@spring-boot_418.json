{
  "id" : 418,
  "expression" : "this.channel",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/amqp/RabbitHealthIndicatorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.channel",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 75,
      "startColumnNumber" : 8,
      "endLineNumber" : 75,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 36
      },
      "nodeContext" : "this.channel.getConnection()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 37
      },
      "nodeContext" : "given(this.channel.getConnection())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 60
      },
      "nodeContext" : "given(this.channel.getConnection()).willReturn(connection)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 61
      },
      "nodeContext" : "given(this.channel.getConnection()).willReturn(connection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 73,
        "startColumnNumber" : 86,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Connection connection=mock(Connection.class);\n  given(this.channel.getConnection()).willReturn(connection);\n  given(connection.getServerProperties()).willReturn(Collections.singletonMap(\"version\",\"123\"));\n  Health health=new RabbitHealthIndicator(this.rabbitTemplate).health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  assertThat(health.getDetails()).containsEntry(\"version\",\"123\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 81,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void healthWhenConnectionSucceedsShouldReturnUpWithVersion() throws Exception {\n  Connection connection=mock(Connection.class);\n  given(this.channel.getConnection()).willReturn(connection);\n  given(connection.getServerProperties()).willReturn(Collections.singletonMap(\"version\",\"123\"));\n  Health health=new RabbitHealthIndicator(this.rabbitTemplate).health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  assertThat(health.getDetails()).containsEntry(\"version\",\"123\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 61
      },
      "nodeContext" : "given(this.channel.getConnection()).willReturn(connection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.actuate.amqp.Channel"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 75,
    "startColumnNumber" : 8,
    "endLineNumber" : 75,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}