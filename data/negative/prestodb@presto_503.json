{
  "id" : 503,
  "expression" : "leftPosition",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/type/IntervalDayTimeOperators.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "leftPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 205,
      "startColumnNumber" : 28,
      "endLineNumber" : 205,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.isNull(leftPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 72
      },
      "nodeContext" : "left.isNull(leftPosition) != right.isNull(rightPosition)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@SqlType(StandardTypes.BOOLEAN) public static boolean isDistinctFrom(@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block left,@BlockIndex int leftPosition,@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block right,@BlockIndex int rightPosition){\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 72
      },
      "nodeContext" : "left.isNull(leftPosition) != right.isNull(rightPosition)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "leftPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 208,
      "startColumnNumber" : 28,
      "endLineNumber" : 208,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 208,
        "startColumnNumber" : 16,
        "endLineNumber" : 208,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.isNull(leftPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 208,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (left.isNull(leftPosition)) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@SqlType(StandardTypes.BOOLEAN) public static boolean isDistinctFrom(@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block left,@BlockIndex int leftPosition,@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block right,@BlockIndex int rightPosition){\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 208,
        "startColumnNumber" : 16,
        "endLineNumber" : 208,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.isNull(leftPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "leftPosition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 211,
      "startColumnNumber" : 60,
      "endLineNumber" : 211,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 211,
        "startColumnNumber" : 28,
        "endLineNumber" : 211,
        "endColumnNumber" : 73
      },
      "nodeContext" : "INTERVAL_DAY_TIME.getLong(left,leftPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 211,
        "startColumnNumber" : 19,
        "endLineNumber" : 211,
        "endColumnNumber" : 123
      },
      "nodeContext" : "notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 124
      },
      "nodeContext" : "return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@SqlType(StandardTypes.BOOLEAN) public static boolean isDistinctFrom(@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block left,@BlockIndex int leftPosition,@BlockPosition @SqlType(value=StandardTypes.INTERVAL_DAY_TO_SECOND,nativeContainerType=long.class) Block right,@BlockIndex int rightPosition){\n  if (left.isNull(leftPosition) != right.isNull(rightPosition)) {\n    return true;\n  }\n  if (left.isNull(leftPosition)) {\n    return false;\n  }\n  return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 124
      },
      "nodeContext" : "return notEqual(INTERVAL_DAY_TIME.getLong(left,leftPosition),INTERVAL_DAY_TIME.getLong(right,rightPosition));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 205,
    "startColumnNumber" : 28,
    "endLineNumber" : 205,
    "endColumnNumber" : 40
  }, {
    "charLength" : 12,
    "startLineNumber" : 208,
    "startColumnNumber" : 28,
    "endLineNumber" : 208,
    "endColumnNumber" : 40
  }, {
    "charLength" : 12,
    "startLineNumber" : 211,
    "startColumnNumber" : 60,
    "endLineNumber" : 211,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}