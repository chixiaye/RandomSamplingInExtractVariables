{
  "id" : 24,
  "expression" : "System",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/androidTest/java/com/bumptech/glide/util/MarkEnforcingInputStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 88,
      "startColumnNumber" : 4,
      "endLineNumber" : 88,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.arraycopy(expected,0,buffer,0,MARK_LIMIT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 57
      },
      "nodeContext" : "System.arraycopy(expected,0,buffer,0,MARK_LIMIT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 82,
        "startColumnNumber" : 95,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] expected=new byte[MARK_LIMIT];\n  for (int i=0; i < MARK_LIMIT; i++) {\n    expected[i]=(byte)(i + 1);\n  }\n  byte[] buffer=new byte[MARK_LIMIT];\n  System.arraycopy(expected,0,buffer,0,MARK_LIMIT);\n  MarkEnforcingInputStream is=new MarkEnforcingInputStream(new ByteArrayInputStream(new byte[DATA_SIZE]));\n  is.mark(MARK_LIMIT);\n  for (int i=0; i < MARK_LIMIT; i++) {\n    assertThat(is.read()).isAtLeast(0);\n  }\n  assertEquals(-1,is.read(buffer));\n  assertThat(buffer).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDoesNotReadIntoBuffer_withZeroBytesRemainingInMarkLimit() throws IOException {\n  byte[] expected=new byte[MARK_LIMIT];\n  for (int i=0; i < MARK_LIMIT; i++) {\n    expected[i]=(byte)(i + 1);\n  }\n  byte[] buffer=new byte[MARK_LIMIT];\n  System.arraycopy(expected,0,buffer,0,MARK_LIMIT);\n  MarkEnforcingInputStream is=new MarkEnforcingInputStream(new ByteArrayInputStream(new byte[DATA_SIZE]));\n  is.mark(MARK_LIMIT);\n  for (int i=0; i < MARK_LIMIT; i++) {\n    assertThat(is.read()).isAtLeast(0);\n  }\n  assertEquals(-1,is.read(buffer));\n  assertThat(buffer).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 57
      },
      "nodeContext" : "System.arraycopy(expected,0,buffer,0,MARK_LIMIT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 88,
    "startColumnNumber" : 4,
    "endLineNumber" : 88,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}