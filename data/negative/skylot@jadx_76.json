{
  "id" : 76,
  "expression" : "innerClass",
  "projectName" : "skylot@jadx",
  "commitID" : "a4a8b05ef089d605d6a535e4218cf02900dcebc2",
  "filePath" : "jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "innerClass",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 98,
      "startColumnNumber" : 20,
      "endLineNumber" : 98,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 98,
        "endColumnNumber" : 45
      },
      "nodeContext" : "innerClass.getShortName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 58
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 59
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 97,
        "startColumnNumber" : 57,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  innerClsMap.put(innerClass.getShortName(),innerClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 97,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (ClassNode innerClass : resCls.getInnerClasses()) {\n  innerClsMap.put(innerClass.getShortName(),innerClass);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 96,
        "startColumnNumber" : 18,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  ClassNode innerClass : resCls.getInnerClasses()) {\n    innerClsMap.put(innerClass.getShortName(),innerClass);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (rClsExists) {\n  for (  ClassNode innerClass : resCls.getInnerClasses()) {\n    innerClsMap.put(innerClass.getShortName(),innerClass);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 93,
        "startColumnNumber" : 105,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void addResourceFields(ClassNode resCls,ResourceStorage resStorage,boolean rClsExists){\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 59
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.ClassNode"
  }, {
    "nodeContext" : "innerClass",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 98,
      "startColumnNumber" : 47,
      "endLineNumber" : 98,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 58
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 59
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 97,
        "startColumnNumber" : 57,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  innerClsMap.put(innerClass.getShortName(),innerClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 97,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (ClassNode innerClass : resCls.getInnerClasses()) {\n  innerClsMap.put(innerClass.getShortName(),innerClass);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 96,
        "startColumnNumber" : 18,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  ClassNode innerClass : resCls.getInnerClasses()) {\n    innerClsMap.put(innerClass.getShortName(),innerClass);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (rClsExists) {\n  for (  ClassNode innerClass : resCls.getInnerClasses()) {\n    innerClsMap.put(innerClass.getShortName(),innerClass);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 93,
        "startColumnNumber" : 105,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void addResourceFields(ClassNode resCls,ResourceStorage resStorage,boolean rClsExists){\n  Map<Integer,FieldNode> resFieldsMap=fillResFieldsMap(resCls);\n  Map<String,ClassNode> innerClsMap=new TreeMap<>();\n  if (rClsExists) {\n    for (    ClassNode innerClass : resCls.getInnerClasses()) {\n      innerClsMap.put(innerClass.getShortName(),innerClass);\n    }\n  }\n  for (  ResourceEntry resource : resStorage.getResources()) {\n    final String resTypeName=resource.getTypeName();\n    ClassNode typeCls=innerClsMap.computeIfAbsent(resTypeName,name -> addClassForResType(resCls,rClsExists,name));\n    final String resName;\n    if (\"style\".equals(resTypeName)) {\n      resName=resource.getKeyName().replace('.','_');\n    }\n else {\n      resName=resource.getKeyName();\n    }\n    FieldNode rField=typeCls.searchFieldByName(resName);\n    if (rField == null) {\n      FieldInfo rFieldInfo=FieldInfo.from(typeCls.dex(),typeCls.getClassInfo(),resName,ArgType.INT);\n      rField=new FieldNode(typeCls,rFieldInfo,AccessFlags.ACC_PUBLIC | AccessFlags.ACC_STATIC | AccessFlags.ACC_FINAL);\n      rField.addAttr(FieldInitAttr.constValue(resource.getId()));\n      typeCls.getFields().add(rField);\n      if (rClsExists) {\n        rField.addAttr(AType.COMMENTS,\"added by JADX\");\n      }\n    }\n    FieldNode fieldNode=resFieldsMap.get(resource.getId());\n    if (fieldNode != null && !fieldNode.getName().equals(resName) && NameMapper.isValidIdentifier(resName)) {\n      fieldNode.getFieldInfo().setAlias(resName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 59
      },
      "nodeContext" : "innerClsMap.put(innerClass.getShortName(),innerClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.ClassNode"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 98,
    "startColumnNumber" : 20,
    "endLineNumber" : 98,
    "endColumnNumber" : 30
  }, {
    "charLength" : 10,
    "startLineNumber" : 98,
    "startColumnNumber" : 47,
    "endLineNumber" : 98,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}