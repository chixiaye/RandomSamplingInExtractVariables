{
  "id" : 354,
  "expression" : "snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/snode/src/main/java/org/apache/rocketmq/snode/service/impl/ClientServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 73,
      "startLineNumber" : 46,
      "startColumnNumber" : 48,
      "endLineNumber" : 46,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 46,
        "startColumnNumber" : 48,
        "endLineNumber" : 46,
        "endColumnNumber" : 132
      },
      "nodeContext" : "snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 46,
        "startColumnNumber" : 48,
        "endLineNumber" : 46,
        "endColumnNumber" : 167
      },
      "nodeContext" : "snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 46,
        "startColumnNumber" : 20,
        "endLineNumber" : 46,
        "endColumnNumber" : 167
      },
      "nodeContext" : "remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 46,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n  for (  RemotingChannel remotingChannel : remotingChannels) {\n    NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n    requestHeader.setConsumerGroup(group);\n    RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n    try {\n      this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n    }\n catch (    Exception e) {\n      log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 44,
        "startColumnNumber" : 32,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n  if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n    for (    RemotingChannel remotingChannel : remotingChannels) {\n      NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n      requestHeader.setConsumerGroup(group);\n      RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n      try {\n        this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n      }\n catch (      Exception e) {\n        log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1114,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (notifyConsumer) {\n  List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n  if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n    for (    RemotingChannel remotingChannel : remotingChannels) {\n      NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n      requestHeader.setConsumerGroup(group);\n      RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n      try {\n        this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n      }\n catch (      Exception e) {\n        log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 41,
        "startColumnNumber" : 27,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SubscriptionGroupConfig subscriptionGroupConfig=snodeController.getSubscriptionGroupManager().findSubscriptionGroupConfig(group);\n  boolean notifyConsumer=subscriptionGroupConfig.isNotifyConsumerIdsChangedEnable();\n  if (notifyConsumer) {\n    List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n    if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n      for (      RemotingChannel remotingChannel : remotingChannels) {\n        NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n        requestHeader.setConsumerGroup(group);\n        RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n        try {\n          this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n        }\n catch (        Exception e) {\n          log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (group != null) {\n  SubscriptionGroupConfig subscriptionGroupConfig=snodeController.getSubscriptionGroupManager().findSubscriptionGroupConfig(group);\n  boolean notifyConsumer=subscriptionGroupConfig.isNotifyConsumerIdsChangedEnable();\n  if (notifyConsumer) {\n    List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n    if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n      for (      RemotingChannel remotingChannel : remotingChannels) {\n        NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n        requestHeader.setConsumerGroup(group);\n        RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n        try {\n          this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n        }\n catch (        Exception e) {\n          log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1414,
        "startLineNumber" : 40,
        "startColumnNumber" : 45,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (group != null) {\n    SubscriptionGroupConfig subscriptionGroupConfig=snodeController.getSubscriptionGroupManager().findSubscriptionGroupConfig(group);\n    boolean notifyConsumer=subscriptionGroupConfig.isNotifyConsumerIdsChangedEnable();\n    if (notifyConsumer) {\n      List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n      if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n        for (        RemotingChannel remotingChannel : remotingChannels) {\n          NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n          requestHeader.setConsumerGroup(group);\n          RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n          try {\n            this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n          }\n catch (          Exception e) {\n            log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1469,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void notifyConsumer(String group){\n  if (group != null) {\n    SubscriptionGroupConfig subscriptionGroupConfig=snodeController.getSubscriptionGroupManager().findSubscriptionGroupConfig(group);\n    boolean notifyConsumer=subscriptionGroupConfig.isNotifyConsumerIdsChangedEnable();\n    if (notifyConsumer) {\n      List<RemotingChannel> remotingChannels=snodeController.getConsumerManager().getChannels(group);\n      if (remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()) {\n        for (        RemotingChannel remotingChannel : remotingChannels) {\n          NotifyConsumerIdsChangedRequestHeader requestHeader=new NotifyConsumerIdsChangedRequestHeader();\n          requestHeader.setConsumerGroup(group);\n          RemotingCommand request=RemotingCommand.createRequestCommand(RequestCode.NOTIFY_CONSUMER_IDS_CHANGED,requestHeader);\n          try {\n            this.snodeController.getSnodeServer().invokeOneway(remotingChannel,request,10);\n          }\n catch (          Exception e) {\n            log.error(\"NotifyConsumerIdsChanged exception, \" + group,e.getMessage());\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 46,
        "startColumnNumber" : 20,
        "endLineNumber" : 46,
        "endColumnNumber" : 167
      },
      "nodeContext" : "remotingChannels != null && snodeController.getSubscriptionGroupManager().getSubscriptionGroupTable().get(group).isNotifyConsumerIdsChangedEnable()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.concurrent.ConcurrentMap<java.lang.String,org.apache.rocketmq.common.subscription.SubscriptionGroupConfig>"
  } ],
  "positionList" : [ {
    "charLength" : 73,
    "startLineNumber" : 46,
    "startColumnNumber" : 48,
    "endLineNumber" : 46,
    "endColumnNumber" : 121
  } ],
  "layoutRelationDataList" : [ ]
}