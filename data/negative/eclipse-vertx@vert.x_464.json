{
  "id" : 464,
  "expression" : "valid",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/http/impl/ClientHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valid",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 98,
      "startColumnNumber" : 9,
      "endLineNumber" : 98,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 14
      },
      "nodeContext" : "!valid",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!valid) {\n  throw new IllegalStateException(\"Invalid object \" + msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1735,
        "startLineNumber" : 50,
        "startColumnNumber" : 97,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (conn == null) {\n    return;\n  }\n  boolean valid=false;\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    conn.handleResponse(response);\n    valid=true;\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    if (chunk.content().isReadable()) {\n      Buffer buff=Buffer.buffer(chunk.content().slice());\n      conn.handleResponseChunk(buff);\n    }\n    if (chunk instanceof LastHttpContent) {\n      conn.handleResponseEnd((LastHttpContent)chunk);\n    }\n    valid=true;\n  }\n else   if (msg instanceof WebSocketFrameInternal) {\n    WebSocketFrameInternal frame=(WebSocketFrameInternal)msg;\nswitch (frame.type()) {\ncase BINARY:case CONTINUATION:case TEXT:      conn.handleWsFrame(frame);\n    break;\ncase PING:  ctx.writeAndFlush(new WebSocketFrameImpl(FrameType.PONG,frame.getBinaryData()));\nbreak;\ncase PONG:break;\ncase CLOSE:if (!closeFrameSent) {\nctx.writeAndFlush(frame).addListener(ChannelFutureListener.CLOSE);\ncloseFrameSent=true;\n}\nbreak;\ndefault:throw new IllegalStateException(\"Invalid type: \" + frame.type());\n}\nvalid=true;\n}\nif (!valid) {\nthrow new IllegalStateException(\"Invalid object \" + msg);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void doMessageReceived(ClientConnection conn,ChannelHandlerContext ctx,Object msg){\n  if (conn == null) {\n    return;\n  }\n  boolean valid=false;\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    conn.handleResponse(response);\n    valid=true;\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    if (chunk.content().isReadable()) {\n      Buffer buff=Buffer.buffer(chunk.content().slice());\n      conn.handleResponseChunk(buff);\n    }\n    if (chunk instanceof LastHttpContent) {\n      conn.handleResponseEnd((LastHttpContent)chunk);\n    }\n    valid=true;\n  }\n else   if (msg instanceof WebSocketFrameInternal) {\n    WebSocketFrameInternal frame=(WebSocketFrameInternal)msg;\nswitch (frame.type()) {\ncase BINARY:case CONTINUATION:case TEXT:      conn.handleWsFrame(frame);\n    break;\ncase PING:  ctx.writeAndFlush(new WebSocketFrameImpl(FrameType.PONG,frame.getBinaryData()));\nbreak;\ncase PONG:break;\ncase CLOSE:if (!closeFrameSent) {\nctx.writeAndFlush(frame).addListener(ChannelFutureListener.CLOSE);\ncloseFrameSent=true;\n}\nbreak;\ndefault:throw new IllegalStateException(\"Invalid type: \" + frame.type());\n}\nvalid=true;\n}\nif (!valid) {\nthrow new IllegalStateException(\"Invalid object \" + msg);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 14
      },
      "nodeContext" : "!valid",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 98,
    "startColumnNumber" : 9,
    "endLineNumber" : 98,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}