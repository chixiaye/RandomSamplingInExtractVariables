{
  "id" : 452,
  "expression" : "commandLineParser.process()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-read-server/src/main/java/com/netflix/eureka2/server/EurekaReadServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "commandLineParser.process()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 62,
      "startColumnNumber" : 25,
      "endLineNumber" : 62,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 52
      },
      "nodeContext" : "config=commandLineParser.process()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 53
      },
      "nodeContext" : "config=commandLineParser.process();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  config=commandLineParser.process();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  config=commandLineParser.process();\n}\n catch (Exception e) {\n  System.err.println(\"ERROR: invalid configuration parameters; \" + e.getMessage());\n  System.exit(-1);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    config=commandLineParser.process();\n  }\n catch (  Exception e) {\n    System.err.println(\"ERROR: invalid configuration parameters; \" + e.getMessage());\n    System.exit(-1);\n  }\n  if (commandLineParser.hasHelpOption()) {\n    commandLineParser.printHelp();\n    System.exit(0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (args.length == 0) {\n  logger.info(\"No command line parameters provided; enabling archaius property loader for server bootstrapping\");\n}\n else {\n  try {\n    config=commandLineParser.process();\n  }\n catch (  Exception e) {\n    System.err.println(\"ERROR: invalid configuration parameters; \" + e.getMessage());\n    System.exit(-1);\n  }\n  if (commandLineParser.hasHelpOption()) {\n    commandLineParser.printHelp();\n    System.exit(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 53,
        "startColumnNumber" : 43,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  logger.info(\"Eureka 2.0 Read Server\");\n  ReadCommandLineParser commandLineParser=new ReadCommandLineParser(args);\n  EurekaServerConfig config=null;\n  if (args.length == 0) {\n    logger.info(\"No command line parameters provided; enabling archaius property loader for server bootstrapping\");\n  }\n else {\n    try {\n      config=commandLineParser.process();\n    }\n catch (    Exception e) {\n      System.err.println(\"ERROR: invalid configuration parameters; \" + e.getMessage());\n      System.exit(-1);\n    }\n    if (commandLineParser.hasHelpOption()) {\n      commandLineParser.printHelp();\n      System.exit(0);\n    }\n  }\n  EurekaReadServer server=null;\n  try {\n    server=config != null ? new EurekaReadServer(config) : new EurekaReadServer(\"eureka-read-server\");\n    server.start();\n  }\n catch (  Exception e) {\n    logger.error(\"Error while starting Eureka Read server.\",e);\n    if (server != null) {\n      server.shutdown();\n    }\n    System.exit(-1);\n  }\n  server.waitTillShutdown();\n  System.exit(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1339,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  logger.info(\"Eureka 2.0 Read Server\");\n  ReadCommandLineParser commandLineParser=new ReadCommandLineParser(args);\n  EurekaServerConfig config=null;\n  if (args.length == 0) {\n    logger.info(\"No command line parameters provided; enabling archaius property loader for server bootstrapping\");\n  }\n else {\n    try {\n      config=commandLineParser.process();\n    }\n catch (    Exception e) {\n      System.err.println(\"ERROR: invalid configuration parameters; \" + e.getMessage());\n      System.exit(-1);\n    }\n    if (commandLineParser.hasHelpOption()) {\n      commandLineParser.printHelp();\n      System.exit(0);\n    }\n  }\n  EurekaReadServer server=null;\n  try {\n    server=config != null ? new EurekaReadServer(config) : new EurekaReadServer(\"eureka-read-server\");\n    server.start();\n  }\n catch (  Exception e) {\n    logger.error(\"Error while starting Eureka Read server.\",e);\n    if (server != null) {\n      server.shutdown();\n    }\n    System.exit(-1);\n  }\n  server.waitTillShutdown();\n  System.exit(0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 53
      },
      "nodeContext" : "config=commandLineParser.process();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.netflix.eureka2.server.config.EurekaServerConfig"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 62,
    "startColumnNumber" : 25,
    "endLineNumber" : 62,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}