{
  "id" : 61,
  "expression" : "registry.register(notification.getData())",
  "projectName" : "Netflix@eureka",
  "commitID" : "ba3a703058add4d7295bb331fc2b6d6065ab7594",
  "filePath" : "eureka-client/src/test/java/com/netflix/eureka2/client/EurekaClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registry.register(notification.getData())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 89,
      "startColumnNumber" : 16,
      "endLineNumber" : 89,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 70
      },
      "nodeContext" : "registry.register(notification.getData()).toBlocking()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 91
      },
      "nodeContext" : "registry.register(notification.getData()).toBlocking().firstOrDefault(null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 92
      },
      "nodeContext" : "registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 88,
        "startColumnNumber" : 78,
        "endLineNumber" : 90,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ChangeNotification<InstanceInfo> notification : allRegistry) {\n  registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 68,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  interestAll=Interests.forFullRegistry();\n  interestDiscovery=Interests.forVips(SampleInstanceInfo.DiscoveryServer.build().getVipAddress());\n  interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n  discoveryRegistry=Arrays.asList(SampleChangeNotification.DiscoveryAdd.newNotification(),SampleChangeNotification.DiscoveryAdd.newNotification());\n  zuulRegistry=Arrays.asList(SampleChangeNotification.ZuulAdd.newNotification(),SampleChangeNotification.ZuulAdd.newNotification());\n  allRegistry=new ArrayList<>(discoveryRegistry);\n  allRegistry.addAll(zuulRegistry);\n  registry=new PreservableEurekaRegistry(new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics()),new BasicEurekaRegistryConfig(),EurekaRegistryMetricFactory.registryMetrics());\n  for (  ChangeNotification<InstanceInfo> notification : allRegistry) {\n    registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n  }\n  when(mockConnection.submitWithAck(anyObject())).thenReturn(Observable.<Void>empty());\n  when(mockConnection.incoming()).thenReturn(Observable.never());\n  when(mockConnection.lifecycleObservable()).thenReturn(ReplaySubject.<Void>create());\n  when(mockReadTransportClient.connect()).thenReturn(Observable.just(mockConnection));\n  ClientChannelFactory clientChannelFactory=new ClientChannelFactoryImpl(mockWriteTransportClient,mockReadTransportClient,registry,1000,EurekaClientMetricFactory.clientMetrics());\n  InterestHandler interestHandler=new InterestHandlerImpl(registry,clientChannelFactory);\n  client=new EurekaClientImpl(interestHandler,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2173,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void before() throws Throwable {\n  interestAll=Interests.forFullRegistry();\n  interestDiscovery=Interests.forVips(SampleInstanceInfo.DiscoveryServer.build().getVipAddress());\n  interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n  discoveryRegistry=Arrays.asList(SampleChangeNotification.DiscoveryAdd.newNotification(),SampleChangeNotification.DiscoveryAdd.newNotification());\n  zuulRegistry=Arrays.asList(SampleChangeNotification.ZuulAdd.newNotification(),SampleChangeNotification.ZuulAdd.newNotification());\n  allRegistry=new ArrayList<>(discoveryRegistry);\n  allRegistry.addAll(zuulRegistry);\n  registry=new PreservableEurekaRegistry(new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics()),new BasicEurekaRegistryConfig(),EurekaRegistryMetricFactory.registryMetrics());\n  for (  ChangeNotification<InstanceInfo> notification : allRegistry) {\n    registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n  }\n  when(mockConnection.submitWithAck(anyObject())).thenReturn(Observable.<Void>empty());\n  when(mockConnection.incoming()).thenReturn(Observable.never());\n  when(mockConnection.lifecycleObservable()).thenReturn(ReplaySubject.<Void>create());\n  when(mockReadTransportClient.connect()).thenReturn(Observable.just(mockConnection));\n  ClientChannelFactory clientChannelFactory=new ClientChannelFactoryImpl(mockWriteTransportClient,mockReadTransportClient,registry,1000,EurekaClientMetricFactory.clientMetrics());\n  InterestHandler interestHandler=new InterestHandlerImpl(registry,clientChannelFactory);\n  client=new EurekaClientImpl(interestHandler,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 92
      },
      "nodeContext" : "registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "com.netflix.eureka2.registry.Observable<com.netflix.eureka2.registry.MultiSourcedDataHolder.Status>"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 89,
    "startColumnNumber" : 16,
    "endLineNumber" : 89,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}