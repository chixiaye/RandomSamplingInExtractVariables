{
  "id" : 9,
  "expression" : "newServerAcceptor",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/rpc/src/test/java/com/navercorp/pinpoint/rpc/client/ReconnectTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newServerAcceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 104,
      "startColumnNumber" : 39,
      "endLineNumber" : 104,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 57
      },
      "nodeContext" : "PinpointRPCTestUtils.close(newServerAcceptor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 58
      },
      "nodeContext" : "PinpointRPCTestUtils.close(newServerAcceptor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 103,
        "startColumnNumber" : 18,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  PinpointRPCTestUtils.close(newServerAcceptor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  PinpointClient client=clientFactory.connect(\"localhost\",bindPort);\n  client.addPinpointClientReconnectEventListener(new PinpointClientReconnectEventListener(){\n    @Override public void reconnectPerformed(    PinpointClient client){\n      reconnectPerformed.set(true);\n    }\n  }\n);\n  PinpointRPCTestUtils.close(serverAcceptor);\n  logger.info(\"server.close()---------------------------\");\n  assertClientDisconnected(client);\n  newServerAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE);\n  logger.info(\"bind server---------------------------\");\n  assertClientConnected(client);\n  logger.info(\"request server---------------------------\");\n  byte[] randomByte=TestByteUtils.createRandomByte(10);\n  byte[] response=PinpointRPCTestUtils.request(client,randomByte);\n  Assert.assertArrayEquals(randomByte,response);\n  PinpointRPCTestUtils.close(client);\n}\n  finally {\n  PinpointRPCTestUtils.close(newServerAcceptor);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1633,
        "startLineNumber" : 71,
        "startColumnNumber" : 69,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PinpointServerAcceptor serverAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE);\n  final AtomicBoolean reconnectPerformed=new AtomicBoolean(false);\n  PinpointServerAcceptor newServerAcceptor=null;\n  try {\n    PinpointClient client=clientFactory.connect(\"localhost\",bindPort);\n    client.addPinpointClientReconnectEventListener(new PinpointClientReconnectEventListener(){\n      @Override public void reconnectPerformed(      PinpointClient client){\n        reconnectPerformed.set(true);\n      }\n    }\n);\n    PinpointRPCTestUtils.close(serverAcceptor);\n    logger.info(\"server.close()---------------------------\");\n    assertClientDisconnected(client);\n    newServerAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE);\n    logger.info(\"bind server---------------------------\");\n    assertClientConnected(client);\n    logger.info(\"request server---------------------------\");\n    byte[] randomByte=TestByteUtils.createRandomByte(10);\n    byte[] response=PinpointRPCTestUtils.request(client,randomByte);\n    Assert.assertArrayEquals(randomByte,response);\n    PinpointRPCTestUtils.close(client);\n  }\n  finally {\n    PinpointRPCTestUtils.close(newServerAcceptor);\n  }\n  Assert.assertTrue(reconnectPerformed.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void reconnect() throws IOException, InterruptedException {\n  PinpointServerAcceptor serverAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE);\n  final AtomicBoolean reconnectPerformed=new AtomicBoolean(false);\n  PinpointServerAcceptor newServerAcceptor=null;\n  try {\n    PinpointClient client=clientFactory.connect(\"localhost\",bindPort);\n    client.addPinpointClientReconnectEventListener(new PinpointClientReconnectEventListener(){\n      @Override public void reconnectPerformed(      PinpointClient client){\n        reconnectPerformed.set(true);\n      }\n    }\n);\n    PinpointRPCTestUtils.close(serverAcceptor);\n    logger.info(\"server.close()---------------------------\");\n    assertClientDisconnected(client);\n    newServerAcceptor=PinpointRPCTestUtils.createPinpointServerFactory(bindPort,SimpleServerMessageListener.DUPLEX_ECHO_INSTANCE);\n    logger.info(\"bind server---------------------------\");\n    assertClientConnected(client);\n    logger.info(\"request server---------------------------\");\n    byte[] randomByte=TestByteUtils.createRandomByte(10);\n    byte[] response=PinpointRPCTestUtils.request(client,randomByte);\n    Assert.assertArrayEquals(randomByte,response);\n    PinpointRPCTestUtils.close(client);\n  }\n  finally {\n    PinpointRPCTestUtils.close(newServerAcceptor);\n  }\n  Assert.assertTrue(reconnectPerformed.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 58
      },
      "nodeContext" : "PinpointRPCTestUtils.close(newServerAcceptor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.rpc.server.PinpointServerAcceptor"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 104,
    "startColumnNumber" : 39,
    "endLineNumber" : 104,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}