{
  "id" : 223,
  "expression" : "\" UPPER(TABLE_NAME) LIKE ?\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/model/HANAStructureAssistant.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" UPPER(TABLE_NAME) LIKE ?\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 82,
      "startColumnNumber" : 67,
      "endLineNumber" : 82,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 94
      },
      "nodeContext" : "caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 94
      },
      "nodeContext" : "stmt+=caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 95
      },
      "nodeContext" : "stmt+=caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2303,
        "startLineNumber" : 80,
        "startColumnNumber" : 117,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String stmt=\"SELECT SCHEMA_NAME, TABLE_NAME, COMMENTS FROM SYS.TABLES WHERE\";\n  stmt+=caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\";\n  if (parentSchema != null)   stmt+=\" AND SCHEMA_NAME = ?\";\n  stmt+=\" ORDER BY SCHEMA_NAME, TABLE_NAME LIMIT \" + maxResults;\n  DBRProgressMonitor monitor=session.getProgressMonitor();\n  try (JDBCPreparedStatement dbStat=session.prepareStatement(stmt)){\n    dbStat.setString(1,caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n    if (parentSchema != null)     dbStat.setString(2,parentSchema.getName());\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      int numResults=maxResults;\n      while (dbResult.next() && numResults-- > 0) {\n        if (monitor.isCanceled())         break;\n        String schemaName=dbResult.getString(1);\n        String objectName=dbResult.getString(2);\n        String description=dbResult.getString(3);\n        GenericSchema schema=parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n        if (schema == null)         continue;\n        result.add(new AbstractObjectReference(objectName,schema,description,GenericTable.class,RelationalObjectType.TYPE_TABLE){\n          @Override public DBSObject resolveObject(          DBRProgressMonitor monitor) throws DBException {\n            GenericTableBase object=((GenericObjectContainer)getContainer()).getTable(monitor,getName());\n            if (object == null) {\n              throw new DBException(\"Can't find object '\" + getName() + \"' in '\"+ DBUtils.getFullQualifiedName(dataSource,getContainer())+ \"'\");\n            }\n            return object;\n          }\n        }\n);\n      }\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void findTablesByMask(JDBCSession session,GenericSchema parentSchema,String objectNameMask,boolean caseSensitive,int maxResults,List<DBSObjectReference> result) throws SQLException, DBException {\n  String stmt=\"SELECT SCHEMA_NAME, TABLE_NAME, COMMENTS FROM SYS.TABLES WHERE\";\n  stmt+=caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\";\n  if (parentSchema != null)   stmt+=\" AND SCHEMA_NAME = ?\";\n  stmt+=\" ORDER BY SCHEMA_NAME, TABLE_NAME LIMIT \" + maxResults;\n  DBRProgressMonitor monitor=session.getProgressMonitor();\n  try (JDBCPreparedStatement dbStat=session.prepareStatement(stmt)){\n    dbStat.setString(1,caseSensitive ? objectNameMask : objectNameMask.toUpperCase());\n    if (parentSchema != null)     dbStat.setString(2,parentSchema.getName());\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      int numResults=maxResults;\n      while (dbResult.next() && numResults-- > 0) {\n        if (monitor.isCanceled())         break;\n        String schemaName=dbResult.getString(1);\n        String objectName=dbResult.getString(2);\n        String description=dbResult.getString(3);\n        GenericSchema schema=parentSchema != null ? parentSchema : dataSource.getSchema(schemaName);\n        if (schema == null)         continue;\n        result.add(new AbstractObjectReference(objectName,schema,description,GenericTable.class,RelationalObjectType.TYPE_TABLE){\n          @Override public DBSObject resolveObject(          DBRProgressMonitor monitor) throws DBException {\n            GenericTableBase object=((GenericObjectContainer)getContainer()).getTable(monitor,getName());\n            if (object == null) {\n              throw new DBException(\"Can't find object '\" + getName() + \"' in '\"+ DBUtils.getFullQualifiedName(dataSource,getContainer())+ \"'\");\n            }\n            return object;\n          }\n        }\n);\n      }\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 95
      },
      "nodeContext" : "stmt+=caseSensitive ? \" TABLE_NAME LIKE ?\" : \" UPPER(TABLE_NAME) LIKE ?\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 82,
    "startColumnNumber" : 67,
    "endLineNumber" : 82,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}