{
  "id" : 492,
  "expression" : "session",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/TestServlet.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 35,
      "startColumnNumber" : 12,
      "endLineNumber" : 35,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 44
      },
      "nodeContext" : "session.setAttribute(key,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 45
      },
      "nodeContext" : "session.setAttribute(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 19,
        "startColumnNumber" : 48,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 45
      },
      "nodeContext" : "session.setAttribute(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 26,
        "endLineNumber" : 49,
        "endColumnNumber" : 51
      },
      "nodeContext" : "session.getAttribute(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 51
      },
      "nodeContext" : "attr=session.getAttribute(key)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Object attr=session.getAttribute(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 38,
        "startColumnNumber" : 54,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Object attr=session.getAttribute(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 62,
      "startColumnNumber" : 12,
      "endLineNumber" : 62,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 40
      },
      "nodeContext" : "session.removeAttribute(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 41
      },
      "nodeContext" : "session.removeAttribute(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 51,
        "startColumnNumber" : 56,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 41
      },
      "nodeContext" : "session.removeAttribute(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 63,
      "startColumnNumber" : 50,
      "endLineNumber" : 63,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 63,
        "startColumnNumber" : 50,
        "endLineNumber" : 63,
        "endColumnNumber" : 75
      },
      "nodeContext" : "session.getAttribute(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "String.valueOf(session.getAttribute(key))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "resp.getWriter().print(String.valueOf(session.getAttribute(key)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 78
      },
      "nodeContext" : "resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 51,
        "startColumnNumber" : 56,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 78
      },
      "nodeContext" : "resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 65,
      "startColumnNumber" : 12,
      "endLineNumber" : 65,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 32
      },
      "nodeContext" : "session.invalidate()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 33
      },
      "nodeContext" : "session.invalidate();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 64,
        "startColumnNumber" : 60,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 33
      },
      "nodeContext" : "session.invalidate();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 69,
      "startColumnNumber" : 12,
      "endLineNumber" : 69,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 32
      },
      "nodeContext" : "session.invalidate()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 33
      },
      "nodeContext" : "session.invalidate();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 68,
        "startColumnNumber" : 58,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 33
      },
      "nodeContext" : "session.invalidate();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  }, {
    "nodeContext" : "session",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 88,
      "startColumnNumber" : 12,
      "endLineNumber" : 88,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 44
      },
      "nodeContext" : "session.setAttribute(key,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "session.setAttribute(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 68,
        "startColumnNumber" : 58,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 293,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2726,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (req.getPathInfo().equals(\"/write\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/read\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  Object attr=session.getAttribute(key);\n  resp.getWriter().print(attr);\n}\n else if (req.getPathInfo().equals(\"/remove\")) {\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  for (  String param : params) {\n    String[] line=param.split(\"=\");\n    String keyParam=line[0];\n    if (\"key\".equals(keyParam)) {\n      key=line[1];\n    }\n  }\n  session.removeAttribute(key);\n  resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n}\n else if (req.getPathInfo().equals(\"/invalidate\")) {\n  session.invalidate();\n  resp.getWriter().print(\"OK\");\n}\n else if (req.getPathInfo().equals(\"/recreate\")) {\n  session.invalidate();\n  session=req.getSession();\n  String[] params=req.getQueryString().split(\"&\");\n  String key=null;\n  String value=null;\n  for (  String param : params) {\n    String[] paramLine=param.split(\"=\");\n    String keyParam=paramLine[0];\n    String valueParam=paramLine[1];\n    if (\"key\".equals(keyParam)) {\n      key=valueParam;\n    }\n    if (\"value\".equals(keyParam)) {\n      value=valueParam;\n    }\n  }\n  session.setAttribute(key,value);\n  resp.getWriter().print(\"OK\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 16,
        "startColumnNumber" : 112,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 402,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doGet(HttpServletRequest req,HttpServletResponse resp) throws ServletException, IOException {\n  HttpSession session=req.getSession();\n  if (req.getPathInfo().equals(\"/write\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/read\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    Object attr=session.getAttribute(key);\n    resp.getWriter().print(attr);\n  }\n else   if (req.getPathInfo().equals(\"/remove\")) {\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    for (    String param : params) {\n      String[] line=param.split(\"=\");\n      String keyParam=line[0];\n      if (\"key\".equals(keyParam)) {\n        key=line[1];\n      }\n    }\n    session.removeAttribute(key);\n    resp.getWriter().print(String.valueOf(session.getAttribute(key)));\n  }\n else   if (req.getPathInfo().equals(\"/invalidate\")) {\n    session.invalidate();\n    resp.getWriter().print(\"OK\");\n  }\n else   if (req.getPathInfo().equals(\"/recreate\")) {\n    session.invalidate();\n    session=req.getSession();\n    String[] params=req.getQueryString().split(\"&\");\n    String key=null;\n    String value=null;\n    for (    String param : params) {\n      String[] paramLine=param.split(\"=\");\n      String keyParam=paramLine[0];\n      String valueParam=paramLine[1];\n      if (\"key\".equals(keyParam)) {\n        key=valueParam;\n      }\n      if (\"value\".equals(keyParam)) {\n        value=valueParam;\n      }\n    }\n    session.setAttribute(key,value);\n    resp.getWriter().print(\"OK\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "session.setAttribute(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.redisson.tomcat.HttpSession"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 35,
    "startColumnNumber" : 12,
    "endLineNumber" : 35,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 33
  }, {
    "charLength" : 7,
    "startLineNumber" : 62,
    "startColumnNumber" : 12,
    "endLineNumber" : 62,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 63,
    "startColumnNumber" : 50,
    "endLineNumber" : 63,
    "endColumnNumber" : 57
  }, {
    "charLength" : 7,
    "startLineNumber" : 65,
    "startColumnNumber" : 12,
    "endLineNumber" : 65,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 69,
    "startColumnNumber" : 12,
    "endLineNumber" : 69,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 88,
    "startColumnNumber" : 12,
    "endLineNumber" : 88,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}