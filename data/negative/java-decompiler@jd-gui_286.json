{
  "id" : 286,
  "expression" : "new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon())",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/treenode/AbstractTypeFileTreeNodeFactoryProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 133,
      "startColumnNumber" : 63,
      "endLineNumber" : 133,
      "endColumnNumber" : 137
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 133,
        "endColumnNumber" : 147
      },
      "nodeContext" : "new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 133,
        "startColumnNumber" : 24,
        "endLineNumber" : 133,
        "endColumnNumber" : 148
      },
      "nodeContext" : "add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 133,
        "startColumnNumber" : 24,
        "endLineNumber" : 133,
        "endColumnNumber" : 149
      },
      "nodeContext" : "add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 132,
        "startColumnNumber" : 57,
        "endLineNumber" : 134,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 132,
        "startColumnNumber" : 20,
        "endLineNumber" : 134,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Type innerType : innerTypeList) {\n  add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 128,
        "startColumnNumber" : 40,
        "endLineNumber" : 135,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n  innerTypeList.sort(TYPE_COMPARATOR);\n  for (  Type innerType : innerTypeList) {\n    add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 135,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (innerTypes != null) {\n  ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n  innerTypeList.sort(TYPE_COMPARATOR);\n  for (  Type innerType : innerTypeList) {\n    add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2463,
        "startLineNumber" : 120,
        "startColumnNumber" : 30,
        "endLineNumber" : 176,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  removeAllChildren();\n  String typeName=type.getName();\n  Collection<Type> innerTypes=type.getInnerTypes();\n  if (innerTypes != null) {\n    ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n    innerTypeList.sort(TYPE_COMPARATOR);\n    for (    Type innerType : innerTypeList) {\n      add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n    }\n  }\n  Collection<Type.Field> fields=type.getFields();\n  if (fields != null) {\n    ArrayList<FieldOrMethodBean> beans=new ArrayList<>(fields.size());\n    for (    Type.Field field : fields) {\n      String fragment=typeName + '-' + field.getName()+ '-'+ field.getDescriptor();\n      beans.add(new FieldOrMethodBean(fragment,field.getDisplayName(),field.getIcon()));\n    }\n    beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n    for (    FieldOrMethodBean bean : beans) {\n      add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n    }\n  }\n  Collection<Type.Method> methods=type.getMethods();\n  if (methods != null) {\n    ArrayList<FieldOrMethodBean> beans=new ArrayList<>();\n    for (    Type.Method method : methods) {\n      if (!method.getName().equals(\"<clinit>\")) {\n        String fragment=typeName + '-' + method.getName()+ '-'+ method.getDescriptor();\n        beans.add(new FieldOrMethodBean(fragment,method.getDisplayName(),method.getIcon()));\n      }\n    }\n    beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n    for (    FieldOrMethodBean bean : beans) {\n      add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n    }\n  }\n  initialized=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 176,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!initialized) {\n  removeAllChildren();\n  String typeName=type.getName();\n  Collection<Type> innerTypes=type.getInnerTypes();\n  if (innerTypes != null) {\n    ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n    innerTypeList.sort(TYPE_COMPARATOR);\n    for (    Type innerType : innerTypeList) {\n      add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n    }\n  }\n  Collection<Type.Field> fields=type.getFields();\n  if (fields != null) {\n    ArrayList<FieldOrMethodBean> beans=new ArrayList<>(fields.size());\n    for (    Type.Field field : fields) {\n      String fragment=typeName + '-' + field.getName()+ '-'+ field.getDescriptor();\n      beans.add(new FieldOrMethodBean(fragment,field.getDisplayName(),field.getIcon()));\n    }\n    beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n    for (    FieldOrMethodBean bean : beans) {\n      add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n    }\n  }\n  Collection<Type.Method> methods=type.getMethods();\n  if (methods != null) {\n    ArrayList<FieldOrMethodBean> beans=new ArrayList<>();\n    for (    Type.Method method : methods) {\n      if (!method.getName().equals(\"<clinit>\")) {\n        String fragment=typeName + '-' + method.getName()+ '-'+ method.getDescriptor();\n        beans.add(new FieldOrMethodBean(fragment,method.getDisplayName(),method.getIcon()));\n      }\n    }\n    beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n    for (    FieldOrMethodBean bean : beans) {\n      add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n    }\n  }\n  initialized=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 290,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 119,
        "startColumnNumber" : 46,
        "endLineNumber" : 177,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!initialized) {\n    removeAllChildren();\n    String typeName=type.getName();\n    Collection<Type> innerTypes=type.getInnerTypes();\n    if (innerTypes != null) {\n      ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n      innerTypeList.sort(TYPE_COMPARATOR);\n      for (      Type innerType : innerTypeList) {\n        add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n      }\n    }\n    Collection<Type.Field> fields=type.getFields();\n    if (fields != null) {\n      ArrayList<FieldOrMethodBean> beans=new ArrayList<>(fields.size());\n      for (      Type.Field field : fields) {\n        String fragment=typeName + '-' + field.getName()+ '-'+ field.getDescriptor();\n        beans.add(new FieldOrMethodBean(fragment,field.getDisplayName(),field.getIcon()));\n      }\n      beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n      for (      FieldOrMethodBean bean : beans) {\n        add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n      }\n    }\n    Collection<Type.Method> methods=type.getMethods();\n    if (methods != null) {\n      ArrayList<FieldOrMethodBean> beans=new ArrayList<>();\n      for (      Type.Method method : methods) {\n        if (!method.getName().equals(\"<clinit>\")) {\n          String fragment=typeName + '-' + method.getName()+ '-'+ method.getDescriptor();\n          beans.add(new FieldOrMethodBean(fragment,method.getDisplayName(),method.getIcon()));\n        }\n      }\n      beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n      for (      FieldOrMethodBean bean : beans) {\n        add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n      }\n    }\n    initialized=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2564,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void populateTreeNode(API api){\n  if (!initialized) {\n    removeAllChildren();\n    String typeName=type.getName();\n    Collection<Type> innerTypes=type.getInnerTypes();\n    if (innerTypes != null) {\n      ArrayList<Type> innerTypeList=new ArrayList<>(innerTypes);\n      innerTypeList.sort(TYPE_COMPARATOR);\n      for (      Type innerType : innerTypeList) {\n        add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n      }\n    }\n    Collection<Type.Field> fields=type.getFields();\n    if (fields != null) {\n      ArrayList<FieldOrMethodBean> beans=new ArrayList<>(fields.size());\n      for (      Type.Field field : fields) {\n        String fragment=typeName + '-' + field.getName()+ '-'+ field.getDescriptor();\n        beans.add(new FieldOrMethodBean(fragment,field.getDisplayName(),field.getIcon()));\n      }\n      beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n      for (      FieldOrMethodBean bean : beans) {\n        add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n      }\n    }\n    Collection<Type.Method> methods=type.getMethods();\n    if (methods != null) {\n      ArrayList<FieldOrMethodBean> beans=new ArrayList<>();\n      for (      Type.Method method : methods) {\n        if (!method.getName().equals(\"<clinit>\")) {\n          String fragment=typeName + '-' + method.getName()+ '-'+ method.getDescriptor();\n          beans.add(new FieldOrMethodBean(fragment,method.getDisplayName(),method.getIcon()));\n        }\n      }\n      beans.sort(FIELD_OR_METHOD_BEAN_COMPARATOR);\n      for (      FieldOrMethodBean bean : beans) {\n        add(new FieldOrMethodTreeNode(entry,bean.fragment,new TreeNodeBean(bean.label,bean.icon),factory));\n      }\n    }\n    initialized=true;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 133,
        "startColumnNumber" : 24,
        "endLineNumber" : 133,
        "endColumnNumber" : 149
      },
      "nodeContext" : "add(new TypeTreeNode(entry,innerType,new TreeNodeBean(innerType.getDisplayInnerTypeName(),innerType.getIcon()),factory));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "org.jd.gui.view.data.TreeNodeBean"
  } ],
  "positionList" : [ {
    "charLength" : 74,
    "startLineNumber" : 133,
    "startColumnNumber" : 63,
    "endLineNumber" : 133,
    "endColumnNumber" : 137
  } ],
  "layoutRelationDataList" : [ ]
}