{
  "id" : 38,
  "expression" : "\"A List's hashCode() should be computed from those of its elements.\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-testlib/src/com/google/common/collect/testing/testers/ListHashCodeTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"A List's hashCode() should be computed from those of its elements.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 39,
      "startColumnNumber" : 8,
      "endLineNumber" : 39,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertEquals(\"A List's hashCode() should be computed from those of its elements.\",expectedHashCode,getList().hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertEquals(\"A List's hashCode() should be computed from those of its elements.\",expectedHashCode,getList().hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 33,
        "startColumnNumber" : 29,
        "endLineNumber" : 42,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int expectedHashCode=1;\n  for (  E element : getOrderedElements()) {\n    expectedHashCode=31 * expectedHashCode + ((element == null) ? 0 : element.hashCode());\n  }\n  assertEquals(\"A List's hashCode() should be computed from those of its elements.\",expectedHashCode,getList().hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testHashCode(){\n  int expectedHashCode=1;\n  for (  E element : getOrderedElements()) {\n    expectedHashCode=31 * expectedHashCode + ((element == null) ? 0 : element.hashCode());\n  }\n  assertEquals(\"A List's hashCode() should be computed from those of its elements.\",expectedHashCode,getList().hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertEquals(\"A List's hashCode() should be computed from those of its elements.\",expectedHashCode,getList().hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 39,
    "startColumnNumber" : 8,
    "endLineNumber" : 39,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}