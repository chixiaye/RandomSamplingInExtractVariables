{
  "id" : 14,
  "expression" : "new ArticulationPointsAdjacencyList(graph,n)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/ArticulationPointsAdjacencyListTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArticulationPointsAdjacencyList(graph,n)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 41,
      "startColumnNumber" : 45,
      "endLineNumber" : 41,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 41,
        "startColumnNumber" : 36,
        "endLineNumber" : 41,
        "endColumnNumber" : 90
      },
      "nodeContext" : "solver=new ArticulationPointsAdjacencyList(graph,n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ArticulationPointsAdjacencyList solver=new ArticulationPointsAdjacencyList(graph,n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 25,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=12;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,1,0);\n  addEdge(graph,0,2);\n  addEdge(graph,2,5);\n  addEdge(graph,5,6);\n  addEdge(graph,5,11);\n  addEdge(graph,5,4);\n  addEdge(graph,4,10);\n  addEdge(graph,4,3);\n  addEdge(graph,3,7);\n  addEdge(graph,7,8);\n  addEdge(graph,7,9);\n  ArticulationPointsAdjacencyList solver=new ArticulationPointsAdjacencyList(graph,n);\n  boolean[] actual=solver.findArticulationPoints();\n  boolean[] expected=new boolean[n];\n  expected[0]=expected[2]=expected[5]=true;\n  expected[4]=expected[3]=expected[7]=true;\n  assertThat(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTreeCase(){\n  int n=12;\n  List<List<Integer>> graph=createGraph(n);\n  addEdge(graph,1,0);\n  addEdge(graph,0,2);\n  addEdge(graph,2,5);\n  addEdge(graph,5,6);\n  addEdge(graph,5,11);\n  addEdge(graph,5,4);\n  addEdge(graph,4,10);\n  addEdge(graph,4,3);\n  addEdge(graph,3,7);\n  addEdge(graph,7,8);\n  addEdge(graph,7,9);\n  ArticulationPointsAdjacencyList solver=new ArticulationPointsAdjacencyList(graph,n);\n  boolean[] actual=solver.findArticulationPoints();\n  boolean[] expected=new boolean[n];\n  expected[0]=expected[2]=expected[5]=true;\n  expected[4]=expected[3]=expected[7]=true;\n  assertThat(actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ArticulationPointsAdjacencyList solver=new ArticulationPointsAdjacencyList(graph,n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 41,
    "startColumnNumber" : 45,
    "endLineNumber" : 41,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}