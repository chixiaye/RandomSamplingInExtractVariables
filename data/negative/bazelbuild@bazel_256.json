{
  "id" : 256,
  "expression" : "\"none\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/WerrorCustomOption.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"none\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 79,
      "startColumnNumber" : 52,
      "endLineNumber" : 79,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 79,
        "startColumnNumber" : 41,
        "endLineNumber" : 79,
        "endColumnNumber" : 59
      },
      "nodeContext" : "arg.equals(\"none\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 19,
        "endLineNumber" : 79,
        "endColumnNumber" : 59
      },
      "nodeContext" : "arg.equals(\"-all\") || arg.equals(\"none\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 79,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n  werrors.clear();\n  werrors.put(\"none\",true);\n  for (  String errorWarning : warningsAsErrorsDefault) {\n    werrors.put(errorWarning,true);\n  }\n}\n else if (arg.startsWith(\"-\")) {\n  String warning=arg.substring(1);\n  if (!warningsAsErrorsDefault.contains(warning)) {\n    werrors.put(warning,false);\n  }\n}\n else {\n  String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n  werrors.put(warning,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n  werrors.clear();\n  werrors.put(\"all\",true);\n}\n else if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n  werrors.clear();\n  werrors.put(\"none\",true);\n  for (  String errorWarning : warningsAsErrorsDefault) {\n    werrors.put(errorWarning,true);\n  }\n}\n else if (arg.startsWith(\"-\")) {\n  String warning=arg.substring(1);\n  if (!warningsAsErrorsDefault.contains(warning)) {\n    werrors.put(warning,false);\n  }\n}\n else {\n  String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n  werrors.put(warning,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 74,
        "startColumnNumber" : 81,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n    werrors.clear();\n    werrors.put(\"all\",true);\n  }\n else   if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n    werrors.clear();\n    werrors.put(\"none\",true);\n    for (    String errorWarning : warningsAsErrorsDefault) {\n      werrors.put(errorWarning,true);\n    }\n  }\n else   if (arg.startsWith(\"-\")) {\n    String warning=arg.substring(1);\n    if (!warningsAsErrorsDefault.contains(warning)) {\n      werrors.put(warning,false);\n    }\n  }\n else {\n    String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n    werrors.put(warning,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n  if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n    werrors.clear();\n    werrors.put(\"all\",true);\n  }\n else   if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n    werrors.clear();\n    werrors.put(\"none\",true);\n    for (    String errorWarning : warningsAsErrorsDefault) {\n      werrors.put(errorWarning,true);\n    }\n  }\n else   if (arg.startsWith(\"-\")) {\n    String warning=arg.substring(1);\n    if (!warningsAsErrorsDefault.contains(warning)) {\n      werrors.put(warning,false);\n    }\n  }\n else {\n    String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n    werrors.put(warning,true);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 72,
        "startColumnNumber" : 33,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(flag.startsWith(WERROR),flag);\n  for (  String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n    if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n      werrors.clear();\n      werrors.put(\"all\",true);\n    }\n else     if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n      werrors.clear();\n      werrors.put(\"none\",true);\n      for (      String errorWarning : warningsAsErrorsDefault) {\n        werrors.put(errorWarning,true);\n      }\n    }\n else     if (arg.startsWith(\"-\")) {\n      String warning=arg.substring(1);\n      if (!warningsAsErrorsDefault.contains(warning)) {\n        werrors.put(warning,false);\n      }\n    }\n else {\n      String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n      werrors.put(warning,true);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Builder process(String flag){\n  checkArgument(flag.startsWith(WERROR),flag);\n  for (  String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n    if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n      werrors.clear();\n      werrors.put(\"all\",true);\n    }\n else     if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n      werrors.clear();\n      werrors.put(\"none\",true);\n      for (      String errorWarning : warningsAsErrorsDefault) {\n        werrors.put(errorWarning,true);\n      }\n    }\n else     if (arg.startsWith(\"-\")) {\n      String warning=arg.substring(1);\n      if (!warningsAsErrorsDefault.contains(warning)) {\n        werrors.put(warning,false);\n      }\n    }\n else {\n      String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n      werrors.put(warning,true);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 19,
        "endLineNumber" : 79,
        "endColumnNumber" : 59
      },
      "nodeContext" : "arg.equals(\"-all\") || arg.equals(\"none\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"none\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 81,
      "startColumnNumber" : 22,
      "endLineNumber" : 81,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 35
      },
      "nodeContext" : "werrors.put(\"none\",true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 36
      },
      "nodeContext" : "werrors.put(\"none\",true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 79,
        "startColumnNumber" : 61,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  werrors.clear();\n  werrors.put(\"none\",true);\n  for (  String errorWarning : warningsAsErrorsDefault) {\n    werrors.put(errorWarning,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 79,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n  werrors.clear();\n  werrors.put(\"none\",true);\n  for (  String errorWarning : warningsAsErrorsDefault) {\n    werrors.put(errorWarning,true);\n  }\n}\n else if (arg.startsWith(\"-\")) {\n  String warning=arg.substring(1);\n  if (!warningsAsErrorsDefault.contains(warning)) {\n    werrors.put(warning,false);\n  }\n}\n else {\n  String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n  werrors.put(warning,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n  werrors.clear();\n  werrors.put(\"all\",true);\n}\n else if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n  werrors.clear();\n  werrors.put(\"none\",true);\n  for (  String errorWarning : warningsAsErrorsDefault) {\n    werrors.put(errorWarning,true);\n  }\n}\n else if (arg.startsWith(\"-\")) {\n  String warning=arg.substring(1);\n  if (!warningsAsErrorsDefault.contains(warning)) {\n    werrors.put(warning,false);\n  }\n}\n else {\n  String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n  werrors.put(warning,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 74,
        "startColumnNumber" : 81,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n    werrors.clear();\n    werrors.put(\"all\",true);\n  }\n else   if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n    werrors.clear();\n    werrors.put(\"none\",true);\n    for (    String errorWarning : warningsAsErrorsDefault) {\n      werrors.put(errorWarning,true);\n    }\n  }\n else   if (arg.startsWith(\"-\")) {\n    String warning=arg.substring(1);\n    if (!warningsAsErrorsDefault.contains(warning)) {\n      werrors.put(warning,false);\n    }\n  }\n else {\n    String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n    werrors.put(warning,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n  if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n    werrors.clear();\n    werrors.put(\"all\",true);\n  }\n else   if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n    werrors.clear();\n    werrors.put(\"none\",true);\n    for (    String errorWarning : warningsAsErrorsDefault) {\n      werrors.put(errorWarning,true);\n    }\n  }\n else   if (arg.startsWith(\"-\")) {\n    String warning=arg.substring(1);\n    if (!warningsAsErrorsDefault.contains(warning)) {\n      werrors.put(warning,false);\n    }\n  }\n else {\n    String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n    werrors.put(warning,true);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 72,
        "startColumnNumber" : 33,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkArgument(flag.startsWith(WERROR),flag);\n  for (  String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n    if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n      werrors.clear();\n      werrors.put(\"all\",true);\n    }\n else     if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n      werrors.clear();\n      werrors.put(\"none\",true);\n      for (      String errorWarning : warningsAsErrorsDefault) {\n        werrors.put(errorWarning,true);\n      }\n    }\n else     if (arg.startsWith(\"-\")) {\n      String warning=arg.substring(1);\n      if (!warningsAsErrorsDefault.contains(warning)) {\n        werrors.put(warning,false);\n      }\n    }\n else {\n      String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n      werrors.put(warning,true);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Builder process(String flag){\n  checkArgument(flag.startsWith(WERROR),flag);\n  for (  String arg : Splitter.on(',').split(flag.substring(WERROR.length()))) {\n    if (arg.equals(\"+all\") || arg.equals(\"all\")) {\n      werrors.clear();\n      werrors.put(\"all\",true);\n    }\n else     if (arg.equals(\"-all\") || arg.equals(\"none\")) {\n      werrors.clear();\n      werrors.put(\"none\",true);\n      for (      String errorWarning : warningsAsErrorsDefault) {\n        werrors.put(errorWarning,true);\n      }\n    }\n else     if (arg.startsWith(\"-\")) {\n      String warning=arg.substring(1);\n      if (!warningsAsErrorsDefault.contains(warning)) {\n        werrors.put(warning,false);\n      }\n    }\n else {\n      String warning=arg.startsWith(\"+\") ? arg.substring(1) : arg;\n      werrors.put(warning,true);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 36
      },
      "nodeContext" : "werrors.put(\"none\",true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 79,
    "startColumnNumber" : 52,
    "endLineNumber" : 79,
    "endColumnNumber" : 58
  }, {
    "charLength" : 6,
    "startLineNumber" : 81,
    "startColumnNumber" : 22,
    "endLineNumber" : 81,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}