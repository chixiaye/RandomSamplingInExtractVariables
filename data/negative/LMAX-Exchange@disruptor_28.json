{
  "id" : 28,
  "expression" : "3L",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/RingBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 328,
      "startColumnNumber" : 61,
      "endLineNumber" : 328,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 328,
        "startColumnNumber" : 58,
        "endLineNumber" : 328,
        "endColumnNumber" : 64
      },
      "nodeContext" : "is(3L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(ringBuffer.getMinimumGatingSequence(),is(3L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(ringBuffer.getMinimumGatingSequence(),is(3L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 313,
        "startColumnNumber" : 4,
        "endLineNumber" : 331,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RingBuffer<Object[]> ringBuffer=RingBuffer.createSingleProducer(new ArrayFactory(1),16);\n  Sequence sequenceThree=new Sequence(-1);\n  Sequence sequenceSeven=new Sequence(-1);\n  ringBuffer.addGatingSequences(sequenceThree,sequenceSeven);\n  for (int i=0; i < 10; i++) {\n    ringBuffer.publish(ringBuffer.next());\n  }\n  sequenceThree.set(3);\n  sequenceSeven.set(7);\n  assertThat(ringBuffer.getMinimumGatingSequence(),is(3L));\n  assertTrue(ringBuffer.removeGatingSequence(sequenceThree));\n  assertThat(ringBuffer.getMinimumGatingSequence(),is(7L));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 311,
        "startColumnNumber" : 4,
        "endLineNumber" : 331,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAddAndRemoveSequences() throws Exception {\n  RingBuffer<Object[]> ringBuffer=RingBuffer.createSingleProducer(new ArrayFactory(1),16);\n  Sequence sequenceThree=new Sequence(-1);\n  Sequence sequenceSeven=new Sequence(-1);\n  ringBuffer.addGatingSequences(sequenceThree,sequenceSeven);\n  for (int i=0; i < 10; i++) {\n    ringBuffer.publish(ringBuffer.next());\n  }\n  sequenceThree.set(3);\n  sequenceSeven.set(7);\n  assertThat(ringBuffer.getMinimumGatingSequence(),is(3L));\n  assertTrue(ringBuffer.removeGatingSequence(sequenceThree));\n  assertThat(ringBuffer.getMinimumGatingSequence(),is(7L));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(ringBuffer.getMinimumGatingSequence(),is(3L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 328,
    "startColumnNumber" : 61,
    "endLineNumber" : 328,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}