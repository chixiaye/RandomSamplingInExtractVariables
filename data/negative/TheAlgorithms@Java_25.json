{
  "id" : 25,
  "expression" : "num",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Conversions/DecimalToAnyBase.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "num",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 12,
      "endLineNumber" : 60,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 20
      },
      "nodeContext" : "num >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "num >= 0 && num <= 9",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "if (num >= 0 && num <= 9) return (char)(num + '0');\n else return (char)(num - 10 + 'A');\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method produces character value of the input integer and returns it\n * @param num integer of which we need the character value of\n * @return character value of input integer\n */\npublic static char reVal(int num){\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "num >= 0 && num <= 9",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "num",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 24,
      "endLineNumber" : 60,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "num <= 9",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "num >= 0 && num <= 9",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "if (num >= 0 && num <= 9) return (char)(num + '0');\n else return (char)(num - 10 + 'A');\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method produces character value of the input integer and returns it\n * @param num integer of which we need the character value of\n * @return character value of input integer\n */\npublic static char reVal(int num){\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 32
      },
      "nodeContext" : "num >= 0 && num <= 9",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "num",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 61,
      "startColumnNumber" : 26,
      "endLineNumber" : 61,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 26,
        "endLineNumber" : 61,
        "endColumnNumber" : 35
      },
      "nodeContext" : "num + '0'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "(num + '0')",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 36
      },
      "nodeContext" : "(char)(num + '0')",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return (char)(num + '0');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "if (num >= 0 && num <= 9) return (char)(num + '0');\n else return (char)(num - 10 + 'A');\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method produces character value of the input integer and returns it\n * @param num integer of which we need the character value of\n * @return character value of input integer\n */\npublic static char reVal(int num){\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return (char)(num + '0');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "num",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 26,
      "endLineNumber" : 63,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 63,
        "startColumnNumber" : 26,
        "endLineNumber" : 63,
        "endColumnNumber" : 34
      },
      "nodeContext" : "num - 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 63,
        "startColumnNumber" : 26,
        "endLineNumber" : 63,
        "endColumnNumber" : 40
      },
      "nodeContext" : "num - 10 + 'A'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 63,
        "startColumnNumber" : 25,
        "endLineNumber" : 63,
        "endColumnNumber" : 41
      },
      "nodeContext" : "(num - 10 + 'A')",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 63,
        "startColumnNumber" : 19,
        "endLineNumber" : 63,
        "endColumnNumber" : 41
      },
      "nodeContext" : "(char)(num - 10 + 'A')",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return (char)(num - 10 + 'A');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "if (num >= 0 && num <= 9) return (char)(num + '0');\n else return (char)(num - 10 + 'A');\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method produces character value of the input integer and returns it\n * @param num integer of which we need the character value of\n * @return character value of input integer\n */\npublic static char reVal(int num){\n  if (num >= 0 && num <= 9)   return (char)(num + '0');\n else   return (char)(num - 10 + 'A');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return (char)(num - 10 + 'A');\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 12,
    "endLineNumber" : 60,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 24,
    "endLineNumber" : 60,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 61,
    "startColumnNumber" : 26,
    "endLineNumber" : 61,
    "endColumnNumber" : 29
  }, {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 26,
    "endLineNumber" : 63,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}