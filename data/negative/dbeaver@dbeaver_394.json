{
  "id" : 394,
  "expression" : "node == refreshed || node.isChildOf(refreshed)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/actions/NavigatorHandlerRefresh.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node == refreshed || node.isChildOf(refreshed)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 119,
      "startColumnNumber" : 32,
      "endLineNumber" : 119,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 119,
        "startColumnNumber" : 28,
        "endLineNumber" : 122,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (node == refreshed || node.isChildOf(refreshed)) {\n  skip=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 118,
        "startColumnNumber" : 63,
        "endLineNumber" : 123,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (node == refreshed || node.isChildOf(refreshed)) {\n    skip=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 123,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (DBNNode refreshed : refreshedSet) {\n  if (node == refreshed || node.isChildOf(refreshed)) {\n    skip=true;\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 116,
        "startColumnNumber" : 49,
        "endLineNumber" : 127,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  boolean skip=false;\n  for (  DBNNode refreshed : refreshedSet) {\n    if (node == refreshed || node.isChildOf(refreshed)) {\n      skip=true;\n      break;\n    }\n  }\n  if (skip) {\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!refreshedSet.isEmpty()) {\n  boolean skip=false;\n  for (  DBNNode refreshed : refreshedSet) {\n    if (node == refreshed || node.isChildOf(refreshed)) {\n      skip=true;\n      break;\n    }\n  }\n  if (skip) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2395,
        "startLineNumber" : 107,
        "startColumnNumber" : 52,
        "endLineNumber" : 156,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (node.isDisposed() || node.isLocked()) {\n    continue;\n  }\n  if (monitor.isCanceled()) {\n    break;\n  }\n  if (!refreshedSet.isEmpty()) {\n    boolean skip=false;\n    for (    DBNNode refreshed : refreshedSet) {\n      if (node == refreshed || node.isChildOf(refreshed)) {\n        skip=true;\n        break;\n      }\n    }\n    if (skip) {\n      continue;\n    }\n  }\n  if (node instanceof DBNDatabaseFolder && !(node.getParentNode() instanceof DBNDatabaseFolder) && node.getParentNode() instanceof DBNDatabaseNode) {\n    node=node.getParentNode();\n  }\n  setName(\"Refresh '\" + node.getNodeName() + \"'...\");\n  try {\n    DBNNode refreshed=node.refreshNode(monitor,DBNEvent.FORCE_REFRESH);\n    if (refreshed != null) {\n      refreshedSet.add(refreshed);\n    }\n  }\n catch (  Throwable ex) {\n    if (node instanceof DBNDataSource) {\n      try {\n        log.info(\"Unable to refresh datasource, disconnecting\");\n        ((DBNDataSource)node).getDataSourceContainer().disconnect(monitor);\n      }\n catch (      DBException e) {\n        log.warn(\"Unable to disconnect from datasource\");\n      }\n    }\n    DBWorkbench.getPlatformUI().showError(\"Refresh\",\"Error refreshing node\",ex);\n  }\n  monitor.worked(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2431,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 156,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (DBNNode node : refreshObjects) {\n  if (node.isDisposed() || node.isLocked()) {\n    continue;\n  }\n  if (monitor.isCanceled()) {\n    break;\n  }\n  if (!refreshedSet.isEmpty()) {\n    boolean skip=false;\n    for (    DBNNode refreshed : refreshedSet) {\n      if (node == refreshed || node.isChildOf(refreshed)) {\n        skip=true;\n        break;\n      }\n    }\n    if (skip) {\n      continue;\n    }\n  }\n  if (node instanceof DBNDatabaseFolder && !(node.getParentNode() instanceof DBNDatabaseFolder) && node.getParentNode() instanceof DBNDatabaseNode) {\n    node=node.getParentNode();\n  }\n  setName(\"Refresh '\" + node.getNodeName() + \"'...\");\n  try {\n    DBNNode refreshed=node.refreshNode(monitor,DBNEvent.FORCE_REFRESH);\n    if (refreshed != null) {\n      refreshedSet.add(refreshed);\n    }\n  }\n catch (  Throwable ex) {\n    if (node instanceof DBNDataSource) {\n      try {\n        log.info(\"Unable to refresh datasource, disconnecting\");\n        ((DBNDataSource)node).getDataSourceContainer().disconnect(monitor);\n      }\n catch (      DBException e) {\n        log.warn(\"Unable to disconnect from datasource\");\n      }\n    }\n    DBWorkbench.getPlatformUI().showError(\"Refresh\",\"Error refreshing node\",ex);\n  }\n  monitor.worked(1);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 175,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2674,
        "startLineNumber" : 104,
        "startColumnNumber" : 62,
        "endLineNumber" : 159,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  monitor.beginTask(\"Refresh objects\",refreshObjects.size());\n  Set<DBNNode> refreshedSet=new HashSet<>();\n  for (  DBNNode node : refreshObjects) {\n    if (node.isDisposed() || node.isLocked()) {\n      continue;\n    }\n    if (monitor.isCanceled()) {\n      break;\n    }\n    if (!refreshedSet.isEmpty()) {\n      boolean skip=false;\n      for (      DBNNode refreshed : refreshedSet) {\n        if (node == refreshed || node.isChildOf(refreshed)) {\n          skip=true;\n          break;\n        }\n      }\n      if (skip) {\n        continue;\n      }\n    }\n    if (node instanceof DBNDatabaseFolder && !(node.getParentNode() instanceof DBNDatabaseFolder) && node.getParentNode() instanceof DBNDatabaseNode) {\n      node=node.getParentNode();\n    }\n    setName(\"Refresh '\" + node.getNodeName() + \"'...\");\n    try {\n      DBNNode refreshed=node.refreshNode(monitor,DBNEvent.FORCE_REFRESH);\n      if (refreshed != null) {\n        refreshedSet.add(refreshed);\n      }\n    }\n catch (    Throwable ex) {\n      if (node instanceof DBNDataSource) {\n        try {\n          log.info(\"Unable to refresh datasource, disconnecting\");\n          ((DBNDataSource)node).getDataSourceContainer().disconnect(monitor);\n        }\n catch (        DBException e) {\n          log.warn(\"Unable to disconnect from datasource\");\n        }\n      }\n      DBWorkbench.getPlatformUI().showError(\"Refresh\",\"Error refreshing node\",ex);\n    }\n    monitor.worked(1);\n  }\n  monitor.done();\n  return Status.OK_STATUS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override protected IStatus run(DBRProgressMonitor monitor){\n  monitor.beginTask(\"Refresh objects\",refreshObjects.size());\n  Set<DBNNode> refreshedSet=new HashSet<>();\n  for (  DBNNode node : refreshObjects) {\n    if (node.isDisposed() || node.isLocked()) {\n      continue;\n    }\n    if (monitor.isCanceled()) {\n      break;\n    }\n    if (!refreshedSet.isEmpty()) {\n      boolean skip=false;\n      for (      DBNNode refreshed : refreshedSet) {\n        if (node == refreshed || node.isChildOf(refreshed)) {\n          skip=true;\n          break;\n        }\n      }\n      if (skip) {\n        continue;\n      }\n    }\n    if (node instanceof DBNDatabaseFolder && !(node.getParentNode() instanceof DBNDatabaseFolder) && node.getParentNode() instanceof DBNDatabaseNode) {\n      node=node.getParentNode();\n    }\n    setName(\"Refresh '\" + node.getNodeName() + \"'...\");\n    try {\n      DBNNode refreshed=node.refreshNode(monitor,DBNEvent.FORCE_REFRESH);\n      if (refreshed != null) {\n        refreshedSet.add(refreshed);\n      }\n    }\n catch (    Throwable ex) {\n      if (node instanceof DBNDataSource) {\n        try {\n          log.info(\"Unable to refresh datasource, disconnecting\");\n          ((DBNDataSource)node).getDataSourceContainer().disconnect(monitor);\n        }\n catch (        DBException e) {\n          log.warn(\"Unable to disconnect from datasource\");\n        }\n      }\n      DBWorkbench.getPlatformUI().showError(\"Refresh\",\"Error refreshing node\",ex);\n    }\n    monitor.worked(1);\n  }\n  monitor.done();\n  return Status.OK_STATUS;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 119,
        "startColumnNumber" : 28,
        "endLineNumber" : 122,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (node == refreshed || node.isChildOf(refreshed)) {\n  skip=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 119,
    "startColumnNumber" : 32,
    "endLineNumber" : 119,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}