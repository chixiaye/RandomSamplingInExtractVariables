{
  "id" : 78,
  "expression" : "\"Structure \"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/data/AbstractDataActionTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Structure \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 561,
      "startColumnNumber" : 53,
      "endLineNumber" : 561,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 561,
        "startColumnNumber" : 19,
        "endLineNumber" : 561,
        "endColumnNumber" : 65
      },
      "nodeContext" : "(commonStruct ? \"Common \" : \"\") + \"Structure \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 561,
        "startColumnNumber" : 4,
        "endLineNumber" : 561,
        "endColumnNumber" : 70
      },
      "nodeContext" : "insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 561,
        "startColumnNumber" : 3,
        "endLineNumber" : 561,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 560,
        "startColumnNumber" : 19,
        "endLineNumber" : 562,
        "endColumnNumber" : 17
      },
      "nodeContext" : "(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 560,
        "startColumnNumber" : 9,
        "endLineNumber" : 562,
        "endColumnNumber" : 17
      },
      "nodeContext" : "caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 560,
        "startColumnNumber" : 2,
        "endLineNumber" : 562,
        "endColumnNumber" : 18
      },
      "nodeContext" : "String caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 529,
        "startColumnNumber" : 66,
        "endLineNumber" : 585,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean settingsAreShared=testDefaultSetting && (!insideStruct || (insideStruct && commonStruct));\n  byte[] bytes1=data1.getBytes();\n  byte[] bytes2=data2.getBytes();\n  DataType dt=data1.getDataType();\n  if (FORMAT_TEST_SKIP_LIST.contains(dt.getName())) {\n    System.out.println(\"Settings not tested for data type: \" + dt.getName());\n    return;\n  }\n  String[] settingNames=new String[]{\"Termination\"};\n  String[] terminated=new String[]{\"terminated\"};\n  String[] unterminated=new String[]{\"unterminated\"};\n  if (insideStruct && !commonStruct) {\n    gotoLocation(data1.getMinAddress().getOffset(),new int[]{0});\n    useDefaultSettings();\n    changeSettings(true,settingNames,terminated);\n    gotoLocation(data2.getMinAddress().getOffset(),new int[]{0});\n  }\n  useDefaultSettings();\n  changeSettings(true,settingNames,terminated);\n  String caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\";\n  changeSettings(testDefaultSetting,settingNames,terminated);\n  assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  assertEquals(caseStr,getString(bytes2,true),data2.getDefaultValueRepresentation());\n  caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\";\n  changeSettings(testDefaultSetting,settingNames,unterminated);\n  if (settingsAreShared) {\n    assertEquals(caseStr,getString(bytes1,false),data1.getDefaultValueRepresentation());\n  }\n else {\n    assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  }\n  assertEquals(caseStr,getString(bytes2,false),data2.getDefaultValueRepresentation());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2636,
        "startLineNumber" : 519,
        "startColumnNumber" : 1,
        "endLineNumber" : 585,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Test TERMINATED data setting\n * @param testDefaultSetting if true test default setting, else test instance setting for data2\n * @param insideStruct data are inside two structure instances\n * @param commonStruct data structures are the same type\n * @param data1 data at some location with same type as data2\n * @param data2 data at current location\n * @throws Exception\n */\nprotected void manipulateTerminatedSettings(boolean testDefaultSetting,boolean insideStruct,boolean commonStruct,Data data1,Data data2) throws Exception {\n  boolean settingsAreShared=testDefaultSetting && (!insideStruct || (insideStruct && commonStruct));\n  byte[] bytes1=data1.getBytes();\n  byte[] bytes2=data2.getBytes();\n  DataType dt=data1.getDataType();\n  if (FORMAT_TEST_SKIP_LIST.contains(dt.getName())) {\n    System.out.println(\"Settings not tested for data type: \" + dt.getName());\n    return;\n  }\n  String[] settingNames=new String[]{\"Termination\"};\n  String[] terminated=new String[]{\"terminated\"};\n  String[] unterminated=new String[]{\"unterminated\"};\n  if (insideStruct && !commonStruct) {\n    gotoLocation(data1.getMinAddress().getOffset(),new int[]{0});\n    useDefaultSettings();\n    changeSettings(true,settingNames,terminated);\n    gotoLocation(data2.getMinAddress().getOffset(),new int[]{0});\n  }\n  useDefaultSettings();\n  changeSettings(true,settingNames,terminated);\n  String caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\";\n  changeSettings(testDefaultSetting,settingNames,terminated);\n  assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  assertEquals(caseStr,getString(bytes2,true),data2.getDefaultValueRepresentation());\n  caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\";\n  changeSettings(testDefaultSetting,settingNames,unterminated);\n  if (settingsAreShared) {\n    assertEquals(caseStr,getString(bytes1,false),data1.getDefaultValueRepresentation());\n  }\n else {\n    assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  }\n  assertEquals(caseStr,getString(bytes2,false),data2.getDefaultValueRepresentation());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 561,
        "startColumnNumber" : 3,
        "endLineNumber" : 561,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Structure \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 570,
      "startColumnNumber" : 53,
      "endLineNumber" : 570,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 570,
        "startColumnNumber" : 19,
        "endLineNumber" : 570,
        "endColumnNumber" : 65
      },
      "nodeContext" : "(commonStruct ? \"Common \" : \"\") + \"Structure \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 570,
        "startColumnNumber" : 4,
        "endLineNumber" : 570,
        "endColumnNumber" : 70
      },
      "nodeContext" : "insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 570,
        "startColumnNumber" : 3,
        "endLineNumber" : 570,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 569,
        "startColumnNumber" : 12,
        "endLineNumber" : 571,
        "endColumnNumber" : 19
      },
      "nodeContext" : "(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 569,
        "startColumnNumber" : 2,
        "endLineNumber" : 571,
        "endColumnNumber" : 19
      },
      "nodeContext" : "caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 569,
        "startColumnNumber" : 2,
        "endLineNumber" : 571,
        "endColumnNumber" : 20
      },
      "nodeContext" : "caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 529,
        "startColumnNumber" : 66,
        "endLineNumber" : 585,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean settingsAreShared=testDefaultSetting && (!insideStruct || (insideStruct && commonStruct));\n  byte[] bytes1=data1.getBytes();\n  byte[] bytes2=data2.getBytes();\n  DataType dt=data1.getDataType();\n  if (FORMAT_TEST_SKIP_LIST.contains(dt.getName())) {\n    System.out.println(\"Settings not tested for data type: \" + dt.getName());\n    return;\n  }\n  String[] settingNames=new String[]{\"Termination\"};\n  String[] terminated=new String[]{\"terminated\"};\n  String[] unterminated=new String[]{\"unterminated\"};\n  if (insideStruct && !commonStruct) {\n    gotoLocation(data1.getMinAddress().getOffset(),new int[]{0});\n    useDefaultSettings();\n    changeSettings(true,settingNames,terminated);\n    gotoLocation(data2.getMinAddress().getOffset(),new int[]{0});\n  }\n  useDefaultSettings();\n  changeSettings(true,settingNames,terminated);\n  String caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\";\n  changeSettings(testDefaultSetting,settingNames,terminated);\n  assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  assertEquals(caseStr,getString(bytes2,true),data2.getDefaultValueRepresentation());\n  caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\";\n  changeSettings(testDefaultSetting,settingNames,unterminated);\n  if (settingsAreShared) {\n    assertEquals(caseStr,getString(bytes1,false),data1.getDefaultValueRepresentation());\n  }\n else {\n    assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  }\n  assertEquals(caseStr,getString(bytes2,false),data2.getDefaultValueRepresentation());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2636,
        "startLineNumber" : 519,
        "startColumnNumber" : 1,
        "endLineNumber" : 585,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Test TERMINATED data setting\n * @param testDefaultSetting if true test default setting, else test instance setting for data2\n * @param insideStruct data are inside two structure instances\n * @param commonStruct data structures are the same type\n * @param data1 data at some location with same type as data2\n * @param data2 data at current location\n * @throws Exception\n */\nprotected void manipulateTerminatedSettings(boolean testDefaultSetting,boolean insideStruct,boolean commonStruct,Data data1,Data data2) throws Exception {\n  boolean settingsAreShared=testDefaultSetting && (!insideStruct || (insideStruct && commonStruct));\n  byte[] bytes1=data1.getBytes();\n  byte[] bytes2=data2.getBytes();\n  DataType dt=data1.getDataType();\n  if (FORMAT_TEST_SKIP_LIST.contains(dt.getName())) {\n    System.out.println(\"Settings not tested for data type: \" + dt.getName());\n    return;\n  }\n  String[] settingNames=new String[]{\"Termination\"};\n  String[] terminated=new String[]{\"terminated\"};\n  String[] unterminated=new String[]{\"unterminated\"};\n  if (insideStruct && !commonStruct) {\n    gotoLocation(data1.getMinAddress().getOffset(),new int[]{0});\n    useDefaultSettings();\n    changeSettings(true,settingNames,terminated);\n    gotoLocation(data2.getMinAddress().getOffset(),new int[]{0});\n  }\n  useDefaultSettings();\n  changeSettings(true,settingNames,terminated);\n  String caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": terminated\";\n  changeSettings(testDefaultSetting,settingNames,terminated);\n  assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  assertEquals(caseStr,getString(bytes2,true),data2.getDefaultValueRepresentation());\n  caseStr=(testDefaultSetting ? \"Default \" : \"\") + \"Settings on \" + (insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")+ dt.getName()+ \": unterminated\";\n  changeSettings(testDefaultSetting,settingNames,unterminated);\n  if (settingsAreShared) {\n    assertEquals(caseStr,getString(bytes1,false),data1.getDefaultValueRepresentation());\n  }\n else {\n    assertEquals(caseStr,getString(bytes1,true),data1.getDefaultValueRepresentation());\n  }\n  assertEquals(caseStr,getString(bytes2,false),data2.getDefaultValueRepresentation());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 570,
        "startColumnNumber" : 3,
        "endLineNumber" : 570,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(insideStruct ? (commonStruct ? \"Common \" : \"\") + \"Structure \" : \"\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 561,
    "startColumnNumber" : 53,
    "endLineNumber" : 561,
    "endColumnNumber" : 65
  }, {
    "charLength" : 12,
    "startLineNumber" : 570,
    "startColumnNumber" : 53,
    "endLineNumber" : 570,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}