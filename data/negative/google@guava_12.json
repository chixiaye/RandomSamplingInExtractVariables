{
  "id" : 12,
  "expression" : "false",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/collect/FilteredCollectionsTestUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 295,
      "startColumnNumber" : 58,
      "endLineNumber" : 295,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 295,
        "startColumnNumber" : 35,
        "endLineNumber" : 295,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ImmutableList.of(true,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 295,
        "startColumnNumber" : 10,
        "endLineNumber" : 299,
        "endColumnNumber" : 11
      },
      "nodeContext" : "for (boolean inclusive : ImmutableList.of(true,false)) {\n  assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 294,
        "startColumnNumber" : 37,
        "endLineNumber" : 300,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  boolean inclusive : ImmutableList.of(true,false)) {\n    assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 294,
        "startColumnNumber" : 8,
        "endLineNumber" : 300,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  for (  boolean inclusive : ImmutableList.of(true,false)) {\n    assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 293,
        "startColumnNumber" : 51,
        "endLineNumber" : 301,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (int i=0; i < 10; i++) {\n    for (    boolean inclusive : ImmutableList.of(true,false)) {\n      assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 293,
        "startColumnNumber" : 6,
        "endLineNumber" : 301,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (List<Integer> contents : SAMPLE_INPUTS) {\n  for (int i=0; i < 10; i++) {\n    for (    boolean inclusive : ImmutableList.of(true,false)) {\n      assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 292,
        "startColumnNumber" : 39,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  List<Integer> contents : SAMPLE_INPUTS) {\n    for (int i=0; i < 10; i++) {\n      for (      boolean inclusive : ImmutableList.of(true,false)) {\n        assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 292,
        "startColumnNumber" : 4,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testNavigableHeadSet(){\n  for (  List<Integer> contents : SAMPLE_INPUTS) {\n    for (int i=0; i < 10; i++) {\n      for (      boolean inclusive : ImmutableList.of(true,false)) {\n        assertEquals(filter(createUnfiltered(contents).headSet(i,inclusive),EVEN),filter(createUnfiltered(contents),EVEN).headSet(i,inclusive));\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 295,
        "startColumnNumber" : 35,
        "endLineNumber" : 295,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ImmutableList.of(true,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 295,
    "startColumnNumber" : 58,
    "endLineNumber" : 295,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}