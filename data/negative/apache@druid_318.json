{
  "id" : 318,
  "expression" : "PATH",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/google-extensions/src/test/java/org/apache/druid/storage/google/GoogleDataSegmentPullerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PATH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 52,
      "startColumnNumber" : 67,
      "endLineNumber" : 52,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 52,
        "startColumnNumber" : 55,
        "endLineNumber" : 52,
        "endColumnNumber" : 72
      },
      "nodeContext" : "EasyMock.eq(PATH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 74
      },
      "nodeContext" : "EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 94
      },
      "nodeContext" : "EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 95
      },
      "nodeContext" : "EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GoogleStorage storage=createMock(GoogleStorage.class);\n  final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n  EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n  replayAll();\n  GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n  puller.getSegmentFiles(BUCKET,PATH,outDir);\n  Assert.assertFalse(outDir.exists());\n  verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  GoogleStorage storage=createMock(GoogleStorage.class);\n  final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n  EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n  replayAll();\n  GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n  puller.getSegmentFiles(BUCKET,PATH,outDir);\n  Assert.assertFalse(outDir.exists());\n  verifyAll();\n}\n  finally {\n  FileUtils.deleteDirectory(outDir);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File outDir=FileUtils.createTempDir();\n  try {\n    GoogleStorage storage=createMock(GoogleStorage.class);\n    final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n    EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n    replayAll();\n    GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n    puller.getSegmentFiles(BUCKET,PATH,outDir);\n    Assert.assertFalse(outDir.exists());\n    verifyAll();\n  }\n  finally {\n    FileUtils.deleteDirectory(outDir);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(expected=SegmentLoadingException.class) public void testDeleteOutputDirectoryWhenErrorIsRaisedPullingSegmentFiles() throws IOException, SegmentLoadingException {\n  final File outDir=FileUtils.createTempDir();\n  try {\n    GoogleStorage storage=createMock(GoogleStorage.class);\n    final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n    EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n    replayAll();\n    GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n    puller.getSegmentFiles(BUCKET,PATH,outDir);\n    Assert.assertFalse(outDir.exists());\n    verifyAll();\n  }\n  finally {\n    FileUtils.deleteDirectory(outDir);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 95
      },
      "nodeContext" : "EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PATH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 57,
      "startColumnNumber" : 37,
      "endLineNumber" : 57,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 50
      },
      "nodeContext" : "puller.getSegmentFiles(BUCKET,PATH,outDir)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 51
      },
      "nodeContext" : "puller.getSegmentFiles(BUCKET,PATH,outDir);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GoogleStorage storage=createMock(GoogleStorage.class);\n  final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n  EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n  replayAll();\n  GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n  puller.getSegmentFiles(BUCKET,PATH,outDir);\n  Assert.assertFalse(outDir.exists());\n  verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  GoogleStorage storage=createMock(GoogleStorage.class);\n  final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n  EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n  replayAll();\n  GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n  puller.getSegmentFiles(BUCKET,PATH,outDir);\n  Assert.assertFalse(outDir.exists());\n  verifyAll();\n}\n  finally {\n  FileUtils.deleteDirectory(outDir);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File outDir=FileUtils.createTempDir();\n  try {\n    GoogleStorage storage=createMock(GoogleStorage.class);\n    final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n    EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n    replayAll();\n    GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n    puller.getSegmentFiles(BUCKET,PATH,outDir);\n    Assert.assertFalse(outDir.exists());\n    verifyAll();\n  }\n  finally {\n    FileUtils.deleteDirectory(outDir);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(expected=SegmentLoadingException.class) public void testDeleteOutputDirectoryWhenErrorIsRaisedPullingSegmentFiles() throws IOException, SegmentLoadingException {\n  final File outDir=FileUtils.createTempDir();\n  try {\n    GoogleStorage storage=createMock(GoogleStorage.class);\n    final GoogleJsonResponseException exception=GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\");\n    EasyMock.expect(storage.get(EasyMock.eq(BUCKET),EasyMock.eq(PATH))).andThrow(exception);\n    replayAll();\n    GoogleDataSegmentPuller puller=new GoogleDataSegmentPuller(storage);\n    puller.getSegmentFiles(BUCKET,PATH,outDir);\n    Assert.assertFalse(outDir.exists());\n    verifyAll();\n  }\n  finally {\n    FileUtils.deleteDirectory(outDir);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 51
      },
      "nodeContext" : "puller.getSegmentFiles(BUCKET,PATH,outDir);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 52,
    "startColumnNumber" : 67,
    "endLineNumber" : 52,
    "endColumnNumber" : 71
  }, {
    "charLength" : 4,
    "startLineNumber" : 57,
    "startColumnNumber" : 37,
    "endLineNumber" : 57,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}