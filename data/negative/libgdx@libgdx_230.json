{
  "id" : 230,
  "expression" : "'b'",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/UBJsonTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'b'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 52,
      "startColumnNumber" : 36,
      "endLineNumber" : 52,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 52,
        "endColumnNumber" : 45
      },
      "nodeContext" : "{'a','b','c'}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new char[]{'a','b','c'}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 3,
        "endLineNumber" : 52,
        "endColumnNumber" : 46
      },
      "nodeContext" : "uw.set(\"3char\",new char[]{'a','b','c'})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 52,
        "startColumnNumber" : 3,
        "endLineNumber" : 52,
        "endColumnNumber" : 47
      },
      "nodeContext" : "uw.set(\"3char\",new char[]{'a','b','c'});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  UBJsonWriter uw=new UBJsonWriter(Gdx.files.external(fn).write(false));\n  uw.object();\n  uw.set(longString,longString);\n  uw.set(\"0floats\",new float[]{});\n  uw.set(\"3floats\",new float[]{1,2,3.456789f});\n  uw.set(\"xfloats\",new float[]{Float.MIN_VALUE,Float.MAX_VALUE,Float.NaN,Float.NEGATIVE_INFINITY});\n  uw.set(\"double\",0.000000000000000000001);\n  uw.set(\"long\",Long.MAX_VALUE);\n  uw.set(\"3bytes\",new byte[]{(byte)1,(byte)2,(byte)3});\n  uw.set(\"3shorts\",new short[]{(short)1,(short)2,(short)3});\n  uw.set(\"3ints\",new int[]{1,2,3});\n  uw.set(\"3long\",new long[]{1l,2l,3l});\n  uw.set(\"3double\",new double[]{1,2,3.456789});\n  uw.set(\"3char\",new char[]{'a','b','c'});\n  uw.set(\"3strings\",new String[]{\"\",\"a\",\"abc\"});\n  uw.array(\"arr\");\n  uw.object().pop();\n  uw.value(true).value(false).value(true);\n  uw.value((byte)254);\n  uw.value((byte)(-2));\n  uw.value((short)-32000);\n  uw.value((int)-123456);\n  uw.value((long)(-((1 << 63) - 1)));\n  uw.pop();\n  uw.pop();\n  uw.close();\n  UBJsonReader ur=new UBJsonReader();\n  ur.oldFormat=false;\n  JsonValue v=ur.parse(Gdx.files.external(fn));\n  Gdx.app.log(\"UBJsonTest\",\"result = \\n\" + v.toString());\n  performanceTest();\n  Gdx.app.log(\"UBJsonTest\",\"Test succeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 323,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  UBJsonWriter uw=new UBJsonWriter(Gdx.files.external(fn).write(false));\n  uw.object();\n  uw.set(longString,longString);\n  uw.set(\"0floats\",new float[]{});\n  uw.set(\"3floats\",new float[]{1,2,3.456789f});\n  uw.set(\"xfloats\",new float[]{Float.MIN_VALUE,Float.MAX_VALUE,Float.NaN,Float.NEGATIVE_INFINITY});\n  uw.set(\"double\",0.000000000000000000001);\n  uw.set(\"long\",Long.MAX_VALUE);\n  uw.set(\"3bytes\",new byte[]{(byte)1,(byte)2,(byte)3});\n  uw.set(\"3shorts\",new short[]{(short)1,(short)2,(short)3});\n  uw.set(\"3ints\",new int[]{1,2,3});\n  uw.set(\"3long\",new long[]{1l,2l,3l});\n  uw.set(\"3double\",new double[]{1,2,3.456789});\n  uw.set(\"3char\",new char[]{'a','b','c'});\n  uw.set(\"3strings\",new String[]{\"\",\"a\",\"abc\"});\n  uw.array(\"arr\");\n  uw.object().pop();\n  uw.value(true).value(false).value(true);\n  uw.value((byte)254);\n  uw.value((byte)(-2));\n  uw.value((short)-32000);\n  uw.value((int)-123456);\n  uw.value((long)(-((1 << 63) - 1)));\n  uw.pop();\n  uw.pop();\n  uw.close();\n  UBJsonReader ur=new UBJsonReader();\n  ur.oldFormat=false;\n  JsonValue v=ur.parse(Gdx.files.external(fn));\n  Gdx.app.log(\"UBJsonTest\",\"result = \\n\" + v.toString());\n  performanceTest();\n  Gdx.app.log(\"UBJsonTest\",\"Test succeeded\");\n}\n catch (Throwable t) {\n  Gdx.app.error(\"UBJsonTest\",\"Test failed\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 339,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 36,
        "startColumnNumber" : 23,
        "endLineNumber" : 74,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    UBJsonWriter uw=new UBJsonWriter(Gdx.files.external(fn).write(false));\n    uw.object();\n    uw.set(longString,longString);\n    uw.set(\"0floats\",new float[]{});\n    uw.set(\"3floats\",new float[]{1,2,3.456789f});\n    uw.set(\"xfloats\",new float[]{Float.MIN_VALUE,Float.MAX_VALUE,Float.NaN,Float.NEGATIVE_INFINITY});\n    uw.set(\"double\",0.000000000000000000001);\n    uw.set(\"long\",Long.MAX_VALUE);\n    uw.set(\"3bytes\",new byte[]{(byte)1,(byte)2,(byte)3});\n    uw.set(\"3shorts\",new short[]{(short)1,(short)2,(short)3});\n    uw.set(\"3ints\",new int[]{1,2,3});\n    uw.set(\"3long\",new long[]{1l,2l,3l});\n    uw.set(\"3double\",new double[]{1,2,3.456789});\n    uw.set(\"3char\",new char[]{'a','b','c'});\n    uw.set(\"3strings\",new String[]{\"\",\"a\",\"abc\"});\n    uw.array(\"arr\");\n    uw.object().pop();\n    uw.value(true).value(false).value(true);\n    uw.value((byte)254);\n    uw.value((byte)(-2));\n    uw.value((short)-32000);\n    uw.value((int)-123456);\n    uw.value((long)(-((1 << 63) - 1)));\n    uw.pop();\n    uw.pop();\n    uw.close();\n    UBJsonReader ur=new UBJsonReader();\n    ur.oldFormat=false;\n    JsonValue v=ur.parse(Gdx.files.external(fn));\n    Gdx.app.log(\"UBJsonTest\",\"result = \\n\" + v.toString());\n    performanceTest();\n    Gdx.app.log(\"UBJsonTest\",\"Test succeeded\");\n  }\n catch (  Throwable t) {\n    Gdx.app.error(\"UBJsonTest\",\"Test failed\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 340,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 74,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  try {\n    UBJsonWriter uw=new UBJsonWriter(Gdx.files.external(fn).write(false));\n    uw.object();\n    uw.set(longString,longString);\n    uw.set(\"0floats\",new float[]{});\n    uw.set(\"3floats\",new float[]{1,2,3.456789f});\n    uw.set(\"xfloats\",new float[]{Float.MIN_VALUE,Float.MAX_VALUE,Float.NaN,Float.NEGATIVE_INFINITY});\n    uw.set(\"double\",0.000000000000000000001);\n    uw.set(\"long\",Long.MAX_VALUE);\n    uw.set(\"3bytes\",new byte[]{(byte)1,(byte)2,(byte)3});\n    uw.set(\"3shorts\",new short[]{(short)1,(short)2,(short)3});\n    uw.set(\"3ints\",new int[]{1,2,3});\n    uw.set(\"3long\",new long[]{1l,2l,3l});\n    uw.set(\"3double\",new double[]{1,2,3.456789});\n    uw.set(\"3char\",new char[]{'a','b','c'});\n    uw.set(\"3strings\",new String[]{\"\",\"a\",\"abc\"});\n    uw.array(\"arr\");\n    uw.object().pop();\n    uw.value(true).value(false).value(true);\n    uw.value((byte)254);\n    uw.value((byte)(-2));\n    uw.value((short)-32000);\n    uw.value((int)-123456);\n    uw.value((long)(-((1 << 63) - 1)));\n    uw.pop();\n    uw.pop();\n    uw.close();\n    UBJsonReader ur=new UBJsonReader();\n    ur.oldFormat=false;\n    JsonValue v=ur.parse(Gdx.files.external(fn));\n    Gdx.app.log(\"UBJsonTest\",\"result = \\n\" + v.toString());\n    performanceTest();\n    Gdx.app.log(\"UBJsonTest\",\"Test succeeded\");\n  }\n catch (  Throwable t) {\n    Gdx.app.error(\"UBJsonTest\",\"Test failed\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 52,
        "startColumnNumber" : 3,
        "endLineNumber" : 52,
        "endColumnNumber" : 47
      },
      "nodeContext" : "uw.set(\"3char\",new char[]{'a','b','c'});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 52,
    "startColumnNumber" : 36,
    "endLineNumber" : 52,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}