{
  "id" : 90,
  "expression" : "Rectangle2D",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/util/NoOverlapCategoryAxis.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Rectangle2D",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 113,
      "startColumnNumber" : 39,
      "endLineNumber" : 113,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 113,
        "startColumnNumber" : 39,
        "endLineNumber" : 113,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Rectangle2D.Double",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 113,
        "startColumnNumber" : 39,
        "endLineNumber" : 113,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Rectangle2D.Double",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 113,
        "startColumnNumber" : 35,
        "endLineNumber" : 114,
        "endColumnNumber" : 34
      },
      "nodeContext" : "new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 113,
        "startColumnNumber" : 28,
        "endLineNumber" : 114,
        "endColumnNumber" : 34
      },
      "nodeContext" : "area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 4198,
        "startLineNumber" : 72,
        "startColumnNumber" : 39,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  CategoryTick tick=(CategoryTick)tick1;\n  g2.setFont(getTickLabelFont(tick.getCategory()));\n  g2.setPaint(getTickLabelPaint(tick.getCategory()));\n  CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n  double x0=0.0;\n  double x1=0.0;\n  double y0=0.0;\n  double y1=0.0;\n  if (edge == RectangleEdge.TOP) {\n    x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n    y0=y1 - state.getMax();\n  }\n else   if (edge == RectangleEdge.BOTTOM) {\n    x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n    y1=y0 + state.getMax();\n  }\n else   if (edge == RectangleEdge.LEFT) {\n    y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n    x0=x1 - state.getMax();\n  }\n else   if (edge == RectangleEdge.RIGHT) {\n    y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n    x1=x0 - state.getMax();\n  }\n  Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n  if (r == null || !r.intersects(area)) {\n    Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n    TextBlock block=tick.getLabel();\n    block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n    Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n    if (plotState != null && plotState.getOwner() != null) {\n      EntityCollection entities=plotState.getOwner().getEntityCollection();\n      if (entities != null) {\n        String tooltip=getCategoryLabelToolTip(tick.getCategory());\n        entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n      }\n    }\n    r=bounds.getBounds2D();\n    r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n    r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n    r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n    r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n  }\n  categoryIndex++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 486,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4225,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Object tick1 : ticks) {\n  CategoryTick tick=(CategoryTick)tick1;\n  g2.setFont(getTickLabelFont(tick.getCategory()));\n  g2.setPaint(getTickLabelPaint(tick.getCategory()));\n  CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n  double x0=0.0;\n  double x1=0.0;\n  double y0=0.0;\n  double y1=0.0;\n  if (edge == RectangleEdge.TOP) {\n    x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n    y0=y1 - state.getMax();\n  }\n else   if (edge == RectangleEdge.BOTTOM) {\n    x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n    y1=y0 + state.getMax();\n  }\n else   if (edge == RectangleEdge.LEFT) {\n    y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n    x0=x1 - state.getMax();\n  }\n else   if (edge == RectangleEdge.RIGHT) {\n    y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n    y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n    x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n    x1=x0 - state.getMax();\n  }\n  Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n  if (r == null || !r.intersects(area)) {\n    Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n    TextBlock block=tick.getLabel();\n    block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n    Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n    if (plotState != null && plotState.getOwner() != null) {\n      EntityCollection entities=plotState.getOwner().getEntityCollection();\n      if (entities != null) {\n        String tooltip=getCategoryLabelToolTip(tick.getCategory());\n        entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n      }\n    }\n    r=bounds.getBounds2D();\n    r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n    r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n    r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n    r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n  }\n  categoryIndex++;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 492,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5138,
        "startLineNumber" : 64,
        "startColumnNumber" : 35,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  java.util.List ticks=refreshTicks(g2,state,plotArea,edge);\n  state.setTicks(ticks);\n  Rectangle2D r=null;\n  int categoryIndex=0;\n  for (  Object tick1 : ticks) {\n    CategoryTick tick=(CategoryTick)tick1;\n    g2.setFont(getTickLabelFont(tick.getCategory()));\n    g2.setPaint(getTickLabelPaint(tick.getCategory()));\n    CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n    double x0=0.0;\n    double x1=0.0;\n    double y0=0.0;\n    double y1=0.0;\n    if (edge == RectangleEdge.TOP) {\n      x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n      y0=y1 - state.getMax();\n    }\n else     if (edge == RectangleEdge.BOTTOM) {\n      x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n      y1=y0 + state.getMax();\n    }\n else     if (edge == RectangleEdge.LEFT) {\n      y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n      x0=x1 - state.getMax();\n    }\n else     if (edge == RectangleEdge.RIGHT) {\n      y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n      x1=x0 - state.getMax();\n    }\n    Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n    if (r == null || !r.intersects(area)) {\n      Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n      TextBlock block=tick.getLabel();\n      block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n      Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n      if (plotState != null && plotState.getOwner() != null) {\n        EntityCollection entities=plotState.getOwner().getEntityCollection();\n        if (entities != null) {\n          String tooltip=getCategoryLabelToolTip(tick.getCategory());\n          entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n        }\n      }\n      r=bounds.getBounds2D();\n      r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n      r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n      r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n      r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n    }\n    categoryIndex++;\n  }\n  if (edge.equals(RectangleEdge.TOP)) {\n    double h=state.getMax();\n    state.cursorUp(h);\n  }\n else   if (edge.equals(RectangleEdge.BOTTOM)) {\n    double h=state.getMax();\n    state.cursorDown(h);\n  }\n else   if (edge == RectangleEdge.LEFT) {\n    double w=state.getMax();\n    state.cursorLeft(w);\n  }\n else   if (edge == RectangleEdge.RIGHT) {\n    double w=state.getMax();\n    state.cursorRight(w);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 602,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5165,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isTickLabelsVisible()) {\n  java.util.List ticks=refreshTicks(g2,state,plotArea,edge);\n  state.setTicks(ticks);\n  Rectangle2D r=null;\n  int categoryIndex=0;\n  for (  Object tick1 : ticks) {\n    CategoryTick tick=(CategoryTick)tick1;\n    g2.setFont(getTickLabelFont(tick.getCategory()));\n    g2.setPaint(getTickLabelPaint(tick.getCategory()));\n    CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n    double x0=0.0;\n    double x1=0.0;\n    double y0=0.0;\n    double y1=0.0;\n    if (edge == RectangleEdge.TOP) {\n      x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n      y0=y1 - state.getMax();\n    }\n else     if (edge == RectangleEdge.BOTTOM) {\n      x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n      y1=y0 + state.getMax();\n    }\n else     if (edge == RectangleEdge.LEFT) {\n      y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n      x0=x1 - state.getMax();\n    }\n else     if (edge == RectangleEdge.RIGHT) {\n      y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n      y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n      x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n      x1=x0 - state.getMax();\n    }\n    Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n    if (r == null || !r.intersects(area)) {\n      Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n      TextBlock block=tick.getLabel();\n      block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n      Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n      if (plotState != null && plotState.getOwner() != null) {\n        EntityCollection entities=plotState.getOwner().getEntityCollection();\n        if (entities != null) {\n          String tooltip=getCategoryLabelToolTip(tick.getCategory());\n          entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n        }\n      }\n      r=bounds.getBounds2D();\n      r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n      r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n      r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n      r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n    }\n    categoryIndex++;\n  }\n  if (edge.equals(RectangleEdge.TOP)) {\n    double h=state.getMax();\n    state.cursorUp(h);\n  }\n else   if (edge.equals(RectangleEdge.BOTTOM)) {\n    double h=state.getMax();\n    state.cursorDown(h);\n  }\n else   if (edge == RectangleEdge.LEFT) {\n    double w=state.getMax();\n    state.cursorLeft(w);\n  }\n else   if (edge == RectangleEdge.RIGHT) {\n    double w=state.getMax();\n    state.cursorRight(w);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 605,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5326,
        "startLineNumber" : 58,
        "startColumnNumber" : 72,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state == null) {\n    throw new IllegalArgumentException(\"Null 'state' argument.\");\n  }\n  if (isTickLabelsVisible()) {\n    java.util.List ticks=refreshTicks(g2,state,plotArea,edge);\n    state.setTicks(ticks);\n    Rectangle2D r=null;\n    int categoryIndex=0;\n    for (    Object tick1 : ticks) {\n      CategoryTick tick=(CategoryTick)tick1;\n      g2.setFont(getTickLabelFont(tick.getCategory()));\n      g2.setPaint(getTickLabelPaint(tick.getCategory()));\n      CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n      double x0=0.0;\n      double x1=0.0;\n      double y0=0.0;\n      double y1=0.0;\n      if (edge == RectangleEdge.TOP) {\n        x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n        y0=y1 - state.getMax();\n      }\n else       if (edge == RectangleEdge.BOTTOM) {\n        x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n        y1=y0 + state.getMax();\n      }\n else       if (edge == RectangleEdge.LEFT) {\n        y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n        x0=x1 - state.getMax();\n      }\n else       if (edge == RectangleEdge.RIGHT) {\n        y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n        x1=x0 - state.getMax();\n      }\n      Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n      if (r == null || !r.intersects(area)) {\n        Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n        TextBlock block=tick.getLabel();\n        block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n        Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n        if (plotState != null && plotState.getOwner() != null) {\n          EntityCollection entities=plotState.getOwner().getEntityCollection();\n          if (entities != null) {\n            String tooltip=getCategoryLabelToolTip(tick.getCategory());\n            entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n          }\n        }\n        r=bounds.getBounds2D();\n        r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n        r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n        r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n        r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n      }\n      categoryIndex++;\n    }\n    if (edge.equals(RectangleEdge.TOP)) {\n      double h=state.getMax();\n      state.cursorUp(h);\n    }\n else     if (edge.equals(RectangleEdge.BOTTOM)) {\n      double h=state.getMax();\n      state.cursorDown(h);\n    }\n else     if (edge == RectangleEdge.LEFT) {\n      double w=state.getMax();\n      state.cursorLeft(w);\n    }\n else     if (edge == RectangleEdge.RIGHT) {\n      double w=state.getMax();\n      state.cursorRight(w);\n    }\n  }\n  return state;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 618,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5725,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected AxisState drawCategoryLabels(Graphics2D g2,Rectangle2D plotArea,Rectangle2D dataArea,RectangleEdge edge,AxisState state,PlotRenderingInfo plotState){\n  if (state == null) {\n    throw new IllegalArgumentException(\"Null 'state' argument.\");\n  }\n  if (isTickLabelsVisible()) {\n    java.util.List ticks=refreshTicks(g2,state,plotArea,edge);\n    state.setTicks(ticks);\n    Rectangle2D r=null;\n    int categoryIndex=0;\n    for (    Object tick1 : ticks) {\n      CategoryTick tick=(CategoryTick)tick1;\n      g2.setFont(getTickLabelFont(tick.getCategory()));\n      g2.setPaint(getTickLabelPaint(tick.getCategory()));\n      CategoryLabelPosition position=this.getCategoryLabelPositions().getLabelPosition(edge);\n      double x0=0.0;\n      double x1=0.0;\n      double y0=0.0;\n      double y1=0.0;\n      if (edge == RectangleEdge.TOP) {\n        x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        y1=state.getCursor() - this.getCategoryLabelPositionOffset();\n        y0=y1 - state.getMax();\n      }\n else       if (edge == RectangleEdge.BOTTOM) {\n        x0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        x1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        y0=state.getCursor() + this.getCategoryLabelPositionOffset();\n        y1=y0 + state.getMax();\n      }\n else       if (edge == RectangleEdge.LEFT) {\n        y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        x1=state.getCursor() - this.getCategoryLabelPositionOffset();\n        x0=x1 - state.getMax();\n      }\n else       if (edge == RectangleEdge.RIGHT) {\n        y0=getCategoryStart(categoryIndex,ticks.size(),dataArea,edge);\n        y1=getCategoryEnd(categoryIndex,ticks.size(),dataArea,edge);\n        x0=state.getCursor() + this.getCategoryLabelPositionOffset();\n        x1=x0 - state.getMax();\n      }\n      Rectangle2D area=new Rectangle2D.Double(x0,y0,(x1 - x0),(y1 - y0));\n      if (r == null || !r.intersects(area)) {\n        Point2D anchorPoint=RectangleAnchor.coordinates(area,position.getCategoryAnchor());\n        TextBlock block=tick.getLabel();\n        block.draw(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n        Shape bounds=block.calculateBounds(g2,(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getLabelAnchor(),(float)anchorPoint.getX(),(float)anchorPoint.getY(),position.getAngle());\n        if (plotState != null && plotState.getOwner() != null) {\n          EntityCollection entities=plotState.getOwner().getEntityCollection();\n          if (entities != null) {\n            String tooltip=getCategoryLabelToolTip(tick.getCategory());\n            entities.add(new CategoryLabelEntity(tick.getCategory(),bounds,tooltip,null));\n          }\n        }\n        r=bounds.getBounds2D();\n        r.add(r.getMaxX() + r.getWidth() / 2,r.getCenterY());\n        r.add(r.getMinX() - r.getWidth() / 2,r.getCenterY());\n        r.add(r.getCenterX(),r.getMinY() - r.getHeight() / 2);\n        r.add(r.getCenterX(),r.getMaxX() + r.getHeight() / 2);\n      }\n      categoryIndex++;\n    }\n    if (edge.equals(RectangleEdge.TOP)) {\n      double h=state.getMax();\n      state.cursorUp(h);\n    }\n else     if (edge.equals(RectangleEdge.BOTTOM)) {\n      double h=state.getMax();\n      state.cursorDown(h);\n    }\n else     if (edge == RectangleEdge.LEFT) {\n      double w=state.getMax();\n      state.cursorLeft(w);\n    }\n else     if (edge == RectangleEdge.RIGHT) {\n      double w=state.getMax();\n      state.cursorRight(w);\n    }\n  }\n  return state;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 649,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 113,
        "startColumnNumber" : 39,
        "endLineNumber" : 113,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Rectangle2D.Double",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Rectangle2D"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 113,
    "startColumnNumber" : 39,
    "endLineNumber" : 113,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}