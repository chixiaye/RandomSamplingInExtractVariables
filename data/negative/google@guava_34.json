{
  "id" : 34,
  "expression" : "new AtomicBoolean()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/util/concurrent/SupplementalMonitorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicBoolean()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 122,
      "startColumnNumber" : 43,
      "endLineNumber" : 122,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 122,
        "startColumnNumber" : 24,
        "endLineNumber" : 122,
        "endColumnNumber" : 62
      },
      "nodeContext" : "actualIsOccupied=new AtomicBoolean()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1065,
        "startLineNumber" : 121,
        "startColumnNumber" : 33,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n  final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n  final AtomicInteger actualOccupiedDepth=new AtomicInteger();\n  final AtomicReference<Throwable> thrown=new AtomicReference<>();\n  joinUninterruptibly(startThread(new Runnable(){\n    @Override public void run(){\n      try {\n        actualIsOccupied.set(monitor.isOccupied());\n        actualIsOccupiedByCurrentThread.set(monitor.isOccupiedByCurrentThread());\n        actualOccupiedDepth.set(monitor.getOccupiedDepth());\n      }\n catch (      Throwable t) {\n        thrown.set(t);\n      }\n    }\n  }\n));\n  assertNull(thrown.get());\n  assertEquals(expectedIsOccupied,actualIsOccupied.get());\n  assertEquals(expectedIsOccupiedByCurrentThread,actualIsOccupiedByCurrentThread.get());\n  assertEquals(expectedOccupiedDepth,actualOccupiedDepth.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void verifyOccupiedMethodsInAnotherThread(final Monitor monitor,boolean expectedIsOccupied,boolean expectedIsOccupiedByCurrentThread,int expectedOccupiedDepth){\n  final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n  final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n  final AtomicInteger actualOccupiedDepth=new AtomicInteger();\n  final AtomicReference<Throwable> thrown=new AtomicReference<>();\n  joinUninterruptibly(startThread(new Runnable(){\n    @Override public void run(){\n      try {\n        actualIsOccupied.set(monitor.isOccupied());\n        actualIsOccupiedByCurrentThread.set(monitor.isOccupiedByCurrentThread());\n        actualOccupiedDepth.set(monitor.getOccupiedDepth());\n      }\n catch (      Throwable t) {\n        thrown.set(t);\n      }\n    }\n  }\n));\n  assertNull(thrown.get());\n  assertEquals(expectedIsOccupied,actualIsOccupied.get());\n  assertEquals(expectedIsOccupiedByCurrentThread,actualIsOccupiedByCurrentThread.get());\n  assertEquals(expectedOccupiedDepth,actualOccupiedDepth.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicBoolean"
  }, {
    "nodeContext" : "new AtomicBoolean()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 123,
      "startColumnNumber" : 58,
      "endLineNumber" : 123,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 123,
        "startColumnNumber" : 24,
        "endLineNumber" : 123,
        "endColumnNumber" : 77
      },
      "nodeContext" : "actualIsOccupiedByCurrentThread=new AtomicBoolean()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 78
      },
      "nodeContext" : "final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1065,
        "startLineNumber" : 121,
        "startColumnNumber" : 33,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n  final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n  final AtomicInteger actualOccupiedDepth=new AtomicInteger();\n  final AtomicReference<Throwable> thrown=new AtomicReference<>();\n  joinUninterruptibly(startThread(new Runnable(){\n    @Override public void run(){\n      try {\n        actualIsOccupied.set(monitor.isOccupied());\n        actualIsOccupiedByCurrentThread.set(monitor.isOccupiedByCurrentThread());\n        actualOccupiedDepth.set(monitor.getOccupiedDepth());\n      }\n catch (      Throwable t) {\n        thrown.set(t);\n      }\n    }\n  }\n));\n  assertNull(thrown.get());\n  assertEquals(expectedIsOccupied,actualIsOccupied.get());\n  assertEquals(expectedIsOccupiedByCurrentThread,actualIsOccupiedByCurrentThread.get());\n  assertEquals(expectedOccupiedDepth,actualOccupiedDepth.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void verifyOccupiedMethodsInAnotherThread(final Monitor monitor,boolean expectedIsOccupied,boolean expectedIsOccupiedByCurrentThread,int expectedOccupiedDepth){\n  final AtomicBoolean actualIsOccupied=new AtomicBoolean();\n  final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n  final AtomicInteger actualOccupiedDepth=new AtomicInteger();\n  final AtomicReference<Throwable> thrown=new AtomicReference<>();\n  joinUninterruptibly(startThread(new Runnable(){\n    @Override public void run(){\n      try {\n        actualIsOccupied.set(monitor.isOccupied());\n        actualIsOccupiedByCurrentThread.set(monitor.isOccupiedByCurrentThread());\n        actualOccupiedDepth.set(monitor.getOccupiedDepth());\n      }\n catch (      Throwable t) {\n        thrown.set(t);\n      }\n    }\n  }\n));\n  assertNull(thrown.get());\n  assertEquals(expectedIsOccupied,actualIsOccupied.get());\n  assertEquals(expectedIsOccupiedByCurrentThread,actualIsOccupiedByCurrentThread.get());\n  assertEquals(expectedOccupiedDepth,actualOccupiedDepth.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 78
      },
      "nodeContext" : "final AtomicBoolean actualIsOccupiedByCurrentThread=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicBoolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 122,
    "startColumnNumber" : 43,
    "endLineNumber" : 122,
    "endColumnNumber" : 62
  }, {
    "charLength" : 19,
    "startLineNumber" : 123,
    "startColumnNumber" : 58,
    "endLineNumber" : 123,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}