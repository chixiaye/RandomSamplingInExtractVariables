{
  "id" : 420,
  "expression" : "\"Authentication required\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/web/AuthenticationFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Authentication required\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 97,
      "startColumnNumber" : 72,
      "endLineNumber" : 97,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 98
      },
      "nodeContext" : "httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 99
      },
      "nodeContext" : "httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 95,
        "startColumnNumber" : 30,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n  if (e instanceof AuthenticationException) {\n    LOG.warn(\"[{}] Failed to authenticate HTTP request: {}\",request.getRemoteAddr(),e.getMessage());\n  }\n else {\n    LOG.error(\"[{}] Error performing authentication for HTTP\",request.getRemoteAddr(),e);\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n  if (e instanceof AuthenticationException) {\n    LOG.warn(\"[{}] Failed to authenticate HTTP request: {}\",request.getRemoteAddr(),e.getMessage());\n  }\n else {\n    LOG.error(\"[{}] Error performing authentication for HTTP\",request.getRemoteAddr(),e);\n  }\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1699,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HttpServletRequest httpRequest=(HttpServletRequest)request;\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  if (!isSaslRequest(httpRequest)) {\n    String role=authenticationService.authenticateHttpRequest((HttpServletRequest)request);\n    request.setAttribute(AuthenticatedRoleAttributeName,role);\n    request.setAttribute(AuthenticatedDataAttributeName,new AuthenticationDataHttps((HttpServletRequest)request));\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"[{}] Authenticated HTTP request with role {}\",request.getRemoteAddr(),role);\n    }\n    chain.doFilter(request,response);\n    return;\n  }\n  boolean doFilter=authenticationService.getAuthenticationProvider(SaslConstants.AUTH_METHOD_NAME).authenticateHttpRequest(httpRequest,httpResponse);\n  if (doFilter) {\n    chain.doFilter(request,response);\n  }\n}\n catch (Exception e) {\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n  if (e instanceof AuthenticationException) {\n    LOG.warn(\"[{}] Failed to authenticate HTTP request: {}\",request.getRemoteAddr(),e.getMessage());\n  }\n else {\n    LOG.error(\"[{}] Error performing authentication for HTTP\",request.getRemoteAddr(),e);\n  }\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1715,
        "startLineNumber" : 70,
        "startColumnNumber" : 49,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    HttpServletRequest httpRequest=(HttpServletRequest)request;\n    HttpServletResponse httpResponse=(HttpServletResponse)response;\n    if (!isSaslRequest(httpRequest)) {\n      String role=authenticationService.authenticateHttpRequest((HttpServletRequest)request);\n      request.setAttribute(AuthenticatedRoleAttributeName,role);\n      request.setAttribute(AuthenticatedDataAttributeName,new AuthenticationDataHttps((HttpServletRequest)request));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"[{}] Authenticated HTTP request with role {}\",request.getRemoteAddr(),role);\n      }\n      chain.doFilter(request,response);\n      return;\n    }\n    boolean doFilter=authenticationService.getAuthenticationProvider(SaslConstants.AUTH_METHOD_NAME).authenticateHttpRequest(httpRequest,httpResponse);\n    if (doFilter) {\n      chain.doFilter(request,response);\n    }\n  }\n catch (  Exception e) {\n    HttpServletResponse httpResponse=(HttpServletResponse)response;\n    httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n    if (e instanceof AuthenticationException) {\n      LOG.warn(\"[{}] Failed to authenticate HTTP request: {}\",request.getRemoteAddr(),e.getMessage());\n    }\n else {\n      LOG.error(\"[{}] Error performing authentication for HTTP\",request.getRemoteAddr(),e);\n    }\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain) throws IOException, ServletException {\n  try {\n    HttpServletRequest httpRequest=(HttpServletRequest)request;\n    HttpServletResponse httpResponse=(HttpServletResponse)response;\n    if (!isSaslRequest(httpRequest)) {\n      String role=authenticationService.authenticateHttpRequest((HttpServletRequest)request);\n      request.setAttribute(AuthenticatedRoleAttributeName,role);\n      request.setAttribute(AuthenticatedDataAttributeName,new AuthenticationDataHttps((HttpServletRequest)request));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"[{}] Authenticated HTTP request with role {}\",request.getRemoteAddr(),role);\n      }\n      chain.doFilter(request,response);\n      return;\n    }\n    boolean doFilter=authenticationService.getAuthenticationProvider(SaslConstants.AUTH_METHOD_NAME).authenticateHttpRequest(httpRequest,httpResponse);\n    if (doFilter) {\n      chain.doFilter(request,response);\n    }\n  }\n catch (  Exception e) {\n    HttpServletResponse httpResponse=(HttpServletResponse)response;\n    httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n    if (e instanceof AuthenticationException) {\n      LOG.warn(\"[{}] Failed to authenticate HTTP request: {}\",request.getRemoteAddr(),e.getMessage());\n    }\n else {\n      LOG.error(\"[{}] Error performing authentication for HTTP\",request.getRemoteAddr(),e);\n    }\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 99
      },
      "nodeContext" : "httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Authentication required\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 97,
    "startColumnNumber" : 72,
    "endLineNumber" : 97,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}