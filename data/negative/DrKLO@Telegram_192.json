{
  "id" : 192,
  "expression" : "Extractor",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/chunk/InitializationChunk.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Extractor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 100,
      "startColumnNumber" : 21,
      "endLineNumber" : 100,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 100,
        "startColumnNumber" : 21,
        "endLineNumber" : 100,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Extractor.RESULT_CONTINUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 46
      },
      "nodeContext" : "result=Extractor.RESULT_CONTINUE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int result=Extractor.RESULT_CONTINUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 105,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n  finally {\n  nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n  finally {\n  Util.closeQuietly(dataSource);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 86,
        "startColumnNumber" : 62,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"NonAtomicVolatileUpdate\") @Override public void load() throws IOException, InterruptedException {\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int result=Extractor.RESULT_CONTINUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.extractor.Extractor"
  }, {
    "nodeContext" : "Extractor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 101,
      "startColumnNumber" : 25,
      "endLineNumber" : 101,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 101,
        "startColumnNumber" : 25,
        "endLineNumber" : 101,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Extractor.RESULT_CONTINUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 50
      },
      "nodeContext" : "result == Extractor.RESULT_CONTINUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result == Extractor.RESULT_CONTINUE && !loadCanceled",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n  result=extractor.read(input,DUMMY_POSITION_HOLDER);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 105,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n  finally {\n  nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n  finally {\n  Util.closeQuietly(dataSource);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 86,
        "startColumnNumber" : 62,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"NonAtomicVolatileUpdate\") @Override public void load() throws IOException, InterruptedException {\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result == Extractor.RESULT_CONTINUE && !loadCanceled",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.extractor.Extractor"
  }, {
    "nodeContext" : "Extractor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 104,
      "startColumnNumber" : 40,
      "endLineNumber" : 104,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 104,
        "startColumnNumber" : 40,
        "endLineNumber" : 104,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Extractor.RESULT_SEEK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 104,
        "startColumnNumber" : 30,
        "endLineNumber" : 104,
        "endColumnNumber" : 61
      },
      "nodeContext" : "result != Extractor.RESULT_SEEK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assertions.checkState(result != Extractor.RESULT_SEEK)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assertions.checkState(result != Extractor.RESULT_SEEK);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 105,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 98,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Extractor extractor=extractorWrapper.extractor;\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    result=extractor.read(input,DUMMY_POSITION_HOLDER);\n  }\n  Assertions.checkState(result != Extractor.RESULT_SEEK);\n}\n  finally {\n  nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n  try {\n    Extractor extractor=extractorWrapper.extractor;\n    int result=Extractor.RESULT_CONTINUE;\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      result=extractor.read(input,DUMMY_POSITION_HOLDER);\n    }\n    Assertions.checkState(result != Extractor.RESULT_SEEK);\n  }\n  finally {\n    nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n  }\n}\n  finally {\n  Util.closeQuietly(dataSource);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 86,
        "startColumnNumber" : 62,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"NonAtomicVolatileUpdate\") @Override public void load() throws IOException, InterruptedException {\n  if (nextLoadPosition == 0) {\n    extractorWrapper.init(trackOutputProvider,C.TIME_UNSET,C.TIME_UNSET);\n  }\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    ExtractorInput input=new DefaultExtractorInput(dataSource,loadDataSpec.absoluteStreamPosition,dataSource.open(loadDataSpec));\n    try {\n      Extractor extractor=extractorWrapper.extractor;\n      int result=Extractor.RESULT_CONTINUE;\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        result=extractor.read(input,DUMMY_POSITION_HOLDER);\n      }\n      Assertions.checkState(result != Extractor.RESULT_SEEK);\n    }\n  finally {\n      nextLoadPosition=input.getPosition() - dataSpec.absoluteStreamPosition;\n    }\n  }\n  finally {\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assertions.checkState(result != Extractor.RESULT_SEEK);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.extractor.Extractor"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 100,
    "startColumnNumber" : 21,
    "endLineNumber" : 100,
    "endColumnNumber" : 30
  }, {
    "charLength" : 9,
    "startLineNumber" : 101,
    "startColumnNumber" : 25,
    "endLineNumber" : 101,
    "endColumnNumber" : 34
  }, {
    "charLength" : 9,
    "startLineNumber" : 104,
    "startColumnNumber" : 40,
    "endLineNumber" : 104,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}