{
  "id" : 306,
  "expression" : "\"expr : '=';\\n\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestBasicSemanticErrors.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"expr : '=';\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 80,
      "startColumnNumber" : 3,
      "endLineNumber" : 80,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 18
      },
      "nodeContext" : "\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 75,
        "startColumnNumber" : 9,
        "endLineNumber" : 80,
        "endColumnNumber" : 18
      },
      "nodeContext" : "grammarTemplate=\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 19
      },
      "nodeContext" : "String grammarTemplate=\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 74,
        "startColumnNumber" : 65,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String grammarTemplate=\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\";\n  String expected=\"error(\" + ErrorType.ARG_CONFLICTS_WITH_RULE.code + \"): T.g4:2:7: parameter expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.RETVAL_CONFLICTS_WITH_RULE.code+ \"): T.g4:2:26: return value expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_RULE.code+ \"): T.g4:3:12: local expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.RETVAL_CONFLICTS_WITH_ARG.code+ \"): T.g4:2:26: return value expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_ARG.code+ \"): T.g4:3:12: local expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_RETVAL.code+ \"): T.g4:3:12: local expr conflicts with return value with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_RULE.code+ \"): T.g4:4:4: label expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_ARG.code+ \"): T.g4:4:4: label expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_RETVAL.code+ \"): T.g4:4:4: label expr conflicts with return value with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_LOCAL.code+ \"): T.g4:4:4: label expr conflicts with local with same name\\n\";\n  ST grammarST=new ST(grammarTemplate);\n  grammarST.add(\"args\",\"int expr\");\n  grammarST.add(\"retvals\",\"int expr\");\n  grammarST.add(\"locals\",\"int expr\");\n  grammarST.add(\"body\",\"expr=expr\");\n  testErrors(new String[]{grammarST.render(),expected},false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1877,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testArgumentRetvalLocalConflicts() throws Exception {\n  String grammarTemplate=\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\";\n  String expected=\"error(\" + ErrorType.ARG_CONFLICTS_WITH_RULE.code + \"): T.g4:2:7: parameter expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.RETVAL_CONFLICTS_WITH_RULE.code+ \"): T.g4:2:26: return value expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_RULE.code+ \"): T.g4:3:12: local expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.RETVAL_CONFLICTS_WITH_ARG.code+ \"): T.g4:2:26: return value expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_ARG.code+ \"): T.g4:3:12: local expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LOCAL_CONFLICTS_WITH_RETVAL.code+ \"): T.g4:3:12: local expr conflicts with return value with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_RULE.code+ \"): T.g4:4:4: label expr conflicts with rule with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_ARG.code+ \"): T.g4:4:4: label expr conflicts with parameter with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_RETVAL.code+ \"): T.g4:4:4: label expr conflicts with return value with same name\\n\"+ \"error(\"+ ErrorType.LABEL_CONFLICTS_WITH_LOCAL.code+ \"): T.g4:4:4: label expr conflicts with local with same name\\n\";\n  ST grammarST=new ST(grammarTemplate);\n  grammarST.add(\"args\",\"int expr\");\n  grammarST.add(\"retvals\",\"int expr\");\n  grammarST.add(\"locals\",\"int expr\");\n  grammarST.add(\"body\",\"expr=expr\");\n  testErrors(new String[]{grammarST.render(),expected},false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 18
      },
      "nodeContext" : "\"grammar T;\\n\" + \"ss<if(args)>[<args>]<endif> <if(retvals)>returns [<retvals>]<endif>\\n\" + \"<if(locals)>locals [<locals>]<endif>\\n\"+ \"  : <body> EOF;\\n\"+ \"expr : '=';\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 80,
    "startColumnNumber" : 3,
    "endLineNumber" : 80,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}