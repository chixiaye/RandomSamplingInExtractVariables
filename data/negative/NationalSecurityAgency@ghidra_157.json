{
  "id" : 157,
  "expression" : "\"index into Blob heap\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/pe/cli/tables/CliTableFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"index into Blob heap\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 68,
      "startColumnNumber" : 59,
      "endLineNumber" : 68,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 82
      },
      "nodeContext" : "rowDt.add(metadataStream.getBlobIndexDataType(),\"Hash\",\"index into Blob heap\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 83
      },
      "nodeContext" : "rowDt.add(metadataStream.getBlobIndexDataType(),\"Hash\",\"index into Blob heap\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 64,
        "startColumnNumber" : 43,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StructureDataType rowDt=new StructureDataType(new CategoryPath(PATH),\"File Row\",0);\n  rowDt.add(CliEnumFileAttributes.dataType,\"Flags\",\"Bitmask of type FileAttributes\");\n  rowDt.add(metadataStream.getStringIndexDataType(),\"Name\",\"index into String heap\");\n  rowDt.add(metadataStream.getBlobIndexDataType(),\"Hash\",\"index into Blob heap\");\n  return rowDt;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 70,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public StructureDataType getRowDataType(){\n  StructureDataType rowDt=new StructureDataType(new CategoryPath(PATH),\"File Row\",0);\n  rowDt.add(CliEnumFileAttributes.dataType,\"Flags\",\"Bitmask of type FileAttributes\");\n  rowDt.add(metadataStream.getStringIndexDataType(),\"Name\",\"index into String heap\");\n  rowDt.add(metadataStream.getBlobIndexDataType(),\"Hash\",\"index into Blob heap\");\n  return rowDt;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 83
      },
      "nodeContext" : "rowDt.add(metadataStream.getBlobIndexDataType(),\"Hash\",\"index into Blob heap\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 68,
    "startColumnNumber" : 59,
    "endLineNumber" : 68,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}