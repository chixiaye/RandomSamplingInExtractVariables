{
  "id" : 329,
  "expression" : "rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/strings/LongestCommonPrefixArray.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 96,
      "startLineNumber" : 67,
      "startColumnNumber" : 16,
      "endLineNumber" : 69,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 31,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 67,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 55
      },
      "nodeContext" : "rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 67,
        "startColumnNumber" : 15,
        "endLineNumber" : 70,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p])",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 67,
        "startColumnNumber" : 14,
        "endLineNumber" : 70,
        "endColumnNumber" : 56
      },
      "nodeContext" : "!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 67,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 62
      },
      "nodeContext" : "if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p])) r++;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 66,
        "startColumnNumber" : 52,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))   r++;\n  sa2[sa[i]]=r;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (sa2[sa[0]]=r=0, i=1; i < N; ++i) {\n  if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))   r++;\n  sa2[sa[i]]=r;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 59,
        "startColumnNumber" : 34,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (r=0, i=N - p; i < N; ++i)   sa2[r++]=i;\n  for (i=0; i < N; ++i)   if (sa[i] >= p)   sa2[r++]=sa[i] - p;\n  Arrays.fill(c,0,ALPHABET_SZ,0);\n  for (i=0; i < N; ++i)   c[rank[i]]++;\n  for (i=1; i < ALPHABET_SZ; ++i)   c[i]+=c[i - 1];\n  for (i=N - 1; i >= 0; --i)   sa[--c[rank[sa2[i]]]]=sa2[i];\n  for (sa2[sa[0]]=r=0, i=1; i < N; ++i) {\n    if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))     r++;\n    sa2[sa[i]]=r;\n  }\n  tmp=rank;\n  rank=sa2;\n  sa2=tmp;\n  if (r == N - 1)   break;\n  ALPHABET_SZ=r + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (p=1; p < N; p<<=1) {\n  for (r=0, i=N - p; i < N; ++i)   sa2[r++]=i;\n  for (i=0; i < N; ++i)   if (sa[i] >= p)   sa2[r++]=sa[i] - p;\n  Arrays.fill(c,0,ALPHABET_SZ,0);\n  for (i=0; i < N; ++i)   c[rank[i]]++;\n  for (i=1; i < ALPHABET_SZ; ++i)   c[i]+=c[i - 1];\n  for (i=N - 1; i >= 0; --i)   sa[--c[rank[sa2[i]]]]=sa2[i];\n  for (sa2[sa[0]]=r=0, i=1; i < N; ++i) {\n    if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))     r++;\n    sa2[sa[i]]=r;\n  }\n  tmp=rank;\n  rank=sa2;\n  sa2=tmp;\n  if (r == N - 1)   break;\n  ALPHABET_SZ=r + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 54,
        "startColumnNumber" : 29,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int i, p, r;\n  for (i=0; i < N; ++i)   c[rank[i]=T[i]]++;\n  for (i=1; i < ALPHABET_SZ; ++i)   c[i]+=c[i - 1];\n  for (i=N - 1; i >= 0; --i)   sa[--c[T[i]]]=i;\n  for (p=1; p < N; p<<=1) {\n    for (r=0, i=N - p; i < N; ++i)     sa2[r++]=i;\n    for (i=0; i < N; ++i)     if (sa[i] >= p)     sa2[r++]=sa[i] - p;\n    Arrays.fill(c,0,ALPHABET_SZ,0);\n    for (i=0; i < N; ++i)     c[rank[i]]++;\n    for (i=1; i < ALPHABET_SZ; ++i)     c[i]+=c[i - 1];\n    for (i=N - 1; i >= 0; --i)     sa[--c[rank[sa2[i]]]]=sa2[i];\n    for (sa2[sa[0]]=r=0, i=1; i < N; ++i) {\n      if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))       r++;\n      sa2[sa[i]]=r;\n    }\n    tmp=rank;\n    rank=sa2;\n    sa2=tmp;\n    if (r == N - 1)     break;\n    ALPHABET_SZ=r + 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void construct(){\n  int i, p, r;\n  for (i=0; i < N; ++i)   c[rank[i]=T[i]]++;\n  for (i=1; i < ALPHABET_SZ; ++i)   c[i]+=c[i - 1];\n  for (i=N - 1; i >= 0; --i)   sa[--c[T[i]]]=i;\n  for (p=1; p < N; p<<=1) {\n    for (r=0, i=N - p; i < N; ++i)     sa2[r++]=i;\n    for (i=0; i < N; ++i)     if (sa[i] >= p)     sa2[r++]=sa[i] - p;\n    Arrays.fill(c,0,ALPHABET_SZ,0);\n    for (i=0; i < N; ++i)     c[rank[i]]++;\n    for (i=1; i < ALPHABET_SZ; ++i)     c[i]+=c[i - 1];\n    for (i=N - 1; i >= 0; --i)     sa[--c[rank[sa2[i]]]]=sa2[i];\n    for (sa2[sa[0]]=r=0, i=1; i < N; ++i) {\n      if (!(rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]))       r++;\n      sa2[sa[i]]=r;\n    }\n    tmp=rank;\n    rank=sa2;\n    sa2=tmp;\n    if (r == N - 1)     break;\n    ALPHABET_SZ=r + 1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 67,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 55
      },
      "nodeContext" : "rank[sa[i - 1]] == rank[sa[i]] && sa[i - 1] + p < N && sa[i] + p < N && rank[sa[i - 1] + p] == rank[sa[i] + p]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 49,
      "astHeight" : 8
    },
    "tokenLength" : 25,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 96,
    "startLineNumber" : 67,
    "startColumnNumber" : 16,
    "endLineNumber" : 69,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}