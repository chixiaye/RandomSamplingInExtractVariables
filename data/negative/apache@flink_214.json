{
  "id" : 214,
  "expression" : "UUID.randomUUID().toString()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-python/src/main/java/org/apache/flink/python/env/process/ProcessPythonEnvironmentManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UUID.randomUUID().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 75,
      "startColumnNumber" : 45,
      "endLineNumber" : 75,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 83
      },
      "nodeContext" : "\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new File(resource.baseDirectory,\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 72,
        "startColumnNumber" : 13,
        "endLineNumber" : 75,
        "endColumnNumber" : 84
      },
      "nodeContext" : "retrievalToken=new File(resource.baseDirectory,\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 85
      },
      "nodeContext" : "File retrievalToken=new File(resource.baseDirectory,\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 71,
        "startColumnNumber" : 60,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File retrievalToken=new File(resource.baseDirectory,\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\");\n  if (retrievalToken.createNewFile()) {\n    final DataOutputStream dos=new DataOutputStream(new FileOutputStream(retrievalToken));\n    dos.writeBytes(\"{\\\"manifest\\\": {}}\");\n    dos.flush();\n    dos.close();\n    return retrievalToken.getAbsolutePath();\n  }\n else {\n    throw new IOException(\"Could not create the RetrievalToken file: \" + retrievalToken.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an empty RetrievalToken because no files will be transmit via ArtifactService in process mode.\n * @return The path of empty RetrievalToken.\n */\npublic String createRetrievalToken() throws IOException {\n  File retrievalToken=new File(resource.baseDirectory,\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\");\n  if (retrievalToken.createNewFile()) {\n    final DataOutputStream dos=new DataOutputStream(new FileOutputStream(retrievalToken));\n    dos.writeBytes(\"{\\\"manifest\\\": {}}\");\n    dos.flush();\n    dos.close();\n    return retrievalToken.getAbsolutePath();\n  }\n else {\n    throw new IOException(\"Could not create the RetrievalToken file: \" + retrievalToken.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 83
      },
      "nodeContext" : "\"retrieval_token_\" + UUID.randomUUID().toString() + \".json\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 75,
    "startColumnNumber" : 45,
    "endLineNumber" : 75,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}