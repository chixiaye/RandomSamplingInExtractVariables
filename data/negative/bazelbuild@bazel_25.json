{
  "id" : 25,
  "expression" : "!attr.checkAllowedValues()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "30fd508bf68c8bb9cf32839b71f79a9aa4bd069a",
  "filePath" : "src/main/java/com/google/devtools/build/lib/packages/StarlarkDefinedAspect.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!attr.checkAllowedValues()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 206,
      "startColumnNumber" : 8,
      "endLineNumber" : 206,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!attr.checkAllowedValues()) {\n  return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n}\n else {\n  return attrBuilder.build(attr.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 191,
        "startColumnNumber" : 74,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static Attribute addAttrValue(Attribute attr,String attrValue){\n  Attribute.Builder<?> attrBuilder;\n  Type<?> attrType=attr.getType();\n  Object castedValue=attrValue;\n  if (attrType == Type.INTEGER) {\n    castedValue=StarlarkInt.parse(attrValue,0);\n    attrBuilder=attr.cloneBuilder(Type.INTEGER).value((StarlarkInt)castedValue);\n  }\n else   if (attrType == Type.BOOLEAN) {\n    castedValue=Boolean.parseBoolean(attrValue);\n    attrBuilder=attr.cloneBuilder(Type.BOOLEAN).value((Boolean)castedValue);\n  }\n else {\n    attrBuilder=attr.cloneBuilder(Type.STRING).value((String)castedValue);\n  }\n  if (!attr.checkAllowedValues()) {\n    return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n  }\n else {\n    return attrBuilder.build(attr.getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!attr.checkAllowedValues()) {\n  return attrBuilder.allowedValues(new Attribute.AllowedValueSet(attrType.cast(castedValue))).build(attr.getName());\n}\n else {\n  return attrBuilder.build(attr.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 206,
    "startColumnNumber" : 8,
    "endLineNumber" : 206,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}