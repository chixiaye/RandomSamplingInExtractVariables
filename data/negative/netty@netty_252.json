{
  "id" : 252,
  "expression" : "NetUtil.isValidIpV6Address(host)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-socks/src/main/java/io/netty/handler/codec/socks/SocksCmdResponse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NetUtil.isValidIpV6Address(host)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 83,
      "startColumnNumber" : 25,
      "endLineNumber" : 83,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 57
      },
      "nodeContext" : "!NetUtil.isValidIpV6Address(host)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!NetUtil.isValidIpV6Address(host)) {\n  throw new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (addressType) {\ncase IPv4:  if (!NetUtil.isValidIpV4Address(host)) {\n    throw new IllegalArgumentException(host + \" is not a valid IPv4 address\");\n  }\nbreak;\ncase DOMAIN:String asciiHost=IDN.toASCII(host);\nif (asciiHost.length() > 255) {\nthrow new IllegalArgumentException(host + \" IDN: \" + asciiHost+ \" exceeds 255 char limit\");\n}\nhost=asciiHost;\nbreak;\ncase IPv6:if (!NetUtil.isValidIpV6Address(host)) {\nthrow new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\nbreak;\ncase UNKNOWN:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 71,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 68,
        "startColumnNumber" : 26,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (addressType) {\ncase IPv4:    if (!NetUtil.isValidIpV4Address(host)) {\n      throw new IllegalArgumentException(host + \" is not a valid IPv4 address\");\n    }\n  break;\ncase DOMAIN:String asciiHost=IDN.toASCII(host);\nif (asciiHost.length() > 255) {\nthrow new IllegalArgumentException(host + \" IDN: \" + asciiHost+ \" exceeds 255 char limit\");\n}\nhost=asciiHost;\nbreak;\ncase IPv6:if (!NetUtil.isValidIpV6Address(host)) {\nthrow new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\nbreak;\ncase UNKNOWN:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (host != null) {\nswitch (addressType) {\ncase IPv4:    if (!NetUtil.isValidIpV4Address(host)) {\n      throw new IllegalArgumentException(host + \" is not a valid IPv4 address\");\n    }\n  break;\ncase DOMAIN:String asciiHost=IDN.toASCII(host);\nif (asciiHost.length() > 255) {\nthrow new IllegalArgumentException(host + \" IDN: \" + asciiHost+ \" exceeds 255 char limit\");\n}\nhost=asciiHost;\nbreak;\ncase IPv6:if (!NetUtil.isValidIpV6Address(host)) {\nthrow new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\nbreak;\ncase UNKNOWN:break;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1408,
        "startLineNumber" : 64,
        "startColumnNumber" : 107,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(SocksResponseType.CMD);\n  requireNonNull(cmdStatus,\"cmdStatus\");\n  requireNonNull(addressType,\"addressType\");\n  if (host != null) {\nswitch (addressType) {\ncase IPv4:      if (!NetUtil.isValidIpV4Address(host)) {\n        throw new IllegalArgumentException(host + \" is not a valid IPv4 address\");\n      }\n    break;\ncase DOMAIN:  String asciiHost=IDN.toASCII(host);\nif (asciiHost.length() > 255) {\n  throw new IllegalArgumentException(host + \" IDN: \" + asciiHost+ \" exceeds 255 char limit\");\n}\nhost=asciiHost;\nbreak;\ncase IPv6:if (!NetUtil.isValidIpV6Address(host)) {\nthrow new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\nbreak;\ncase UNKNOWN:break;\n}\n}\nif (port < 0 || port > 65535) {\nthrow new IllegalArgumentException(port + \" is not in bounds 0 <= x <= 65535\");\n}\nthis.cmdStatus=cmdStatus;\nthis.addressType=addressType;\nthis.host=host;\nthis.port=port;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructs new response and includes provided host and port as part of it.\n * @param cmdStatus status of the response\n * @param addressType type of host parameter\n * @param host host (BND.ADDR field) is address that server used when connecting to the target host.When null a value of 4/8 0x00 octets will be used for IPv4/IPv6 and a single 0x00 byte will be used for domain addressType. Value is converted to ASCII using  {@link IDN#toASCII(String)}.\n * @param port port (BND.PORT field) that the server assigned to connect to the target host\n * @throws NullPointerException in case cmdStatus or addressType are missing\n * @throws IllegalArgumentException in case host or port cannot be validated\n * @see IDN#toASCII(String)\n */\npublic SocksCmdResponse(SocksCmdStatus cmdStatus,SocksAddressType addressType,String host,int port){\n  super(SocksResponseType.CMD);\n  requireNonNull(cmdStatus,\"cmdStatus\");\n  requireNonNull(addressType,\"addressType\");\n  if (host != null) {\nswitch (addressType) {\ncase IPv4:      if (!NetUtil.isValidIpV4Address(host)) {\n        throw new IllegalArgumentException(host + \" is not a valid IPv4 address\");\n      }\n    break;\ncase DOMAIN:  String asciiHost=IDN.toASCII(host);\nif (asciiHost.length() > 255) {\n  throw new IllegalArgumentException(host + \" IDN: \" + asciiHost+ \" exceeds 255 char limit\");\n}\nhost=asciiHost;\nbreak;\ncase IPv6:if (!NetUtil.isValidIpV6Address(host)) {\nthrow new IllegalArgumentException(host + \" is not a valid IPv6 address\");\n}\nbreak;\ncase UNKNOWN:break;\n}\n}\nif (port < 0 || port > 65535) {\nthrow new IllegalArgumentException(port + \" is not in bounds 0 <= x <= 65535\");\n}\nthis.cmdStatus=cmdStatus;\nthis.addressType=addressType;\nthis.host=host;\nthis.port=port;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 57
      },
      "nodeContext" : "!NetUtil.isValidIpV6Address(host)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 83,
    "startColumnNumber" : 25,
    "endLineNumber" : 83,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}