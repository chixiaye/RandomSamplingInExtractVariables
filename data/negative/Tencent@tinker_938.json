{
  "id" : 938,
  "expression" : "newVersionCode == null",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newVersionCode == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 237,
      "startColumnNumber" : 51,
      "endLineNumber" : 237,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 237,
        "startColumnNumber" : 25,
        "endLineNumber" : 237,
        "endColumnNumber" : 73
      },
      "nodeContext" : "oldVersionCode == null && newVersionCode == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 74
      },
      "nodeContext" : "(oldVersionCode == null && newVersionCode == null)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 237,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!(oldVersionCode == null && newVersionCode == null)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 237,
        "startColumnNumber" : 19,
        "endLineNumber" : 240,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(oldVersionCode == null && newVersionCode == null)) {\n  announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 232,
        "startColumnNumber" : 12,
        "endLineNumber" : 240,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (oldVersionCode != null && newVersionCode != null) {\n  if (newVersionCode < oldVersionCode) {\n    announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n}\n else if (!(oldVersionCode == null && newVersionCode == null)) {\n  announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5302,
        "startLineNumber" : 213,
        "startColumnNumber" : 48,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 444,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5464,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldMeta != null && newMeta != null) {\n  if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n    announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n  }\n  if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n    announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n  }\n  if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n    announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n  }\n  if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n    Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n  }\n  final Long oldVersionCode=oldMeta.getVersionCode();\n  final Long newVersionCode=newMeta.getVersionCode();\n  if (oldVersionCode != null && newVersionCode != null) {\n    if (newVersionCode < oldVersionCode) {\n      announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n  }\n else   if (!(oldVersionCode == null && newVersionCode == null)) {\n    announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n  }\n  if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n    announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n  }\n  if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n    announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n    announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n    announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n  }\n  if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n    announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n  }\n  if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n    announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n  }\n  if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n    announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n    announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n  }\n  if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n    announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n  }\n  if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n  }\n  if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n  }\n  if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n    announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n  }\n}\n else {\n  announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 457,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5628,
        "startLineNumber" : 208,
        "startColumnNumber" : 74,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5698,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void ensureApkMetaUnchanged(ApkMeta oldMeta,ApkMeta newMeta){\n  if (oldMeta == null && newMeta == null) {\n    return;\n  }\n  if (oldMeta != null && newMeta != null) {\n    if (!nullSafeEquals(oldMeta.getPackageName(),newMeta.getPackageName())) {\n      announceWarningOrException(\"Package name changed, old: \" + oldMeta.getPackageName() + \", new: \"+ newMeta.getPackageName());\n    }\n    if (!nullSafeEquals(oldMeta.getLabel(),newMeta.getLabel())) {\n      announceWarningOrException(\"App label changed, old: \" + oldMeta.getLabel() + \", new: \"+ newMeta.getLabel());\n    }\n    if (!nullSafeEquals(oldMeta.getIcon(),newMeta.getIcon())) {\n      announceWarningOrException(\"App icon res ref changed, old: \" + oldMeta.getIcon() + \", new: \"+ newMeta.getIcon());\n    }\n    if (!nullSafeEquals(oldMeta.getVersionName(),newMeta.getVersionName())) {\n      Logger.e(\"Note: Version name changed, old: \" + oldMeta.getVersionName() + \", new: \"+ newMeta.getVersionName());\n    }\n    final Long oldVersionCode=oldMeta.getVersionCode();\n    final Long newVersionCode=newMeta.getVersionCode();\n    if (oldVersionCode != null && newVersionCode != null) {\n      if (newVersionCode < oldVersionCode) {\n        announceWarningOrException(\"Version code downgrade, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n      }\n    }\n else     if (!(oldVersionCode == null && newVersionCode == null)) {\n      announceWarningOrException(\"Version code of old or new apk is missing, old: \" + oldVersionCode + \", new: \"+ newVersionCode);\n    }\n    if (!nullSafeEquals(oldMeta.getInstallLocation(),newMeta.getInstallLocation())) {\n      announceWarningOrException(\"Install location changed, old: \" + oldMeta.getInstallLocation() + \", new: \"+ newMeta.getInstallLocation());\n    }\n    if (!nullSafeEquals(oldMeta.getMinSdkVersion(),newMeta.getMinSdkVersion())) {\n      announceWarningOrException(\"MinSdkVersion changed, old: \" + oldMeta.getMinSdkVersion() + \", new: \"+ newMeta.getMinSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getTargetSdkVersion(),newMeta.getTargetSdkVersion())) {\n      announceWarningOrException(\"TargetSdkVersion changed, old: \" + oldMeta.getTargetSdkVersion() + \", new: \"+ newMeta.getTargetSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getMaxSdkVersion(),newMeta.getMaxSdkVersion())) {\n      announceWarningOrException(\"MaxSdkVersion changed, old: \" + oldMeta.getMaxSdkVersion() + \", new: \"+ newMeta.getMaxSdkVersion());\n    }\n    if (!nullSafeEquals(oldMeta.getGlEsVersion(),newMeta.getGlEsVersion(),GLES_VERSION_EQUALS)) {\n      announceWarningOrException(\"GLEsVersion changed, old: \" + GLES_VERSION_DESCRIBER.describe(oldMeta.getGlEsVersion()) + \", new: \"+ GLES_VERSION_DESCRIBER.describe(newMeta.getGlEsVersion()));\n    }\n    if (!nullSafeEquals(oldMeta.isAnyDensity(),newMeta.isAnyDensity())) {\n      announceWarningOrException(\"Value of isAnyDensity changed, old: \" + oldMeta.isAnyDensity() + \", new: \"+ newMeta.isAnyDensity());\n    }\n    if (!nullSafeEquals(oldMeta.isSmallScreens(),newMeta.isSmallScreens())) {\n      announceWarningOrException(\"Value of isSmallScreens changed, old: \" + oldMeta.isSmallScreens() + \", new: \"+ newMeta.isSmallScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isNormalScreens(),newMeta.isNormalScreens())) {\n      announceWarningOrException(\"Value of isNormalScreens changed, old: \" + oldMeta.isNormalScreens() + \", new: \"+ newMeta.isNormalScreens());\n    }\n    if (!nullSafeEquals(oldMeta.isLargeScreens(),newMeta.isLargeScreens())) {\n      announceWarningOrException(\"Value of isLargeScreens changed, old: \" + oldMeta.isLargeScreens() + \", new: \"+ newMeta.isLargeScreens());\n    }\n    if (!nullSafeEquals(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions(),USES_PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses permissions changed, related uses-permissions: \" + describeChanges(oldMeta.getUsesPermissions(),newMeta.getUsesPermissions()));\n    }\n    if (!nullSafeEquals(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related uses-features: \" + describeChanges(oldMeta.getUsesFeatures(),newMeta.getUsesFeatures(),USE_FEATURE_DESCRIBER));\n    }\n    if (!nullSafeEquals(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_EQUALS)) {\n      announceWarningOrException(\"Uses features changed, related permissions: \" + describeChanges(oldMeta.getPermissions(),newMeta.getPermissions(),PERMISSION_DESCRIBER));\n    }\n  }\n else {\n    announceWarningOrException(\"One of apk meta is null, are we processing invalid manifest ?\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 480,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 237,
        "startColumnNumber" : 23,
        "endLineNumber" : 237,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!(oldVersionCode == null && newVersionCode == null)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 237,
    "startColumnNumber" : 51,
    "endLineNumber" : 237,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}