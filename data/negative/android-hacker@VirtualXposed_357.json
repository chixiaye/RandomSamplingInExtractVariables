{
  "id" : 357,
  "expression" : "file.length()",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/PersistenceLayer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 60,
      "startColumnNumber" : 42,
      "endLineNumber" : 60,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 60,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(int)file.length()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 60,
        "startColumnNumber" : 27,
        "endLineNumber" : 60,
        "endColumnNumber" : 56
      },
      "nodeContext" : "new byte[(int)file.length()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 56
      },
      "nodeContext" : "bytes=new byte[(int)file.length()]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 57
      },
      "nodeContext" : "byte[] bytes=new byte[(int)file.length()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FileInputStream fis=new FileInputStream(file);\n  byte[] bytes=new byte[(int)file.length()];\n  int len=fis.read(bytes);\n  fis.close();\n  if (len != bytes.length) {\n    throw new IOException(\"Unable to read Persistence file.\");\n  }\n  p.unmarshall(bytes,0,bytes.length);\n  p.setDataPosition(0);\n  if (!verifyMagic(p)) {\n    onPersistenceFileDamage();\n    throw new IOException(\"Invalid persistence file.\");\n  }\n  int fileVersion=p.readInt();\n  int currentVersion=getCurrentVersion();\n  if (fileVersion != getCurrentVersion()) {\n    if (!onVersionConflict(fileVersion,currentVersion)) {\n      throw new IOException(\"Unable to process the bad version persistence file.\");\n    }\n  }\n  readPersistenceData(p);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  FileInputStream fis=new FileInputStream(file);\n  byte[] bytes=new byte[(int)file.length()];\n  int len=fis.read(bytes);\n  fis.close();\n  if (len != bytes.length) {\n    throw new IOException(\"Unable to read Persistence file.\");\n  }\n  p.unmarshall(bytes,0,bytes.length);\n  p.setDataPosition(0);\n  if (!verifyMagic(p)) {\n    onPersistenceFileDamage();\n    throw new IOException(\"Invalid persistence file.\");\n  }\n  int fileVersion=p.readInt();\n  int currentVersion=getCurrentVersion();\n  if (fileVersion != getCurrentVersion()) {\n    if (!onVersionConflict(fileVersion,currentVersion)) {\n      throw new IOException(\"Unable to process the bad version persistence file.\");\n    }\n  }\n  readPersistenceData(p);\n}\n catch (Exception e) {\n  if (!(e instanceof FileNotFoundException)) {\n    e.printStackTrace();\n  }\n}\n finally {\n  p.recycle();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 136,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File file=mPersistenceFile;\n  Parcel p=Parcel.obtain();\n  try {\n    FileInputStream fis=new FileInputStream(file);\n    byte[] bytes=new byte[(int)file.length()];\n    int len=fis.read(bytes);\n    fis.close();\n    if (len != bytes.length) {\n      throw new IOException(\"Unable to read Persistence file.\");\n    }\n    p.unmarshall(bytes,0,bytes.length);\n    p.setDataPosition(0);\n    if (!verifyMagic(p)) {\n      onPersistenceFileDamage();\n      throw new IOException(\"Invalid persistence file.\");\n    }\n    int fileVersion=p.readInt();\n    int currentVersion=getCurrentVersion();\n    if (fileVersion != getCurrentVersion()) {\n      if (!onVersionConflict(fileVersion,currentVersion)) {\n        throw new IOException(\"Unable to process the bad version persistence file.\");\n      }\n    }\n    readPersistenceData(p);\n  }\n catch (  Exception e) {\n    if (!(e instanceof FileNotFoundException)) {\n      e.printStackTrace();\n    }\n  }\n finally {\n    p.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void read(){\n  File file=mPersistenceFile;\n  Parcel p=Parcel.obtain();\n  try {\n    FileInputStream fis=new FileInputStream(file);\n    byte[] bytes=new byte[(int)file.length()];\n    int len=fis.read(bytes);\n    fis.close();\n    if (len != bytes.length) {\n      throw new IOException(\"Unable to read Persistence file.\");\n    }\n    p.unmarshall(bytes,0,bytes.length);\n    p.setDataPosition(0);\n    if (!verifyMagic(p)) {\n      onPersistenceFileDamage();\n      throw new IOException(\"Invalid persistence file.\");\n    }\n    int fileVersion=p.readInt();\n    int currentVersion=getCurrentVersion();\n    if (fileVersion != getCurrentVersion()) {\n      if (!onVersionConflict(fileVersion,currentVersion)) {\n        throw new IOException(\"Unable to process the bad version persistence file.\");\n      }\n    }\n    readPersistenceData(p);\n  }\n catch (  Exception e) {\n    if (!(e instanceof FileNotFoundException)) {\n      e.printStackTrace();\n    }\n  }\n finally {\n    p.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 57
      },
      "nodeContext" : "byte[] bytes=new byte[(int)file.length()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 60,
    "startColumnNumber" : 42,
    "endLineNumber" : 60,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}