{
  "id" : 208,
  "expression" : "Types.INTEGER",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/undo/mysql/keyword/MySQLKeywordCheckerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Types.INTEGER",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 82,
      "startColumnNumber" : 24,
      "endLineNumber" : 82,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pkField.setType(Types.INTEGER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pkField.setType(Types.INTEGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1971,
        "startLineNumber" : 70,
        "startColumnNumber" : 41,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setTableName(\"lock\");\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"key\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"desc\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"key\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(214);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"desc\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  MySQLUndoUpdateExecutorExtension mySQLUndoUpdateExecutor=new MySQLUndoUpdateExecutorExtension(sqlUndoLog);\n  Assertions.assertEquals(\"UPDATE `lock` SET `desc` = ?, since = ? WHERE `key` = ?\",mySQLUndoUpdateExecutor.getSql());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test keyword check with UPDATE case\n */\n@Test public void testUpdateKeywordCheck(){\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setTableName(\"lock\");\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"key\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"desc\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"key\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(214);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"desc\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  MySQLUndoUpdateExecutorExtension mySQLUndoUpdateExecutor=new MySQLUndoUpdateExecutorExtension(sqlUndoLog);\n  Assertions.assertEquals(\"UPDATE `lock` SET `desc` = ?, since = ? WHERE `key` = ?\",mySQLUndoUpdateExecutor.getSql());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pkField.setType(Types.INTEGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "Types.INTEGER",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 107,
      "startColumnNumber" : 25,
      "endLineNumber" : 107,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pkField1.setType(Types.INTEGER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pkField1.setType(Types.INTEGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1971,
        "startLineNumber" : 70,
        "startColumnNumber" : 41,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setTableName(\"lock\");\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"key\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"desc\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"key\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(214);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"desc\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  MySQLUndoUpdateExecutorExtension mySQLUndoUpdateExecutor=new MySQLUndoUpdateExecutorExtension(sqlUndoLog);\n  Assertions.assertEquals(\"UPDATE `lock` SET `desc` = ?, since = ? WHERE `key` = ?\",mySQLUndoUpdateExecutor.getSql());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2077,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test keyword check with UPDATE case\n */\n@Test public void testUpdateKeywordCheck(){\n  SQLUndoLog sqlUndoLog=new SQLUndoLog();\n  sqlUndoLog.setTableName(\"lock\");\n  sqlUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"key\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"desc\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new UndoExecutorTest.MockTableMeta(\"product\",\"key\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"key\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(214);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"desc\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  sqlUndoLog.setBeforeImage(beforeImage);\n  sqlUndoLog.setAfterImage(afterImage);\n  MySQLUndoUpdateExecutorExtension mySQLUndoUpdateExecutor=new MySQLUndoUpdateExecutorExtension(sqlUndoLog);\n  Assertions.assertEquals(\"UPDATE `lock` SET `desc` = ?, since = ? WHERE `key` = ?\",mySQLUndoUpdateExecutor.getSql());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pkField1.setType(Types.INTEGER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 82,
    "startColumnNumber" : 24,
    "endLineNumber" : 82,
    "endColumnNumber" : 37
  }, {
    "charLength" : 13,
    "startLineNumber" : 107,
    "startColumnNumber" : 25,
    "endLineNumber" : 107,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}