{
  "id" : 337,
  "expression" : "infoClazz",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/hotplug/handler/MHMessageHandler.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "infoClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 117,
      "startColumnNumber" : 16,
      "endLineNumber" : 117,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 46
      },
      "nodeContext" : "infoClazz.equals(Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 117,
        "startColumnNumber" : 15,
        "endLineNumber" : 117,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!infoClazz.equals(Object.class)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!infoClazz.equals(Object.class)) {\n  final Field[] fields=infoClazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (field.isSynthetic()) {\n      continue;\n    }\n    final int modifiers=field.getModifiers();\n    if (Modifier.isStatic(modifiers)) {\n      continue;\n    }\n    if (!field.isAccessible()) {\n      field.setAccessible(true);\n    }\n    try {\n      field.set(destObj,field.get(srcObj));\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  infoClazz=infoClazz.getSuperclass();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 112,
        "startColumnNumber" : 61,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T>void copyInstanceFields(T srcObj,T destObj){\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 117,
        "startColumnNumber" : 15,
        "endLineNumber" : 117,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!infoClazz.equals(Object.class)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  }, {
    "nodeContext" : "infoClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 118,
      "startColumnNumber" : 35,
      "endLineNumber" : 118,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 118,
        "startColumnNumber" : 35,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "infoClazz.getDeclaredFields()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 118,
        "startColumnNumber" : 26,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "fields=infoClazz.getDeclaredFields()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final Field[] fields=infoClazz.getDeclaredFields();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 117,
        "startColumnNumber" : 48,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Field[] fields=infoClazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (field.isSynthetic()) {\n      continue;\n    }\n    final int modifiers=field.getModifiers();\n    if (Modifier.isStatic(modifiers)) {\n      continue;\n    }\n    if (!field.isAccessible()) {\n      field.setAccessible(true);\n    }\n    try {\n      field.set(destObj,field.get(srcObj));\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  infoClazz=infoClazz.getSuperclass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!infoClazz.equals(Object.class)) {\n  final Field[] fields=infoClazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (field.isSynthetic()) {\n      continue;\n    }\n    final int modifiers=field.getModifiers();\n    if (Modifier.isStatic(modifiers)) {\n      continue;\n    }\n    if (!field.isAccessible()) {\n      field.setAccessible(true);\n    }\n    try {\n      field.set(destObj,field.get(srcObj));\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  infoClazz=infoClazz.getSuperclass();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 112,
        "startColumnNumber" : 61,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T>void copyInstanceFields(T srcObj,T destObj){\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final Field[] fields=infoClazz.getDeclaredFields();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  }, {
    "nodeContext" : "infoClazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 136,
      "startColumnNumber" : 24,
      "endLineNumber" : 136,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 136,
        "startColumnNumber" : 24,
        "endLineNumber" : 136,
        "endColumnNumber" : 49
      },
      "nodeContext" : "infoClazz.getSuperclass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 49
      },
      "nodeContext" : "infoClazz=infoClazz.getSuperclass()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 50
      },
      "nodeContext" : "infoClazz=infoClazz.getSuperclass();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 117,
        "startColumnNumber" : 48,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Field[] fields=infoClazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (field.isSynthetic()) {\n      continue;\n    }\n    final int modifiers=field.getModifiers();\n    if (Modifier.isStatic(modifiers)) {\n      continue;\n    }\n    if (!field.isAccessible()) {\n      field.setAccessible(true);\n    }\n    try {\n      field.set(destObj,field.get(srcObj));\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  infoClazz=infoClazz.getSuperclass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!infoClazz.equals(Object.class)) {\n  final Field[] fields=infoClazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (field.isSynthetic()) {\n      continue;\n    }\n    final int modifiers=field.getModifiers();\n    if (Modifier.isStatic(modifiers)) {\n      continue;\n    }\n    if (!field.isAccessible()) {\n      field.setAccessible(true);\n    }\n    try {\n      field.set(destObj,field.get(srcObj));\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  infoClazz=infoClazz.getSuperclass();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 112,
        "startColumnNumber" : 61,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T>void copyInstanceFields(T srcObj,T destObj){\n  if (srcObj == null || destObj == null) {\n    return;\n  }\n  Class<?> infoClazz=srcObj.getClass();\n  while (!infoClazz.equals(Object.class)) {\n    final Field[] fields=infoClazz.getDeclaredFields();\n    for (    Field field : fields) {\n      if (field.isSynthetic()) {\n        continue;\n      }\n      final int modifiers=field.getModifiers();\n      if (Modifier.isStatic(modifiers)) {\n        continue;\n      }\n      if (!field.isAccessible()) {\n        field.setAccessible(true);\n      }\n      try {\n        field.set(destObj,field.get(srcObj));\n      }\n catch (      Throwable ignored) {\n      }\n    }\n    infoClazz=infoClazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 50
      },
      "nodeContext" : "infoClazz=infoClazz.getSuperclass();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 117,
    "startColumnNumber" : 16,
    "endLineNumber" : 117,
    "endColumnNumber" : 25
  }, {
    "charLength" : 9,
    "startLineNumber" : 118,
    "startColumnNumber" : 35,
    "endLineNumber" : 118,
    "endColumnNumber" : 44
  }, {
    "charLength" : 9,
    "startLineNumber" : 136,
    "startColumnNumber" : 24,
    "endLineNumber" : 136,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}