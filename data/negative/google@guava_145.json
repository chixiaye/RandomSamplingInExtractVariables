{
  "id" : 145,
  "expression" : "din",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/hash/BloomFilter.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "din",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 605,
      "startColumnNumber" : 24,
      "endLineNumber" : 605,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 605,
        "startColumnNumber" : 24,
        "endLineNumber" : 605,
        "endColumnNumber" : 38
      },
      "nodeContext" : "din.readByte()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 605,
        "startColumnNumber" : 6,
        "endLineNumber" : 605,
        "endColumnNumber" : 38
      },
      "nodeContext" : "strategyOrdinal=din.readByte()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 605,
        "startColumnNumber" : 6,
        "endLineNumber" : 605,
        "endColumnNumber" : 39
      },
      "nodeContext" : "strategyOrdinal=din.readByte();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 600,
        "startColumnNumber" : 8,
        "endLineNumber" : 615,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 600,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n catch (RuntimeException e) {\n  String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n  throw new IOException(message,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 594,
        "startColumnNumber" : 67,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1991,
        "startLineNumber" : 582,
        "startColumnNumber" : 2,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a byte stream, which was written by  {@linkplain #writeTo(OutputStream)}, into a  {@code BloomFilter}. <p>The  {@code Funnel} to be used is not encoded in the stream, so it must be provided here.<b>Warning:</b> the funnel provided <b>must</b> behave identically to the one used to populate the original Bloom filter!\n * @throws IOException if the InputStream throws an {@code IOException}, or if its data does not appear to be a BloomFilter serialized using the  {@linkplain #writeTo(OutputStream)} method.\n */\npublic static <T extends @Nullable Object>BloomFilter<T> readFrom(InputStream in,Funnel<? super T> funnel) throws IOException {\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 605,
        "startColumnNumber" : 6,
        "endLineNumber" : 605,
        "endColumnNumber" : 39
      },
      "nodeContext" : "strategyOrdinal=din.readByte();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInputStream"
  }, {
    "nodeContext" : "din",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 606,
      "startColumnNumber" : 45,
      "endLineNumber" : 606,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 606,
        "startColumnNumber" : 45,
        "endLineNumber" : 606,
        "endColumnNumber" : 59
      },
      "nodeContext" : "din.readByte()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 606,
        "startColumnNumber" : 25,
        "endLineNumber" : 606,
        "endColumnNumber" : 60
      },
      "nodeContext" : "UnsignedBytes.toInt(din.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 606,
        "startColumnNumber" : 6,
        "endLineNumber" : 606,
        "endColumnNumber" : 60
      },
      "nodeContext" : "numHashFunctions=UnsignedBytes.toInt(din.readByte())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 606,
        "startColumnNumber" : 6,
        "endLineNumber" : 606,
        "endColumnNumber" : 61
      },
      "nodeContext" : "numHashFunctions=UnsignedBytes.toInt(din.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 600,
        "startColumnNumber" : 8,
        "endLineNumber" : 615,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 600,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n catch (RuntimeException e) {\n  String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n  throw new IOException(message,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 594,
        "startColumnNumber" : 67,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1991,
        "startLineNumber" : 582,
        "startColumnNumber" : 2,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a byte stream, which was written by  {@linkplain #writeTo(OutputStream)}, into a  {@code BloomFilter}. <p>The  {@code Funnel} to be used is not encoded in the stream, so it must be provided here.<b>Warning:</b> the funnel provided <b>must</b> behave identically to the one used to populate the original Bloom filter!\n * @throws IOException if the InputStream throws an {@code IOException}, or if its data does not appear to be a BloomFilter serialized using the  {@linkplain #writeTo(OutputStream)} method.\n */\npublic static <T extends @Nullable Object>BloomFilter<T> readFrom(InputStream in,Funnel<? super T> funnel) throws IOException {\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 606,
        "startColumnNumber" : 6,
        "endLineNumber" : 606,
        "endColumnNumber" : 61
      },
      "nodeContext" : "numHashFunctions=UnsignedBytes.toInt(din.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInputStream"
  }, {
    "nodeContext" : "din",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 607,
      "startColumnNumber" : 19,
      "endLineNumber" : 607,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 607,
        "startColumnNumber" : 19,
        "endLineNumber" : 607,
        "endColumnNumber" : 32
      },
      "nodeContext" : "din.readInt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 607,
        "startColumnNumber" : 6,
        "endLineNumber" : 607,
        "endColumnNumber" : 32
      },
      "nodeContext" : "dataLength=din.readInt()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 607,
        "startColumnNumber" : 6,
        "endLineNumber" : 607,
        "endColumnNumber" : 33
      },
      "nodeContext" : "dataLength=din.readInt();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 600,
        "startColumnNumber" : 8,
        "endLineNumber" : 615,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 600,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n catch (RuntimeException e) {\n  String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n  throw new IOException(message,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 594,
        "startColumnNumber" : 67,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1991,
        "startLineNumber" : 582,
        "startColumnNumber" : 2,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a byte stream, which was written by  {@linkplain #writeTo(OutputStream)}, into a  {@code BloomFilter}. <p>The  {@code Funnel} to be used is not encoded in the stream, so it must be provided here.<b>Warning:</b> the funnel provided <b>must</b> behave identically to the one used to populate the original Bloom filter!\n * @throws IOException if the InputStream throws an {@code IOException}, or if its data does not appear to be a BloomFilter serialized using the  {@linkplain #writeTo(OutputStream)} method.\n */\npublic static <T extends @Nullable Object>BloomFilter<T> readFrom(InputStream in,Funnel<? super T> funnel) throws IOException {\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 607,
        "startColumnNumber" : 6,
        "endLineNumber" : 607,
        "endColumnNumber" : 33
      },
      "nodeContext" : "dataLength=din.readInt();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInputStream"
  }, {
    "nodeContext" : "din",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 612,
      "startColumnNumber" : 18,
      "endLineNumber" : 612,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 612,
        "startColumnNumber" : 18,
        "endLineNumber" : 612,
        "endColumnNumber" : 32
      },
      "nodeContext" : "din.readLong()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 612,
        "startColumnNumber" : 8,
        "endLineNumber" : 612,
        "endColumnNumber" : 32
      },
      "nodeContext" : "data[i]=din.readLong()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 612,
        "startColumnNumber" : 8,
        "endLineNumber" : 612,
        "endColumnNumber" : 33
      },
      "nodeContext" : "data[i]=din.readLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 611,
        "startColumnNumber" : 44,
        "endLineNumber" : 613,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  data[i]=din.readLong();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 611,
        "startColumnNumber" : 6,
        "endLineNumber" : 613,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < data.length; i++) {\n  data[i]=din.readLong();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 600,
        "startColumnNumber" : 8,
        "endLineNumber" : 615,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 600,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataInputStream din=new DataInputStream(in);\n  strategyOrdinal=din.readByte();\n  numHashFunctions=UnsignedBytes.toInt(din.readByte());\n  dataLength=din.readInt();\n  Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n  long[] data=new long[dataLength];\n  for (int i=0; i < data.length; i++) {\n    data[i]=din.readLong();\n  }\n  return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n}\n catch (RuntimeException e) {\n  String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n  throw new IOException(message,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 594,
        "startColumnNumber" : 67,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1991,
        "startLineNumber" : 582,
        "startColumnNumber" : 2,
        "endLineNumber" : 626,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a byte stream, which was written by  {@linkplain #writeTo(OutputStream)}, into a  {@code BloomFilter}. <p>The  {@code Funnel} to be used is not encoded in the stream, so it must be provided here.<b>Warning:</b> the funnel provided <b>must</b> behave identically to the one used to populate the original Bloom filter!\n * @throws IOException if the InputStream throws an {@code IOException}, or if its data does not appear to be a BloomFilter serialized using the  {@linkplain #writeTo(OutputStream)} method.\n */\npublic static <T extends @Nullable Object>BloomFilter<T> readFrom(InputStream in,Funnel<? super T> funnel) throws IOException {\n  checkNotNull(in,\"InputStream\");\n  checkNotNull(funnel,\"Funnel\");\n  int strategyOrdinal=-1;\n  int numHashFunctions=-1;\n  int dataLength=-1;\n  try {\n    DataInputStream din=new DataInputStream(in);\n    strategyOrdinal=din.readByte();\n    numHashFunctions=UnsignedBytes.toInt(din.readByte());\n    dataLength=din.readInt();\n    Strategy strategy=BloomFilterStrategies.values()[strategyOrdinal];\n    long[] data=new long[dataLength];\n    for (int i=0; i < data.length; i++) {\n      data[i]=din.readLong();\n    }\n    return new BloomFilter<T>(new LockFreeBitArray(data),numHashFunctions,funnel,strategy);\n  }\n catch (  RuntimeException e) {\n    String message=\"Unable to deserialize BloomFilter from InputStream.\" + \" strategyOrdinal: \" + strategyOrdinal + \" numHashFunctions: \"+ numHashFunctions+ \" dataLength: \"+ dataLength;\n    throw new IOException(message,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 612,
        "startColumnNumber" : 8,
        "endLineNumber" : 612,
        "endColumnNumber" : 33
      },
      "nodeContext" : "data[i]=din.readLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 605,
    "startColumnNumber" : 24,
    "endLineNumber" : 605,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 606,
    "startColumnNumber" : 45,
    "endLineNumber" : 606,
    "endColumnNumber" : 48
  }, {
    "charLength" : 3,
    "startLineNumber" : 607,
    "startColumnNumber" : 19,
    "endLineNumber" : 607,
    "endColumnNumber" : 22
  }, {
    "charLength" : 3,
    "startLineNumber" : 612,
    "startColumnNumber" : 18,
    "endLineNumber" : 612,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}