{
  "id" : 78,
  "expression" : "ShareConstants.RES_LARGE_MOD_TITLE",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader-no-op/src/main/java/com/tencent/tinker/loader/shareutil/ShareResPatchInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ShareConstants.RES_LARGE_MOD_TITLE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 81,
      "startColumnNumber" : 39,
      "endLineNumber" : 81,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 81,
        "startColumnNumber" : 23,
        "endLineNumber" : 81,
        "endColumnNumber" : 74
      },
      "nodeContext" : "line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 81,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    String nextLine=lines[i + 1];\n    final String[] data=nextLine.split(\",\",3);\n    String name=data[0];\n    LargeModeInfo largeModeInfo=new LargeModeInfo();\n    largeModeInfo.md5=data[1];\n    largeModeInfo.crc=Long.parseLong(data[2]);\n    info.largeModRes.add(name);\n    info.largeModMap.put(name,largeModeInfo);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.deleteRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.storeRes.put(lines[i + 1],null);\n    i++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 219,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1687,
        "startLineNumber" : 74,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.modRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    String nextLine=lines[i + 1];\n    final String[] data=nextLine.split(\",\",3);\n    String name=data[0];\n    LargeModeInfo largeModeInfo=new LargeModeInfo();\n    largeModeInfo.md5=data[1];\n    largeModeInfo.crc=Long.parseLong(data[2]);\n    info.largeModRes.add(name);\n    info.largeModMap.put(name,largeModeInfo);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.deleteRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.storeRes.put(lines[i + 1],null);\n    i++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 271,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 67,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.addRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.modRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    String nextLine=lines[i + 1];\n    final String[] data=nextLine.split(\",\",3);\n    String name=data[0];\n    LargeModeInfo largeModeInfo=new LargeModeInfo();\n    largeModeInfo.md5=data[1];\n    largeModeInfo.crc=Long.parseLong(data[2]);\n    info.largeModRes.add(name);\n    info.largeModMap.put(name,largeModeInfo);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.deleteRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.storeRes.put(lines[i + 1],null);\n    i++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 323,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2351,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.patterns.add(convertToPatternString(lines[i + 1]));\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.addRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.modRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    String nextLine=lines[i + 1];\n    final String[] data=nextLine.split(\",\",3);\n    String name=data[0];\n    LargeModeInfo largeModeInfo=new LargeModeInfo();\n    largeModeInfo.md5=data[1];\n    largeModeInfo.crc=Long.parseLong(data[2]);\n    info.largeModRes.add(name);\n    info.largeModMap.put(name,largeModeInfo);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.deleteRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.storeRes.put(lines[i + 1],null);\n    i++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 377,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (line.startsWith(ShareConstants.RES_TITLE)) {\n  final String[] kv=line.split(\",\",3);\n  info.arscBaseCrc=kv[1];\n  info.resArscMd5=kv[2];\n}\n else if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.patterns.add(convertToPatternString(lines[i + 1]));\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.addRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.modRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    String nextLine=lines[i + 1];\n    final String[] data=nextLine.split(\",\",3);\n    String name=data[0];\n    LargeModeInfo largeModeInfo=new LargeModeInfo();\n    largeModeInfo.md5=data[1];\n    largeModeInfo.crc=Long.parseLong(data[2]);\n    info.largeModRes.add(name);\n    info.largeModMap.put(name,largeModeInfo);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.deleteRes.add(lines[i + 1]);\n    i++;\n  }\n}\n else if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n  final String[] kv=line.split(\":\",2);\n  int size=Integer.parseInt(kv[1]);\n  for (; size > 0; size--) {\n    info.storeRes.put(lines[i + 1],null);\n    i++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 414,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2712,
        "startLineNumber" : 51,
        "startColumnNumber" : 47,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String line=lines[i];\n  if (line == null || line.length() <= 0) {\n    continue;\n  }\n  if (line.startsWith(ShareConstants.RES_TITLE)) {\n    final String[] kv=line.split(\",\",3);\n    info.arscBaseCrc=kv[1];\n    info.resArscMd5=kv[2];\n  }\n else   if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.patterns.add(convertToPatternString(lines[i + 1]));\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.addRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.modRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      String nextLine=lines[i + 1];\n      final String[] data=nextLine.split(\",\",3);\n      String name=data[0];\n      LargeModeInfo largeModeInfo=new LargeModeInfo();\n      largeModeInfo.md5=data[1];\n      largeModeInfo.crc=Long.parseLong(data[2]);\n      info.largeModRes.add(name);\n      info.largeModMap.put(name,largeModeInfo);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.deleteRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.storeRes.put(lines[i + 1],null);\n      i++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 435,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < lines.length; i++) {\n  String line=lines[i];\n  if (line == null || line.length() <= 0) {\n    continue;\n  }\n  if (line.startsWith(ShareConstants.RES_TITLE)) {\n    final String[] kv=line.split(\",\",3);\n    info.arscBaseCrc=kv[1];\n    info.resArscMd5=kv[2];\n  }\n else   if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.patterns.add(convertToPatternString(lines[i + 1]));\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.addRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.modRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      String nextLine=lines[i + 1];\n      final String[] data=nextLine.split(\",\",3);\n      String name=data[0];\n      LargeModeInfo largeModeInfo=new LargeModeInfo();\n      largeModeInfo.md5=data[1];\n      largeModeInfo.crc=Long.parseLong(data[2]);\n      info.largeModRes.add(name);\n      info.largeModMap.put(name,largeModeInfo);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.deleteRes.add(lines[i + 1]);\n      i++;\n    }\n  }\n else   if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n    final String[] kv=line.split(\":\",2);\n    int size=Integer.parseInt(kv[1]);\n    for (; size > 0; size--) {\n      info.storeRes.put(lines[i + 1],null);\n      i++;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 448,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2891,
        "startLineNumber" : 46,
        "startColumnNumber" : 81,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (meta == null || meta.length() == 0) {\n    return;\n  }\n  String[] lines=meta.split(\"\\n\");\n  for (int i=0; i < lines.length; i++) {\n    String line=lines[i];\n    if (line == null || line.length() <= 0) {\n      continue;\n    }\n    if (line.startsWith(ShareConstants.RES_TITLE)) {\n      final String[] kv=line.split(\",\",3);\n      info.arscBaseCrc=kv[1];\n      info.resArscMd5=kv[2];\n    }\n else     if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.patterns.add(convertToPatternString(lines[i + 1]));\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.addRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.modRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        String nextLine=lines[i + 1];\n        final String[] data=nextLine.split(\",\",3);\n        String name=data[0];\n        LargeModeInfo largeModeInfo=new LargeModeInfo();\n        largeModeInfo.md5=data[1];\n        largeModeInfo.crc=Long.parseLong(data[2]);\n        info.largeModRes.add(name);\n        info.largeModMap.put(name,largeModeInfo);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.deleteRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.storeRes.put(lines[i + 1],null);\n        i++;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 472,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void parseAllResPatchInfo(String meta,ShareResPatchInfo info){\n  if (meta == null || meta.length() == 0) {\n    return;\n  }\n  String[] lines=meta.split(\"\\n\");\n  for (int i=0; i < lines.length; i++) {\n    String line=lines[i];\n    if (line == null || line.length() <= 0) {\n      continue;\n    }\n    if (line.startsWith(ShareConstants.RES_TITLE)) {\n      final String[] kv=line.split(\",\",3);\n      info.arscBaseCrc=kv[1];\n      info.resArscMd5=kv[2];\n    }\n else     if (line.startsWith(ShareConstants.RES_PATTERN_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.patterns.add(convertToPatternString(lines[i + 1]));\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_ADD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.addRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_MOD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.modRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        String nextLine=lines[i + 1];\n        final String[] data=nextLine.split(\",\",3);\n        String name=data[0];\n        LargeModeInfo largeModeInfo=new LargeModeInfo();\n        largeModeInfo.md5=data[1];\n        largeModeInfo.crc=Long.parseLong(data[2]);\n        info.largeModRes.add(name);\n        info.largeModMap.put(name,largeModeInfo);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_DEL_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.deleteRes.add(lines[i + 1]);\n        i++;\n      }\n    }\n else     if (line.startsWith(ShareConstants.RES_STORE_TITLE)) {\n      final String[] kv=line.split(\":\",2);\n      int size=Integer.parseInt(kv[1]);\n      for (; size > 0; size--) {\n        info.storeRes.put(lines[i + 1],null);\n        i++;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 485,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 81,
        "startColumnNumber" : 23,
        "endLineNumber" : 81,
        "endColumnNumber" : 74
      },
      "nodeContext" : "line.startsWith(ShareConstants.RES_LARGE_MOD_TITLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 81,
    "startColumnNumber" : 39,
    "endLineNumber" : 81,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}