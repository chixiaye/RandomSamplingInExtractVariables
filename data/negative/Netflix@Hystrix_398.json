{
  "id" : 398,
  "expression" : "\"commands\"",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-serialization/src/main/java/com/netflix/hystrix/serial/SerialHystrixUtilization.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"commands\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 59,
      "startColumnNumber" : 39,
      "endLineNumber" : 59,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "json.writeObjectFieldStart(\"commands\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 51
      },
      "nodeContext" : "json.writeObjectFieldStart(\"commands\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  json.writeStartObject();\n  json.writeStringField(\"type\",\"HystrixUtilization\");\n  json.writeObjectFieldStart(\"commands\");\n  for (  Map.Entry<HystrixCommandKey,HystrixCommandUtilization> entry : utilization.getCommandUtilizationMap().entrySet()) {\n    final HystrixCommandKey key=entry.getKey();\n    final HystrixCommandUtilization commandUtilization=entry.getValue();\n    writeCommandUtilizationJson(json,key,commandUtilization);\n  }\n  json.writeEndObject();\n  json.writeObjectFieldStart(\"threadpools\");\n  for (  Map.Entry<HystrixThreadPoolKey,HystrixThreadPoolUtilization> entry : utilization.getThreadPoolUtilizationMap().entrySet()) {\n    final HystrixThreadPoolKey threadPoolKey=entry.getKey();\n    final HystrixThreadPoolUtilization threadPoolUtilization=entry.getValue();\n    writeThreadPoolUtilizationJson(json,threadPoolKey,threadPoolUtilization);\n  }\n  json.writeEndObject();\n  json.writeEndObject();\n  json.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  json.writeStartObject();\n  json.writeStringField(\"type\",\"HystrixUtilization\");\n  json.writeObjectFieldStart(\"commands\");\n  for (  Map.Entry<HystrixCommandKey,HystrixCommandUtilization> entry : utilization.getCommandUtilizationMap().entrySet()) {\n    final HystrixCommandKey key=entry.getKey();\n    final HystrixCommandUtilization commandUtilization=entry.getValue();\n    writeCommandUtilizationJson(json,key,commandUtilization);\n  }\n  json.writeEndObject();\n  json.writeObjectFieldStart(\"threadpools\");\n  for (  Map.Entry<HystrixThreadPoolKey,HystrixThreadPoolUtilization> entry : utilization.getThreadPoolUtilizationMap().entrySet()) {\n    final HystrixThreadPoolKey threadPoolKey=entry.getKey();\n    final HystrixThreadPoolUtilization threadPoolUtilization=entry.getValue();\n    writeThreadPoolUtilizationJson(json,threadPoolKey,threadPoolUtilization);\n  }\n  json.writeEndObject();\n  json.writeEndObject();\n  json.close();\n}\n catch (Exception e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 55,
        "startColumnNumber" : 97,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    json.writeStartObject();\n    json.writeStringField(\"type\",\"HystrixUtilization\");\n    json.writeObjectFieldStart(\"commands\");\n    for (    Map.Entry<HystrixCommandKey,HystrixCommandUtilization> entry : utilization.getCommandUtilizationMap().entrySet()) {\n      final HystrixCommandKey key=entry.getKey();\n      final HystrixCommandUtilization commandUtilization=entry.getValue();\n      writeCommandUtilizationJson(json,key,commandUtilization);\n    }\n    json.writeEndObject();\n    json.writeObjectFieldStart(\"threadpools\");\n    for (    Map.Entry<HystrixThreadPoolKey,HystrixThreadPoolUtilization> entry : utilization.getThreadPoolUtilizationMap().entrySet()) {\n      final HystrixThreadPoolKey threadPoolKey=entry.getKey();\n      final HystrixThreadPoolUtilization threadPoolUtilization=entry.getValue();\n      writeThreadPoolUtilizationJson(json,threadPoolKey,threadPoolUtilization);\n    }\n    json.writeEndObject();\n    json.writeEndObject();\n    json.close();\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1329,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void serializeUtilization(HystrixUtilization utilization,JsonGenerator json){\n  try {\n    json.writeStartObject();\n    json.writeStringField(\"type\",\"HystrixUtilization\");\n    json.writeObjectFieldStart(\"commands\");\n    for (    Map.Entry<HystrixCommandKey,HystrixCommandUtilization> entry : utilization.getCommandUtilizationMap().entrySet()) {\n      final HystrixCommandKey key=entry.getKey();\n      final HystrixCommandUtilization commandUtilization=entry.getValue();\n      writeCommandUtilizationJson(json,key,commandUtilization);\n    }\n    json.writeEndObject();\n    json.writeObjectFieldStart(\"threadpools\");\n    for (    Map.Entry<HystrixThreadPoolKey,HystrixThreadPoolUtilization> entry : utilization.getThreadPoolUtilizationMap().entrySet()) {\n      final HystrixThreadPoolKey threadPoolKey=entry.getKey();\n      final HystrixThreadPoolUtilization threadPoolUtilization=entry.getValue();\n      writeThreadPoolUtilizationJson(json,threadPoolKey,threadPoolUtilization);\n    }\n    json.writeEndObject();\n    json.writeEndObject();\n    json.close();\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 51
      },
      "nodeContext" : "json.writeObjectFieldStart(\"commands\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 59,
    "startColumnNumber" : 39,
    "endLineNumber" : 59,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}