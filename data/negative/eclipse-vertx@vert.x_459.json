{
  "id" : 459,
  "expression" : "setter.getParameterTypes()[0]",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/impl/launcher/commands/BareCommand.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "setter.getParameterTypes()[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 259,
      "startColumnNumber" : 27,
      "endLineNumber" : 259,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 259,
        "startColumnNumber" : 17,
        "endLineNumber" : 259,
        "endColumnNumber" : 56
      },
      "nodeContext" : "argType=setter.getParameterTypes()[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 259,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Class<?> argType=setter.getParameterTypes()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 252,
        "startColumnNumber" : 39,
        "endLineNumber" : 283,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String fieldName=propName.substring(prefix.length());\n  Method setter=getSetter(fieldName,options.getClass());\n  if (setter == null) {\n    log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n    continue;\n  }\n  Class<?> argType=setter.getParameterTypes()[0];\n  Object arg;\n  try {\n    if (argType.equals(String.class)) {\n      arg=propVal;\n    }\n else     if (argType.equals(int.class)) {\n      arg=Integer.valueOf(propVal);\n    }\n else     if (argType.equals(long.class)) {\n      arg=Long.valueOf(propVal);\n    }\n else     if (argType.equals(boolean.class)) {\n      arg=Boolean.valueOf(propVal);\n    }\n else {\n      log.warn(\"Invalid type for setter: \" + argType);\n      continue;\n    }\n  }\n catch (  IllegalArgumentException e2) {\n    log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n    continue;\n  }\n  try {\n    setter.invoke(options,arg);\n  }\n catch (  Exception ex) {\n    throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 252,
        "startColumnNumber" : 6,
        "endLineNumber" : 283,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (propName.startsWith(prefix)) {\n  String fieldName=propName.substring(prefix.length());\n  Method setter=getSetter(fieldName,options.getClass());\n  if (setter == null) {\n    log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n    continue;\n  }\n  Class<?> argType=setter.getParameterTypes()[0];\n  Object arg;\n  try {\n    if (argType.equals(String.class)) {\n      arg=propVal;\n    }\n else     if (argType.equals(int.class)) {\n      arg=Integer.valueOf(propVal);\n    }\n else     if (argType.equals(long.class)) {\n      arg=Long.valueOf(propVal);\n    }\n else     if (argType.equals(boolean.class)) {\n      arg=Boolean.valueOf(propVal);\n    }\n else {\n      log.warn(\"Invalid type for setter: \" + argType);\n      continue;\n    }\n  }\n catch (  IllegalArgumentException e2) {\n    log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n    continue;\n  }\n  try {\n    setter.invoke(options,arg);\n  }\n catch (  Exception ex) {\n    throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 173,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1395,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String propName=(String)e.nextElement();\n  String propVal=props.getProperty(propName);\n  if (propName.startsWith(prefix)) {\n    String fieldName=propName.substring(prefix.length());\n    Method setter=getSetter(fieldName,options.getClass());\n    if (setter == null) {\n      log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n      continue;\n    }\n    Class<?> argType=setter.getParameterTypes()[0];\n    Object arg;\n    try {\n      if (argType.equals(String.class)) {\n        arg=propVal;\n      }\n else       if (argType.equals(int.class)) {\n        arg=Integer.valueOf(propVal);\n      }\n else       if (argType.equals(long.class)) {\n        arg=Long.valueOf(propVal);\n      }\n else       if (argType.equals(boolean.class)) {\n        arg=Boolean.valueOf(propVal);\n      }\n else {\n        log.warn(\"Invalid type for setter: \" + argType);\n        continue;\n      }\n    }\n catch (    IllegalArgumentException e2) {\n      log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n      continue;\n    }\n    try {\n      setter.invoke(options,arg);\n    }\n catch (    Exception ex) {\n      throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1423,
        "startLineNumber" : 249,
        "startColumnNumber" : 4,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (e.hasMoreElements()) {\n  String propName=(String)e.nextElement();\n  String propVal=props.getProperty(propName);\n  if (propName.startsWith(prefix)) {\n    String fieldName=propName.substring(prefix.length());\n    Method setter=getSetter(fieldName,options.getClass());\n    if (setter == null) {\n      log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n      continue;\n    }\n    Class<?> argType=setter.getParameterTypes()[0];\n    Object arg;\n    try {\n      if (argType.equals(String.class)) {\n        arg=propVal;\n      }\n else       if (argType.equals(int.class)) {\n        arg=Integer.valueOf(propVal);\n      }\n else       if (argType.equals(long.class)) {\n        arg=Long.valueOf(propVal);\n      }\n else       if (argType.equals(boolean.class)) {\n        arg=Boolean.valueOf(propVal);\n      }\n else {\n        log.warn(\"Invalid type for setter: \" + argType);\n        continue;\n      }\n    }\n catch (    IllegalArgumentException e2) {\n      log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n      continue;\n    }\n    try {\n      setter.invoke(options,arg);\n    }\n catch (    Exception ex) {\n      throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 198,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1551,
        "startLineNumber" : 245,
        "startColumnNumber" : 78,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Properties props=System.getProperties();\n  Enumeration e=props.propertyNames();\n  while (e.hasMoreElements()) {\n    String propName=(String)e.nextElement();\n    String propVal=props.getProperty(propName);\n    if (propName.startsWith(prefix)) {\n      String fieldName=propName.substring(prefix.length());\n      Method setter=getSetter(fieldName,options.getClass());\n      if (setter == null) {\n        log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n        continue;\n      }\n      Class<?> argType=setter.getParameterTypes()[0];\n      Object arg;\n      try {\n        if (argType.equals(String.class)) {\n          arg=propVal;\n        }\n else         if (argType.equals(int.class)) {\n          arg=Integer.valueOf(propVal);\n        }\n else         if (argType.equals(long.class)) {\n          arg=Long.valueOf(propVal);\n        }\n else         if (argType.equals(boolean.class)) {\n          arg=Boolean.valueOf(propVal);\n        }\n else {\n          log.warn(\"Invalid type for setter: \" + argType);\n          continue;\n        }\n      }\n catch (      IllegalArgumentException e2) {\n        log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n        continue;\n      }\n      try {\n        setter.invoke(options,arg);\n      }\n catch (      Exception ex) {\n        throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1627,
        "startLineNumber" : 245,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected void configureFromSystemProperties(Object options,String prefix){\n  Properties props=System.getProperties();\n  Enumeration e=props.propertyNames();\n  while (e.hasMoreElements()) {\n    String propName=(String)e.nextElement();\n    String propVal=props.getProperty(propName);\n    if (propName.startsWith(prefix)) {\n      String fieldName=propName.substring(prefix.length());\n      Method setter=getSetter(fieldName,options.getClass());\n      if (setter == null) {\n        log.warn(\"No such property to configure on options: \" + options.getClass().getName() + \".\"+ fieldName);\n        continue;\n      }\n      Class<?> argType=setter.getParameterTypes()[0];\n      Object arg;\n      try {\n        if (argType.equals(String.class)) {\n          arg=propVal;\n        }\n else         if (argType.equals(int.class)) {\n          arg=Integer.valueOf(propVal);\n        }\n else         if (argType.equals(long.class)) {\n          arg=Long.valueOf(propVal);\n        }\n else         if (argType.equals(boolean.class)) {\n          arg=Boolean.valueOf(propVal);\n        }\n else {\n          log.warn(\"Invalid type for setter: \" + argType);\n          continue;\n        }\n      }\n catch (      IllegalArgumentException e2) {\n        log.warn(\"Invalid argtype:\" + argType + \" on options: \"+ options.getClass().getName()+ \".\"+ fieldName);\n        continue;\n      }\n      try {\n        setter.invoke(options,arg);\n      }\n catch (      Exception ex) {\n        throw new VertxException(\"Failed to invoke setter: \" + setter,ex);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 259,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Class<?> argType=setter.getParameterTypes()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 259,
    "startColumnNumber" : 27,
    "endLineNumber" : 259,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}