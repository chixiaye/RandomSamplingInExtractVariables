{
  "id" : 118,
  "expression" : "Map",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/eventbus/DeliveryOptions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 76,
      "startColumnNumber" : 11,
      "endLineNumber" : 76,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 76,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 76,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 76,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Map.Entry<String,Object>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 76,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : hdrs) {\n  if (!(entry.getValue() instanceof String)) {\n    throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n  }\n  headers.set(entry.getKey(),(String)entry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hdrs != null) {\n  headers=new CaseInsensitiveHeaders();\n  for (  Map.Entry<String,Object> entry : hdrs) {\n    if (!(entry.getValue() instanceof String)) {\n      throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n    }\n    headers.set(entry.getKey(),(String)entry.getValue());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a delivery options from JSON\n * @param json  the JSON\n */\npublic DeliveryOptions(JsonObject json){\n  this.timeout=json.getLong(\"timeout\",DEFAULT_TIMEOUT);\n  this.codecName=json.getString(\"codecName\",null);\n  JsonObject hdrs=json.getJsonObject(\"headers\",null);\n  if (hdrs != null) {\n    headers=new CaseInsensitiveHeaders();\n    for (    Map.Entry<String,Object> entry : hdrs) {\n      if (!(entry.getValue() instanceof String)) {\n        throw new IllegalStateException(\"Invalid type for message header value \" + entry.getValue().getClass());\n      }\n      headers.set(entry.getKey(),(String)entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 76,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 76,
    "startColumnNumber" : 11,
    "endLineNumber" : 76,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}