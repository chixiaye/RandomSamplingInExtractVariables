{
  "id" : 266,
  "expression" : "result",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/loadbalance/ConsistentHashLoadBalanceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 69,
      "startColumnNumber" : 36,
      "endLineNumber" : 69,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assertions.assertEquals(result,finalInvoker)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assertions.assertEquals(result,finalInvoker);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 65,
        "startColumnNumber" : 38,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  routerChain.setInvokers(invokers);\n  List<Invoker<LoadBalanceBaseTest>> routeInvokers=routerChain.route(url,invocation);\n  Invoker<LoadBalanceBaseTest> finalInvoker=lb.select(routeInvokers,url,invocation);\n  Assertions.assertEquals(result,finalInvoker);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  routerChain.setInvokers(invokers);\n  List<Invoker<LoadBalanceBaseTest>> routeInvokers=routerChain.route(url,invocation);\n  Invoker<LoadBalanceBaseTest> finalInvoker=lb.select(routeInvokers,url,invocation);\n  Assertions.assertEquals(result,finalInvoker);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 59,
        "startColumnNumber" : 39,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LoadBalance lb=getLoadBalance(ConsistentHashLoadBalance.NAME);\n  URL url=invokers.get(0).getUrl();\n  RouterChain<LoadBalanceBaseTest> routerChain=RouterChain.buildChain(url);\n  Invoker<LoadBalanceBaseTest> result=lb.select(invokers,url,invocation);\n  for (int i=0; i < 100; i++) {\n    routerChain.setInvokers(invokers);\n    List<Invoker<LoadBalanceBaseTest>> routeInvokers=routerChain.route(url,invocation);\n    Invoker<LoadBalanceBaseTest> finalInvoker=lb.select(routeInvokers,url,invocation);\n    Assertions.assertEquals(result,finalInvoker);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testNormalWhenRouterEnabled(){\n  LoadBalance lb=getLoadBalance(ConsistentHashLoadBalance.NAME);\n  URL url=invokers.get(0).getUrl();\n  RouterChain<LoadBalanceBaseTest> routerChain=RouterChain.buildChain(url);\n  Invoker<LoadBalanceBaseTest> result=lb.select(invokers,url,invocation);\n  for (int i=0; i < 100; i++) {\n    routerChain.setInvokers(invokers);\n    List<Invoker<LoadBalanceBaseTest>> routeInvokers=routerChain.route(url,invocation);\n    Invoker<LoadBalanceBaseTest> finalInvoker=lb.select(routeInvokers,url,invocation);\n    Assertions.assertEquals(result,finalInvoker);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assertions.assertEquals(result,finalInvoker);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.Invoker<org.apache.dubbo.rpc.cluster.loadbalance.LoadBalanceBaseTest>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 69,
    "startColumnNumber" : 36,
    "endLineNumber" : 69,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}