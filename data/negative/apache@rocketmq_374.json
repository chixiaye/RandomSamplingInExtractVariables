{
  "id" : 374,
  "expression" : "filterDatas",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/broker/src/test/java/org/apache/rocketmq/broker/filter/CommitLogDispatcherCalcBitMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filterDatas",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 167,
      "startColumnNumber" : 49,
      "endLineNumber" : 167,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 167,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ConsumerFilterData filterData : filterDatas) {\n  if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n    try {\n      assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n      assertThat(true).isFalse();\n    }\n  }\n else {\n    try {\n      assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n      assertThat(true).isFalse();\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1882,
        "startLineNumber" : 138,
        "startColumnNumber" : 37,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,String> properties=new HashMap<String,String>(4);\n  properties.put(\"a\",String.valueOf(i * 10 + 5));\n  String topic=\"topic\" + i;\n  DispatchRequest dispatchRequest=new DispatchRequest(topic,0,i * 100 + 123,100,(long)(\"tags\" + i).hashCode(),System.currentTimeMillis(),i,null,UUID.randomUUID().toString(),0,0,properties);\n  calcBitMap.dispatch(dispatchRequest);\n  assertThat(dispatchRequest.getBitMap()).isNotNull();\n  BitsArray bits=BitsArray.create(dispatchRequest.getBitMap());\n  Collection<ConsumerFilterData> filterDatas=filterManager.get(topic);\n  for (  ConsumerFilterData filterData : filterDatas) {\n    if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n      try {\n        assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n      }\n catch (      Exception e) {\n        e.printStackTrace();\n        assertThat(true).isFalse();\n      }\n    }\n else {\n      try {\n        assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n      }\n catch (      Exception e) {\n        e.printStackTrace();\n        assertThat(true).isFalse();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  Map<String,String> properties=new HashMap<String,String>(4);\n  properties.put(\"a\",String.valueOf(i * 10 + 5));\n  String topic=\"topic\" + i;\n  DispatchRequest dispatchRequest=new DispatchRequest(topic,0,i * 100 + 123,100,(long)(\"tags\" + i).hashCode(),System.currentTimeMillis(),i,null,UUID.randomUUID().toString(),0,0,properties);\n  calcBitMap.dispatch(dispatchRequest);\n  assertThat(dispatchRequest.getBitMap()).isNotNull();\n  BitsArray bits=BitsArray.create(dispatchRequest.getBitMap());\n  Collection<ConsumerFilterData> filterDatas=filterManager.get(topic);\n  for (  ConsumerFilterData filterData : filterDatas) {\n    if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n      try {\n        assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n      }\n catch (      Exception e) {\n        e.printStackTrace();\n        assertThat(true).isFalse();\n      }\n    }\n else {\n      try {\n        assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n      }\n catch (      Exception e) {\n        e.printStackTrace();\n        assertThat(true).isFalse();\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 214,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2252,
        "startLineNumber" : 129,
        "startColumnNumber" : 31,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BrokerConfig brokerConfig=new BrokerConfig();\n  brokerConfig.setEnableCalcFilterBitMap(true);\n  ConsumerFilterManager filterManager=ConsumerFilterManagerTest.gen(10,10);\n  CommitLogDispatcherCalcBitMap calcBitMap=new CommitLogDispatcherCalcBitMap(brokerConfig,filterManager);\n  for (int i=0; i < 10; i++) {\n    Map<String,String> properties=new HashMap<String,String>(4);\n    properties.put(\"a\",String.valueOf(i * 10 + 5));\n    String topic=\"topic\" + i;\n    DispatchRequest dispatchRequest=new DispatchRequest(topic,0,i * 100 + 123,100,(long)(\"tags\" + i).hashCode(),System.currentTimeMillis(),i,null,UUID.randomUUID().toString(),0,0,properties);\n    calcBitMap.dispatch(dispatchRequest);\n    assertThat(dispatchRequest.getBitMap()).isNotNull();\n    BitsArray bits=BitsArray.create(dispatchRequest.getBitMap());\n    Collection<ConsumerFilterData> filterDatas=filterManager.get(topic);\n    for (    ConsumerFilterData filterData : filterDatas) {\n      if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n        try {\n          assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          assertThat(true).isFalse();\n        }\n      }\n else {\n        try {\n          assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          assertThat(true).isFalse();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2289,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDispatch(){\n  BrokerConfig brokerConfig=new BrokerConfig();\n  brokerConfig.setEnableCalcFilterBitMap(true);\n  ConsumerFilterManager filterManager=ConsumerFilterManagerTest.gen(10,10);\n  CommitLogDispatcherCalcBitMap calcBitMap=new CommitLogDispatcherCalcBitMap(brokerConfig,filterManager);\n  for (int i=0; i < 10; i++) {\n    Map<String,String> properties=new HashMap<String,String>(4);\n    properties.put(\"a\",String.valueOf(i * 10 + 5));\n    String topic=\"topic\" + i;\n    DispatchRequest dispatchRequest=new DispatchRequest(topic,0,i * 100 + 123,100,(long)(\"tags\" + i).hashCode(),System.currentTimeMillis(),i,null,UUID.randomUUID().toString(),0,0,properties);\n    calcBitMap.dispatch(dispatchRequest);\n    assertThat(dispatchRequest.getBitMap()).isNotNull();\n    BitsArray bits=BitsArray.create(dispatchRequest.getBitMap());\n    Collection<ConsumerFilterData> filterDatas=filterManager.get(topic);\n    for (    ConsumerFilterData filterData : filterDatas) {\n      if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n        try {\n          assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          assertThat(true).isFalse();\n        }\n      }\n else {\n        try {\n          assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          assertThat(true).isFalse();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 167,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ConsumerFilterData filterData : filterDatas) {\n  if (filterManager.getBloomFilter().isHit(filterData.getBloomFilterData(),bits)) {\n    try {\n      assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isTrue();\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n      assertThat(true).isFalse();\n    }\n  }\n else {\n    try {\n      assertThat((Boolean)filterData.getCompiledExpression().evaluate(new MessageEvaluationContext(properties))).isFalse();\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n      assertThat(true).isFalse();\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 14
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.apache.rocketmq.broker.filter.ConsumerFilterData>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 167,
    "startColumnNumber" : 49,
    "endLineNumber" : 167,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}