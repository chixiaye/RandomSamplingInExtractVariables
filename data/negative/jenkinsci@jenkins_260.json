{
  "id" : 260,
  "expression" : "input.replace(\"\\r\\n\",\"\\n\")",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/util/LineEndingConversion.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input.replace(\"\\r\\n\",\"\\n\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 40,
      "startColumnNumber" : 16,
      "endLineNumber" : 40,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "input=input.replace(\"\\r\\n\",\"\\n\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 43
      },
      "nodeContext" : "input=input.replace(\"\\r\\n\",\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 34,
        "startColumnNumber" : 64,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == input || 0 == input.length()) {\n    return input;\n  }\n  input=input.replace(\"\\r\\n\",\"\\n\");\n  input=input.replace('\\r','\\n');\nswitch (type) {\ncase CR:case Mac:    input=input.replace('\\n','\\r');\n  break;\ncase CRLF:case Windows:input=input.replace(\"\\n\",\"\\r\\n\");\nbreak;\ndefault:case LF:case Unix:return input;\ncase LFCR:input=input.replace(\"\\n\",\"\\n\\r\");\nbreak;\n}\nreturn input;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Convert line endings of a string to the given type.  Default to Unix type.\n * @param input The string containing line endings to be converted.\n * @param type Type of line endings to convert the string into.\n * @return String updated with the new line endings or null if given null.\n */\npublic static String convertEOL(String input,EOLType type){\n  if (null == input || 0 == input.length()) {\n    return input;\n  }\n  input=input.replace(\"\\r\\n\",\"\\n\");\n  input=input.replace('\\r','\\n');\nswitch (type) {\ncase CR:case Mac:    input=input.replace('\\n','\\r');\n  break;\ncase CRLF:case Windows:input=input.replace(\"\\n\",\"\\r\\n\");\nbreak;\ndefault:case LF:case Unix:return input;\ncase LFCR:input=input.replace(\"\\n\",\"\\n\\r\");\nbreak;\n}\nreturn input;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 43
      },
      "nodeContext" : "input=input.replace(\"\\r\\n\",\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 40,
    "startColumnNumber" : 16,
    "endLineNumber" : 40,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}