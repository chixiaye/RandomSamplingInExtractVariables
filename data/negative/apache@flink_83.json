{
  "id" : 83,
  "expression" : "Integer.class",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-java/src/test/java/org/apache/flink/api/java/summarize/aggregation/SummaryAggregatorFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 48,
      "startColumnNumber" : 48,
      "endLineNumber" : 48,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 62
      },
      "nodeContext" : "SummaryAggregatorFactory.create(Integer.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 73
      },
      "nodeContext" : "SummaryAggregatorFactory.create(Integer.class).getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(IntegerSummaryAggregator.class,SummaryAggregatorFactory.create(Integer.class).getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(IntegerSummaryAggregator.class,SummaryAggregatorFactory.create(Integer.class).getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 38,
        "startColumnNumber" : 46,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(StringSummaryAggregator.class,SummaryAggregatorFactory.create(String.class).getClass());\n  Assert.assertEquals(ShortSummaryAggregator.class,SummaryAggregatorFactory.create(Short.class).getClass());\n  Assert.assertEquals(IntegerSummaryAggregator.class,SummaryAggregatorFactory.create(Integer.class).getClass());\n  Assert.assertEquals(LongSummaryAggregator.class,SummaryAggregatorFactory.create(Long.class).getClass());\n  Assert.assertEquals(FloatSummaryAggregator.class,SummaryAggregatorFactory.create(Float.class).getClass());\n  Assert.assertEquals(DoubleSummaryAggregator.class,SummaryAggregatorFactory.create(Double.class).getClass());\n  Assert.assertEquals(BooleanSummaryAggregator.class,SummaryAggregatorFactory.create(Boolean.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.StringValueSummaryAggregator.class,SummaryAggregatorFactory.create(StringValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.ShortValueSummaryAggregator.class,SummaryAggregatorFactory.create(ShortValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.IntegerValueSummaryAggregator.class,SummaryAggregatorFactory.create(IntValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.LongValueSummaryAggregator.class,SummaryAggregatorFactory.create(LongValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.FloatValueSummaryAggregator.class,SummaryAggregatorFactory.create(FloatValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.DoubleValueSummaryAggregator.class,SummaryAggregatorFactory.create(DoubleValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.BooleanValueSummaryAggregator.class,SummaryAggregatorFactory.create(BooleanValue.class).getClass());\n  Assert.assertEquals(ObjectSummaryAggregator.class,SummaryAggregatorFactory.create(Object.class).getClass());\n  Assert.assertEquals(ObjectSummaryAggregator.class,SummaryAggregatorFactory.create(List.class).getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2849,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreate() throws Exception {\n  Assert.assertEquals(StringSummaryAggregator.class,SummaryAggregatorFactory.create(String.class).getClass());\n  Assert.assertEquals(ShortSummaryAggregator.class,SummaryAggregatorFactory.create(Short.class).getClass());\n  Assert.assertEquals(IntegerSummaryAggregator.class,SummaryAggregatorFactory.create(Integer.class).getClass());\n  Assert.assertEquals(LongSummaryAggregator.class,SummaryAggregatorFactory.create(Long.class).getClass());\n  Assert.assertEquals(FloatSummaryAggregator.class,SummaryAggregatorFactory.create(Float.class).getClass());\n  Assert.assertEquals(DoubleSummaryAggregator.class,SummaryAggregatorFactory.create(Double.class).getClass());\n  Assert.assertEquals(BooleanSummaryAggregator.class,SummaryAggregatorFactory.create(Boolean.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.StringValueSummaryAggregator.class,SummaryAggregatorFactory.create(StringValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.ShortValueSummaryAggregator.class,SummaryAggregatorFactory.create(ShortValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.IntegerValueSummaryAggregator.class,SummaryAggregatorFactory.create(IntValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.LongValueSummaryAggregator.class,SummaryAggregatorFactory.create(LongValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.FloatValueSummaryAggregator.class,SummaryAggregatorFactory.create(FloatValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.DoubleValueSummaryAggregator.class,SummaryAggregatorFactory.create(DoubleValue.class).getClass());\n  Assert.assertEquals(ValueSummaryAggregator.BooleanValueSummaryAggregator.class,SummaryAggregatorFactory.create(BooleanValue.class).getClass());\n  Assert.assertEquals(ObjectSummaryAggregator.class,SummaryAggregatorFactory.create(Object.class).getClass());\n  Assert.assertEquals(ObjectSummaryAggregator.class,SummaryAggregatorFactory.create(List.class).getClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 73
      },
      "nodeContext" : "SummaryAggregatorFactory.create(Integer.class).getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 48,
    "startColumnNumber" : 48,
    "endLineNumber" : 48,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}