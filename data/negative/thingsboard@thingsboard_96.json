{
  "id" : 96,
  "expression" : "nodeDefinition",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/component/AnnotationComponentDiscoveryService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nodeDefinition",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 166,
      "startColumnNumber" : 55,
      "endLineNumber" : 166,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 166,
        "startColumnNumber" : 36,
        "endLineNumber" : 166,
        "endColumnNumber" : 70
      },
      "nodeContext" : "mapper.valueToTree(nodeDefinition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 166,
        "startColumnNumber" : 29,
        "endLineNumber" : 166,
        "endColumnNumber" : 70
      },
      "nodeContext" : "node=mapper.valueToTree(nodeDefinition)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 71
      },
      "nodeContext" : "JsonNode node=mapper.valueToTree(nodeDefinition);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (type) {\ncase ENRICHMENT:case FILTER:case TRANSFORMATION:case ACTION:case EXTERNAL:  RuleNode ruleNodeAnnotation=clazz.getAnnotation(RuleNode.class);\nscannedComponent.setName(ruleNodeAnnotation.name());\nscannedComponent.setScope(ruleNodeAnnotation.scope());\nNodeDefinition nodeDefinition=prepareNodeDefinition(ruleNodeAnnotation);\nObjectNode configurationDescriptor=mapper.createObjectNode();\nJsonNode node=mapper.valueToTree(nodeDefinition);\nconfigurationDescriptor.set(\"nodeDefinition\",node);\nscannedComponent.setConfigurationDescriptor(configurationDescriptor);\nbreak;\ndefault:throw new RuntimeException(type + \" is not supported yet!\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  scannedComponent.setType(type);\n  Class<?> clazz=Class.forName(clazzName);\nswitch (type) {\ncase ENRICHMENT:case FILTER:case TRANSFORMATION:case ACTION:case EXTERNAL:    RuleNode ruleNodeAnnotation=clazz.getAnnotation(RuleNode.class);\n  scannedComponent.setName(ruleNodeAnnotation.name());\nscannedComponent.setScope(ruleNodeAnnotation.scope());\nNodeDefinition nodeDefinition=prepareNodeDefinition(ruleNodeAnnotation);\nObjectNode configurationDescriptor=mapper.createObjectNode();\nJsonNode node=mapper.valueToTree(nodeDefinition);\nconfigurationDescriptor.set(\"nodeDefinition\",node);\nscannedComponent.setConfigurationDescriptor(configurationDescriptor);\nbreak;\ndefault:throw new RuntimeException(type + \" is not supported yet!\");\n}\nscannedComponent.setClazz(clazzName);\nlog.info(\"Processing scanned component: {}\",scannedComponent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1408,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  scannedComponent.setType(type);\n  Class<?> clazz=Class.forName(clazzName);\nswitch (type) {\ncase ENRICHMENT:case FILTER:case TRANSFORMATION:case ACTION:case EXTERNAL:    RuleNode ruleNodeAnnotation=clazz.getAnnotation(RuleNode.class);\n  scannedComponent.setName(ruleNodeAnnotation.name());\nscannedComponent.setScope(ruleNodeAnnotation.scope());\nNodeDefinition nodeDefinition=prepareNodeDefinition(ruleNodeAnnotation);\nObjectNode configurationDescriptor=mapper.createObjectNode();\nJsonNode node=mapper.valueToTree(nodeDefinition);\nconfigurationDescriptor.set(\"nodeDefinition\",node);\nscannedComponent.setConfigurationDescriptor(configurationDescriptor);\nbreak;\ndefault:throw new RuntimeException(type + \" is not supported yet!\");\n}\nscannedComponent.setClazz(clazzName);\nlog.info(\"Processing scanned component: {}\",scannedComponent);\n}\n catch (Exception e) {\nlog.error(\"Can't initialize component {}, due to {}\",def.getBeanClassName(),e.getMessage(),e);\nthrow new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2545,
        "startLineNumber" : 149,
        "startColumnNumber" : 96,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ComponentDescriptor scannedComponent=new ComponentDescriptor();\n  String clazzName=def.getBeanClassName();\n  try {\n    scannedComponent.setType(type);\n    Class<?> clazz=Class.forName(clazzName);\nswitch (type) {\ncase ENRICHMENT:case FILTER:case TRANSFORMATION:case ACTION:case EXTERNAL:      RuleNode ruleNodeAnnotation=clazz.getAnnotation(RuleNode.class);\n    scannedComponent.setName(ruleNodeAnnotation.name());\n  scannedComponent.setScope(ruleNodeAnnotation.scope());\nNodeDefinition nodeDefinition=prepareNodeDefinition(ruleNodeAnnotation);\nObjectNode configurationDescriptor=mapper.createObjectNode();\nJsonNode node=mapper.valueToTree(nodeDefinition);\nconfigurationDescriptor.set(\"nodeDefinition\",node);\nscannedComponent.setConfigurationDescriptor(configurationDescriptor);\nbreak;\ndefault:throw new RuntimeException(type + \" is not supported yet!\");\n}\nscannedComponent.setClazz(clazzName);\nlog.info(\"Processing scanned component: {}\",scannedComponent);\n}\n catch (Exception e) {\nlog.error(\"Can't initialize component {}, due to {}\",def.getBeanClassName(),e.getMessage(),e);\nthrow new RuntimeException(e);\n}\nComponentDescriptor persistedComponent=componentDescriptorService.findByClazz(TenantId.SYS_TENANT_ID,clazzName);\nif (persistedComponent == null) {\nlog.info(\"Persisting new component: {}\",scannedComponent);\nscannedComponent=componentDescriptorService.saveComponent(TenantId.SYS_TENANT_ID,scannedComponent);\n}\n else if (scannedComponent.equals(persistedComponent)) {\nlog.info(\"Component is already persisted: {}\",persistedComponent);\nscannedComponent=persistedComponent;\n}\n else {\nlog.info(\"Component {} will be updated to {}\",persistedComponent,scannedComponent);\ncomponentDescriptorService.deleteByClazz(TenantId.SYS_TENANT_ID,persistedComponent.getClazz());\nscannedComponent.setId(persistedComponent.getId());\nscannedComponent=componentDescriptorService.saveComponent(TenantId.SYS_TENANT_ID,scannedComponent);\n}\nreturn scannedComponent;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2637,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private ComponentDescriptor scanAndPersistComponent(BeanDefinition def,ComponentType type){\n  ComponentDescriptor scannedComponent=new ComponentDescriptor();\n  String clazzName=def.getBeanClassName();\n  try {\n    scannedComponent.setType(type);\n    Class<?> clazz=Class.forName(clazzName);\nswitch (type) {\ncase ENRICHMENT:case FILTER:case TRANSFORMATION:case ACTION:case EXTERNAL:      RuleNode ruleNodeAnnotation=clazz.getAnnotation(RuleNode.class);\n    scannedComponent.setName(ruleNodeAnnotation.name());\n  scannedComponent.setScope(ruleNodeAnnotation.scope());\nNodeDefinition nodeDefinition=prepareNodeDefinition(ruleNodeAnnotation);\nObjectNode configurationDescriptor=mapper.createObjectNode();\nJsonNode node=mapper.valueToTree(nodeDefinition);\nconfigurationDescriptor.set(\"nodeDefinition\",node);\nscannedComponent.setConfigurationDescriptor(configurationDescriptor);\nbreak;\ndefault:throw new RuntimeException(type + \" is not supported yet!\");\n}\nscannedComponent.setClazz(clazzName);\nlog.info(\"Processing scanned component: {}\",scannedComponent);\n}\n catch (Exception e) {\nlog.error(\"Can't initialize component {}, due to {}\",def.getBeanClassName(),e.getMessage(),e);\nthrow new RuntimeException(e);\n}\nComponentDescriptor persistedComponent=componentDescriptorService.findByClazz(TenantId.SYS_TENANT_ID,clazzName);\nif (persistedComponent == null) {\nlog.info(\"Persisting new component: {}\",scannedComponent);\nscannedComponent=componentDescriptorService.saveComponent(TenantId.SYS_TENANT_ID,scannedComponent);\n}\n else if (scannedComponent.equals(persistedComponent)) {\nlog.info(\"Component is already persisted: {}\",persistedComponent);\nscannedComponent=persistedComponent;\n}\n else {\nlog.info(\"Component {} will be updated to {}\",persistedComponent,scannedComponent);\ncomponentDescriptorService.deleteByClazz(TenantId.SYS_TENANT_ID,persistedComponent.getClazz());\nscannedComponent.setId(persistedComponent.getId());\nscannedComponent=componentDescriptorService.saveComponent(TenantId.SYS_TENANT_ID,scannedComponent);\n}\nreturn scannedComponent;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 71
      },
      "nodeContext" : "JsonNode node=mapper.valueToTree(nodeDefinition);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.rule.engine.api.NodeDefinition"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 166,
    "startColumnNumber" : 55,
    "endLineNumber" : 166,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}