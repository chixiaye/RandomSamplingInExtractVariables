{
  "id" : 411,
  "expression" : "xpp",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/util/XmlPullParserUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "xpp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 38,
      "startColumnNumber" : 20,
      "endLineNumber" : 38,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 38,
        "startColumnNumber" : 11,
        "endLineNumber" : 38,
        "endColumnNumber" : 24
      },
      "nodeContext" : "isEndTag(xpp)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 38,
        "startColumnNumber" : 11,
        "endLineNumber" : 38,
        "endColumnNumber" : 54
      },
      "nodeContext" : "isEndTag(xpp) && xpp.getName().equals(name)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return isEndTag(xpp) && xpp.getName().equals(name);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 37,
        "startColumnNumber" : 95,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return isEndTag(xpp) && xpp.getName().equals(name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns whether the current event is an end tag with the specified name.\n * @param xpp The {@link XmlPullParser} to query.\n * @param name The specified name.\n * @return Whether the current event is an end tag with the specified name.\n * @throws XmlPullParserException If an error occurs querying the parser.\n */\npublic static boolean isEndTag(XmlPullParser xpp,String name) throws XmlPullParserException {\n  return isEndTag(xpp) && xpp.getName().equals(name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 28,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return isEndTag(xpp) && xpp.getName().equals(name);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.util.XmlPullParser"
  }, {
    "nodeContext" : "xpp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 38,
      "startColumnNumber" : 28,
      "endLineNumber" : 38,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 38,
        "startColumnNumber" : 28,
        "endLineNumber" : 38,
        "endColumnNumber" : 41
      },
      "nodeContext" : "xpp.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 38,
        "startColumnNumber" : 28,
        "endLineNumber" : 38,
        "endColumnNumber" : 54
      },
      "nodeContext" : "xpp.getName().equals(name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 38,
        "startColumnNumber" : 11,
        "endLineNumber" : 38,
        "endColumnNumber" : 54
      },
      "nodeContext" : "isEndTag(xpp) && xpp.getName().equals(name)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return isEndTag(xpp) && xpp.getName().equals(name);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 37,
        "startColumnNumber" : 95,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return isEndTag(xpp) && xpp.getName().equals(name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns whether the current event is an end tag with the specified name.\n * @param xpp The {@link XmlPullParser} to query.\n * @param name The specified name.\n * @return Whether the current event is an end tag with the specified name.\n * @throws XmlPullParserException If an error occurs querying the parser.\n */\npublic static boolean isEndTag(XmlPullParser xpp,String name) throws XmlPullParserException {\n  return isEndTag(xpp) && xpp.getName().equals(name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 28,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 55
      },
      "nodeContext" : "return isEndTag(xpp) && xpp.getName().equals(name);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.util.XmlPullParser"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 38,
    "startColumnNumber" : 20,
    "endLineNumber" : 38,
    "endColumnNumber" : 23
  }, {
    "charLength" : 3,
    "startLineNumber" : 38,
    "startColumnNumber" : 28,
    "endLineNumber" : 38,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}