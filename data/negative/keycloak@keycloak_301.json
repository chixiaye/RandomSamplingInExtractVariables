{
  "id" : 301,
  "expression" : "System",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/model/infinispan/src/test/java/org/keycloak/models/sessions/infinispan/initializer/DistributedCacheWriteSkewTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 86,
      "startColumnNumber" : 21,
      "endLineNumber" : 86,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 86,
        "startColumnNumber" : 21,
        "endLineNumber" : 86,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 86,
        "startColumnNumber" : 13,
        "endLineNumber" : 86,
        "endColumnNumber" : 47
      },
      "nodeContext" : "start=System.currentTimeMillis()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 48
      },
      "nodeContext" : "long start=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 48
      },
      "nodeContext" : "long start=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 88,
      "startColumnNumber" : 8,
      "endLineNumber" : 88,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 53
      },
      "nodeContext" : "System.out.println(\"Started clustering test\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"Started clustering test\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"Started clustering test\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 97,
      "startColumnNumber" : 20,
      "endLineNumber" : 97,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 97,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 46
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.currentTimeMillis() - start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 97,
        "startColumnNumber" : 13,
        "endLineNumber" : 97,
        "endColumnNumber" : 54
      },
      "nodeContext" : "took=System.currentTimeMillis() - start",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 55
      },
      "nodeContext" : "long took=System.currentTimeMillis() - start;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 55
      },
      "nodeContext" : "long took=System.currentTimeMillis() - start;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 99,
      "startColumnNumber" : 8,
      "endLineNumber" : 99,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 152
      },
      "nodeContext" : "System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 153
      },
      "nodeContext" : "System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 153
      },
      "nodeContext" : "System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 103,
      "startColumnNumber" : 8,
      "endLineNumber" : 103,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 72
      },
      "nodeContext" : "System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 33,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 112,
      "startColumnNumber" : 8,
      "endLineNumber" : 112,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 45
      },
      "nodeContext" : "System.out.println(\"Managers killed\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 46
      },
      "nodeContext" : "System.out.println(\"Managers killed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2498,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Cache<String,UserSessionEntity> cache1=createManager(\"node1\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  Cache<String,UserSessionEntity> cache2=createManager(\"node2\").getCache(InfinispanConnectionProvider.USER_SESSION_CACHE_NAME);\n  UserSessionEntity session=new UserSessionEntity();\n  session.setId(\"123\");\n  session.setRealmId(\"foo\");\n  session.setBrokerSessionId(\"!23123123\");\n  session.setBrokerUserId(null);\n  session.setUser(\"foo\");\n  session.setLoginUsername(\"foo\");\n  session.setIpAddress(\"123.44.143.178\");\n  session.setStarted(Time.currentTime());\n  session.setLastSessionRefresh(Time.currentTime());\n  AuthenticatedClientSessionEntity clientSession=new AuthenticatedClientSessionEntity(UUID.randomUUID());\n  clientSession.setAuthMethod(\"saml\");\n  clientSession.setAction(\"something\");\n  clientSession.setTimestamp(1234);\n  session.getAuthenticatedClientSessions().put(CLIENT_1_UUID.toString(),clientSession.getId());\n  cache1.put(\"123\",session);\n  Worker worker1=new Worker(1,cache1);\n  Worker worker2=new Worker(2,cache2);\n  long start=System.currentTimeMillis();\n  System.out.println(\"Started clustering test\");\n  worker1.start();\n  worker2.start();\n  worker1.join();\n  worker2.join();\n  long took=System.currentTimeMillis() - start;\n  session=cache1.get(\"123\");\n  System.out.println(\"Took: \" + took + \" ms. Notes count: \"+ session.getNotes().size()+ \", failedReplaceCounter: \"+ failedReplaceCounter.get());\n  JChannel channel=(JChannel)((JGroupsTransport)cache1.getAdvancedCache().getRpcManager().getTransport()).getChannel();\n  System.out.println(\"Sent MB: \" + channel.getSentBytes() / 1000000 + \", sent messages: \" + channel.getSentMessages() + \", received MB: \" + channel.getReceivedBytes() / 1000000 + \", received messages: \" + channel.getReceivedMessages());\n  cache1.stop();\n  cache2.stop();\n  cache1.getCacheManager().stop();\n  cache2.getCacheManager().stop();\n  System.out.println(\"Managers killed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 46
      },
      "nodeContext" : "System.out.println(\"Managers killed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 86,
    "startColumnNumber" : 21,
    "endLineNumber" : 86,
    "endColumnNumber" : 27
  }, {
    "charLength" : 6,
    "startLineNumber" : 88,
    "startColumnNumber" : 8,
    "endLineNumber" : 88,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 97,
    "startColumnNumber" : 20,
    "endLineNumber" : 97,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 99,
    "startColumnNumber" : 8,
    "endLineNumber" : 99,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 103,
    "startColumnNumber" : 8,
    "endLineNumber" : 103,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 112,
    "startColumnNumber" : 8,
    "endLineNumber" : 112,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}