{
  "id" : 102,
  "expression" : "\"Failed to create service for function %s\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/runtime/kubernetes/KubernetesRuntime.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Failed to create service for function %s\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 477,
      "startColumnNumber" : 53,
      "endLineNumber" : 477,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 477,
        "startColumnNumber" : 39,
        "endLineNumber" : 477,
        "endColumnNumber" : 102
      },
      "nodeContext" : "String.format(\"Failed to create service for function %s\",fqfn)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 477,
        "startColumnNumber" : 18,
        "endLineNumber" : 477,
        "endColumnNumber" : 103
      },
      "nodeContext" : "new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 477,
        "startColumnNumber" : 12,
        "endLineNumber" : 477,
        "endColumnNumber" : 104
      },
      "nodeContext" : "throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 476,
        "startColumnNumber" : 28,
        "endLineNumber" : 478,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 476,
        "startColumnNumber" : 8,
        "endLineNumber" : 478,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!success.get()) {\n  throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2033,
        "startLineNumber" : 436,
        "startColumnNumber" : 50,
        "endLineNumber" : 479,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final V1Service service=createService();\n  log.info(\"Submitting the following service to k8 {}\",coreClient.getApiClient().getJSON().serialize(service));\n  String fqfn=FunctionCommon.getFullyQualifiedName(instanceConfig.getFunctionDetails());\n  Actions.Action createService=Actions.Action.builder().actionName(String.format(\"Submitting service for function %s\",fqfn)).numRetries(KubernetesRuntimeFactory.NUM_RETRIES).sleepBetweenInvocationsMs(KubernetesRuntimeFactory.SLEEP_BETWEEN_RETRIES_MS).supplier(() -> {\n    final V1Service response;\n    try {\n      response=coreClient.createNamespacedService(jobNamespace,service,null,null,null);\n    }\n catch (    ApiException e) {\n      if (e.getCode() == HTTP_CONFLICT) {\n        log.warn(\"Service already present for function {}\",fqfn);\n        return Actions.ActionResult.builder().success(true).build();\n      }\n      String errorMsg=e.getResponseBody() != null ? e.getResponseBody() : e.getMessage();\n      return Actions.ActionResult.builder().success(false).errorMsg(errorMsg).build();\n    }\n    return Actions.ActionResult.builder().success(true).build();\n  }\n).build();\n  AtomicBoolean success=new AtomicBoolean(false);\n  Actions.newBuilder().addAction(createService.toBuilder().onSuccess((ignored) -> success.set(true)).build()).run();\n  if (!success.get()) {\n    throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2079,
        "startLineNumber" : 436,
        "startColumnNumber" : 4,
        "endLineNumber" : 479,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void submitService() throws Exception {\n  final V1Service service=createService();\n  log.info(\"Submitting the following service to k8 {}\",coreClient.getApiClient().getJSON().serialize(service));\n  String fqfn=FunctionCommon.getFullyQualifiedName(instanceConfig.getFunctionDetails());\n  Actions.Action createService=Actions.Action.builder().actionName(String.format(\"Submitting service for function %s\",fqfn)).numRetries(KubernetesRuntimeFactory.NUM_RETRIES).sleepBetweenInvocationsMs(KubernetesRuntimeFactory.SLEEP_BETWEEN_RETRIES_MS).supplier(() -> {\n    final V1Service response;\n    try {\n      response=coreClient.createNamespacedService(jobNamespace,service,null,null,null);\n    }\n catch (    ApiException e) {\n      if (e.getCode() == HTTP_CONFLICT) {\n        log.warn(\"Service already present for function {}\",fqfn);\n        return Actions.ActionResult.builder().success(true).build();\n      }\n      String errorMsg=e.getResponseBody() != null ? e.getResponseBody() : e.getMessage();\n      return Actions.ActionResult.builder().success(false).errorMsg(errorMsg).build();\n    }\n    return Actions.ActionResult.builder().success(true).build();\n  }\n).build();\n  AtomicBoolean success=new AtomicBoolean(false);\n  Actions.newBuilder().addAction(createService.toBuilder().onSuccess((ignored) -> success.set(true)).build()).run();\n  if (!success.get()) {\n    throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 477,
        "startColumnNumber" : 12,
        "endLineNumber" : 477,
        "endColumnNumber" : 104
      },
      "nodeContext" : "throw new RuntimeException(String.format(\"Failed to create service for function %s\",fqfn));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 477,
    "startColumnNumber" : 53,
    "endLineNumber" : 477,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}