{
  "id" : 250,
  "expression" : "ELEMENT",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/remote/server/handler/interactions/touch/Flick.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ELEMENT",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 53,
      "startColumnNumber" : 34,
      "endLineNumber" : 53,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 42
      },
      "nodeContext" : "allParameters.containsKey(ELEMENT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n  elementId=(String)allParameters.get(ELEMENT);\n  try {\n    xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n  }\n  try {\n    yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n  }\n  try {\n    speed=((Number)allParameters.get(SPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n  }\n}\n else if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n  try {\n    xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n  }\n  try {\n    ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 51,
        "startColumnNumber" : 84,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void setJsonParameters(Map<String,Object> allParameters) throws Exception {\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "ELEMENT",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 53,
      "startColumnNumber" : 64,
      "endLineNumber" : 53,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 53,
        "startColumnNumber" : 46,
        "endLineNumber" : 53,
        "endColumnNumber" : 72
      },
      "nodeContext" : "allParameters.get(ELEMENT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 53,
        "startColumnNumber" : 46,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "allParameters.get(ELEMENT) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n  elementId=(String)allParameters.get(ELEMENT);\n  try {\n    xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n  }\n  try {\n    yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n  }\n  try {\n    speed=((Number)allParameters.get(SPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n  }\n}\n else if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n  try {\n    xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n  }\n  try {\n    ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 51,
        "startColumnNumber" : 84,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void setJsonParameters(Map<String,Object> allParameters) throws Exception {\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 80
      },
      "nodeContext" : "allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "ELEMENT",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 54,
      "startColumnNumber" : 45,
      "endLineNumber" : 54,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 54,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "allParameters.get(ELEMENT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 54,
        "startColumnNumber" : 18,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(String)allParameters.get(ELEMENT)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "elementId=(String)allParameters.get(ELEMENT)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "elementId=(String)allParameters.get(ELEMENT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 53,
        "startColumnNumber" : 82,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  elementId=(String)allParameters.get(ELEMENT);\n  try {\n    xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n  }\n  try {\n    yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n  }\n  try {\n    speed=((Number)allParameters.get(SPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n  elementId=(String)allParameters.get(ELEMENT);\n  try {\n    xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n  }\n  try {\n    yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n  }\n  try {\n    speed=((Number)allParameters.get(SPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n  }\n}\n else if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n  try {\n    xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n  }\n  try {\n    ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n  }\n catch (  ClassCastException ex) {\n    throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 51,
        "startColumnNumber" : 84,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void setJsonParameters(Map<String,Object> allParameters) throws Exception {\n  super.setJsonParameters(allParameters);\n  if (allParameters.containsKey(ELEMENT) && allParameters.get(ELEMENT) != null) {\n    elementId=(String)allParameters.get(ELEMENT);\n    try {\n      xOffset=((Number)allParameters.get(XOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x offset value for flick passed: \" + allParameters.get(XOFFSET),ex);\n    }\n    try {\n      yOffset=((Number)allParameters.get(YOFFSET)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y offset value for flick passed: \" + allParameters.get(YOFFSET),ex);\n    }\n    try {\n      speed=((Number)allParameters.get(SPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) speed value for flick passed: \" + allParameters.get(SPEED),ex);\n    }\n  }\n else   if (allParameters.containsKey(XSPEED) && allParameters.containsKey(YSPEED)) {\n    try {\n      xSpeed=((Number)allParameters.get(XSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) x speed value for flick passed: \" + allParameters.get(XSPEED),ex);\n    }\n    try {\n      ySpeed=((Number)allParameters.get(YSPEED)).intValue();\n    }\n catch (    ClassCastException ex) {\n      throw new WebDriverException(\"Illegal (non-numeric) y speed value for flick passed: \" + allParameters.get(YSPEED),ex);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "elementId=(String)allParameters.get(ELEMENT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 53,
    "startColumnNumber" : 34,
    "endLineNumber" : 53,
    "endColumnNumber" : 41
  }, {
    "charLength" : 7,
    "startLineNumber" : 53,
    "startColumnNumber" : 64,
    "endLineNumber" : 53,
    "endColumnNumber" : 71
  }, {
    "charLength" : 7,
    "startLineNumber" : 54,
    "startColumnNumber" : 45,
    "endLineNumber" : 54,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}