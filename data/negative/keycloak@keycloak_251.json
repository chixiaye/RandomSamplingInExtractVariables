{
  "id" : 251,
  "expression" : "registrationToken",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/url/FixedHostnameTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registrationToken",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 200,
      "startColumnNumber" : 64,
      "endLineNumber" : 200,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 200,
        "startColumnNumber" : 64,
        "endLineNumber" : 200,
        "endColumnNumber" : 93
      },
      "nodeContext" : "registrationToken.getIssuer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,registrationToken.getIssuer())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,registrationToken.getIssuer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1097,
        "startLineNumber" : 182,
        "startColumnNumber" : 175,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClientInitialAccessCreatePresentation rep=new ClientInitialAccessCreatePresentation();\n  rep.setCount(1);\n  rep.setExpiration(10000);\n  ClientInitialAccessPresentation initialAccess=testAdminClient.realm(realm).clientInitialAccess().create(rep);\n  JsonWebToken token=new JWSInput(initialAccess.getToken()).readJsonContent(JsonWebToken.class);\n  assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,token.getIssuer());\n  ClientRegistration clientReg=ClientRegistration.create().url(authServerUrl,realm).build();\n  clientReg.auth(Auth.token(initialAccess.getToken()));\n  ClientRepresentation client=new ClientRepresentation();\n  client.setEnabled(true);\n  ClientRepresentation response=clientReg.create(client);\n  String registrationAccessToken=response.getRegistrationAccessToken();\n  JsonWebToken registrationToken=new JWSInput(registrationAccessToken).readJsonContent(JsonWebToken.class);\n  assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,registrationToken.getIssuer());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 182,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInitialAccessTokenFromMasterRealm(Keycloak testAdminClient,String realm,String expectedBaseUrl) throws JWSInputException, ClientRegistrationException {\n  ClientInitialAccessCreatePresentation rep=new ClientInitialAccessCreatePresentation();\n  rep.setCount(1);\n  rep.setExpiration(10000);\n  ClientInitialAccessPresentation initialAccess=testAdminClient.realm(realm).clientInitialAccess().create(rep);\n  JsonWebToken token=new JWSInput(initialAccess.getToken()).readJsonContent(JsonWebToken.class);\n  assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,token.getIssuer());\n  ClientRegistration clientReg=ClientRegistration.create().url(authServerUrl,realm).build();\n  clientReg.auth(Auth.token(initialAccess.getToken()));\n  ClientRepresentation client=new ClientRepresentation();\n  client.setEnabled(true);\n  ClientRepresentation response=clientReg.create(client);\n  String registrationAccessToken=response.getRegistrationAccessToken();\n  JsonWebToken registrationToken=new JWSInput(registrationAccessToken).readJsonContent(JsonWebToken.class);\n  assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,registrationToken.getIssuer());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(expectedBaseUrl + \"/auth/realms/\" + realm,registrationToken.getIssuer());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.representations.JsonWebToken"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 200,
    "startColumnNumber" : 64,
    "endLineNumber" : 200,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}