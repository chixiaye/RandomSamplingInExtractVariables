{
  "id" : 297,
  "expression" : "new PatchUtilException(e)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PatchUtilException(e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 143,
      "startColumnNumber" : 18,
      "endLineNumber" : 143,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 44
      },
      "nodeContext" : "throw new PatchUtilException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 142,
        "startColumnNumber" : 30,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new PatchUtilException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 142,
        "startColumnNumber" : 10,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  throw new PatchUtilException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  FileUtil.createFile(outputIdsXmlFullFilename);\n  FileUtil.createFile(outputPublicXmlFullFilename);\n  idsWriter=new PrintWriter(new File(outputIdsXmlFullFilename),\"UTF-8\");\n  publicWriter=new PrintWriter(new File(outputPublicXmlFullFilename),\"UTF-8\");\n  idsWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n  publicWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n  idsWriter.println(\"<resources>\");\n  publicWriter.println(\"<resources>\");\n  Map<RType,Set<RDotTxtEntry>> map=aaptResourceCollector.getRTypeResourceMap();\n  Iterator<Entry<RType,Set<RDotTxtEntry>>> iterator=map.entrySet().iterator();\n  while (iterator.hasNext()) {\n    Entry<RType,Set<RDotTxtEntry>> entry=iterator.next();\n    RType rType=entry.getKey();\n    if (!rType.equals(RType.STYLEABLE)) {\n      Set<RDotTxtEntry> set=entry.getValue();\n      for (      RDotTxtEntry rDotTxtEntry : set) {\n        String rawName=aaptResourceCollector.getRawName(rType,rDotTxtEntry.name);\n        if (StringUtil.isBlank(rawName)) {\n          rawName=rDotTxtEntry.name;\n        }\n        publicWriter.println(\"<public type=\\\"\" + rType + \"\\\" name=\\\"\"+ rawName+ \"\\\" id=\\\"\"+ rDotTxtEntry.idValue.trim()+ \"\\\" />\");\n      }\n      Set<String> ignoreIdSet=aaptResourceCollector.getIgnoreIdSet();\n      for (      RDotTxtEntry rDotTxtEntry : set) {\n        if (rType.equals(RType.ID) && !ignoreIdSet.contains(rDotTxtEntry.name)) {\n          idsWriter.println(\"<item type=\\\"\" + rType + \"\\\" name=\\\"\"+ rDotTxtEntry.name+ \"\\\"/>\");\n        }\n else         if (rType.equals(RType.STYLE)) {\n          if (rDotTxtEntry.name.indexOf(Constant.Symbol.UNDERLINE) > 0) {\n          }\n        }\n      }\n    }\n    idsWriter.flush();\n    publicWriter.flush();\n  }\n  idsWriter.println(\"</resources>\");\n  publicWriter.println(\"</resources>\");\n}\n catch (Exception e) {\n  throw new PatchUtilException(e);\n}\n finally {\n  if (idsWriter != null) {\n    idsWriter.flush();\n    idsWriter.close();\n  }\n  if (publicWriter != null) {\n    publicWriter.flush();\n    publicWriter.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 311,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 89,
        "startColumnNumber" : 163,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (aaptResourceCollector == null) {\n    return;\n  }\n  FileUtil.createFile(outputIdsXmlFullFilename);\n  FileUtil.createFile(outputPublicXmlFullFilename);\n  PrintWriter idsWriter=null;\n  PrintWriter publicWriter=null;\n  try {\n    FileUtil.createFile(outputIdsXmlFullFilename);\n    FileUtil.createFile(outputPublicXmlFullFilename);\n    idsWriter=new PrintWriter(new File(outputIdsXmlFullFilename),\"UTF-8\");\n    publicWriter=new PrintWriter(new File(outputPublicXmlFullFilename),\"UTF-8\");\n    idsWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n    publicWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n    idsWriter.println(\"<resources>\");\n    publicWriter.println(\"<resources>\");\n    Map<RType,Set<RDotTxtEntry>> map=aaptResourceCollector.getRTypeResourceMap();\n    Iterator<Entry<RType,Set<RDotTxtEntry>>> iterator=map.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Entry<RType,Set<RDotTxtEntry>> entry=iterator.next();\n      RType rType=entry.getKey();\n      if (!rType.equals(RType.STYLEABLE)) {\n        Set<RDotTxtEntry> set=entry.getValue();\n        for (        RDotTxtEntry rDotTxtEntry : set) {\n          String rawName=aaptResourceCollector.getRawName(rType,rDotTxtEntry.name);\n          if (StringUtil.isBlank(rawName)) {\n            rawName=rDotTxtEntry.name;\n          }\n          publicWriter.println(\"<public type=\\\"\" + rType + \"\\\" name=\\\"\"+ rawName+ \"\\\" id=\\\"\"+ rDotTxtEntry.idValue.trim()+ \"\\\" />\");\n        }\n        Set<String> ignoreIdSet=aaptResourceCollector.getIgnoreIdSet();\n        for (        RDotTxtEntry rDotTxtEntry : set) {\n          if (rType.equals(RType.ID) && !ignoreIdSet.contains(rDotTxtEntry.name)) {\n            idsWriter.println(\"<item type=\\\"\" + rType + \"\\\" name=\\\"\"+ rDotTxtEntry.name+ \"\\\"/>\");\n          }\n else           if (rType.equals(RType.STYLE)) {\n            if (rDotTxtEntry.name.indexOf(Constant.Symbol.UNDERLINE) > 0) {\n            }\n          }\n        }\n      }\n      idsWriter.flush();\n      publicWriter.flush();\n    }\n    idsWriter.println(\"</resources>\");\n    publicWriter.println(\"</resources>\");\n  }\n catch (  Exception e) {\n    throw new PatchUtilException(e);\n  }\n finally {\n    if (idsWriter != null) {\n      idsWriter.flush();\n      idsWriter.close();\n    }\n    if (publicWriter != null) {\n      publicWriter.flush();\n      publicWriter.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 340,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3806,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * generate public resource xml\n * @param aaptResourceCollector\n * @param outputIdsXmlFullFilename\n * @param outputPublicXmlFullFilename\n */\npublic static void generatePublicResourceXml(AaptResourceCollector aaptResourceCollector,String outputIdsXmlFullFilename,String outputPublicXmlFullFilename){\n  if (aaptResourceCollector == null) {\n    return;\n  }\n  FileUtil.createFile(outputIdsXmlFullFilename);\n  FileUtil.createFile(outputPublicXmlFullFilename);\n  PrintWriter idsWriter=null;\n  PrintWriter publicWriter=null;\n  try {\n    FileUtil.createFile(outputIdsXmlFullFilename);\n    FileUtil.createFile(outputPublicXmlFullFilename);\n    idsWriter=new PrintWriter(new File(outputIdsXmlFullFilename),\"UTF-8\");\n    publicWriter=new PrintWriter(new File(outputPublicXmlFullFilename),\"UTF-8\");\n    idsWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n    publicWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\");\n    idsWriter.println(\"<resources>\");\n    publicWriter.println(\"<resources>\");\n    Map<RType,Set<RDotTxtEntry>> map=aaptResourceCollector.getRTypeResourceMap();\n    Iterator<Entry<RType,Set<RDotTxtEntry>>> iterator=map.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Entry<RType,Set<RDotTxtEntry>> entry=iterator.next();\n      RType rType=entry.getKey();\n      if (!rType.equals(RType.STYLEABLE)) {\n        Set<RDotTxtEntry> set=entry.getValue();\n        for (        RDotTxtEntry rDotTxtEntry : set) {\n          String rawName=aaptResourceCollector.getRawName(rType,rDotTxtEntry.name);\n          if (StringUtil.isBlank(rawName)) {\n            rawName=rDotTxtEntry.name;\n          }\n          publicWriter.println(\"<public type=\\\"\" + rType + \"\\\" name=\\\"\"+ rawName+ \"\\\" id=\\\"\"+ rDotTxtEntry.idValue.trim()+ \"\\\" />\");\n        }\n        Set<String> ignoreIdSet=aaptResourceCollector.getIgnoreIdSet();\n        for (        RDotTxtEntry rDotTxtEntry : set) {\n          if (rType.equals(RType.ID) && !ignoreIdSet.contains(rDotTxtEntry.name)) {\n            idsWriter.println(\"<item type=\\\"\" + rType + \"\\\" name=\\\"\"+ rDotTxtEntry.name+ \"\\\"/>\");\n          }\n else           if (rType.equals(RType.STYLE)) {\n            if (rDotTxtEntry.name.indexOf(Constant.Symbol.UNDERLINE) > 0) {\n            }\n          }\n        }\n      }\n      idsWriter.flush();\n      publicWriter.flush();\n    }\n    idsWriter.println(\"</resources>\");\n    publicWriter.println(\"</resources>\");\n  }\n catch (  Exception e) {\n    throw new PatchUtilException(e);\n  }\n finally {\n    if (idsWriter != null) {\n      idsWriter.flush();\n      idsWriter.close();\n    }\n    if (publicWriter != null) {\n      publicWriter.flush();\n      publicWriter.close();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 44
      },
      "nodeContext" : "throw new PatchUtilException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.tencent.tinker.build.aapt.PatchUtil.PatchUtilException"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 143,
    "startColumnNumber" : 18,
    "endLineNumber" : 143,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}