{
  "id" : 194,
  "expression" : "XMLUtils.parseDocument(connectionsFile)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.oracle.ui/src/org/jkiss/dbeaver/ext/oracle/ui/tools/sqldeveloper/ConfigImportWizardPageSqlDeveloper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "XMLUtils.parseDocument(connectionsFile)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 287,
      "startColumnNumber" : 38,
      "endLineNumber" : 287,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 287,
        "startColumnNumber" : 21,
        "endLineNumber" : 287,
        "endColumnNumber" : 77
      },
      "nodeContext" : "configDocument=XMLUtils.parseDocument(connectionsFile)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 287,
        "startColumnNumber" : 12,
        "endLineNumber" : 287,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Document configDocument=XMLUtils.parseDocument(connectionsFile);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2695,
        "startLineNumber" : 286,
        "startColumnNumber" : 12,
        "endLineNumber" : 333,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Document configDocument=XMLUtils.parseDocument(connectionsFile);\n  for (  Element refElement : XMLUtils.getChildElementList(configDocument.getDocumentElement(),\"Reference\")) {\n    final String conName=refElement.getAttribute(\"name\");\n    if (CommonUtils.isEmpty(conName)) {\n      continue;\n    }\n    final Map<String,String> propsMap=new LinkedHashMap<>();\n    final Element refAddressesElement=XMLUtils.getChildElement(refElement,\"RefAddresses\");\n    if (refAddressesElement != null) {\n      for (      Element refAddr : XMLUtils.getChildElementList(refAddressesElement,\"StringRefAddr\")) {\n        String addrType=refAddr.getAttribute(\"addrType\");\n        String addrContent=XMLUtils.getChildElementBody(refAddr,\"Contents\");\n        if (!CommonUtils.isEmpty(addrType) && !CommonUtils.isEmpty(addrContent)) {\n          propsMap.put(addrType,addrContent);\n        }\n      }\n    }\n    String host=propsMap.get(\"hostname\");\n    String port=propsMap.get(\"port\");\n    String sid=propsMap.get(\"sid\");\n    String serviceName=propsMap.get(\"serviceName\");\n    String user=propsMap.get(\"user\");\n    String role=propsMap.get(\"role\");\n    String osAuth=propsMap.get(\"OS_AUTHENTICATION\");\n    String url=propsMap.get(\"customUrl\");\n    if (CommonUtils.isEmpty(host) && CommonUtils.isEmpty(url)) {\n      continue;\n    }\n    String dbName=CommonUtils.isEmpty(sid) ? serviceName : sid;\n    ImportConnectionInfo connectionInfo=new ImportConnectionInfo(oraDriver,null,conName,url,host,port,dbName,user,null);\n    if (!CommonUtils.isEmpty(sid)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SID.name());\n    }\n else     if (!CommonUtils.isEmpty(serviceName)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SERVICE.name());\n    }\n    if (CommonUtils.toBoolean(osAuth)) {\n      connectionInfo.setUser(OracleConstants.OS_AUTH_PROP);\n    }\n    if (!CommonUtils.isEmpty(role)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_INTERNAL_LOGON,role);\n    }\n    importData.addConnection(connectionInfo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2817,
        "startLineNumber" : 286,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Document configDocument=XMLUtils.parseDocument(connectionsFile);\n  for (  Element refElement : XMLUtils.getChildElementList(configDocument.getDocumentElement(),\"Reference\")) {\n    final String conName=refElement.getAttribute(\"name\");\n    if (CommonUtils.isEmpty(conName)) {\n      continue;\n    }\n    final Map<String,String> propsMap=new LinkedHashMap<>();\n    final Element refAddressesElement=XMLUtils.getChildElement(refElement,\"RefAddresses\");\n    if (refAddressesElement != null) {\n      for (      Element refAddr : XMLUtils.getChildElementList(refAddressesElement,\"StringRefAddr\")) {\n        String addrType=refAddr.getAttribute(\"addrType\");\n        String addrContent=XMLUtils.getChildElementBody(refAddr,\"Contents\");\n        if (!CommonUtils.isEmpty(addrType) && !CommonUtils.isEmpty(addrContent)) {\n          propsMap.put(addrType,addrContent);\n        }\n      }\n    }\n    String host=propsMap.get(\"hostname\");\n    String port=propsMap.get(\"port\");\n    String sid=propsMap.get(\"sid\");\n    String serviceName=propsMap.get(\"serviceName\");\n    String user=propsMap.get(\"user\");\n    String role=propsMap.get(\"role\");\n    String osAuth=propsMap.get(\"OS_AUTHENTICATION\");\n    String url=propsMap.get(\"customUrl\");\n    if (CommonUtils.isEmpty(host) && CommonUtils.isEmpty(url)) {\n      continue;\n    }\n    String dbName=CommonUtils.isEmpty(sid) ? serviceName : sid;\n    ImportConnectionInfo connectionInfo=new ImportConnectionInfo(oraDriver,null,conName,url,host,port,dbName,user,null);\n    if (!CommonUtils.isEmpty(sid)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SID.name());\n    }\n else     if (!CommonUtils.isEmpty(serviceName)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SERVICE.name());\n    }\n    if (CommonUtils.toBoolean(osAuth)) {\n      connectionInfo.setUser(OracleConstants.OS_AUTH_PROP);\n    }\n    if (!CommonUtils.isEmpty(role)) {\n      connectionInfo.setProviderProperty(OracleConstants.PROP_INTERNAL_LOGON,role);\n    }\n    importData.addConnection(connectionInfo);\n  }\n}\n catch (XMLException e) {\n  throw new DBException(\"Configuration parse error: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 320,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2833,
        "startLineNumber" : 285,
        "startColumnNumber" : 98,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Document configDocument=XMLUtils.parseDocument(connectionsFile);\n    for (    Element refElement : XMLUtils.getChildElementList(configDocument.getDocumentElement(),\"Reference\")) {\n      final String conName=refElement.getAttribute(\"name\");\n      if (CommonUtils.isEmpty(conName)) {\n        continue;\n      }\n      final Map<String,String> propsMap=new LinkedHashMap<>();\n      final Element refAddressesElement=XMLUtils.getChildElement(refElement,\"RefAddresses\");\n      if (refAddressesElement != null) {\n        for (        Element refAddr : XMLUtils.getChildElementList(refAddressesElement,\"StringRefAddr\")) {\n          String addrType=refAddr.getAttribute(\"addrType\");\n          String addrContent=XMLUtils.getChildElementBody(refAddr,\"Contents\");\n          if (!CommonUtils.isEmpty(addrType) && !CommonUtils.isEmpty(addrContent)) {\n            propsMap.put(addrType,addrContent);\n          }\n        }\n      }\n      String host=propsMap.get(\"hostname\");\n      String port=propsMap.get(\"port\");\n      String sid=propsMap.get(\"sid\");\n      String serviceName=propsMap.get(\"serviceName\");\n      String user=propsMap.get(\"user\");\n      String role=propsMap.get(\"role\");\n      String osAuth=propsMap.get(\"OS_AUTHENTICATION\");\n      String url=propsMap.get(\"customUrl\");\n      if (CommonUtils.isEmpty(host) && CommonUtils.isEmpty(url)) {\n        continue;\n      }\n      String dbName=CommonUtils.isEmpty(sid) ? serviceName : sid;\n      ImportConnectionInfo connectionInfo=new ImportConnectionInfo(oraDriver,null,conName,url,host,port,dbName,user,null);\n      if (!CommonUtils.isEmpty(sid)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SID.name());\n      }\n else       if (!CommonUtils.isEmpty(serviceName)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SERVICE.name());\n      }\n      if (CommonUtils.toBoolean(osAuth)) {\n        connectionInfo.setUser(OracleConstants.OS_AUTH_PROP);\n      }\n      if (!CommonUtils.isEmpty(role)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_INTERNAL_LOGON,role);\n      }\n      importData.addConnection(connectionInfo);\n    }\n  }\n catch (  XMLException e) {\n    throw new DBException(\"Configuration parse error: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 321,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2927,
        "startLineNumber" : 285,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void parseConnections(File connectionsFile,ImportData importData) throws DBException {\n  try {\n    Document configDocument=XMLUtils.parseDocument(connectionsFile);\n    for (    Element refElement : XMLUtils.getChildElementList(configDocument.getDocumentElement(),\"Reference\")) {\n      final String conName=refElement.getAttribute(\"name\");\n      if (CommonUtils.isEmpty(conName)) {\n        continue;\n      }\n      final Map<String,String> propsMap=new LinkedHashMap<>();\n      final Element refAddressesElement=XMLUtils.getChildElement(refElement,\"RefAddresses\");\n      if (refAddressesElement != null) {\n        for (        Element refAddr : XMLUtils.getChildElementList(refAddressesElement,\"StringRefAddr\")) {\n          String addrType=refAddr.getAttribute(\"addrType\");\n          String addrContent=XMLUtils.getChildElementBody(refAddr,\"Contents\");\n          if (!CommonUtils.isEmpty(addrType) && !CommonUtils.isEmpty(addrContent)) {\n            propsMap.put(addrType,addrContent);\n          }\n        }\n      }\n      String host=propsMap.get(\"hostname\");\n      String port=propsMap.get(\"port\");\n      String sid=propsMap.get(\"sid\");\n      String serviceName=propsMap.get(\"serviceName\");\n      String user=propsMap.get(\"user\");\n      String role=propsMap.get(\"role\");\n      String osAuth=propsMap.get(\"OS_AUTHENTICATION\");\n      String url=propsMap.get(\"customUrl\");\n      if (CommonUtils.isEmpty(host) && CommonUtils.isEmpty(url)) {\n        continue;\n      }\n      String dbName=CommonUtils.isEmpty(sid) ? serviceName : sid;\n      ImportConnectionInfo connectionInfo=new ImportConnectionInfo(oraDriver,null,conName,url,host,port,dbName,user,null);\n      if (!CommonUtils.isEmpty(sid)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SID.name());\n      }\n else       if (!CommonUtils.isEmpty(serviceName)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_SID_SERVICE,OracleConnectionType.SERVICE.name());\n      }\n      if (CommonUtils.toBoolean(osAuth)) {\n        connectionInfo.setUser(OracleConstants.OS_AUTH_PROP);\n      }\n      if (!CommonUtils.isEmpty(role)) {\n        connectionInfo.setProviderProperty(OracleConstants.PROP_INTERNAL_LOGON,role);\n      }\n      importData.addConnection(connectionInfo);\n    }\n  }\n catch (  XMLException e) {\n    throw new DBException(\"Configuration parse error: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 335,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 287,
        "startColumnNumber" : 12,
        "endLineNumber" : 287,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Document configDocument=XMLUtils.parseDocument(connectionsFile);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.w3c.dom.Document"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 287,
    "startColumnNumber" : 38,
    "endLineNumber" : 287,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}