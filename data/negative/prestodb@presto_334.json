{
  "id" : 334,
  "expression" : "previousCos * sin - previousSin * cos * cosOfDeltaLongitude",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-geospatial/src/main/java/com/facebook/presto/plugin/geospatial/SphericalGeoFunctions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "previousCos * sin - previousSin * cos * cosOfDeltaLongitude",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 391,
      "startColumnNumber" : 23,
      "endLineNumber" : 391,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 391,
        "startColumnNumber" : 19,
        "endLineNumber" : 391,
        "endColumnNumber" : 82
      },
      "nodeContext" : "x=previousCos * sin - previousSin * cos * cosOfDeltaLongitude",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 391,
        "startColumnNumber" : 12,
        "endLineNumber" : 391,
        "endColumnNumber" : 83
      },
      "nodeContext" : "double x=previousCos * sin - previousSin * cos * cosOfDeltaLongitude;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 368,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkState(!done,\"Computation of spherical excess is complete\");\n  double phi=toRadians(point.getY());\n  double tan=Math.tan(phi / 2);\n  double longitude=toRadians(point.getX());\n  if (longitude == previousLongitude && phi == previousPhi) {\n    throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\"Polygon is not valid: it has two identical consecutive vertices\");\n  }\n  double deltaLongitude=longitude - previousLongitude;\n  sphericalExcess+=2 * Math.atan2(Math.tan(deltaLongitude / 2) * (previousTan + tan),1 + previousTan * tan);\n  double cos=Math.cos(phi);\n  double sin=Math.sin(phi);\n  double sinOfDeltaLongitude=Math.sin(deltaLongitude);\n  double cosOfDeltaLongitude=Math.cos(deltaLongitude);\n  double y=sinOfDeltaLongitude * cos;\n  double x=previousCos * sin - previousSin * cos * cosOfDeltaLongitude;\n  double initialBearing=(Math.atan2(y,x) + TWO_PI) % TWO_PI;\n  double finalY=-sinOfDeltaLongitude * previousCos;\n  double finalX=previousSin * cos - previousCos * sin * cosOfDeltaLongitude;\n  double finalBearing=(Math.atan2(finalY,finalX) + PI) % TWO_PI;\n  if (firstPoint) {\n    firstInitialBearing=initialBearing;\n    firstPoint=false;\n  }\n else {\n    courseDelta+=(initialBearing - previousFinalBearing + THREE_PI) % TWO_PI - PI;\n  }\n  courseDelta+=(finalBearing - initialBearing + THREE_PI) % TWO_PI - PI;\n  previousFinalBearing=finalBearing;\n  previousCos=cos;\n  previousSin=sin;\n  previousPhi=phi;\n  previousTan=tan;\n  previousLongitude=longitude;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2460,
        "startLineNumber" : 366,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private void add(Point point) throws IllegalStateException {\n  checkState(!done,\"Computation of spherical excess is complete\");\n  double phi=toRadians(point.getY());\n  double tan=Math.tan(phi / 2);\n  double longitude=toRadians(point.getX());\n  if (longitude == previousLongitude && phi == previousPhi) {\n    throw new PrestoException(INVALID_FUNCTION_ARGUMENT,\"Polygon is not valid: it has two identical consecutive vertices\");\n  }\n  double deltaLongitude=longitude - previousLongitude;\n  sphericalExcess+=2 * Math.atan2(Math.tan(deltaLongitude / 2) * (previousTan + tan),1 + previousTan * tan);\n  double cos=Math.cos(phi);\n  double sin=Math.sin(phi);\n  double sinOfDeltaLongitude=Math.sin(deltaLongitude);\n  double cosOfDeltaLongitude=Math.cos(deltaLongitude);\n  double y=sinOfDeltaLongitude * cos;\n  double x=previousCos * sin - previousSin * cos * cosOfDeltaLongitude;\n  double initialBearing=(Math.atan2(y,x) + TWO_PI) % TWO_PI;\n  double finalY=-sinOfDeltaLongitude * previousCos;\n  double finalX=previousSin * cos - previousCos * sin * cosOfDeltaLongitude;\n  double finalBearing=(Math.atan2(finalY,finalX) + PI) % TWO_PI;\n  if (firstPoint) {\n    firstInitialBearing=initialBearing;\n    firstPoint=false;\n  }\n else {\n    courseDelta+=(initialBearing - previousFinalBearing + THREE_PI) % TWO_PI - PI;\n  }\n  courseDelta+=(finalBearing - initialBearing + THREE_PI) % TWO_PI - PI;\n  previousFinalBearing=finalBearing;\n  previousCos=cos;\n  previousSin=sin;\n  previousPhi=phi;\n  previousTan=tan;\n  previousLongitude=longitude;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 391,
        "startColumnNumber" : 12,
        "endLineNumber" : 391,
        "endColumnNumber" : 83
      },
      "nodeContext" : "double x=previousCos * sin - previousSin * cos * cosOfDeltaLongitude;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 391,
    "startColumnNumber" : 23,
    "endLineNumber" : 391,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}