{
  "id" : 415,
  "expression" : "i",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/ConnectChannelHandlerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 24,
      "endLineNumber" : 49,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 49,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < runs",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < runs; i++) {\n  handler.connected(new MockedChannel());\n  handler.disconnected(new MockedChannel());\n  Assertions.assertTrue(executor.getActiveCount() <= 1,executor.getActiveCount() + \" must <=1\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 42,
        "startColumnNumber" : 64,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  handler=new ConnectionOrderedChannelHandler(new BizChannelHander(false),url);\n  ThreadPoolExecutor executor=(ThreadPoolExecutor)getField(handler,\"connectionExecutor\",1);\n  Assertions.assertEquals(1,executor.getMaximumPoolSize());\n  int runs=20;\n  int taskCount=runs * 2;\n  for (int i=0; i < runs; i++) {\n    handler.connected(new MockedChannel());\n    handler.disconnected(new MockedChannel());\n    Assertions.assertTrue(executor.getActiveCount() <= 1,executor.getActiveCount() + \" must <=1\");\n  }\n  Assertions.assertEquals(taskCount - 1,executor.getQueue().size());\n  for (int i=0; i < taskCount; i++) {\n    if (executor.getCompletedTaskCount() < taskCount) {\n      sleep(100);\n    }\n  }\n  Assertions.assertEquals(taskCount,executor.getCompletedTaskCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_Connect_Blocked() throws RemotingException {\n  handler=new ConnectionOrderedChannelHandler(new BizChannelHander(false),url);\n  ThreadPoolExecutor executor=(ThreadPoolExecutor)getField(handler,\"connectionExecutor\",1);\n  Assertions.assertEquals(1,executor.getMaximumPoolSize());\n  int runs=20;\n  int taskCount=runs * 2;\n  for (int i=0; i < runs; i++) {\n    handler.connected(new MockedChannel());\n    handler.disconnected(new MockedChannel());\n    Assertions.assertTrue(executor.getActiveCount() <= 1,executor.getActiveCount() + \" must <=1\");\n  }\n  Assertions.assertEquals(taskCount - 1,executor.getQueue().size());\n  for (int i=0; i < taskCount; i++) {\n    if (executor.getCompletedTaskCount() < taskCount) {\n      sleep(100);\n    }\n  }\n  Assertions.assertEquals(taskCount,executor.getCompletedTaskCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 49,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < runs",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 24,
      "endLineNumber" : 57,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 57,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 37
      },
      "nodeContext" : "i < taskCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < taskCount; i++) {\n  if (executor.getCompletedTaskCount() < taskCount) {\n    sleep(100);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 42,
        "startColumnNumber" : 64,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  handler=new ConnectionOrderedChannelHandler(new BizChannelHander(false),url);\n  ThreadPoolExecutor executor=(ThreadPoolExecutor)getField(handler,\"connectionExecutor\",1);\n  Assertions.assertEquals(1,executor.getMaximumPoolSize());\n  int runs=20;\n  int taskCount=runs * 2;\n  for (int i=0; i < runs; i++) {\n    handler.connected(new MockedChannel());\n    handler.disconnected(new MockedChannel());\n    Assertions.assertTrue(executor.getActiveCount() <= 1,executor.getActiveCount() + \" must <=1\");\n  }\n  Assertions.assertEquals(taskCount - 1,executor.getQueue().size());\n  for (int i=0; i < taskCount; i++) {\n    if (executor.getCompletedTaskCount() < taskCount) {\n      sleep(100);\n    }\n  }\n  Assertions.assertEquals(taskCount,executor.getCompletedTaskCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_Connect_Blocked() throws RemotingException {\n  handler=new ConnectionOrderedChannelHandler(new BizChannelHander(false),url);\n  ThreadPoolExecutor executor=(ThreadPoolExecutor)getField(handler,\"connectionExecutor\",1);\n  Assertions.assertEquals(1,executor.getMaximumPoolSize());\n  int runs=20;\n  int taskCount=runs * 2;\n  for (int i=0; i < runs; i++) {\n    handler.connected(new MockedChannel());\n    handler.disconnected(new MockedChannel());\n    Assertions.assertTrue(executor.getActiveCount() <= 1,executor.getActiveCount() + \" must <=1\");\n  }\n  Assertions.assertEquals(taskCount - 1,executor.getQueue().size());\n  for (int i=0; i < taskCount; i++) {\n    if (executor.getCompletedTaskCount() < taskCount) {\n      sleep(100);\n    }\n  }\n  Assertions.assertEquals(taskCount,executor.getCompletedTaskCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 57,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 37
      },
      "nodeContext" : "i < taskCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 24,
    "endLineNumber" : 49,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 24,
    "endLineNumber" : 57,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}