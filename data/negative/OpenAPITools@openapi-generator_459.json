{
  "id" : 459,
  "expression" : "Character.toUpperCase(item.charAt(0))",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "0023f3b7ce3eef3d50514563589bfa3dd0cd9490",
  "filePath" : "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/CppRestbedServerCodegen.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Character.toUpperCase(item.charAt(0))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 304,
      "startColumnNumber" : 49,
      "endLineNumber" : 304,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 304,
        "startColumnNumber" : 49,
        "endLineNumber" : 304,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Character.toUpperCase(item.charAt(0)) + item.substring(1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 304,
        "startColumnNumber" : 24,
        "endLineNumber" : 304,
        "endColumnNumber" : 106
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 304,
        "startColumnNumber" : 24,
        "endLineNumber" : 304,
        "endColumnNumber" : 107
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 303,
        "startColumnNumber" : 27,
        "endLineNumber" : 305,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 298,
        "startColumnNumber" : 20,
        "endLineNumber" : 305,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n  String tmpResourceName=item.substring(1,item.length() - 1);\n  resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n  item=item.substring(0,item.length() - 1);\n  item+=\": .*}\";\n}\n else {\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 297,
        "startColumnNumber" : 39,
        "endLineNumber" : 306,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n    String tmpResourceName=item.substring(1,item.length() - 1);\n    resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n    item=item.substring(0,item.length() - 1);\n    item+=\": .*}\";\n  }\n else {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 297,
        "startColumnNumber" : 16,
        "endLineNumber" : 308,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (item.length() > 1) {\n  if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n    String tmpResourceName=item.substring(1,item.length() - 1);\n    resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n    item=item.substring(0,item.length() - 1);\n    item+=\": .*}\";\n  }\n else {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n  }\n}\n else if (item.length() == 1) {\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 296,
        "startColumnNumber" : 38,
        "endLineNumber" : 310,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (item.length() > 1) {\n    if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n      String tmpResourceName=item.substring(1,item.length() - 1);\n      resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n      item=item.substring(0,item.length() - 1);\n      item+=\": .*}\";\n    }\n else {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n    }\n  }\n else   if (item.length() == 1) {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n  }\n  op.path+=item + \"/\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 296,
        "startColumnNumber" : 12,
        "endLineNumber" : 310,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String item : items) {\n  if (item.length() > 1) {\n    if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n      String tmpResourceName=item.substring(1,item.length() - 1);\n      resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n      item=item.substring(0,item.length() - 1);\n      item+=\": .*}\";\n    }\n else {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n    }\n  }\n else   if (item.length() == 1) {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n  }\n  op.path+=item + \"/\";\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2103,
        "startLineNumber" : 290,
        "startColumnNumber" : 50,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String path=op.path;\n  String[] items=path.split(\"/\",-1);\n  String resourceNameCamelCase=\"\";\n  op.path=\"\";\n  for (  String item : items) {\n    if (item.length() > 1) {\n      if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n        String tmpResourceName=item.substring(1,item.length() - 1);\n        resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n        item=item.substring(0,item.length() - 1);\n        item+=\": .*}\";\n      }\n else {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n      }\n    }\n else     if (item.length() == 1) {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n    }\n    op.path+=item + \"/\";\n  }\n  op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n  boolean foundInNewList=false;\n  for (  CodegenOperation op1 : newOpList) {\n    if (!foundInNewList) {\n      if (op1.path.equals(op.path)) {\n        foundInNewList=true;\n        final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n        List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n        if (currentOtherMethodList == null) {\n          currentOtherMethodList=new ArrayList<CodegenOperation>();\n        }\n        op.operationIdCamelCase=op1.operationIdCamelCase;\n        currentOtherMethodList.add(op);\n        op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n      }\n    }\n  }\n  if (!foundInNewList) {\n    newOpList.add(op);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (CodegenOperation op : operationList) {\n  String path=op.path;\n  String[] items=path.split(\"/\",-1);\n  String resourceNameCamelCase=\"\";\n  op.path=\"\";\n  for (  String item : items) {\n    if (item.length() > 1) {\n      if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n        String tmpResourceName=item.substring(1,item.length() - 1);\n        resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n        item=item.substring(0,item.length() - 1);\n        item+=\": .*}\";\n      }\n else {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n      }\n    }\n else     if (item.length() == 1) {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n    }\n    op.path+=item + \"/\";\n  }\n  op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n  boolean foundInNewList=false;\n  for (  CodegenOperation op1 : newOpList) {\n    if (!foundInNewList) {\n      if (op1.path.equals(op.path)) {\n        foundInNewList=true;\n        final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n        List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n        if (currentOtherMethodList == null) {\n          currentOtherMethodList=new ArrayList<CodegenOperation>();\n        }\n        op.operationIdCamelCase=op1.operationIdCamelCase;\n        currentOtherMethodList.add(op);\n        op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n      }\n    }\n  }\n  if (!foundInNewList) {\n    newOpList.add(op);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 255,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 285,
        "startColumnNumber" : 113,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> operations=(Map<String,Object>)objs.get(\"operations\");\n  List<CodegenOperation> operationList=(List<CodegenOperation>)operations.get(\"operation\");\n  List<CodegenOperation> newOpList=new ArrayList<CodegenOperation>();\n  for (  CodegenOperation op : operationList) {\n    String path=op.path;\n    String[] items=path.split(\"/\",-1);\n    String resourceNameCamelCase=\"\";\n    op.path=\"\";\n    for (    String item : items) {\n      if (item.length() > 1) {\n        if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n          String tmpResourceName=item.substring(1,item.length() - 1);\n          resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n          item=item.substring(0,item.length() - 1);\n          item+=\": .*}\";\n        }\n else {\n          resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n        }\n      }\n else       if (item.length() == 1) {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n      }\n      op.path+=item + \"/\";\n    }\n    op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n    boolean foundInNewList=false;\n    for (    CodegenOperation op1 : newOpList) {\n      if (!foundInNewList) {\n        if (op1.path.equals(op.path)) {\n          foundInNewList=true;\n          final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n          List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n          if (currentOtherMethodList == null) {\n            currentOtherMethodList=new ArrayList<CodegenOperation>();\n          }\n          op.operationIdCamelCase=op1.operationIdCamelCase;\n          currentOtherMethodList.add(op);\n          op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n        }\n      }\n    }\n    if (!foundInNewList) {\n      newOpList.add(op);\n    }\n  }\n  operations.put(\"operation\",newOpList);\n  return objs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 318,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2655,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public Map<String,Object> postProcessOperationsWithModels(Map<String,Object> objs,List<Object> allModels){\n  Map<String,Object> operations=(Map<String,Object>)objs.get(\"operations\");\n  List<CodegenOperation> operationList=(List<CodegenOperation>)operations.get(\"operation\");\n  List<CodegenOperation> newOpList=new ArrayList<CodegenOperation>();\n  for (  CodegenOperation op : operationList) {\n    String path=op.path;\n    String[] items=path.split(\"/\",-1);\n    String resourceNameCamelCase=\"\";\n    op.path=\"\";\n    for (    String item : items) {\n      if (item.length() > 1) {\n        if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n          String tmpResourceName=item.substring(1,item.length() - 1);\n          resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n          item=item.substring(0,item.length() - 1);\n          item+=\": .*}\";\n        }\n else {\n          resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n        }\n      }\n else       if (item.length() == 1) {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n      }\n      op.path+=item + \"/\";\n    }\n    op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n    boolean foundInNewList=false;\n    for (    CodegenOperation op1 : newOpList) {\n      if (!foundInNewList) {\n        if (op1.path.equals(op.path)) {\n          foundInNewList=true;\n          final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n          List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n          if (currentOtherMethodList == null) {\n            currentOtherMethodList=new ArrayList<CodegenOperation>();\n          }\n          op.operationIdCamelCase=op1.operationIdCamelCase;\n          currentOtherMethodList.add(op);\n          op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n        }\n      }\n    }\n    if (!foundInNewList) {\n      newOpList.add(op);\n    }\n  }\n  operations.put(\"operation\",newOpList);\n  return objs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 349,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 304,
        "startColumnNumber" : 24,
        "endLineNumber" : 304,
        "endColumnNumber" : 107
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "char"
  }, {
    "nodeContext" : "Character.toUpperCase(item.charAt(0))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 307,
      "startColumnNumber" : 45,
      "endLineNumber" : 307,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 307,
        "startColumnNumber" : 20,
        "endLineNumber" : 307,
        "endColumnNumber" : 82
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 307,
        "startColumnNumber" : 20,
        "endLineNumber" : 307,
        "endColumnNumber" : 83
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 306,
        "startColumnNumber" : 47,
        "endLineNumber" : 308,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 306,
        "startColumnNumber" : 23,
        "endLineNumber" : 308,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (item.length() == 1) {\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 297,
        "startColumnNumber" : 16,
        "endLineNumber" : 308,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (item.length() > 1) {\n  if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n    String tmpResourceName=item.substring(1,item.length() - 1);\n    resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n    item=item.substring(0,item.length() - 1);\n    item+=\": .*}\";\n  }\n else {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n  }\n}\n else if (item.length() == 1) {\n  resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 296,
        "startColumnNumber" : 38,
        "endLineNumber" : 310,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (item.length() > 1) {\n    if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n      String tmpResourceName=item.substring(1,item.length() - 1);\n      resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n      item=item.substring(0,item.length() - 1);\n      item+=\": .*}\";\n    }\n else {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n    }\n  }\n else   if (item.length() == 1) {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n  }\n  op.path+=item + \"/\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 296,
        "startColumnNumber" : 12,
        "endLineNumber" : 310,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String item : items) {\n  if (item.length() > 1) {\n    if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n      String tmpResourceName=item.substring(1,item.length() - 1);\n      resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n      item=item.substring(0,item.length() - 1);\n      item+=\": .*}\";\n    }\n else {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n    }\n  }\n else   if (item.length() == 1) {\n    resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n  }\n  op.path+=item + \"/\";\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2103,
        "startLineNumber" : 290,
        "startColumnNumber" : 50,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String path=op.path;\n  String[] items=path.split(\"/\",-1);\n  String resourceNameCamelCase=\"\";\n  op.path=\"\";\n  for (  String item : items) {\n    if (item.length() > 1) {\n      if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n        String tmpResourceName=item.substring(1,item.length() - 1);\n        resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n        item=item.substring(0,item.length() - 1);\n        item+=\": .*}\";\n      }\n else {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n      }\n    }\n else     if (item.length() == 1) {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n    }\n    op.path+=item + \"/\";\n  }\n  op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n  boolean foundInNewList=false;\n  for (  CodegenOperation op1 : newOpList) {\n    if (!foundInNewList) {\n      if (op1.path.equals(op.path)) {\n        foundInNewList=true;\n        final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n        List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n        if (currentOtherMethodList == null) {\n          currentOtherMethodList=new ArrayList<CodegenOperation>();\n        }\n        op.operationIdCamelCase=op1.operationIdCamelCase;\n        currentOtherMethodList.add(op);\n        op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n      }\n    }\n  }\n  if (!foundInNewList) {\n    newOpList.add(op);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (CodegenOperation op : operationList) {\n  String path=op.path;\n  String[] items=path.split(\"/\",-1);\n  String resourceNameCamelCase=\"\";\n  op.path=\"\";\n  for (  String item : items) {\n    if (item.length() > 1) {\n      if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n        String tmpResourceName=item.substring(1,item.length() - 1);\n        resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n        item=item.substring(0,item.length() - 1);\n        item+=\": .*}\";\n      }\n else {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n      }\n    }\n else     if (item.length() == 1) {\n      resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n    }\n    op.path+=item + \"/\";\n  }\n  op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n  boolean foundInNewList=false;\n  for (  CodegenOperation op1 : newOpList) {\n    if (!foundInNewList) {\n      if (op1.path.equals(op.path)) {\n        foundInNewList=true;\n        final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n        List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n        if (currentOtherMethodList == null) {\n          currentOtherMethodList=new ArrayList<CodegenOperation>();\n        }\n        op.operationIdCamelCase=op1.operationIdCamelCase;\n        currentOtherMethodList.add(op);\n        op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n      }\n    }\n  }\n  if (!foundInNewList) {\n    newOpList.add(op);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 255,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 285,
        "startColumnNumber" : 113,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> operations=(Map<String,Object>)objs.get(\"operations\");\n  List<CodegenOperation> operationList=(List<CodegenOperation>)operations.get(\"operation\");\n  List<CodegenOperation> newOpList=new ArrayList<CodegenOperation>();\n  for (  CodegenOperation op : operationList) {\n    String path=op.path;\n    String[] items=path.split(\"/\",-1);\n    String resourceNameCamelCase=\"\";\n    op.path=\"\";\n    for (    String item : items) {\n      if (item.length() > 1) {\n        if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n          String tmpResourceName=item.substring(1,item.length() - 1);\n          resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n          item=item.substring(0,item.length() - 1);\n          item+=\": .*}\";\n        }\n else {\n          resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n        }\n      }\n else       if (item.length() == 1) {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n      }\n      op.path+=item + \"/\";\n    }\n    op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n    boolean foundInNewList=false;\n    for (    CodegenOperation op1 : newOpList) {\n      if (!foundInNewList) {\n        if (op1.path.equals(op.path)) {\n          foundInNewList=true;\n          final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n          List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n          if (currentOtherMethodList == null) {\n            currentOtherMethodList=new ArrayList<CodegenOperation>();\n          }\n          op.operationIdCamelCase=op1.operationIdCamelCase;\n          currentOtherMethodList.add(op);\n          op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n        }\n      }\n    }\n    if (!foundInNewList) {\n      newOpList.add(op);\n    }\n  }\n  operations.put(\"operation\",newOpList);\n  return objs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 318,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2655,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public Map<String,Object> postProcessOperationsWithModels(Map<String,Object> objs,List<Object> allModels){\n  Map<String,Object> operations=(Map<String,Object>)objs.get(\"operations\");\n  List<CodegenOperation> operationList=(List<CodegenOperation>)operations.get(\"operation\");\n  List<CodegenOperation> newOpList=new ArrayList<CodegenOperation>();\n  for (  CodegenOperation op : operationList) {\n    String path=op.path;\n    String[] items=path.split(\"/\",-1);\n    String resourceNameCamelCase=\"\";\n    op.path=\"\";\n    for (    String item : items) {\n      if (item.length() > 1) {\n        if (item.matches(\"^\\\\{(.*)\\\\}$\")) {\n          String tmpResourceName=item.substring(1,item.length() - 1);\n          resourceNameCamelCase+=Character.toUpperCase(tmpResourceName.charAt(0)) + tmpResourceName.substring(1);\n          item=item.substring(0,item.length() - 1);\n          item+=\": .*}\";\n        }\n else {\n          resourceNameCamelCase+=Character.toUpperCase(item.charAt(0)) + item.substring(1);\n        }\n      }\n else       if (item.length() == 1) {\n        resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n      }\n      op.path+=item + \"/\";\n    }\n    op.vendorExtensions.put(\"x-codegen-resource-name\",resourceNameCamelCase);\n    boolean foundInNewList=false;\n    for (    CodegenOperation op1 : newOpList) {\n      if (!foundInNewList) {\n        if (op1.path.equals(op.path)) {\n          foundInNewList=true;\n          final String X_CODEGEN_OTHER_METHODS=\"x-codegen-other-methods\";\n          List<CodegenOperation> currentOtherMethodList=(List<CodegenOperation>)op1.vendorExtensions.get(X_CODEGEN_OTHER_METHODS);\n          if (currentOtherMethodList == null) {\n            currentOtherMethodList=new ArrayList<CodegenOperation>();\n          }\n          op.operationIdCamelCase=op1.operationIdCamelCase;\n          currentOtherMethodList.add(op);\n          op1.vendorExtensions.put(X_CODEGEN_OTHER_METHODS,currentOtherMethodList);\n        }\n      }\n    }\n    if (!foundInNewList) {\n      newOpList.add(op);\n    }\n  }\n  operations.put(\"operation\",newOpList);\n  return objs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 349,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 307,
        "startColumnNumber" : 20,
        "endLineNumber" : 307,
        "endColumnNumber" : 83
      },
      "nodeContext" : "resourceNameCamelCase+=Character.toUpperCase(item.charAt(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 304,
    "startColumnNumber" : 49,
    "endLineNumber" : 304,
    "endColumnNumber" : 86
  }, {
    "charLength" : 37,
    "startLineNumber" : 307,
    "startColumnNumber" : 45,
    "endLineNumber" : 307,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}