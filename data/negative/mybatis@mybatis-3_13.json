{
  "id" : 13,
  "expression" : "phoneNumbers != null && phoneNumbers.size() > 0",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/com/submitted/resultmap/Person.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "phoneNumbers != null && phoneNumbers.size() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (phoneNumbers != null && phoneNumbers.size() > 0) {\n  sb.append(\" Phone Numbers: <\");\n  for (int i=0; i < phoneNumbers.size(); i++) {\n    if (i > 0) {\n      sb.append(\" \");\n    }\n    sb.append(phoneNumbers.get(i));\n  }\n  sb.append(\">\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 43,
        "startColumnNumber" : 27,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuffer sb=new StringBuffer();\n  sb.append(\"Name: \");\n  sb.append(name);\n  if (phoneNumbers != null && phoneNumbers.size() > 0) {\n    sb.append(\" Phone Numbers: <\");\n    for (int i=0; i < phoneNumbers.size(); i++) {\n      if (i > 0) {\n        sb.append(\" \");\n      }\n      sb.append(phoneNumbers.get(i));\n    }\n    sb.append(\">\");\n  }\n  if (addresses != null && addresses.size() > 0) {\n    sb.append(\" Addresses: <\");\n    for (int i=0; i < addresses.size(); i++) {\n      if (i > 0) {\n        sb.append(\" \");\n      }\n      sb.append(addresses.get(i));\n    }\n    sb.append(\">\");\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String toString(){\n  StringBuffer sb=new StringBuffer();\n  sb.append(\"Name: \");\n  sb.append(name);\n  if (phoneNumbers != null && phoneNumbers.size() > 0) {\n    sb.append(\" Phone Numbers: <\");\n    for (int i=0; i < phoneNumbers.size(); i++) {\n      if (i > 0) {\n        sb.append(\" \");\n      }\n      sb.append(phoneNumbers.get(i));\n    }\n    sb.append(\">\");\n  }\n  if (addresses != null && addresses.size() > 0) {\n    sb.append(\" Addresses: <\");\n    for (int i=0; i < addresses.size(); i++) {\n      if (i > 0) {\n        sb.append(\" \");\n      }\n      sb.append(addresses.get(i));\n    }\n    sb.append(\">\");\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (phoneNumbers != null && phoneNumbers.size() > 0) {\n  sb.append(\" Phone Numbers: <\");\n  for (int i=0; i < phoneNumbers.size(); i++) {\n    if (i > 0) {\n      sb.append(\" \");\n    }\n    sb.append(phoneNumbers.get(i));\n  }\n  sb.append(\">\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}