{
  "id" : 171,
  "expression" : "expectedStage",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-tests/src/test/java/com/facebook/presto/execution/TestStageInfo.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedStage",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 66,
      "startColumnNumber" : 86,
      "endLineNumber" : 66,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 66,
        "startColumnNumber" : 86,
        "endLineNumber" : 66,
        "endColumnNumber" : 112
      },
      "nodeContext" : "expectedStage.getStageId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 66,
        "startColumnNumber" : 50,
        "endLineNumber" : 66,
        "endColumnNumber" : 113
      },
      "nodeContext" : "stageInfo.get().getStageWithStageId(expectedStage.getStageId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 66,
        "startColumnNumber" : 36,
        "endLineNumber" : 66,
        "endColumnNumber" : 113
      },
      "nodeContext" : "actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 114
      },
      "nodeContext" : "Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 65,
        "startColumnNumber" : 54,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (StageInfo expectedStage : allStages) {\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (stageInfo.isPresent()) {\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetStageWithStageId(){\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 114
      },
      "nodeContext" : "Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.execution.StageInfo"
  }, {
    "nodeContext" : "expectedStage",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 68,
      "startColumnNumber" : 48,
      "endLineNumber" : 68,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 68,
        "startColumnNumber" : 48,
        "endLineNumber" : 68,
        "endColumnNumber" : 74
      },
      "nodeContext" : "expectedStage.getStageId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 68,
        "startColumnNumber" : 25,
        "endLineNumber" : 68,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"StageInfo with id \" + expectedStage.getStageId() + \"not found\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 89
      },
      "nodeContext" : "fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 90
      },
      "nodeContext" : "fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 69,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 67,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!actualStage.isPresent()) {\n  fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 65,
        "startColumnNumber" : 54,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (StageInfo expectedStage : allStages) {\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (stageInfo.isPresent()) {\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetStageWithStageId(){\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 90
      },
      "nodeContext" : "fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.execution.StageInfo"
  }, {
    "nodeContext" : "expectedStage",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 70,
      "startColumnNumber" : 29,
      "endLineNumber" : 70,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 70,
        "startColumnNumber" : 29,
        "endLineNumber" : 70,
        "endColumnNumber" : 55
      },
      "nodeContext" : "expectedStage.getStageId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(expectedStage.getStageId(),actualStage.get().getStageId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 65,
        "startColumnNumber" : 54,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (StageInfo expectedStage : allStages) {\n  Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n  if (!actualStage.isPresent()) {\n    fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n  }\n  assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 62,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (stageInfo.isPresent()) {\n  List<StageInfo> allStages=stageInfo.get().getAllStages();\n  for (  StageInfo expectedStage : allStages) {\n    Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n    if (!actualStage.isPresent()) {\n      fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n    }\n    assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetStageWithStageId(){\n  String sql=\"SELECT nationkey AS nationkey, count(*) AS count FROM tpch.sf1.supplier GROUP BY nationkey\";\n  ResultWithQueryId<MaterializedResult> result=queryRunner.executeWithQueryId(queryRunner.getDefaultSession(),sql);\n  QueryId queryId=result.getQueryId();\n  Optional<StageInfo> stageInfo=server.getQueryManager().getFullQueryInfo(queryId).getOutputStage();\n  if (stageInfo.isPresent()) {\n    List<StageInfo> allStages=stageInfo.get().getAllStages();\n    for (    StageInfo expectedStage : allStages) {\n      Optional<StageInfo> actualStage=stageInfo.get().getStageWithStageId(expectedStage.getStageId());\n      if (!actualStage.isPresent()) {\n        fail(\"StageInfo with id \" + expectedStage.getStageId() + \"not found\");\n      }\n      assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(expectedStage.getStageId(),actualStage.get().getStageId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.execution.StageInfo"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 66,
    "startColumnNumber" : 86,
    "endLineNumber" : 66,
    "endColumnNumber" : 99
  }, {
    "charLength" : 13,
    "startLineNumber" : 68,
    "startColumnNumber" : 48,
    "endLineNumber" : 68,
    "endColumnNumber" : 61
  }, {
    "charLength" : 13,
    "startLineNumber" : 70,
    "startColumnNumber" : 29,
    "endLineNumber" : 70,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}