{
  "id" : 354,
  "expression" : "\"h\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/query/CPUTimeMetricQueryRunnerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"h\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 44,
      "startColumnNumber" : 67,
      "endLineNumber" : 44,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 44,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new StubServiceEmitter(\"s\",\"h\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 44,
        "startColumnNumber" : 29,
        "endLineNumber" : 44,
        "endColumnNumber" : 71
      },
      "nodeContext" : "emitter=new StubServiceEmitter(\"s\",\"h\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final StubServiceEmitter emitter=new StubServiceEmitter(\"s\",\"h\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final StubServiceEmitter emitter=new StubServiceEmitter(\"s\",\"h\");\n  final AtomicLong accumulator=new AtomicLong();\n  final List<Result<TimeseriesResultValue>> expectedResults=Collections.singletonList(new Result<>(DateTimes.of(\"2000-01-01\"),new TimeseriesResultValue(ImmutableMap.of(\"x\",\"y\"))));\n  final QueryRunner<Result<TimeseriesResultValue>> runner=CPUTimeMetricQueryRunner.safeBuild((queryPlus,responseContext) -> Sequences.simple(expectedResults),new TimeseriesQueryQueryToolChest(),emitter,accumulator,true);\n  final Sequence<Result<TimeseriesResultValue>> results=runner.run(QueryPlus.wrap(Druids.newTimeseriesQueryBuilder().dataSource(\"foo\").intervals(\"2000/2001\").build()).withQueryMetrics(new TimeseriesQueryQueryToolChest()));\n  Assert.assertEquals(expectedResults,results.toList());\n  Assert.assertEquals(1,emitter.getEvents().size());\n  final Event event=Iterables.getOnlyElement(emitter.getEvents());\n  Assert.assertEquals(\"metrics\",event.toMap().get(\"feed\"));\n  Assert.assertEquals(\"query/cpu/time\",event.toMap().get(\"metric\"));\n  final Object value=event.toMap().get(\"value\");\n  Assert.assertThat(value,CoreMatchers.instanceOf(Long.class));\n  Assert.assertTrue((long)value > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1494,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCpuTimeMetric(){\n  final StubServiceEmitter emitter=new StubServiceEmitter(\"s\",\"h\");\n  final AtomicLong accumulator=new AtomicLong();\n  final List<Result<TimeseriesResultValue>> expectedResults=Collections.singletonList(new Result<>(DateTimes.of(\"2000-01-01\"),new TimeseriesResultValue(ImmutableMap.of(\"x\",\"y\"))));\n  final QueryRunner<Result<TimeseriesResultValue>> runner=CPUTimeMetricQueryRunner.safeBuild((queryPlus,responseContext) -> Sequences.simple(expectedResults),new TimeseriesQueryQueryToolChest(),emitter,accumulator,true);\n  final Sequence<Result<TimeseriesResultValue>> results=runner.run(QueryPlus.wrap(Druids.newTimeseriesQueryBuilder().dataSource(\"foo\").intervals(\"2000/2001\").build()).withQueryMetrics(new TimeseriesQueryQueryToolChest()));\n  Assert.assertEquals(expectedResults,results.toList());\n  Assert.assertEquals(1,emitter.getEvents().size());\n  final Event event=Iterables.getOnlyElement(emitter.getEvents());\n  Assert.assertEquals(\"metrics\",event.toMap().get(\"feed\"));\n  Assert.assertEquals(\"query/cpu/time\",event.toMap().get(\"metric\"));\n  final Object value=event.toMap().get(\"value\");\n  Assert.assertThat(value,CoreMatchers.instanceOf(Long.class));\n  Assert.assertTrue((long)value > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final StubServiceEmitter emitter=new StubServiceEmitter(\"s\",\"h\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 44,
    "startColumnNumber" : 67,
    "endLineNumber" : 44,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}