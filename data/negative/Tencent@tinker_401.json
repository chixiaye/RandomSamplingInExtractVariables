{
  "id" : 401,
  "expression" : "new HashSet<>(newClassDescs)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HashSet<>(newClassDescs)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 749,
      "startColumnNumber" : 38,
      "endLineNumber" : 749,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 749,
        "startColumnNumber" : 20,
        "endLineNumber" : 749,
        "endColumnNumber" : 66
      },
      "nodeContext" : "addedClassDescs=new HashSet<>(newClassDescs)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 749,
        "startColumnNumber" : 8,
        "endLineNumber" : 749,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Set<String> addedClassDescs=new HashSet<>(newClassDescs);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 735,
        "startColumnNumber" : 93,
        "endLineNumber" : 784,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Dex oldDex=new Dex(oldFile);\n  Dex newDex=new Dex(newFile);\n  Set<String> oldClassDescs=new HashSet<>();\n  for (  ClassDef oldClassDef : oldDex.classDefs()) {\n    oldClassDescs.add(oldDex.typeNames().get(oldClassDef.typeIndex));\n  }\n  Set<String> newClassDescs=new HashSet<>();\n  for (  ClassDef newClassDef : newDex.classDefs()) {\n    newClassDescs.add(newDex.typeNames().get(newClassDef.typeIndex));\n  }\n  Set<String> addedClassDescs=new HashSet<>(newClassDescs);\n  addedClassDescs.removeAll(oldClassDescs);\n  Set<String> deletedClassDescs=new HashSet<>(oldClassDescs);\n  deletedClassDescs.removeAll(newClassDescs);\n  for (  String addedClassDesc : addedClassDescs) {\n    if (addedClassDescToDexNameMap.containsKey(addedClassDesc)) {\n      throw new TinkerPatchException(String.format(\"Class Duplicate. Class [%s] is added in both new dex: [%s] and [%s]. Please check your newly apk.\",addedClassDesc,addedClassDescToDexNameMap.get(addedClassDesc),newFile.toString()));\n    }\n else {\n      addedClassDescToDexNameMap.put(addedClassDesc,newFile.toString());\n    }\n  }\n  for (  String deletedClassDesc : deletedClassDescs) {\n    if (deletedClassDescToDexNameMap.containsKey(deletedClassDesc)) {\n      throw new TinkerPatchException(String.format(\"Class Duplicate. Class [%s] is deleted in both old dex: [%s] and [%s]. Please check your base apk.\",deletedClassDesc,addedClassDescToDexNameMap.get(deletedClassDesc),oldFile.toString()));\n    }\n else {\n      deletedClassDescToDexNameMap.put(deletedClassDesc,newFile.toString());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2428,
        "startLineNumber" : 731,
        "startColumnNumber" : 4,
        "endLineNumber" : 784,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Before starting real diff works, we collect added class descriptor and deleted class descriptor for further analysing in  {@code checkCrossDexMovingClasses}.\n */\nprivate void collectAddedOrDeletedClasses(File oldFile,File newFile) throws IOException {\n  Dex oldDex=new Dex(oldFile);\n  Dex newDex=new Dex(newFile);\n  Set<String> oldClassDescs=new HashSet<>();\n  for (  ClassDef oldClassDef : oldDex.classDefs()) {\n    oldClassDescs.add(oldDex.typeNames().get(oldClassDef.typeIndex));\n  }\n  Set<String> newClassDescs=new HashSet<>();\n  for (  ClassDef newClassDef : newDex.classDefs()) {\n    newClassDescs.add(newDex.typeNames().get(newClassDef.typeIndex));\n  }\n  Set<String> addedClassDescs=new HashSet<>(newClassDescs);\n  addedClassDescs.removeAll(oldClassDescs);\n  Set<String> deletedClassDescs=new HashSet<>(oldClassDescs);\n  deletedClassDescs.removeAll(newClassDescs);\n  for (  String addedClassDesc : addedClassDescs) {\n    if (addedClassDescToDexNameMap.containsKey(addedClassDesc)) {\n      throw new TinkerPatchException(String.format(\"Class Duplicate. Class [%s] is added in both new dex: [%s] and [%s]. Please check your newly apk.\",addedClassDesc,addedClassDescToDexNameMap.get(addedClassDesc),newFile.toString()));\n    }\n else {\n      addedClassDescToDexNameMap.put(addedClassDesc,newFile.toString());\n    }\n  }\n  for (  String deletedClassDesc : deletedClassDescs) {\n    if (deletedClassDescToDexNameMap.containsKey(deletedClassDesc)) {\n      throw new TinkerPatchException(String.format(\"Class Duplicate. Class [%s] is deleted in both old dex: [%s] and [%s]. Please check your base apk.\",deletedClassDesc,addedClassDescToDexNameMap.get(deletedClassDesc),oldFile.toString()));\n    }\n else {\n      deletedClassDescToDexNameMap.put(deletedClassDesc,newFile.toString());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 749,
        "startColumnNumber" : 8,
        "endLineNumber" : 749,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Set<String> addedClassDescs=new HashSet<>(newClassDescs);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.HashSet<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 749,
    "startColumnNumber" : 38,
    "endLineNumber" : 749,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}