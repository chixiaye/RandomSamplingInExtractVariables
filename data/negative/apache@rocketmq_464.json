{
  "id" : 464,
  "expression" : "msgSize * 2",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/tag/TagMessageWithMulConsumerIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "msgSize * 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 70,
      "startColumnNumber" : 48,
      "endLineNumber" : 70,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 56,
        "startColumnNumber" : 33,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tag1=\"jueyin1\";\n  String tag2=\"jueyin2\";\n  int msgSize=10;\n  RMQNormalConsumer consumerTag1=getConsumer(nsAddr,topic,tag1,new RMQNormalListener());\n  RMQNormalConsumer consumerTag2=getConsumer(nsAddr,topic,tag2,new RMQNormalListener());\n  List<Object> tag1Msgs=MQMessageFactory.getRMQMessage(tag1,topic,msgSize);\n  producer.send(tag1Msgs);\n  Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n  List<Object> tag2Msgs=MQMessageFactory.getRMQMessage(tag2,topic,msgSize);\n  producer.send(tag2Msgs);\n  Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n  consumerTag1.getListener().waitForMessageConsume(MQMessageFactory.getMessageBody(tag1Msgs),consumeTime);\n  consumerTag2.getListener().waitForMessageConsume(MQMessageFactory.getMessageBody(tag2Msgs),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumerTag1.getListener().getAllMsgBody())).containsExactlyElementsIn(MQMessageFactory.getMessageBody(tag1Msgs));\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumerTag2.getListener().getAllMsgBody())).containsExactlyElementsIn(MQMessageFactory.getMessageBody(tag2Msgs));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendTwoTag(){\n  String tag1=\"jueyin1\";\n  String tag2=\"jueyin2\";\n  int msgSize=10;\n  RMQNormalConsumer consumerTag1=getConsumer(nsAddr,topic,tag1,new RMQNormalListener());\n  RMQNormalConsumer consumerTag2=getConsumer(nsAddr,topic,tag2,new RMQNormalListener());\n  List<Object> tag1Msgs=MQMessageFactory.getRMQMessage(tag1,topic,msgSize);\n  producer.send(tag1Msgs);\n  Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n  List<Object> tag2Msgs=MQMessageFactory.getRMQMessage(tag2,topic,msgSize);\n  producer.send(tag2Msgs);\n  Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n  consumerTag1.getListener().waitForMessageConsume(MQMessageFactory.getMessageBody(tag1Msgs),consumeTime);\n  consumerTag2.getListener().waitForMessageConsume(MQMessageFactory.getMessageBody(tag2Msgs),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumerTag1.getListener().getAllMsgBody())).containsExactlyElementsIn(MQMessageFactory.getMessageBody(tag1Msgs));\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumerTag2.getListener().getAllMsgBody())).containsExactlyElementsIn(MQMessageFactory.getMessageBody(tag2Msgs));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize * 2,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 70,
    "startColumnNumber" : 48,
    "endLineNumber" : 70,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}