{
  "id" : 396,
  "expression" : "tasks.get(0)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/eventbus/AsyncEventBusTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tasks.get(0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 58,
      "startColumnNumber" : 4,
      "endLineNumber" : 58,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 22
      },
      "nodeContext" : "tasks.get(0).run()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 23
      },
      "nodeContext" : "tasks.get(0).run();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 44,
        "startColumnNumber" : 38,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringCatcher catcher=new StringCatcher();\n  bus.register(catcher);\n  bus.post(EVENT);\n  List<String> events=catcher.getEvents();\n  assertTrue(\"No events should be delivered synchronously.\",events.isEmpty());\n  List<Runnable> tasks=executor.getTasks();\n  assertEquals(\"One event dispatch task should be queued.\",1,tasks.size());\n  tasks.get(0).run();\n  assertEquals(\"One event should be delivered.\",1,events.size());\n  assertEquals(\"Correct string should be delivered.\",EVENT,events.get(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testBasicDistribution(){\n  StringCatcher catcher=new StringCatcher();\n  bus.register(catcher);\n  bus.post(EVENT);\n  List<String> events=catcher.getEvents();\n  assertTrue(\"No events should be delivered synchronously.\",events.isEmpty());\n  List<Runnable> tasks=executor.getTasks();\n  assertEquals(\"One event dispatch task should be queued.\",1,tasks.size());\n  tasks.get(0).run();\n  assertEquals(\"One event should be delivered.\",1,events.size());\n  assertEquals(\"Correct string should be delivered.\",EVENT,events.get(0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 23
      },
      "nodeContext" : "tasks.get(0).run();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Runnable"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 58,
    "startColumnNumber" : 4,
    "endLineNumber" : 58,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}