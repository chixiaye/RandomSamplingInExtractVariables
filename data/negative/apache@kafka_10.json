{
  "id" : 10,
  "expression" : "Instant",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/kstream/Window.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 62,
      "startColumnNumber" : 25,
      "endLineNumber" : 62,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 62,
        "startColumnNumber" : 25,
        "endLineNumber" : 62,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Instant.ofEpochMilli(startMs)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.startTime=Instant.ofEpochMilli(startMs)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.startTime=Instant.ofEpochMilli(startMs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (startMs < 0) {\n    throw new IllegalArgumentException(\"Window startMs time cannot be negative.\");\n  }\n  if (endMs < startMs) {\n    throw new IllegalArgumentException(\"Window endMs time cannot be smaller than window startMs time.\");\n  }\n  this.startMs=startMs;\n  this.endMs=endMs;\n  this.startTime=Instant.ofEpochMilli(startMs);\n  this.endTime=Instant.ofEpochMilli(endMs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a new window for the given start and end time.\n * @param startMs the start timestamp of the window\n * @param endMs   the end timestamp of the window\n * @throws IllegalArgumentException if {@code startMs} is negative or if {@code endMs} is smaller than {@code startMs}\n */\npublic Window(final long startMs,final long endMs) throws IllegalArgumentException {\n  if (startMs < 0) {\n    throw new IllegalArgumentException(\"Window startMs time cannot be negative.\");\n  }\n  if (endMs < startMs) {\n    throw new IllegalArgumentException(\"Window endMs time cannot be smaller than window startMs time.\");\n  }\n  this.startMs=startMs;\n  this.endMs=endMs;\n  this.startTime=Instant.ofEpochMilli(startMs);\n  this.endTime=Instant.ofEpochMilli(endMs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.startTime=Instant.ofEpochMilli(startMs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  }, {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 63,
      "startColumnNumber" : 23,
      "endLineNumber" : 63,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 63,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Instant.ofEpochMilli(endMs)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 50
      },
      "nodeContext" : "this.endTime=Instant.ofEpochMilli(endMs)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.endTime=Instant.ofEpochMilli(endMs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (startMs < 0) {\n    throw new IllegalArgumentException(\"Window startMs time cannot be negative.\");\n  }\n  if (endMs < startMs) {\n    throw new IllegalArgumentException(\"Window endMs time cannot be smaller than window startMs time.\");\n  }\n  this.startMs=startMs;\n  this.endMs=endMs;\n  this.startTime=Instant.ofEpochMilli(startMs);\n  this.endTime=Instant.ofEpochMilli(endMs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a new window for the given start and end time.\n * @param startMs the start timestamp of the window\n * @param endMs   the end timestamp of the window\n * @throws IllegalArgumentException if {@code startMs} is negative or if {@code endMs} is smaller than {@code startMs}\n */\npublic Window(final long startMs,final long endMs) throws IllegalArgumentException {\n  if (startMs < 0) {\n    throw new IllegalArgumentException(\"Window startMs time cannot be negative.\");\n  }\n  if (endMs < startMs) {\n    throw new IllegalArgumentException(\"Window endMs time cannot be smaller than window startMs time.\");\n  }\n  this.startMs=startMs;\n  this.endMs=endMs;\n  this.startTime=Instant.ofEpochMilli(startMs);\n  this.endTime=Instant.ofEpochMilli(endMs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.endTime=Instant.ofEpochMilli(endMs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 62,
    "startColumnNumber" : 25,
    "endLineNumber" : 62,
    "endColumnNumber" : 32
  }, {
    "charLength" : 7,
    "startLineNumber" : 63,
    "startColumnNumber" : 23,
    "endLineNumber" : 63,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}