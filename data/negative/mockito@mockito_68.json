{
  "id" : 68,
  "expression" : "\"the method has no arguments.\\n\"",
  "projectName" : "mockito@mockito",
  "commitID" : "a114de17425cb3c3f4a7e32121776e08c99928c2",
  "filePath" : "src/main/java/org/mockito/internal/exceptions/Reporter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"the method has no arguments.\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 788,
      "startColumnNumber" : 37,
      "endLineNumber" : 788,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 788,
        "startColumnNumber" : 19,
        "endLineNumber" : 788,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new StringBuilder(\"the method has no arguments.\\n\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 788,
        "startColumnNumber" : 12,
        "endLineNumber" : 788,
        "endColumnNumber" : 71
      },
      "nodeContext" : "return new StringBuilder(\"the method has no arguments.\\n\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 787,
        "startColumnNumber" : 45,
        "endLineNumber" : 789,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new StringBuilder(\"the method has no arguments.\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 787,
        "startColumnNumber" : 8,
        "endLineNumber" : 789,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (method.getParameterCount() == 0) {\n  return new StringBuilder(\"the method has no arguments.\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 785,
        "startColumnNumber" : 86,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 785,
        "startColumnNumber" : 4,
        "endLineNumber" : 803,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static StringBuilder possibleArgumentTypesOf(InvocationOnMock invocation){\n  Method method=invocation.getMethod();\n  if (method.getParameterCount() == 0) {\n    return new StringBuilder(\"the method has no arguments.\\n\");\n  }\n  Class<?>[] parameterTypes=method.getParameterTypes();\n  StringBuilder stringBuilder=new StringBuilder(\"the possible argument indexes for this method are :\\n\");\n  for (int i=0, parameterTypesLength=parameterTypes.length; i < parameterTypesLength; i++) {\n    stringBuilder.append(\"    [\").append(i);\n    if (method.isVarArgs() && i == parameterTypesLength - 1) {\n      stringBuilder.append(\"+] \").append(parameterTypes[i].getComponentType().getSimpleName()).append(\"  <- Vararg\").append(\"\\n\");\n    }\n else {\n      stringBuilder.append(\"] \").append(parameterTypes[i].getSimpleName()).append(\"\\n\");\n    }\n  }\n  return stringBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 788,
        "startColumnNumber" : 12,
        "endLineNumber" : 788,
        "endColumnNumber" : 71
      },
      "nodeContext" : "return new StringBuilder(\"the method has no arguments.\\n\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 788,
    "startColumnNumber" : 37,
    "endLineNumber" : 788,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}