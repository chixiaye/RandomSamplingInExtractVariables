{
  "id" : 110,
  "expression" : "file.isFile()",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/SerialPortList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file.isFile()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 335,
      "startColumnNumber" : 47,
      "endLineNumber" : 335,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 335,
        "startColumnNumber" : 46,
        "endLineNumber" : 335,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!file.isFile()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 335,
        "startColumnNumber" : 23,
        "endLineNumber" : 335,
        "endColumnNumber" : 96
      },
      "nodeContext" : "!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 335,
        "startColumnNumber" : 20,
        "endLineNumber" : 348,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n  String portName=searchPath + fileName;\n  if (fileName.startsWith(\"ttyS\")) {\n    long portHandle=serialInterface.openPort(portName,false);\n    if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n      continue;\n    }\n else     if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n      serialInterface.closePort(portHandle);\n    }\n  }\n  portsTree.add(portName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 333,
        "startColumnNumber" : 38,
        "endLineNumber" : 349,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String fileName=file.getName();\n  if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n    String portName=searchPath + fileName;\n    if (fileName.startsWith(\"ttyS\")) {\n      long portHandle=serialInterface.openPort(portName,false);\n      if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n        continue;\n      }\n else       if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n        serialInterface.closePort(portHandle);\n      }\n    }\n    portsTree.add(portName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 974,
        "startLineNumber" : 333,
        "startColumnNumber" : 16,
        "endLineNumber" : 349,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (File file : files) {\n  String fileName=file.getName();\n  if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n    String portName=searchPath + fileName;\n    if (fileName.startsWith(\"ttyS\")) {\n      long portHandle=serialInterface.openPort(portName,false);\n      if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n        continue;\n      }\n else       if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n        serialInterface.closePort(portHandle);\n      }\n    }\n    portsTree.add(portName);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 331,
        "startColumnNumber" : 32,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TreeSet<String> portsTree=new TreeSet<String>(comparator);\n  for (  File file : files) {\n    String fileName=file.getName();\n    if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n      String portName=searchPath + fileName;\n      if (fileName.startsWith(\"ttyS\")) {\n        long portHandle=serialInterface.openPort(portName,false);\n        if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n          continue;\n        }\n else         if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n          serialInterface.closePort(portHandle);\n        }\n      }\n      portsTree.add(portName);\n    }\n  }\n  returnArray=portsTree.toArray(returnArray);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 331,
        "startColumnNumber" : 12,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (files.length > 0) {\n  TreeSet<String> portsTree=new TreeSet<String>(comparator);\n  for (  File file : files) {\n    String fileName=file.getName();\n    if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n      String portName=searchPath + fileName;\n      if (fileName.startsWith(\"ttyS\")) {\n        long portHandle=serialInterface.openPort(portName,false);\n        if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n          continue;\n        }\n else         if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n          serialInterface.closePort(portHandle);\n        }\n      }\n      portsTree.add(portName);\n    }\n  }\n  returnArray=portsTree.toArray(returnArray);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 329,
        "startColumnNumber" : 45,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File[] files=dir.listFiles();\n  if (files.length > 0) {\n    TreeSet<String> portsTree=new TreeSet<String>(comparator);\n    for (    File file : files) {\n      String fileName=file.getName();\n      if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n        String portName=searchPath + fileName;\n        if (fileName.startsWith(\"ttyS\")) {\n          long portHandle=serialInterface.openPort(portName,false);\n          if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n            continue;\n          }\n else           if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n            serialInterface.closePort(portHandle);\n          }\n        }\n        portsTree.add(portName);\n      }\n    }\n    returnArray=portsTree.toArray(returnArray);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 329,
        "startColumnNumber" : 8,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (dir.exists() && dir.isDirectory()) {\n  File[] files=dir.listFiles();\n  if (files.length > 0) {\n    TreeSet<String> portsTree=new TreeSet<String>(comparator);\n    for (    File file : files) {\n      String fileName=file.getName();\n      if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n        String portName=searchPath + fileName;\n        if (fileName.startsWith(\"ttyS\")) {\n          long portHandle=serialInterface.openPort(portName,false);\n          if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n            continue;\n          }\n else           if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n            serialInterface.closePort(portHandle);\n          }\n        }\n        portsTree.add(portName);\n      }\n    }\n    returnArray=portsTree.toArray(returnArray);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 325,
        "startColumnNumber" : 117,
        "endLineNumber" : 354,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  searchPath=(searchPath.equals(\"\") ? searchPath : (searchPath.endsWith(\"/\") ? searchPath : searchPath + \"/\"));\n  String[] returnArray=new String[]{};\n  File dir=new File(searchPath);\n  if (dir.exists() && dir.isDirectory()) {\n    File[] files=dir.listFiles();\n    if (files.length > 0) {\n      TreeSet<String> portsTree=new TreeSet<String>(comparator);\n      for (      File file : files) {\n        String fileName=file.getName();\n        if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n          String portName=searchPath + fileName;\n          if (fileName.startsWith(\"ttyS\")) {\n            long portHandle=serialInterface.openPort(portName,false);\n            if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n              continue;\n            }\n else             if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n              serialInterface.closePort(portHandle);\n            }\n          }\n          portsTree.add(portName);\n        }\n      }\n      returnArray=portsTree.toArray(returnArray);\n    }\n  }\n  return returnArray;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1720,
        "startLineNumber" : 322,
        "startColumnNumber" : 4,
        "endLineNumber" : 354,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Universal method for getting port names of _nix based systems\n */\nprivate static String[] getUnixBasedPortNames(String searchPath,Pattern pattern,Comparator<String> comparator){\n  searchPath=(searchPath.equals(\"\") ? searchPath : (searchPath.endsWith(\"/\") ? searchPath : searchPath + \"/\"));\n  String[] returnArray=new String[]{};\n  File dir=new File(searchPath);\n  if (dir.exists() && dir.isDirectory()) {\n    File[] files=dir.listFiles();\n    if (files.length > 0) {\n      TreeSet<String> portsTree=new TreeSet<String>(comparator);\n      for (      File file : files) {\n        String fileName=file.getName();\n        if (!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()) {\n          String portName=searchPath + fileName;\n          if (fileName.startsWith(\"ttyS\")) {\n            long portHandle=serialInterface.openPort(portName,false);\n            if (portHandle < 0 && portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n              continue;\n            }\n else             if (portHandle != SerialNativeInterface.ERR_PORT_BUSY) {\n              serialInterface.closePort(portHandle);\n            }\n          }\n          portsTree.add(portName);\n        }\n      }\n      returnArray=portsTree.toArray(returnArray);\n    }\n  }\n  return returnArray;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 335,
        "startColumnNumber" : 23,
        "endLineNumber" : 335,
        "endColumnNumber" : 96
      },
      "nodeContext" : "!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 335,
    "startColumnNumber" : 47,
    "endLineNumber" : 335,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}