{
  "id" : 191,
  "expression" : "null",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/ClientBeatCheckTask.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 144,
      "startColumnNumber" : 44,
      "endLineNumber" : 144,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 15
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  NamingProxy.Request request=NamingProxy.Request.newRequest();\n  request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n  String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n  HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  NamingProxy.Request request=NamingProxy.Request.newRequest();\n  request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n  String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n  HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n catch (Exception e) {\n  Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 175,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1915,
        "startLineNumber" : 132,
        "startColumnNumber" : 45,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    NamingProxy.Request request=NamingProxy.Request.newRequest();\n    request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n    String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n    HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1956,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void deleteIp(Instance instance){\n  try {\n    NamingProxy.Request request=NamingProxy.Request.newRequest();\n    request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n    String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n    HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 144,
      "startColumnNumber" : 50,
      "endLineNumber" : 144,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 15
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  NamingProxy.Request request=NamingProxy.Request.newRequest();\n  request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n  String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n  HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  NamingProxy.Request request=NamingProxy.Request.newRequest();\n  request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n  String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n  HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n    @Override public void onReceive(    RestResult<String> result){\n      if (!result.ok()) {\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n      }\n    }\n    @Override public void onError(    Throwable throwable){\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n    }\n    @Override public void onCancel(){\n    }\n  }\n);\n}\n catch (Exception e) {\n  Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 175,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1915,
        "startLineNumber" : 132,
        "startColumnNumber" : 45,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    NamingProxy.Request request=NamingProxy.Request.newRequest();\n    request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n    String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n    HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1956,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void deleteIp(Instance instance){\n  try {\n    NamingProxy.Request request=NamingProxy.Request.newRequest();\n    request.appendParam(\"ip\",instance.getIp()).appendParam(\"port\",String.valueOf(instance.getPort())).appendParam(\"ephemeral\",\"true\").appendParam(\"clusterName\",instance.getClusterName()).appendParam(\"serviceName\",service.getName()).appendParam(\"namespaceId\",service.getNamespaceId());\n    String url=\"http://\" + IPUtil.localHostIP() + IPUtil.IP_PORT_SPLITER+ EnvUtil.getPort()+ EnvUtil.getContextPath()+ UtilsAndCommons.NACOS_NAMING_CONTEXT+ \"/instance?\"+ request.toUrl();\n    HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n      @Override public void onReceive(      RestResult<String> result){\n        if (!result.ok()) {\n          Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n        }\n      }\n      @Override public void onError(      Throwable throwable){\n        Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n      }\n      @Override public void onCancel(){\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 14
      },
      "nodeContext" : "HttpClient.asyncHttpDelete(url,null,null,new Callback<String>(){\n  @Override public void onReceive(  RestResult<String> result){\n    if (!result.ok()) {\n      Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, caused {}, resp code: {}\",instance.toJson(),result.getMessage(),result.getCode());\n    }\n  }\n  @Override public void onError(  Throwable throwable){\n    Loggers.SRV_LOG.error(\"[IP-DEAD] failed to delete ip automatically, ip: {}, error: {}\",instance.toJson(),throwable);\n  }\n  @Override public void onCancel(){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 144,
    "startColumnNumber" : 44,
    "endLineNumber" : 144,
    "endColumnNumber" : 48
  }, {
    "charLength" : 4,
    "startLineNumber" : 144,
    "startColumnNumber" : 50,
    "endLineNumber" : 144,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}