{
  "id" : 252,
  "expression" : "asMapEntry.getKey()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/google/MultimapRemoveEntryTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "asMapEntry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 176,
      "startColumnNumber" : 23,
      "endLineNumber" : 176,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 176,
        "startColumnNumber" : 12,
        "endLineNumber" : 176,
        "endColumnNumber" : 43
      },
      "nodeContext" : "key.equals(asMapEntry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key.equals(asMapEntry.getKey())) {\n  collection=asMapEntry.getValue();\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 174,
        "startColumnNumber" : 33,
        "endLineNumber" : 180,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n  if (key.equals(asMapEntry.getKey())) {\n    collection=asMapEntry.getValue();\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 174,
        "startColumnNumber" : 6,
        "endLineNumber" : 180,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (asMapItr.hasNext()) {\n  Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n  if (key.equals(asMapEntry.getKey())) {\n    collection=asMapEntry.getValue();\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 166,
        "startColumnNumber" : 38,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  resetContainer();\n  K key=entry.getKey();\n  V value=entry.getValue();\n  Iterator<Entry<K,Collection<V>>> asMapItr=multimap().asMap().entrySet().iterator();\n  Collection<V> collection=null;\n  while (asMapItr.hasNext()) {\n    Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n    if (key.equals(asMapEntry.getKey())) {\n      collection=asMapEntry.getValue();\n      break;\n    }\n  }\n  assertNotNull(collection);\n  Collection<V> expectedCollection=Helpers.copyToList(collection);\n  multimap().remove(key,value);\n  expectedCollection.remove(value);\n  assertEqualIgnoringOrder(expectedCollection,collection);\n  assertEquals(!expectedCollection.isEmpty(),multimap().containsKey(key));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Entry<K,V> entry : entries) {\n  resetContainer();\n  K key=entry.getKey();\n  V value=entry.getValue();\n  Iterator<Entry<K,Collection<V>>> asMapItr=multimap().asMap().entrySet().iterator();\n  Collection<V> collection=null;\n  while (asMapItr.hasNext()) {\n    Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n    if (key.equals(asMapEntry.getKey())) {\n      collection=asMapEntry.getValue();\n      break;\n    }\n  }\n  assertNotNull(collection);\n  Collection<V> expectedCollection=Helpers.copyToList(collection);\n  multimap().remove(key,value);\n  expectedCollection.remove(value);\n  assertEqualIgnoringOrder(expectedCollection,collection);\n  assertEquals(!expectedCollection.isEmpty(),multimap().containsKey(key));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 145,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 164,
        "startColumnNumber" : 52,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Entry<K,V>> entries=Helpers.copyToList(multimap().entries());\n  for (  Entry<K,V> entry : entries) {\n    resetContainer();\n    K key=entry.getKey();\n    V value=entry.getValue();\n    Iterator<Entry<K,Collection<V>>> asMapItr=multimap().asMap().entrySet().iterator();\n    Collection<V> collection=null;\n    while (asMapItr.hasNext()) {\n      Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n      if (key.equals(asMapEntry.getKey())) {\n        collection=asMapEntry.getValue();\n        break;\n      }\n    }\n    assertNotNull(collection);\n    Collection<V> expectedCollection=Helpers.copyToList(collection);\n    multimap().remove(key,value);\n    expectedCollection.remove(value);\n    assertEqualIgnoringOrder(expectedCollection,collection);\n    assertEquals(!expectedCollection.isEmpty(),multimap().containsKey(key));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1059,
        "startLineNumber" : 162,
        "startColumnNumber" : 2,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@MapFeature.Require(SUPPORTS_REMOVE) @CollectionSize.Require(absent=ZERO) public void testRemovePropagatesToAsMapEntrySet(){\n  List<Entry<K,V>> entries=Helpers.copyToList(multimap().entries());\n  for (  Entry<K,V> entry : entries) {\n    resetContainer();\n    K key=entry.getKey();\n    V value=entry.getValue();\n    Iterator<Entry<K,Collection<V>>> asMapItr=multimap().asMap().entrySet().iterator();\n    Collection<V> collection=null;\n    while (asMapItr.hasNext()) {\n      Entry<K,Collection<V>> asMapEntry=asMapItr.next();\n      if (key.equals(asMapEntry.getKey())) {\n        collection=asMapEntry.getValue();\n        break;\n      }\n    }\n    assertNotNull(collection);\n    Collection<V> expectedCollection=Helpers.copyToList(collection);\n    multimap().remove(key,value);\n    expectedCollection.remove(value);\n    assertEqualIgnoringOrder(expectedCollection,collection);\n    assertEquals(!expectedCollection.isEmpty(),multimap().containsKey(key));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 176,
        "startColumnNumber" : 12,
        "endLineNumber" : 176,
        "endColumnNumber" : 43
      },
      "nodeContext" : "key.equals(asMapEntry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "K"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 176,
    "startColumnNumber" : 23,
    "endLineNumber" : 176,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}