{
  "id" : 9,
  "expression" : "serviceDiscoveries",
  "projectName" : "apache@dubbo",
  "commitID" : "70a92457159e1b27bb7ee367118b7e32e20eb05c",
  "filePath" : "dubbo-registry/dubbo-registry-multiple/src/main/java/org/apache/dubbo/registry/multiple/MultipleServiceDiscovery.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serviceDiscoveries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 93,
      "startColumnNumber" : 34,
      "endLineNumber" : 93,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "serviceDiscoveries.keySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String registryKey : serviceDiscoveries.keySet()) {\n  ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n  SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n    return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n  }\n);\n  serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 90,
        "startColumnNumber" : 147,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MultiServiceInstancesChangedListener multiListener=(MultiServiceInstancesChangedListener)listener;\n  for (  String registryKey : serviceDiscoveries.keySet()) {\n    ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n    SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n      return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n    }\n);\n    serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener) throws NullPointerException, IllegalArgumentException {\n  MultiServiceInstancesChangedListener multiListener=(MultiServiceInstancesChangedListener)listener;\n  for (  String registryKey : serviceDiscoveries.keySet()) {\n    ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n    SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n      return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n    }\n);\n    serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "serviceDiscoveries.keySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.dubbo.registry.client.ServiceDiscovery>"
  }, {
    "nodeContext" : "serviceDiscoveries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 94,
      "startColumnNumber" : 48,
      "endLineNumber" : 94,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 48,
        "endLineNumber" : 94,
        "endColumnNumber" : 83
      },
      "nodeContext" : "serviceDiscoveries.get(registryKey)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 94,
        "startColumnNumber" : 29,
        "endLineNumber" : 94,
        "endColumnNumber" : 83
      },
      "nodeContext" : "serviceDiscovery=serviceDiscoveries.get(registryKey)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 93,
        "startColumnNumber" : 63,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n  SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n    return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n  }\n);\n  serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String registryKey : serviceDiscoveries.keySet()) {\n  ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n  SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n    return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n  }\n);\n  serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 90,
        "startColumnNumber" : 147,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MultiServiceInstancesChangedListener multiListener=(MultiServiceInstancesChangedListener)listener;\n  for (  String registryKey : serviceDiscoveries.keySet()) {\n    ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n    SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n      return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n    }\n);\n    serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener) throws NullPointerException, IllegalArgumentException {\n  MultiServiceInstancesChangedListener multiListener=(MultiServiceInstancesChangedListener)listener;\n  for (  String registryKey : serviceDiscoveries.keySet()) {\n    ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n    SingleServiceInstancesChangedListener singleListener=multiListener.getAndComputeIfAbsent(registryKey,k -> {\n      return new SingleServiceInstancesChangedListener(listener.getServiceNames(),serviceDiscovery,multiListener);\n    }\n);\n    serviceDiscovery.addServiceInstancesChangedListener(singleListener);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "ServiceDiscovery serviceDiscovery=serviceDiscoveries.get(registryKey);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.dubbo.registry.client.ServiceDiscovery>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 93,
    "startColumnNumber" : 34,
    "endLineNumber" : 93,
    "endColumnNumber" : 52
  }, {
    "charLength" : 18,
    "startLineNumber" : 94,
    "startColumnNumber" : 48,
    "endLineNumber" : 94,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}