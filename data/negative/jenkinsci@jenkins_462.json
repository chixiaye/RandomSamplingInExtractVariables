{
  "id" : 462,
  "expression" : "new byte[PREAMBLE.length]",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/console/ConsoleNote.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new byte[PREAMBLE.length]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 238,
      "startColumnNumber" : 30,
      "endLineNumber" : 238,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 238,
        "startColumnNumber" : 19,
        "endLineNumber" : 238,
        "endColumnNumber" : 55
      },
      "nodeContext" : "preamble=new byte[PREAMBLE.length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 56
      },
      "nodeContext" : "byte[] preamble=new byte[PREAMBLE.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 237,
        "startColumnNumber" : 12,
        "endLineNumber" : 281,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] preamble=new byte[PREAMBLE.length];\n  in.readFully(preamble);\n  if (!Arrays.equals(preamble,PREAMBLE))   return null;\n  DataInputStream decoded=new DataInputStream(Base64.getDecoder().wrap(in));\n  int macSz=-decoded.readInt();\n  byte[] mac;\n  int sz;\n  if (macSz > 0) {\n    mac=new byte[macSz];\n    decoded.readFully(mac);\n    sz=decoded.readInt();\n    if (sz < 0) {\n      throw new IOException(\"Corrupt stream\");\n    }\n  }\n else {\n    mac=null;\n    sz=-macSz;\n  }\n  byte[] buf=new byte[sz];\n  decoded.readFully(buf);\n  byte[] postamble=new byte[POSTAMBLE.length];\n  in.readFully(postamble);\n  if (!Arrays.equals(postamble,POSTAMBLE))   return null;\n  if (!INSECURE) {\n    if (mac == null) {\n      throw new IOException(\"Refusing to deserialize unsigned note from an old log.\");\n    }\n else     if (!MAC.checkMac(buf,mac)) {\n      throw new IOException(\"MAC mismatch\");\n    }\n  }\n  Jenkins jenkins=Jenkins.getInstanceOrNull();\n  try (ObjectInputStream ois=new ObjectInputStreamEx(new GZIPInputStream(new ByteArrayInputStream(buf)),jenkins != null ? jenkins.pluginManager.uberClassLoader : ConsoleNote.class.getClassLoader(),ClassFilter.DEFAULT)){\n    return getConsoleNote(ois);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2014,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  byte[] preamble=new byte[PREAMBLE.length];\n  in.readFully(preamble);\n  if (!Arrays.equals(preamble,PREAMBLE))   return null;\n  DataInputStream decoded=new DataInputStream(Base64.getDecoder().wrap(in));\n  int macSz=-decoded.readInt();\n  byte[] mac;\n  int sz;\n  if (macSz > 0) {\n    mac=new byte[macSz];\n    decoded.readFully(mac);\n    sz=decoded.readInt();\n    if (sz < 0) {\n      throw new IOException(\"Corrupt stream\");\n    }\n  }\n else {\n    mac=null;\n    sz=-macSz;\n  }\n  byte[] buf=new byte[sz];\n  decoded.readFully(buf);\n  byte[] postamble=new byte[POSTAMBLE.length];\n  in.readFully(postamble);\n  if (!Arrays.equals(postamble,POSTAMBLE))   return null;\n  if (!INSECURE) {\n    if (mac == null) {\n      throw new IOException(\"Refusing to deserialize unsigned note from an old log.\");\n    }\n else     if (!MAC.checkMac(buf,mac)) {\n      throw new IOException(\"MAC mismatch\");\n    }\n  }\n  Jenkins jenkins=Jenkins.getInstanceOrNull();\n  try (ObjectInputStream ois=new ObjectInputStreamEx(new GZIPInputStream(new ByteArrayInputStream(buf)),jenkins != null ? jenkins.pluginManager.uberClassLoader : ConsoleNote.class.getClassLoader(),ClassFilter.DEFAULT)){\n    return getConsoleNote(ois);\n  }\n }\n catch (Error e) {\n  throw new IOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 232,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 236,
        "startColumnNumber" : 102,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    byte[] preamble=new byte[PREAMBLE.length];\n    in.readFully(preamble);\n    if (!Arrays.equals(preamble,PREAMBLE))     return null;\n    DataInputStream decoded=new DataInputStream(Base64.getDecoder().wrap(in));\n    int macSz=-decoded.readInt();\n    byte[] mac;\n    int sz;\n    if (macSz > 0) {\n      mac=new byte[macSz];\n      decoded.readFully(mac);\n      sz=decoded.readInt();\n      if (sz < 0) {\n        throw new IOException(\"Corrupt stream\");\n      }\n    }\n else {\n      mac=null;\n      sz=-macSz;\n    }\n    byte[] buf=new byte[sz];\n    decoded.readFully(buf);\n    byte[] postamble=new byte[POSTAMBLE.length];\n    in.readFully(postamble);\n    if (!Arrays.equals(postamble,POSTAMBLE))     return null;\n    if (!INSECURE) {\n      if (mac == null) {\n        throw new IOException(\"Refusing to deserialize unsigned note from an old log.\");\n      }\n else       if (!MAC.checkMac(buf,mac)) {\n        throw new IOException(\"MAC mismatch\");\n      }\n    }\n    Jenkins jenkins=Jenkins.getInstanceOrNull();\n    try (ObjectInputStream ois=new ObjectInputStreamEx(new GZIPInputStream(new ByteArrayInputStream(buf)),jenkins != null ? jenkins.pluginManager.uberClassLoader : ConsoleNote.class.getClassLoader(),ClassFilter.DEFAULT)){\n      return getConsoleNote(ois);\n    }\n   }\n catch (  Error e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2379,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads a note back from  {@linkplain #encodeTo(OutputStream) its encoded form}.\n * @param in Must point to the beginning of a preamble.\n * @return null if the encoded form is malformed.\n */\npublic static ConsoleNote readFrom(DataInputStream in) throws IOException, ClassNotFoundException {\n  try {\n    byte[] preamble=new byte[PREAMBLE.length];\n    in.readFully(preamble);\n    if (!Arrays.equals(preamble,PREAMBLE))     return null;\n    DataInputStream decoded=new DataInputStream(Base64.getDecoder().wrap(in));\n    int macSz=-decoded.readInt();\n    byte[] mac;\n    int sz;\n    if (macSz > 0) {\n      mac=new byte[macSz];\n      decoded.readFully(mac);\n      sz=decoded.readInt();\n      if (sz < 0) {\n        throw new IOException(\"Corrupt stream\");\n      }\n    }\n else {\n      mac=null;\n      sz=-macSz;\n    }\n    byte[] buf=new byte[sz];\n    decoded.readFully(buf);\n    byte[] postamble=new byte[POSTAMBLE.length];\n    in.readFully(postamble);\n    if (!Arrays.equals(postamble,POSTAMBLE))     return null;\n    if (!INSECURE) {\n      if (mac == null) {\n        throw new IOException(\"Refusing to deserialize unsigned note from an old log.\");\n      }\n else       if (!MAC.checkMac(buf,mac)) {\n        throw new IOException(\"MAC mismatch\");\n      }\n    }\n    Jenkins jenkins=Jenkins.getInstanceOrNull();\n    try (ObjectInputStream ois=new ObjectInputStreamEx(new GZIPInputStream(new ByteArrayInputStream(buf)),jenkins != null ? jenkins.pluginManager.uberClassLoader : ConsoleNote.class.getClassLoader(),ClassFilter.DEFAULT)){\n      return getConsoleNote(ois);\n    }\n   }\n catch (  Error e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 248,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 56
      },
      "nodeContext" : "byte[] preamble=new byte[PREAMBLE.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 238,
    "startColumnNumber" : 30,
    "endLineNumber" : 238,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}