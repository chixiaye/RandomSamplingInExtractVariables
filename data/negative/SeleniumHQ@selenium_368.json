{
  "id" : 368,
  "expression" : "\"Next handler\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/web/CheckOriginHeader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Next handler\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 47,
      "startColumnNumber" : 20,
      "endLineNumber" : 47,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Require.nonNull(\"Next handler\",httpHandler)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Require.nonNull(\"Next handler\",httpHandler);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 46,
        "startColumnNumber" : 52,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"Next handler\",httpHandler);\n  return req -> {\n    if (skipChecksOn.contains(req.getUri())) {\n      return httpHandler.execute(req);\n    }\n    String origin=req.getHeader(\"Origin\");\n    if (origin != null && !allowedHosts.contains(origin)) {\n      return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n    }\n    return httpHandler.execute(req);\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public HttpHandler apply(HttpHandler httpHandler){\n  Require.nonNull(\"Next handler\",httpHandler);\n  return req -> {\n    if (skipChecksOn.contains(req.getUri())) {\n      return httpHandler.execute(req);\n    }\n    String origin=req.getHeader(\"Origin\");\n    if (origin != null && !allowedHosts.contains(origin)) {\n      return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n    }\n    return httpHandler.execute(req);\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Require.nonNull(\"Next handler\",httpHandler);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 47,
    "startColumnNumber" : 20,
    "endLineNumber" : 47,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}