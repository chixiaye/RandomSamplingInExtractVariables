{
  "id" : 403,
  "expression" : "as[i]",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/util/LongMaxUpdater.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "as[i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 99,
      "startColumnNumber" : 25,
      "endLineNumber" : 99,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 30
      },
      "nodeContext" : "a=as[i]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Cell a=as[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Cell a=as[i];\n  if (a != null && (v=a.value) > max)   max=v;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < n; ++i) {\n  Cell a=as[i];\n  if (a != null && (v=a.value) > max)   max=v;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 95,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int n=as.length;\n  long v;\n  for (int i=0; i < n; ++i) {\n    Cell a=as[i];\n    if (a != null && (v=a.value) > max)     max=v;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (as != null) {\n  int n=as.length;\n  long v;\n  for (int i=0; i < n; ++i) {\n    Cell a=as[i];\n    if (a != null && (v=a.value) > max)     max=v;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 92,
        "startColumnNumber" : 22,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cell[] as=cells;\n  long max=base;\n  if (as != null) {\n    int n=as.length;\n    long v;\n    for (int i=0; i < n; ++i) {\n      Cell a=as[i];\n      if (a != null && (v=a.value) > max)       max=v;\n    }\n  }\n  return max;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the current maximum.  The returned value is <em>NOT</em> an atomic snapshot: Invocation in the absence of concurrent updates returns an accurate result, but concurrent updates that occur while the value is being calculated might not be incorporated.\n * @return the maximum\n */\npublic long max(){\n  Cell[] as=cells;\n  long max=base;\n  if (as != null) {\n    int n=as.length;\n    long v;\n    for (int i=0; i < n; ++i) {\n      Cell a=as[i];\n      if (a != null && (v=a.value) > max)       max=v;\n    }\n  }\n  return max;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Cell a=as[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.netflix.hystrix.util.Striped64.Cell"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 99,
    "startColumnNumber" : 25,
    "endLineNumber" : 99,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}