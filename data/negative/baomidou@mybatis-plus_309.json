{
  "id" : 309,
  "expression" : "invocation",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "3e687441465a8af8e0197e67e5e98d6a99fb957b",
  "filePath" : "mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/PaginationInterceptor.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 92,
      "startColumnNumber" : 86,
      "endLineNumber" : 92,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 92,
        "startColumnNumber" : 86,
        "endLineNumber" : 92,
        "endColumnNumber" : 108
      },
      "nodeContext" : "invocation.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 92,
        "startColumnNumber" : 63,
        "endLineNumber" : 92,
        "endColumnNumber" : 109
      },
      "nodeContext" : "PluginUtils.realTarget(invocation.getTarget())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 92,
        "startColumnNumber" : 44,
        "endLineNumber" : 92,
        "endColumnNumber" : 109
      },
      "nodeContext" : "(StatementHandler)PluginUtils.realTarget(invocation.getTarget())",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 92,
        "startColumnNumber" : 25,
        "endLineNumber" : 92,
        "endColumnNumber" : 109
      },
      "nodeContext" : "statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 110
      },
      "nodeContext" : "StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 110
      },
      "nodeContext" : "StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 98,
      "startColumnNumber" : 19,
      "endLineNumber" : 98,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 39
      },
      "nodeContext" : "invocation.proceed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 97,
        "startColumnNumber" : 80,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n  return invocation.proceed();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 108,
      "startColumnNumber" : 27,
      "endLineNumber" : 108,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 108,
        "startColumnNumber" : 27,
        "endLineNumber" : 108,
        "endColumnNumber" : 47
      },
      "nodeContext" : "invocation.proceed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 107,
        "startColumnNumber" : 39,
        "endLineNumber" : 109,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 109,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (rowBounds == null) {\n  return invocation.proceed();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 104,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  rowBounds=PageHelper.getPagination();\n  if (rowBounds == null) {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (localPage) {\n  rowBounds=PageHelper.getPagination();\n  if (rowBounds == null) {\n    return invocation.proceed();\n  }\n}\n else {\n  return invocation.proceed();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 102,
        "startColumnNumber" : 65,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (localPage) {\n    rowBounds=PageHelper.getPagination();\n    if (rowBounds == null) {\n      return invocation.proceed();\n    }\n  }\n else {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n  if (localPage) {\n    rowBounds=PageHelper.getPagination();\n    if (rowBounds == null) {\n      return invocation.proceed();\n    }\n  }\n else {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 112,
      "startColumnNumber" : 23,
      "endLineNumber" : 112,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 112,
        "startColumnNumber" : 23,
        "endLineNumber" : 112,
        "endColumnNumber" : 43
      },
      "nodeContext" : "invocation.proceed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (localPage) {\n  rowBounds=PageHelper.getPagination();\n  if (rowBounds == null) {\n    return invocation.proceed();\n  }\n}\n else {\n  return invocation.proceed();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 102,
        "startColumnNumber" : 65,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (localPage) {\n    rowBounds=PageHelper.getPagination();\n    if (rowBounds == null) {\n      return invocation.proceed();\n    }\n  }\n else {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n  if (localPage) {\n    rowBounds=PageHelper.getPagination();\n    if (rowBounds == null) {\n      return invocation.proceed();\n    }\n  }\n else {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 118,
      "startColumnNumber" : 45,
      "endLineNumber" : 118,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 118,
        "startColumnNumber" : 45,
        "endLineNumber" : 118,
        "endColumnNumber" : 65
      },
      "nodeContext" : "invocation.getArgs()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 118,
        "startColumnNumber" : 45,
        "endLineNumber" : 118,
        "endColumnNumber" : 68
      },
      "nodeContext" : "invocation.getArgs()[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 118,
        "startColumnNumber" : 32,
        "endLineNumber" : 118,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(Connection)invocation.getArgs()[0]",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 118,
        "endColumnNumber" : 68
      },
      "nodeContext" : "connection=(Connection)invocation.getArgs()[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Connection connection=(Connection)invocation.getArgs()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Connection connection=(Connection)invocation.getArgs()[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 128,
      "startColumnNumber" : 27,
      "endLineNumber" : 128,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 128,
        "startColumnNumber" : 27,
        "endLineNumber" : 128,
        "endColumnNumber" : 47
      },
      "nodeContext" : "invocation.proceed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 127,
        "startColumnNumber" : 42,
        "endLineNumber" : 129,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 127,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (page.getTotal() <= 0) {\n  return invocation.proceed();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 123,
        "startColumnNumber" : 38,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n  orderBy=sqlInfo.isOrderBy();\n  this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n  if (page.getTotal() <= 0) {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (page.isSearchCount()) {\n  SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n  orderBy=sqlInfo.isOrderBy();\n  this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n  if (page.getTotal() <= 0) {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 120,
        "startColumnNumber" : 45,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Pagination page=(Pagination)rowBounds;\n  boolean orderBy=true;\n  if (page.isSearchCount()) {\n    SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n    orderBy=sqlInfo.isOrderBy();\n    this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n    if (page.getTotal() <= 0) {\n      return invocation.proceed();\n    }\n  }\n  String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n  originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (rowBounds instanceof Pagination) {\n  Pagination page=(Pagination)rowBounds;\n  boolean orderBy=true;\n  if (page.isSearchCount()) {\n    SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n    orderBy=sqlInfo.isOrderBy();\n    this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n    if (page.getTotal() <= 0) {\n      return invocation.proceed();\n    }\n  }\n  String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n  originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n}\n else {\n  originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  }, {
    "nodeContext" : "invocation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 145,
      "startColumnNumber" : 15,
      "endLineNumber" : 145,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 145,
        "startColumnNumber" : 15,
        "endLineNumber" : 145,
        "endColumnNumber" : 35
      },
      "nodeContext" : "invocation.proceed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2764,
        "startLineNumber" : 91,
        "startColumnNumber" : 68,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2976,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter  {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  StatementHandler statementHandler=(StatementHandler)PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(statementHandler);\n  this.sqlParser(metaObject);\n  MappedStatement mappedStatement=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  if (!SqlCommandType.SELECT.equals(mappedStatement.getSqlCommandType())) {\n    return invocation.proceed();\n  }\n  RowBounds rowBounds=(RowBounds)metaObject.getValue(\"delegate.rowBounds\");\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    if (localPage) {\n      rowBounds=PageHelper.getPagination();\n      if (rowBounds == null) {\n        return invocation.proceed();\n      }\n    }\n else {\n      return invocation.proceed();\n    }\n  }\n  BoundSql boundSql=(BoundSql)metaObject.getValue(\"delegate.boundSql\");\n  String originalSql=boundSql.getSql();\n  Connection connection=(Connection)invocation.getArgs()[0];\n  DBType dbType=StringUtils.isNotEmpty(dialectType) ? DBType.getDBType(dialectType) : JdbcUtils.getDbType(connection.getMetaData().getURL());\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    boolean orderBy=true;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      orderBy=sqlInfo.isOrderBy();\n      this.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n    String buildSql=SqlUtils.concatOrderBy(originalSql,page,orderBy);\n    originalSql=DialectFactory.buildPaginationSql(page,buildSql,dbType,dialectClazz);\n  }\n else {\n    originalSql=DialectFactory.buildPaginationSql(rowBounds,originalSql,dbType,dialectClazz);\n  }\n  metaObject.setValue(\"delegate.boundSql.sql\",originalSql);\n  metaObject.setValue(\"delegate.rowBounds.offset\",RowBounds.NO_ROW_OFFSET);\n  metaObject.setValue(\"delegate.rowBounds.limit\",RowBounds.NO_ROW_LIMIT);\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return invocation.proceed();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.plugins.Invocation"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 92,
    "startColumnNumber" : 86,
    "endLineNumber" : 92,
    "endColumnNumber" : 96
  }, {
    "charLength" : 10,
    "startLineNumber" : 98,
    "startColumnNumber" : 19,
    "endLineNumber" : 98,
    "endColumnNumber" : 29
  }, {
    "charLength" : 10,
    "startLineNumber" : 108,
    "startColumnNumber" : 27,
    "endLineNumber" : 108,
    "endColumnNumber" : 37
  }, {
    "charLength" : 10,
    "startLineNumber" : 112,
    "startColumnNumber" : 23,
    "endLineNumber" : 112,
    "endColumnNumber" : 33
  }, {
    "charLength" : 10,
    "startLineNumber" : 118,
    "startColumnNumber" : 45,
    "endLineNumber" : 118,
    "endColumnNumber" : 55
  }, {
    "charLength" : 10,
    "startLineNumber" : 128,
    "startColumnNumber" : 27,
    "endLineNumber" : 128,
    "endColumnNumber" : 37
  }, {
    "charLength" : 10,
    "startLineNumber" : 145,
    "startColumnNumber" : 15,
    "endLineNumber" : 145,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}