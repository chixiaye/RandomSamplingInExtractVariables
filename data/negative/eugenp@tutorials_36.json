{
  "id" : 36,
  "expression" : "\"tomatoes\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-arrays-sorting/src/test/java/com/baeldung/array/ArrayInverterUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"tomatoes\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 16,
      "startColumnNumber" : 80,
      "endLineNumber" : 16,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 16,
        "startColumnNumber" : 32,
        "endLineNumber" : 16,
        "endColumnNumber" : 102
      },
      "nodeContext" : "{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 16,
        "startColumnNumber" : 19,
        "endLineNumber" : 16,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 103
      },
      "nodeContext" : "assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 121
      },
      "nodeContext" : "assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}).isEqualTo(fruits)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 122
      },
      "nodeContext" : "assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}).isEqualTo(fruits);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 12,
        "startColumnNumber" : 41,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayInverter inverter=new ArrayInverter();\n  inverter.invertUsingFor(fruits);\n  assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}).isEqualTo(fruits);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void invertArrayWithForLoop(){\n  ArrayInverter inverter=new ArrayInverter();\n  inverter.invertUsingFor(fruits);\n  assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}).isEqualTo(fruits);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 122
      },
      "nodeContext" : "assertThat(new String[]{\"oranges\",\"pineapples\",\"guavas\",\"bananas\",\"tomatoes\",\"apples\"}).isEqualTo(fruits);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 16,
    "startColumnNumber" : 80,
    "endLineNumber" : 16,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}