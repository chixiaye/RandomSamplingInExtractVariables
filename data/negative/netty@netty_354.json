{
  "id" : 354,
  "expression" : "Unpooled.directBuffer(data.length).writeBytes(data)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/compression/FastLzIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Unpooled.directBuffer(data.length).writeBytes(data)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 70,
      "startColumnNumber" : 16,
      "endLineNumber" : 70,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 69,
        "startColumnNumber" : 33,
        "endLineNumber" : 70,
        "endColumnNumber" : 67
      },
      "nodeContext" : "heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 69,
        "startColumnNumber" : 22,
        "endLineNumber" : 70,
        "endColumnNumber" : 67
      },
      "nodeContext" : "original=heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 68
      },
      "nodeContext" : "final ByteBuf original=heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2078,
        "startLineNumber" : 67,
        "startColumnNumber" : 71,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  initChannels();\n  final ByteBuf original=heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data);\n  final CompositeByteBuf compressed=Unpooled.compositeBuffer();\n  final CompositeByteBuf decompressed=Unpooled.compositeBuffer();\n  try {\n    int written=0, length=rand.nextInt(100);\n    while (written + length < data.length) {\n      ByteBuf in=Unpooled.wrappedBuffer(data,written,length);\n      encoder.writeOutbound(in);\n      written+=length;\n      length=rand.nextInt(100);\n    }\n    ByteBuf in=Unpooled.wrappedBuffer(data,written,data.length - written);\n    encoder.writeOutbound(in);\n    encoder.finish();\n    ByteBuf msg;\n    while ((msg=encoder.readOutbound()) != null) {\n      compressed.addComponent(true,msg);\n    }\n    assertThat(compressed,is(notNullValue()));\n    final byte[] compressedArray=new byte[compressed.readableBytes()];\n    compressed.readBytes(compressedArray);\n    written=0;\n    length=rand.nextInt(100);\n    while (written + length < compressedArray.length) {\n      in=Unpooled.wrappedBuffer(compressedArray,written,length);\n      decoder.writeInbound(in);\n      written+=length;\n      length=rand.nextInt(100);\n    }\n    in=Unpooled.wrappedBuffer(compressedArray,written,compressedArray.length - written);\n    decoder.writeInbound(in);\n    assertFalse(compressed.isReadable());\n    while ((msg=decoder.readInbound()) != null) {\n      decompressed.addComponent(true,msg);\n    }\n    assertEquals(original,decompressed);\n  }\n  finally {\n    compressed.release();\n    decompressed.release();\n    original.release();\n    closeChannels();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void testIdentity(final byte[] data,boolean heapBuffer){\n  initChannels();\n  final ByteBuf original=heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data);\n  final CompositeByteBuf compressed=Unpooled.compositeBuffer();\n  final CompositeByteBuf decompressed=Unpooled.compositeBuffer();\n  try {\n    int written=0, length=rand.nextInt(100);\n    while (written + length < data.length) {\n      ByteBuf in=Unpooled.wrappedBuffer(data,written,length);\n      encoder.writeOutbound(in);\n      written+=length;\n      length=rand.nextInt(100);\n    }\n    ByteBuf in=Unpooled.wrappedBuffer(data,written,data.length - written);\n    encoder.writeOutbound(in);\n    encoder.finish();\n    ByteBuf msg;\n    while ((msg=encoder.readOutbound()) != null) {\n      compressed.addComponent(true,msg);\n    }\n    assertThat(compressed,is(notNullValue()));\n    final byte[] compressedArray=new byte[compressed.readableBytes()];\n    compressed.readBytes(compressedArray);\n    written=0;\n    length=rand.nextInt(100);\n    while (written + length < compressedArray.length) {\n      in=Unpooled.wrappedBuffer(compressedArray,written,length);\n      decoder.writeInbound(in);\n      written+=length;\n      length=rand.nextInt(100);\n    }\n    in=Unpooled.wrappedBuffer(compressedArray,written,compressedArray.length - written);\n    decoder.writeInbound(in);\n    assertFalse(compressed.isReadable());\n    while ((msg=decoder.readInbound()) != null) {\n      decompressed.addComponent(true,msg);\n    }\n    assertEquals(original,decompressed);\n  }\n  finally {\n    compressed.release();\n    decompressed.release();\n    original.release();\n    closeChannels();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 285,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 69,
        "startColumnNumber" : 33,
        "endLineNumber" : 70,
        "endColumnNumber" : 67
      },
      "nodeContext" : "heapBuffer ? Unpooled.wrappedBuffer(data) : Unpooled.directBuffer(data.length).writeBytes(data)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "io.netty.buffer.ByteBuf"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 70,
    "startColumnNumber" : 16,
    "endLineNumber" : 70,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}