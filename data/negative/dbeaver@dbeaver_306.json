{
  "id" : 306,
  "expression" : "1",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.base/src/org/jkiss/dbeaver/ui/editors/object/struct/EditIndexPage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 92,
      "startColumnNumber" : 49,
      "endLineNumber" : 92,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 92,
        "startColumnNumber" : 29,
        "endLineNumber" : 92,
        "endColumnNumber" : 50
      },
      "nodeContext" : "indexTypes.size() > 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 51
      },
      "nodeContext" : "typeCombo.setEnabled(indexTypes.size() > 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 52
      },
      "nodeContext" : "typeCombo.setEnabled(indexTypes.size() > 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UIUtils.createControlLabel(panel,EditorsMessages.dialog_struct_edit_index_label_type);\n  final Combo typeCombo=new Combo(panel,SWT.DROP_DOWN | SWT.READ_ONLY);\n  typeCombo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  for (  DBSIndexType indexType : indexTypes) {\n    typeCombo.add(indexType.getName());\n    if (selectedIndexType == null) {\n      selectedIndexType=indexType;\n    }\n  }\n  typeCombo.select(0);\n  typeCombo.setEnabled(indexTypes.size() > 1);\n  typeCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      selectedIndexType=indexTypes.get(typeCombo.getSelectionIndex());\n    }\n  }\n);\n  if (supportUniqueIndexes) {\n    final Button uniqueButton=UIUtils.createLabelCheckbox(panel,\"Unique\",false);\n    uniqueButton.addSelectionListener(new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        unique=uniqueButton.getSelection();\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void createContentsBeforeColumns(Composite panel){\n  UIUtils.createControlLabel(panel,EditorsMessages.dialog_struct_edit_index_label_type);\n  final Combo typeCombo=new Combo(panel,SWT.DROP_DOWN | SWT.READ_ONLY);\n  typeCombo.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  for (  DBSIndexType indexType : indexTypes) {\n    typeCombo.add(indexType.getName());\n    if (selectedIndexType == null) {\n      selectedIndexType=indexType;\n    }\n  }\n  typeCombo.select(0);\n  typeCombo.setEnabled(indexTypes.size() > 1);\n  typeCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      selectedIndexType=indexTypes.get(typeCombo.getSelectionIndex());\n    }\n  }\n);\n  if (supportUniqueIndexes) {\n    final Button uniqueButton=UIUtils.createLabelCheckbox(panel,\"Unique\",false);\n    uniqueButton.addSelectionListener(new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        unique=uniqueButton.getSelection();\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 52
      },
      "nodeContext" : "typeCombo.setEnabled(indexTypes.size() > 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 92,
    "startColumnNumber" : 49,
    "endLineNumber" : 92,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}