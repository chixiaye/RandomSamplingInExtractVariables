{
  "id" : 261,
  "expression" : "\" when already \"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/planner/delegation/hive/copy/HiveParserPreCboCtx.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" when already \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 47,
      "startColumnNumber" : 30,
      "endLineNumber" : 47,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 45,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 52
      },
      "nodeContext" : "LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 53
      },
      "nodeContext" : "LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 43,
        "startColumnNumber" : 36,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump());\n  this.type=Type.UNEXPECTED;\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.type != Type.NONE) {\n  LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump());\n  this.type=Type.UNEXPECTED;\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 42,
        "startColumnNumber" : 55,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this.type != Type.NONE) {\n    LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump());\n    this.type=Type.UNEXPECTED;\n    return;\n  }\n  this.type=type;\n  this.nodeOfInterest=ast;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void set(Type type,HiveParserASTNode ast){\n  if (this.type != Type.NONE) {\n    LOG.warn(\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump());\n    this.type=Type.UNEXPECTED;\n    return;\n  }\n  this.type=type;\n  this.nodeOfInterest=ast;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 45,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "\"Setting \" + type + \" when already \"+ this.type+ \"; node \"+ ast.dump()+ \" vs old node \"+ nodeOfInterest.dump()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 47,
    "startColumnNumber" : 30,
    "endLineNumber" : 47,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}