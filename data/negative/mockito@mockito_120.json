{
  "id" : 120,
  "expression" : "performComputationForDepth(mock,STACK_TRACE_DEPTH)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/memory-test/src/test/java/org/mockito/memorytest/ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "performComputationForDepth(mock,STACK_TRACE_DEPTH)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 42,
      "startColumnNumber" : 19,
      "endLineNumber" : 42,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH)).isEqualTo(42)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH)).isEqualTo(42);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 36,
        "startColumnNumber" : 73,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assume.assumeTrue(supported);\n  Dummy mock=mock(Dummy.class);\n  when(mock.calculate(anyInt())).thenReturn(42);\n  assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH)).isEqualTo(42);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void large_stack_trace_invocations_should_not_starve_memory(){\n  Assume.assumeTrue(supported);\n  Dummy mock=mock(Dummy.class);\n  when(mock.calculate(anyInt())).thenReturn(42);\n  assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH)).isEqualTo(42);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(performComputationForDepth(mock,STACK_TRACE_DEPTH)).isEqualTo(42);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 42,
    "startColumnNumber" : 19,
    "endLineNumber" : 42,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}