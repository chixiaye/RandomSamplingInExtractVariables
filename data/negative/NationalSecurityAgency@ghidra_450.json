{
  "id" : 450,
  "expression" : "\" max=\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/Generic/src/main/java/ghidra/SwingExceptionHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" max=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 70,
      "startColumnNumber" : 51,
      "endLineNumber" : 70,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 70,
        "startColumnNumber" : 13,
        "endLineNumber" : 71,
        "endColumnNumber" : 20
      },
      "nodeContext" : "\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 71,
        "endColumnNumber" : 20
      },
      "nodeContext" : "details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 71,
        "endColumnNumber" : 21
      },
      "nodeContext" : "details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Runtime rt=Runtime.getRuntime();\n  details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (t instanceof OutOfMemoryError) {\n  Runtime rt=Runtime.getRuntime();\n  details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory();\n}\n else {\n  String message=t.getMessage();\n  if (message != null) {\n    details=\"\\n\" + t.getClass().getSimpleName() + \" - \"+ message;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 50,
        "startColumnNumber" : 57,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (t instanceof InvocationTargetException) {\n    t=t.getCause();\n  }\n  if (t instanceof ThreadDeath) {\n    return;\n  }\n  if (t instanceof ConnectException) {\n    return;\n  }\n  if (t instanceof ClosedException) {\n    return;\n  }\n  String details=\"\";\n  if (t instanceof OutOfMemoryError) {\n    Runtime rt=Runtime.getRuntime();\n    details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory();\n  }\n else {\n    String message=t.getMessage();\n    if (message != null) {\n      details=\"\\n\" + t.getClass().getSimpleName() + \" - \"+ message;\n    }\n  }\n  Msg.showError(SwingExceptionHandler.class,null,\"Error\",\"Uncaught Exception! \" + details,t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 50,
        "startColumnNumber" : 1,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void handleUncaughtException(Throwable t){\n  if (t instanceof InvocationTargetException) {\n    t=t.getCause();\n  }\n  if (t instanceof ThreadDeath) {\n    return;\n  }\n  if (t instanceof ConnectException) {\n    return;\n  }\n  if (t instanceof ClosedException) {\n    return;\n  }\n  String details=\"\";\n  if (t instanceof OutOfMemoryError) {\n    Runtime rt=Runtime.getRuntime();\n    details=\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory();\n  }\n else {\n    String message=t.getMessage();\n    if (message != null) {\n      details=\"\\n\" + t.getClass().getSimpleName() + \" - \"+ message;\n    }\n  }\n  Msg.showError(SwingExceptionHandler.class,null,\"Error\",\"Uncaught Exception! \" + details,t);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 70,
        "startColumnNumber" : 13,
        "endLineNumber" : 71,
        "endColumnNumber" : 20
      },
      "nodeContext" : "\"\\nMemory: free=\" + rt.freeMemory() + \" max=\"+ rt.maxMemory()+ \" total=\"+ rt.totalMemory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 70,
    "startColumnNumber" : 51,
    "endLineNumber" : 70,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}