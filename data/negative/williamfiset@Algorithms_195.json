{
  "id" : 195,
  "expression" : "System.out",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/other/Permutations.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 36,
      "startColumnNumber" : 6,
      "endLineNumber" : 36,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 28
      },
      "nodeContext" : "System.out.print(\"[ \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 29
      },
      "nodeContext" : "System.out.print(\"[ \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 33,
        "startColumnNumber" : 17,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (at == N) {\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n else {\n  for (int i=0; i < N; i++) {\n    if (!used[i]) {\n      used[i]=true;\n      picked[at]=i;\n      permutations(at + 1,used,picked,sequence);\n      used[i]=false;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 28,
        "startColumnNumber" : 92,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void permutations(int at,boolean[] used,int[] picked,Object[] sequence){\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 29
      },
      "nodeContext" : "System.out.print(\"[ \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 37,
      "startColumnNumber" : 34,
      "endLineNumber" : 37,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 37,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.out.print(sequence[picked[i]] + \" \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 37,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 78
      },
      "nodeContext" : "System.out.print(sequence[picked[i]] + \" \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 78
      },
      "nodeContext" : "for (int i=0; i < N; i++) System.out.print(sequence[picked[i]] + \" \");\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 33,
        "startColumnNumber" : 17,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (at == N) {\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n else {\n  for (int i=0; i < N; i++) {\n    if (!used[i]) {\n      used[i]=true;\n      picked[at]=i;\n      permutations(at + 1,used,picked,sequence);\n      used[i]=false;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 28,
        "startColumnNumber" : 92,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void permutations(int at,boolean[] used,int[] picked,Object[] sequence){\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 78
      },
      "nodeContext" : "for (int i=0; i < N; i++) System.out.print(sequence[picked[i]] + \" \");\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 38,
      "startColumnNumber" : 6,
      "endLineNumber" : 38,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 29
      },
      "nodeContext" : "System.out.println(\"]\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 30
      },
      "nodeContext" : "System.out.println(\"]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 33,
        "startColumnNumber" : 17,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (at == N) {\n  System.out.print(\"[ \");\n  for (int i=0; i < N; i++)   System.out.print(sequence[picked[i]] + \" \");\n  System.out.println(\"]\");\n}\n else {\n  for (int i=0; i < N; i++) {\n    if (!used[i]) {\n      used[i]=true;\n      picked[at]=i;\n      permutations(at + 1,used,picked,sequence);\n      used[i]=false;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 28,
        "startColumnNumber" : 92,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void permutations(int at,boolean[] used,int[] picked,Object[] sequence){\n  final int N=sequence.length;\n  if (at == N) {\n    System.out.print(\"[ \");\n    for (int i=0; i < N; i++)     System.out.print(sequence[picked[i]] + \" \");\n    System.out.println(\"]\");\n  }\n else {\n    for (int i=0; i < N; i++) {\n      if (!used[i]) {\n        used[i]=true;\n        picked[at]=i;\n        permutations(at + 1,used,picked,sequence);\n        used[i]=false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 30
      },
      "nodeContext" : "System.out.println(\"]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 36,
    "startColumnNumber" : 6,
    "endLineNumber" : 36,
    "endColumnNumber" : 16
  }, {
    "charLength" : 10,
    "startLineNumber" : 37,
    "startColumnNumber" : 34,
    "endLineNumber" : 37,
    "endColumnNumber" : 44
  }, {
    "charLength" : 10,
    "startLineNumber" : 38,
    "startColumnNumber" : 6,
    "endLineNumber" : 38,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}