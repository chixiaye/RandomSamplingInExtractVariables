{
  "id" : 408,
  "expression" : "Thread.currentThread().getName()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingCommandLatencyDistributionStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Thread.currentThread().getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 116,
      "startColumnNumber" : 72,
      "endLineNumber" : 116,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 116,
        "startColumnNumber" : 35,
        "endLineNumber" : 116,
        "endColumnNumber" : 218
      },
      "nodeContext" : "System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 219
      },
      "nodeContext" : "System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 220
      },
      "nodeContext" : "System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 115,
        "startColumnNumber" : 67,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n  if (distribution.getTotalCount() == 1) {\n    assertBetween(10,50,(int)distribution.getMean());\n  }\n else   if (distribution.getTotalCount() == 2) {\n    assertBetween(300,400,(int)distribution.getMean());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void onNext(CachedValuesHistogram distribution){\n  System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n  if (distribution.getTotalCount() == 1) {\n    assertBetween(10,50,(int)distribution.getMean());\n  }\n else   if (distribution.getTotalCount() == 2) {\n    assertBetween(300,400,(int)distribution.getMean());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 220
      },
      "nodeContext" : "System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 116,
    "startColumnNumber" : 72,
    "endLineNumber" : 116,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}