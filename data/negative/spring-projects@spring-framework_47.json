{
  "id" : 47,
  "expression" : "new ManagedList<String>()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-aop/src/main/java/org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ManagedList<String>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 92,
      "startColumnNumber" : 63,
      "endLineNumber" : 92,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 92,
        "startColumnNumber" : 3,
        "endLineNumber" : 92,
        "endColumnNumber" : 89
      },
      "nodeContext" : "proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 92,
        "startColumnNumber" : 3,
        "endLineNumber" : 92,
        "endColumnNumber" : 90
      },
      "nodeContext" : "proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 81,
        "startColumnNumber" : 55,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  RootBeanDefinition proxyDefinition=new RootBeanDefinition();\n  proxyDefinition.setBeanClass(ProxyFactoryBean.class);\n  proxyDefinition.setScope(targetDefinition.getScope());\n  proxyDefinition.setLazyInit(targetDefinition.isLazyInit());\n  proxyDefinition.setDecoratedDefinition(targetHolder);\n  proxyDefinition.getPropertyValues().add(\"target\",targetHolder);\n  proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n  proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());\n  proxyDefinition.setPrimary(targetDefinition.isPrimary());\n  if (targetDefinition instanceof AbstractBeanDefinition) {\n    proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);\n  }\n  result=new BeanDefinitionHolder(proxyDefinition,existingBeanName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!isProxyFactoryBeanDefinition(targetDefinition)) {\n  RootBeanDefinition proxyDefinition=new RootBeanDefinition();\n  proxyDefinition.setBeanClass(ProxyFactoryBean.class);\n  proxyDefinition.setScope(targetDefinition.getScope());\n  proxyDefinition.setLazyInit(targetDefinition.isLazyInit());\n  proxyDefinition.setDecoratedDefinition(targetHolder);\n  proxyDefinition.getPropertyValues().add(\"target\",targetHolder);\n  proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n  proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());\n  proxyDefinition.setPrimary(targetDefinition.isPrimary());\n  if (targetDefinition instanceof AbstractBeanDefinition) {\n    proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);\n  }\n  result=new BeanDefinitionHolder(proxyDefinition,existingBeanName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2093,
        "startLineNumber" : 63,
        "startColumnNumber" : 123,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BeanDefinitionRegistry registry=parserContext.getRegistry();\n  String existingBeanName=definitionHolder.getBeanName();\n  BeanDefinition targetDefinition=definitionHolder.getBeanDefinition();\n  BeanDefinitionHolder targetHolder=new BeanDefinitionHolder(targetDefinition,existingBeanName + \".TARGET\");\n  BeanDefinition interceptorDefinition=createInterceptorDefinition(node);\n  String interceptorName=existingBeanName + '.' + getInterceptorNameSuffix(interceptorDefinition);\n  BeanDefinitionReaderUtils.registerBeanDefinition(new BeanDefinitionHolder(interceptorDefinition,interceptorName),registry);\n  BeanDefinitionHolder result=definitionHolder;\n  if (!isProxyFactoryBeanDefinition(targetDefinition)) {\n    RootBeanDefinition proxyDefinition=new RootBeanDefinition();\n    proxyDefinition.setBeanClass(ProxyFactoryBean.class);\n    proxyDefinition.setScope(targetDefinition.getScope());\n    proxyDefinition.setLazyInit(targetDefinition.isLazyInit());\n    proxyDefinition.setDecoratedDefinition(targetHolder);\n    proxyDefinition.getPropertyValues().add(\"target\",targetHolder);\n    proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n    proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());\n    proxyDefinition.setPrimary(targetDefinition.isPrimary());\n    if (targetDefinition instanceof AbstractBeanDefinition) {\n      proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);\n    }\n    result=new BeanDefinitionHolder(proxyDefinition,existingBeanName);\n  }\n  addInterceptorNameToList(interceptorName,result.getBeanDefinition());\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2226,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public final BeanDefinitionHolder decorate(Node node,BeanDefinitionHolder definitionHolder,ParserContext parserContext){\n  BeanDefinitionRegistry registry=parserContext.getRegistry();\n  String existingBeanName=definitionHolder.getBeanName();\n  BeanDefinition targetDefinition=definitionHolder.getBeanDefinition();\n  BeanDefinitionHolder targetHolder=new BeanDefinitionHolder(targetDefinition,existingBeanName + \".TARGET\");\n  BeanDefinition interceptorDefinition=createInterceptorDefinition(node);\n  String interceptorName=existingBeanName + '.' + getInterceptorNameSuffix(interceptorDefinition);\n  BeanDefinitionReaderUtils.registerBeanDefinition(new BeanDefinitionHolder(interceptorDefinition,interceptorName),registry);\n  BeanDefinitionHolder result=definitionHolder;\n  if (!isProxyFactoryBeanDefinition(targetDefinition)) {\n    RootBeanDefinition proxyDefinition=new RootBeanDefinition();\n    proxyDefinition.setBeanClass(ProxyFactoryBean.class);\n    proxyDefinition.setScope(targetDefinition.getScope());\n    proxyDefinition.setLazyInit(targetDefinition.isLazyInit());\n    proxyDefinition.setDecoratedDefinition(targetHolder);\n    proxyDefinition.getPropertyValues().add(\"target\",targetHolder);\n    proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n    proxyDefinition.setAutowireCandidate(targetDefinition.isAutowireCandidate());\n    proxyDefinition.setPrimary(targetDefinition.isPrimary());\n    if (targetDefinition instanceof AbstractBeanDefinition) {\n      proxyDefinition.copyQualifiersFrom((AbstractBeanDefinition)targetDefinition);\n    }\n    result=new BeanDefinitionHolder(proxyDefinition,existingBeanName);\n  }\n  addInterceptorNameToList(interceptorName,result.getBeanDefinition());\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 92,
        "startColumnNumber" : 3,
        "endLineNumber" : 92,
        "endColumnNumber" : 90
      },
      "nodeContext" : "proxyDefinition.getPropertyValues().add(\"interceptorNames\",new ManagedList<String>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.beans.factory.support.ManagedList<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 92,
    "startColumnNumber" : 63,
    "endLineNumber" : 92,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}