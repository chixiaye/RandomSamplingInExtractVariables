{
  "id" : 2,
  "expression" : "pts",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/geometry/ConvexHullMonotoneChainsAlgorithmTest.java",
  "occurrences" : 19,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 20,
      "startColumnNumber" : 4,
      "endLineNumber" : 20,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[0]=new Point2D.Double(0,5)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[0]=new Point2D.Double(0,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[0]=new Point2D.Double(0,5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 21,
      "startColumnNumber" : 4,
      "endLineNumber" : 21,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[1]=new Point2D.Double(-1,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[1]=new Point2D.Double(-1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[1]=new Point2D.Double(-1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 22,
      "startColumnNumber" : 4,
      "endLineNumber" : 22,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[2]=new Point2D.Double(0,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[2]=new Point2D.Double(0,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[2]=new Point2D.Double(0,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 23,
      "startColumnNumber" : 4,
      "endLineNumber" : 23,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[3]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[3]=new Point2D.Double(1,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[3]=new Point2D.Double(1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[3]=new Point2D.Double(1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 24,
      "startColumnNumber" : 4,
      "endLineNumber" : 24,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[4]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[4]=new Point2D.Double(-5,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[4]=new Point2D.Double(-5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[4]=new Point2D.Double(-5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 25,
      "startColumnNumber" : 4,
      "endLineNumber" : 25,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[5]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[5]=new Point2D.Double(-1,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[5]=new Point2D.Double(-1,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[5]=new Point2D.Double(-1,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 26,
      "startColumnNumber" : 4,
      "endLineNumber" : 26,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[6]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[6]=new Point2D.Double(0,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[6]=new Point2D.Double(0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[6]=new Point2D.Double(0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 27,
      "startColumnNumber" : 4,
      "endLineNumber" : 27,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[7]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[7]=new Point2D.Double(1,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[7]=new Point2D.Double(1,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[7]=new Point2D.Double(1,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 28,
      "startColumnNumber" : 4,
      "endLineNumber" : 28,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[8]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 37
      },
      "nodeContext" : "pts[8]=new Point2D.Double(5,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[8]=new Point2D.Double(5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pts[8]=new Point2D.Double(5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 29,
      "startColumnNumber" : 4,
      "endLineNumber" : 29,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 10
      },
      "nodeContext" : "pts[9]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[9]=new Point2D.Double(-1,-1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[9]=new Point2D.Double(-1,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[9]=new Point2D.Double(-1,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 30,
      "startColumnNumber" : 4,
      "endLineNumber" : 30,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 11
      },
      "nodeContext" : "pts[10]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[10]=new Point2D.Double(0,-1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[10]=new Point2D.Double(0,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[10]=new Point2D.Double(0,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 31,
      "startColumnNumber" : 4,
      "endLineNumber" : 31,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 11
      },
      "nodeContext" : "pts[11]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[11]=new Point2D.Double(1,-1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[11]=new Point2D.Double(1,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[11]=new Point2D.Double(1,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 32,
      "startColumnNumber" : 4,
      "endLineNumber" : 32,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 11
      },
      "nodeContext" : "pts[12]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[12]=new Point2D.Double(0,-5)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[12]=new Point2D.Double(0,-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[12]=new Point2D.Double(0,-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 35,
      "startColumnNumber" : 4,
      "endLineNumber" : 35,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 11
      },
      "nodeContext" : "pts[13]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pts[13]=new Point2D.Double(-5,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[13]=new Point2D.Double(-5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pts[13]=new Point2D.Double(-5,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 55,
      "endLineNumber" : 36,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 36,
        "startColumnNumber" : 55,
        "endLineNumber" : 36,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pts[4]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 63,
      "endLineNumber" : 36,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 36,
        "startColumnNumber" : 63,
        "endLineNumber" : 36,
        "endColumnNumber" : 70
      },
      "nodeContext" : "pts[12]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 72,
      "endLineNumber" : 36,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 36,
        "startColumnNumber" : 72,
        "endLineNumber" : 36,
        "endColumnNumber" : 78
      },
      "nodeContext" : "pts[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 80,
      "endLineNumber" : 36,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 36,
        "startColumnNumber" : 80,
        "endLineNumber" : 36,
        "endColumnNumber" : 86
      },
      "nodeContext" : "pts[8]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 87
      },
      "nodeContext" : "expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  }, {
    "nodeContext" : "pts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 37,
      "startColumnNumber" : 66,
      "endLineNumber" : 37,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 37,
        "startColumnNumber" : 21,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ConvexHullMonotoneChainsAlgorithm.convexHull(pts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 37,
        "startColumnNumber" : 14,
        "endLineNumber" : 37,
        "endColumnNumber" : 70
      },
      "nodeContext" : "hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 42,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convexHullRedundantPoints(){\n  Point2D[] pts=new Point2D[14];\n  pts[0]=new Point2D.Double(0,5);\n  pts[1]=new Point2D.Double(-1,1);\n  pts[2]=new Point2D.Double(0,1);\n  pts[3]=new Point2D.Double(1,1);\n  pts[4]=new Point2D.Double(-5,0);\n  pts[5]=new Point2D.Double(-1,0);\n  pts[6]=new Point2D.Double(0,0);\n  pts[7]=new Point2D.Double(1,0);\n  pts[8]=new Point2D.Double(5,0);\n  pts[9]=new Point2D.Double(-1,-1);\n  pts[10]=new Point2D.Double(0,-1);\n  pts[11]=new Point2D.Double(1,-1);\n  pts[12]=new Point2D.Double(0,-5);\n  pts[13]=new Point2D.Double(-5,0);\n  ImmutableList<Point2D> expected=ImmutableList.of(pts[4],pts[12],pts[0],pts[8]);\n  Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n  assertThat(hull).asList().containsExactlyElementsIn(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Point2D[] hull=ConvexHullMonotoneChainsAlgorithm.convexHull(pts);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.awt.geom.Point2D[]"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 20,
    "startColumnNumber" : 4,
    "endLineNumber" : 20,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 21,
    "startColumnNumber" : 4,
    "endLineNumber" : 21,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 22,
    "startColumnNumber" : 4,
    "endLineNumber" : 22,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 23,
    "startColumnNumber" : 4,
    "endLineNumber" : 23,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 24,
    "startColumnNumber" : 4,
    "endLineNumber" : 24,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 25,
    "startColumnNumber" : 4,
    "endLineNumber" : 25,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 26,
    "startColumnNumber" : 4,
    "endLineNumber" : 26,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 27,
    "startColumnNumber" : 4,
    "endLineNumber" : 27,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 28,
    "startColumnNumber" : 4,
    "endLineNumber" : 28,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 29,
    "startColumnNumber" : 4,
    "endLineNumber" : 29,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 30,
    "startColumnNumber" : 4,
    "endLineNumber" : 30,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 31,
    "startColumnNumber" : 4,
    "endLineNumber" : 31,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 32,
    "startColumnNumber" : 4,
    "endLineNumber" : 32,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 35,
    "startColumnNumber" : 4,
    "endLineNumber" : 35,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 55,
    "endLineNumber" : 36,
    "endColumnNumber" : 58
  }, {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 63,
    "endLineNumber" : 36,
    "endColumnNumber" : 66
  }, {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 72,
    "endLineNumber" : 36,
    "endColumnNumber" : 75
  }, {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 80,
    "endLineNumber" : 36,
    "endColumnNumber" : 83
  }, {
    "charLength" : 3,
    "startLineNumber" : 37,
    "startColumnNumber" : 66,
    "endLineNumber" : 37,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 1
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 1
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 3
  } ]
}