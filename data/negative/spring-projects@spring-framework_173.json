{
  "id" : 173,
  "expression" : "servletResponse",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "servletResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 77,
      "startColumnNumber" : 58,
      "endLineNumber" : 77,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 102
      },
      "nodeContext" : "getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 103
      },
      "nodeContext" : "getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n}\n catch (ServletException ex) {\n  throw new HandshakeFailureException(\"Servlet request failed to upgrade to WebSocket: \" + requestUrl,ex);\n}\ncatch (IOException ex) {\n  throw new HandshakeFailureException(\"Response update failed during upgrade to WebSocket: \" + requestUrl,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 63,
        "startColumnNumber" : 36,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HttpServletRequest servletRequest=getHttpServletRequest(request);\n  HttpServletResponse servletResponse=getHttpServletResponse(response);\n  StringBuffer requestUrl=servletRequest.getRequestURL();\n  String path=servletRequest.getRequestURI();\n  Map<String,String> pathParams=Collections.emptyMap();\n  ServerEndpointRegistration endpointConfig=new ServerEndpointRegistration(path,endpoint);\n  endpointConfig.setSubprotocols(Collections.singletonList(selectedProtocol));\n  endpointConfig.setExtensions(selectedExtensions);\n  try {\n    getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n  }\n catch (  ServletException ex) {\n    throw new HandshakeFailureException(\"Servlet request failed to upgrade to WebSocket: \" + requestUrl,ex);\n  }\ncatch (  IOException ex) {\n    throw new HandshakeFailureException(\"Response update failed during upgrade to WebSocket: \" + requestUrl,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1209,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void upgradeInternal(ServerHttpRequest request,ServerHttpResponse response,@Nullable String selectedProtocol,List<Extension> selectedExtensions,Endpoint endpoint) throws HandshakeFailureException {\n  HttpServletRequest servletRequest=getHttpServletRequest(request);\n  HttpServletResponse servletResponse=getHttpServletResponse(response);\n  StringBuffer requestUrl=servletRequest.getRequestURL();\n  String path=servletRequest.getRequestURI();\n  Map<String,String> pathParams=Collections.emptyMap();\n  ServerEndpointRegistration endpointConfig=new ServerEndpointRegistration(path,endpoint);\n  endpointConfig.setSubprotocols(Collections.singletonList(selectedProtocol));\n  endpointConfig.setExtensions(selectedExtensions);\n  try {\n    getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n  }\n catch (  ServletException ex) {\n    throw new HandshakeFailureException(\"Servlet request failed to upgrade to WebSocket: \" + requestUrl,ex);\n  }\ncatch (  IOException ex) {\n    throw new HandshakeFailureException(\"Response update failed during upgrade to WebSocket: \" + requestUrl,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 103
      },
      "nodeContext" : "getContainer(servletRequest).doUpgrade(servletRequest,servletResponse,endpointConfig,pathParams);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.web.socket.server.standard.HttpServletResponse"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 77,
    "startColumnNumber" : 58,
    "endLineNumber" : 77,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}