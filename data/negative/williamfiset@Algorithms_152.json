{
  "id" : 152,
  "expression" : "N - sa[i]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArray.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "N - sa[i]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 95,
      "startColumnNumber" : 22,
      "endLineNumber" : 95,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 31
      },
      "nodeContext" : "suffixLen=N - sa[i]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int suffixLen=N - sa[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 94,
        "startColumnNumber" : 32,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int suffixLen=N - sa[i];\n  char[] suffixArray=new char[suffixLen];\n  for (int j=sa[i], k=0; j < N; j++, k++)   suffixArray[k]=(char)T[j];\n  String suffix=new String(suffixArray);\n  String formattedStr=String.format(\"% 7d % 7d % 7d %s\\n\",i,sa[i],lcp[i],suffix);\n  sb.append(formattedStr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < N; i++) {\n  int suffixLen=N - sa[i];\n  char[] suffixArray=new char[suffixLen];\n  for (int j=sa[i], k=0; j < N; j++, k++)   suffixArray[k]=(char)T[j];\n  String suffix=new String(suffixArray);\n  String formattedStr=String.format(\"% 7d % 7d % 7d %s\\n\",i,sa[i],lcp[i],suffix);\n  sb.append(formattedStr);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 90,
        "startColumnNumber" : 27,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder();\n  sb.append(\"-----i-----SA-----LCP---Suffix\\n\");\n  for (int i=0; i < N; i++) {\n    int suffixLen=N - sa[i];\n    char[] suffixArray=new char[suffixLen];\n    for (int j=sa[i], k=0; j < N; j++, k++)     suffixArray[k]=(char)T[j];\n    String suffix=new String(suffixArray);\n    String formattedStr=String.format(\"% 7d % 7d % 7d %s\\n\",i,sa[i],lcp[i],suffix);\n    sb.append(formattedStr);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public String toString(){\n  StringBuilder sb=new StringBuilder();\n  sb.append(\"-----i-----SA-----LCP---Suffix\\n\");\n  for (int i=0; i < N; i++) {\n    int suffixLen=N - sa[i];\n    char[] suffixArray=new char[suffixLen];\n    for (int j=sa[i], k=0; j < N; j++, k++)     suffixArray[k]=(char)T[j];\n    String suffix=new String(suffixArray);\n    String formattedStr=String.format(\"% 7d % 7d % 7d %s\\n\",i,sa[i],lcp[i],suffix);\n    sb.append(formattedStr);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int suffixLen=N - sa[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 95,
    "startColumnNumber" : 22,
    "endLineNumber" : 95,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}