{
  "id" : 135,
  "expression" : "new Tile(x,y)",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/tests/src/test/java/power/PowerTestFixture.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Tile(x,y)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 81,
      "startColumnNumber" : 24,
      "endLineNumber" : 81,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 81,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "tile=new Tile(x,y)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Tile tile=new Tile(x,y);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 80,
        "startColumnNumber" : 11,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Tile tile=new Tile(x,y);\n  if (block.consumes.all() == null) {\n    block.consumes.init();\n  }\n  Reflect.set(Tile.class,tile,\"block\",block);\n  Reflect.set(Tile.class,tile,\"floor\",Blocks.sand);\n  tile.build=block.newBuilding().init(tile,Team.sharded,false,0);\n  if (block.hasPower) {\n    new PowerGraph(){\n      @Override public float getUsageFraction(){\n        return 1f;\n      }\n    }\n.add(tile.build);\n  }\n  block.health=100000;\n  tile.build.health(100000.0f);\n  return tile;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1523,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Tile tile=new Tile(x,y);\n  if (block.consumes.all() == null) {\n    block.consumes.init();\n  }\n  Reflect.set(Tile.class,tile,\"block\",block);\n  Reflect.set(Tile.class,tile,\"floor\",Blocks.sand);\n  tile.build=block.newBuilding().init(tile,Team.sharded,false,0);\n  if (block.hasPower) {\n    new PowerGraph(){\n      @Override public float getUsageFraction(){\n        return 1f;\n      }\n    }\n.add(tile.build);\n  }\n  block.health=100000;\n  tile.build.health(100000.0f);\n  return tile;\n}\n catch (Exception ex) {\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1539,
        "startLineNumber" : 79,
        "startColumnNumber" : 67,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Tile tile=new Tile(x,y);\n    if (block.consumes.all() == null) {\n      block.consumes.init();\n    }\n    Reflect.set(Tile.class,tile,\"block\",block);\n    Reflect.set(Tile.class,tile,\"floor\",Blocks.sand);\n    tile.build=block.newBuilding().init(tile,Team.sharded,false,0);\n    if (block.hasPower) {\n      new PowerGraph(){\n        @Override public float getUsageFraction(){\n          return 1f;\n        }\n      }\n.add(tile.build);\n    }\n    block.health=100000;\n    tile.build.health(100000.0f);\n    return tile;\n  }\n catch (  Exception ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a fake tile on the given location using the given block.\n * @param x The X coordinate.\n * @param y The y coordinate.\n * @param block The block on the tile.\n * @return The created tile or null in case of exceptions.\n */\nprotected static Tile createFakeTile(int x,int y,Block block){\n  try {\n    Tile tile=new Tile(x,y);\n    if (block.consumes.all() == null) {\n      block.consumes.init();\n    }\n    Reflect.set(Tile.class,tile,\"block\",block);\n    Reflect.set(Tile.class,tile,\"floor\",Blocks.sand);\n    tile.build=block.newBuilding().init(tile,Team.sharded,false,0);\n    if (block.hasPower) {\n      new PowerGraph(){\n        @Override public float getUsageFraction(){\n          return 1f;\n        }\n      }\n.add(tile.build);\n    }\n    block.health=100000;\n    tile.build.health(100000.0f);\n    return tile;\n  }\n catch (  Exception ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Tile tile=new Tile(x,y);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "mindustry.world.Tile"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 81,
    "startColumnNumber" : 24,
    "endLineNumber" : 81,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}