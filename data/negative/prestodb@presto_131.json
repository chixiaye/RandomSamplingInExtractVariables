{
  "id" : 131,
  "expression" : "0",
  "projectName" : "prestodb@presto",
  "commitID" : "e4f477cc8a6b97dbd4b4f865a5e14f8499654793",
  "filePath" : "presto-common/src/main/java/com/facebook/presto/common/block/VariableWidthBlockBuilder.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 137,
      "startColumnNumber" : 33,
      "endLineNumber" : 137,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 34
      },
      "nodeContext" : "usedPositionCount == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 137,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (usedPositionCount == 0) {\n  return 0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public long getPositionsSizeInBytes(boolean[] positions,int usedPositionCount){\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 34
      },
      "nodeContext" : "usedPositionCount == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 138,
      "startColumnNumber" : 19,
      "endLineNumber" : 138,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 138,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return 0;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 137,
        "startColumnNumber" : 36,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 137,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (usedPositionCount == 0) {\n  return 0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public long getPositionsSizeInBytes(boolean[] positions,int usedPositionCount){\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 138,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return 0;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 143,
      "startColumnNumber" : 26,
      "endLineNumber" : 143,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sizeInBytes=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 28
      },
      "nodeContext" : "int sizeInBytes=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public long getPositionsSizeInBytes(boolean[] positions,int usedPositionCount){\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 28
      },
      "nodeContext" : "int sizeInBytes=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 144,
      "startColumnNumber" : 21,
      "endLineNumber" : 144,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 144,
        "startColumnNumber" : 17,
        "endLineNumber" : 144,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 144,
        "startColumnNumber" : 13,
        "endLineNumber" : 144,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < positions.length; ++i) {\n  if (positions[i]) {\n    sizeInBytes+=offsets[i + 1] - offsets[i];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public long getPositionsSizeInBytes(boolean[] positions,int usedPositionCount){\n  int positionCount=getPositionCount();\n  checkValidPositions(positions,positionCount);\n  if (usedPositionCount == 0) {\n    return 0;\n  }\n  if (usedPositionCount == positionCount) {\n    return getSizeInBytes();\n  }\n  int sizeInBytes=0;\n  for (int i=0; i < positions.length; ++i) {\n    if (positions[i]) {\n      sizeInBytes+=offsets[i + 1] - offsets[i];\n    }\n  }\n  return sizeInBytes + ((Integer.BYTES + Byte.BYTES) * (long)usedPositionCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 144,
        "startColumnNumber" : 13,
        "endLineNumber" : 144,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 137,
    "startColumnNumber" : 33,
    "endLineNumber" : 137,
    "endColumnNumber" : 34
  }, {
    "charLength" : 1,
    "startLineNumber" : 138,
    "startColumnNumber" : 19,
    "endLineNumber" : 138,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 143,
    "startColumnNumber" : 26,
    "endLineNumber" : 143,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 144,
    "startColumnNumber" : 21,
    "endLineNumber" : 144,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}