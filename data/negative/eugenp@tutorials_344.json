{
  "id" : 344,
  "expression" : "2",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-integration/src/test/java/com/baeldung/subflows/publishsubscribechannel/PublishSubscribeChannelUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 35,
      "startColumnNumber" : 52,
      "endLineNumber" : 35,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 35,
        "startColumnNumber" : 35,
        "endLineNumber" : 35,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Arrays.asList(1,2,3,4,5,6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 67
      },
      "nodeContext" : "numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 68
      },
      "nodeContext" : "numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 33,
        "startColumnNumber" : 66,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n  Message<?> outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),3);\n  outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),6);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),1);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),4);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),2);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenSendMessagesToFlow_thenNumbersAreClassified(){\n  numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n  Message<?> outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),3);\n  outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),6);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),1);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),4);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),2);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 68
      },
      "nodeContext" : "numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 54,
      "startColumnNumber" : 46,
      "endLineNumber" : 54,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(outMessage.getPayload(),2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(outMessage.getPayload(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 33,
        "startColumnNumber" : 66,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n  Message<?> outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),3);\n  outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),6);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),1);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),4);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),2);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenSendMessagesToFlow_thenNumbersAreClassified(){\n  numbersClassifier.classify(Arrays.asList(1,2,3,4,5,6));\n  Message<?> outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),3);\n  outMessage=multipleofThreeChannel.receive(0);\n  assertEquals(outMessage.getPayload(),6);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),1);\n  outMessage=remainderIsOneChannel.receive(0);\n  assertEquals(outMessage.getPayload(),4);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),2);\n  outMessage=remainderIsTwoChannel.receive(0);\n  assertEquals(outMessage.getPayload(),5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(outMessage.getPayload(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 35,
    "startColumnNumber" : 52,
    "endLineNumber" : 35,
    "endColumnNumber" : 53
  }, {
    "charLength" : 1,
    "startLineNumber" : 54,
    "startColumnNumber" : 46,
    "endLineNumber" : 54,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}