{
  "id" : 46,
  "expression" : "\"Cannot contain more than Integer.MAX_VALUE elements!\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/collect/ObjectCountHashMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Cannot contain more than Integer.MAX_VALUE elements!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 312,
      "startColumnNumber" : 38,
      "endLineNumber" : 312,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 312,
        "startColumnNumber" : 12,
        "endLineNumber" : 312,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 312,
        "startColumnNumber" : 6,
        "endLineNumber" : 312,
        "endColumnNumber" : 94
      },
      "nodeContext" : "throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 311,
        "startColumnNumber" : 44,
        "endLineNumber" : 313,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 311,
        "startColumnNumber" : 4,
        "endLineNumber" : 313,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEntryIndex == Integer.MAX_VALUE) {\n  throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 283,
        "startColumnNumber" : 55,
        "endLineNumber" : 323,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkPositive(value,\"count\");\n  long[] entries=this.entries;\n  @Nullable Object[] keys=this.keys;\n  int[] values=this.values;\n  int hash=smearedHash(key);\n  int tableIndex=hash & hashTableMask();\n  int newEntryIndex=this.size;\n  int next=table[tableIndex];\n  if (next == UNSET) {\n    table[tableIndex]=newEntryIndex;\n  }\n else {\n    int last;\n    long entry;\n    do {\n      last=next;\n      entry=entries[next];\n      if (getHash(entry) == hash && Objects.equal(key,keys[next])) {\n        int oldValue=values[next];\n        values[next]=value;\n        return oldValue;\n      }\n      next=getNext(entry);\n    }\n while (next != UNSET);\n    entries[last]=swapNext(entry,newEntryIndex);\n  }\n  if (newEntryIndex == Integer.MAX_VALUE) {\n    throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n  }\n  int newSize=newEntryIndex + 1;\n  resizeMeMaybe(newSize);\n  insertEntry(newEntryIndex,key,value,hash);\n  this.size=newSize;\n  if (newEntryIndex >= threshold) {\n    resizeTable(2 * table.length);\n  }\n  modCount++;\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 282,
        "startColumnNumber" : 2,
        "endLineNumber" : 323,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@CanIgnoreReturnValue public int put(@ParametricNullness K key,int value){\n  checkPositive(value,\"count\");\n  long[] entries=this.entries;\n  @Nullable Object[] keys=this.keys;\n  int[] values=this.values;\n  int hash=smearedHash(key);\n  int tableIndex=hash & hashTableMask();\n  int newEntryIndex=this.size;\n  int next=table[tableIndex];\n  if (next == UNSET) {\n    table[tableIndex]=newEntryIndex;\n  }\n else {\n    int last;\n    long entry;\n    do {\n      last=next;\n      entry=entries[next];\n      if (getHash(entry) == hash && Objects.equal(key,keys[next])) {\n        int oldValue=values[next];\n        values[next]=value;\n        return oldValue;\n      }\n      next=getNext(entry);\n    }\n while (next != UNSET);\n    entries[last]=swapNext(entry,newEntryIndex);\n  }\n  if (newEntryIndex == Integer.MAX_VALUE) {\n    throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n  }\n  int newSize=newEntryIndex + 1;\n  resizeMeMaybe(newSize);\n  insertEntry(newEntryIndex,key,value,hash);\n  this.size=newSize;\n  if (newEntryIndex >= threshold) {\n    resizeTable(2 * table.length);\n  }\n  modCount++;\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 312,
        "startColumnNumber" : 6,
        "endLineNumber" : 312,
        "endColumnNumber" : 94
      },
      "nodeContext" : "throw new IllegalStateException(\"Cannot contain more than Integer.MAX_VALUE elements!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 312,
    "startColumnNumber" : 38,
    "endLineNumber" : 312,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}