{
  "id" : 159,
  "expression" : "\"yyyy\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/JSONSerializerTest3.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"yyyy\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 16,
      "startColumnNumber" : 33,
      "endLineNumber" : 16,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 40
      },
      "nodeContext" : "serializer.setDateFormat(\"yyyy\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 41
      },
      "nodeContext" : "serializer.setDateFormat(\"yyyy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 41
      },
      "nodeContext" : "serializer.setDateFormat(\"yyyy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"yyyy\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 17,
      "startColumnNumber" : 28,
      "endLineNumber" : 17,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"yyyy\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 18,
      "startColumnNumber" : 28,
      "endLineNumber" : 18,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  JSONSerializer serializer=new JSONSerializer();\n  serializer.setDateFormat(\"yyyy\");\n  Assert.assertEquals(\"yyyy\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n  serializer.setDateFormat(\"yyyy-MM\");\n  Assert.assertEquals(\"yyyy-MM\",((SimpleDateFormat)serializer.getDateFormat()).toPattern());\n  serializer.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\"));\n  Assert.assertEquals(\"yyyy-MM-dd\",serializer.getDateFormatPattern());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(\"yyyy\",serializer.getDateFormatPattern());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 16,
    "startColumnNumber" : 33,
    "endLineNumber" : 16,
    "endColumnNumber" : 39
  }, {
    "charLength" : 6,
    "startLineNumber" : 17,
    "startColumnNumber" : 28,
    "endLineNumber" : 17,
    "endColumnNumber" : 34
  }, {
    "charLength" : 6,
    "startLineNumber" : 18,
    "startColumnNumber" : 28,
    "endLineNumber" : 18,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}