{
  "id" : 54,
  "expression" : "config instanceof SyncConfiguration",
  "projectName" : "realm@realm-java",
  "commitID" : "5d388ea9d7d238babc5d6f9a57682802df58a198",
  "filePath" : "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config instanceof SyncConfiguration",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 89,
      "startColumnNumber" : 12,
      "endLineNumber" : 89,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser user=syncConfig.getUser();\n  if (!user.isValid()) {\n    if (user.getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=user.getIdentity();\n  String syncRealmAuthUrl=user.getAuthenticationUrl().toString();\n  String rosSerializedUser=user.toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1377,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser user=syncConfig.getUser();\n    if (!user.isValid()) {\n      if (user.getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getIdentity();\n    String syncRealmAuthUrl=user.getAuthenticationUrl().toString();\n    String rosSerializedUser=user.toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser user=syncConfig.getUser();\n    if (!user.isValid()) {\n      if (user.getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getIdentity();\n    String syncRealmAuthUrl=user.getAuthenticationUrl().toString();\n    String rosSerializedUser=user.toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser user=syncConfig.getUser();\n  if (!user.isValid()) {\n    if (user.getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=user.getIdentity();\n  String syncRealmAuthUrl=user.getAuthenticationUrl().toString();\n  String rosSerializedUser=user.toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 89,
    "startColumnNumber" : 12,
    "endLineNumber" : 89,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}