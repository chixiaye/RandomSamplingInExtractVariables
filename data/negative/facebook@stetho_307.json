{
  "id" : 307,
  "expression" : "request",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho-okhttp/src/main/java/com/facebook/stetho/okhttp/StethoInterceptor.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 48,
      "startColumnNumber" : 86,
      "endLineNumber" : 48,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 48,
        "startColumnNumber" : 48,
        "endLineNumber" : 48,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new OkHttpInspectorRequest(requestId,request)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 48,
        "startColumnNumber" : 29,
        "endLineNumber" : 48,
        "endColumnNumber" : 94
      },
      "nodeContext" : "inspectorRequest=new OkHttpInspectorRequest(requestId,request)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 95
      },
      "nodeContext" : "OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 47,
        "startColumnNumber" : 36,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n  mEventReporter.requestWillBeSent(inspectorRequest);\n  byte[] requestBody=inspectorRequest.body();\n  if (requestBody != null) {\n    requestSize+=requestBody.length;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mEventReporter.isEnabled()) {\n  OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n  mEventReporter.requestWillBeSent(inspectorRequest);\n  byte[] requestBody=inspectorRequest.body();\n  if (requestBody != null) {\n    requestSize+=requestBody.length;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1833,
        "startLineNumber" : 41,
        "startColumnNumber" : 60,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1903,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Response intercept(Chain chain) throws IOException {\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 95
      },
      "nodeContext" : "OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.stetho.okhttp.Request"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 58,
      "startColumnNumber" : 31,
      "endLineNumber" : 58,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 58,
        "startColumnNumber" : 17,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "chain.proceed(request)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 39
      },
      "nodeContext" : "response=chain.proceed(request)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "response=chain.proceed(request);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  response=chain.proceed(request);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  response=chain.proceed(request);\n}\n catch (IOException e) {\n  if (mEventReporter.isEnabled()) {\n    mEventReporter.httpExchangeFailed(requestId,e.toString());\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1833,
        "startLineNumber" : 41,
        "startColumnNumber" : 60,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1903,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Response intercept(Chain chain) throws IOException {\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "response=chain.proceed(request);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.stetho.okhttp.Request"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 75,
      "startColumnNumber" : 14,
      "endLineNumber" : 75,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 73,
        "startColumnNumber" : 10,
        "endLineNumber" : 77,
        "endColumnNumber" : 25
      },
      "nodeContext" : "new OkHttpInspectorResponse(requestId,request,response,connection)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 26
      },
      "nodeContext" : "mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 27
      },
      "nodeContext" : "mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 66,
        "startColumnNumber" : 36,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (requestSize > 0) {\n    mEventReporter.dataSent(requestId,requestSize,requestSize);\n  }\n  Connection connection=chain.connection();\n  mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n  ResponseBody body=response.body();\n  MediaType contentType=null;\n  InputStream responseStream=null;\n  if (body != null) {\n    contentType=body.contentType();\n    responseStream=body.byteStream();\n  }\n  responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n  if (responseStream != null) {\n    response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mEventReporter.isEnabled()) {\n  if (requestSize > 0) {\n    mEventReporter.dataSent(requestId,requestSize,requestSize);\n  }\n  Connection connection=chain.connection();\n  mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n  ResponseBody body=response.body();\n  MediaType contentType=null;\n  InputStream responseStream=null;\n  if (body != null) {\n    contentType=body.contentType();\n    responseStream=body.byteStream();\n  }\n  responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n  if (responseStream != null) {\n    response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1833,
        "startLineNumber" : 41,
        "startColumnNumber" : 60,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1903,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Response intercept(Chain chain) throws IOException {\n  String requestId=String.valueOf(mNextRequestId.getAndIncrement());\n  Request request=chain.request();\n  int requestSize=0;\n  if (mEventReporter.isEnabled()) {\n    OkHttpInspectorRequest inspectorRequest=new OkHttpInspectorRequest(requestId,request);\n    mEventReporter.requestWillBeSent(inspectorRequest);\n    byte[] requestBody=inspectorRequest.body();\n    if (requestBody != null) {\n      requestSize+=requestBody.length;\n    }\n  }\n  Response response;\n  try {\n    response=chain.proceed(request);\n  }\n catch (  IOException e) {\n    if (mEventReporter.isEnabled()) {\n      mEventReporter.httpExchangeFailed(requestId,e.toString());\n    }\n    throw e;\n  }\n  if (mEventReporter.isEnabled()) {\n    if (requestSize > 0) {\n      mEventReporter.dataSent(requestId,requestSize,requestSize);\n    }\n    Connection connection=chain.connection();\n    mEventReporter.responseHeadersReceived(new OkHttpInspectorResponse(requestId,request,response,connection));\n    ResponseBody body=response.body();\n    MediaType contentType=null;\n    InputStream responseStream=null;\n    if (body != null) {\n      contentType=body.contentType();\n      responseStream=body.byteStream();\n    }\n    responseStream=mEventReporter.interpretResponseStream(requestId,contentType != null ? contentType.toString() : null,response.header(\"Content-Encoding\"),responseStream,new DefaultResponseHandler(mEventReporter,requestId));\n    if (responseStream != null) {\n      response=response.newBuilder().body(new ForwardingResponseBody(body,responseStream)).build();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 73,
        "startColumnNumber" : 10,
        "endLineNumber" : 77,
        "endColumnNumber" : 25
      },
      "nodeContext" : "new OkHttpInspectorResponse(requestId,request,response,connection)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.stetho.okhttp.Request"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 48,
    "startColumnNumber" : 86,
    "endLineNumber" : 48,
    "endColumnNumber" : 93
  }, {
    "charLength" : 7,
    "startLineNumber" : 58,
    "startColumnNumber" : 31,
    "endLineNumber" : 58,
    "endColumnNumber" : 38
  }, {
    "charLength" : 7,
    "startLineNumber" : 75,
    "startColumnNumber" : 14,
    "endLineNumber" : 75,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}