{
  "id" : 212,
  "expression" : "AccessType",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/region/RedissonNaturalIdRegion.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AccessType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 51,
      "startColumnNumber" : 26,
      "endLineNumber" : 51,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 51,
        "startColumnNumber" : 26,
        "endLineNumber" : 51,
        "endColumnNumber" : 46
      },
      "nodeContext" : "AccessType.READ_ONLY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 46
      },
      "nodeContext" : "accessType == AccessType.READ_ONLY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (accessType == AccessType.READ_ONLY) {\n  return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 50,
        "startColumnNumber" : 106,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public NaturalIdRegionAccessStrategy buildAccessStrategy(AccessType accessType) throws CacheException {\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 46
      },
      "nodeContext" : "accessType == AccessType.READ_ONLY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "AccessType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 54,
      "startColumnNumber" : 26,
      "endLineNumber" : 54,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 54,
        "startColumnNumber" : 26,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "AccessType.READ_WRITE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "accessType == AccessType.READ_WRITE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (accessType == AccessType.READ_WRITE) {\n  return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 50,
        "startColumnNumber" : 106,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public NaturalIdRegionAccessStrategy buildAccessStrategy(AccessType accessType) throws CacheException {\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "accessType == AccessType.READ_WRITE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "AccessType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 57,
      "startColumnNumber" : 26,
      "endLineNumber" : 57,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 57,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 57
      },
      "nodeContext" : "AccessType.NONSTRICT_READ_WRITE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 57
      },
      "nodeContext" : "accessType == AccessType.NONSTRICT_READ_WRITE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n  return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 50,
        "startColumnNumber" : 106,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public NaturalIdRegionAccessStrategy buildAccessStrategy(AccessType accessType) throws CacheException {\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 57
      },
      "nodeContext" : "accessType == AccessType.NONSTRICT_READ_WRITE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "AccessType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 60,
      "startColumnNumber" : 26,
      "endLineNumber" : 60,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 60,
        "startColumnNumber" : 26,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "AccessType.TRANSACTIONAL",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "accessType == AccessType.TRANSACTIONAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (accessType == AccessType.TRANSACTIONAL) {\n  return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 50,
        "startColumnNumber" : 106,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public NaturalIdRegionAccessStrategy buildAccessStrategy(AccessType accessType) throws CacheException {\n  if (accessType == AccessType.READ_ONLY) {\n    return new ReadOnlyNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.READ_WRITE) {\n    return new ReadWriteNaturalIdRegionAccessStrategy(settings,this,mapCache);\n  }\n  if (accessType == AccessType.NONSTRICT_READ_WRITE) {\n    return new NonStrictReadWriteNaturalIdRegionAccessStrategy(settings,this);\n  }\n  if (accessType == AccessType.TRANSACTIONAL) {\n    return new TransactionalNaturalIdRegionAccessStrategy(settings,this);\n  }\n  throw new CacheException(\"Unsupported access strategy: \" + accessType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "accessType == AccessType.TRANSACTIONAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 51,
    "startColumnNumber" : 26,
    "endLineNumber" : 51,
    "endColumnNumber" : 36
  }, {
    "charLength" : 10,
    "startLineNumber" : 54,
    "startColumnNumber" : 26,
    "endLineNumber" : 54,
    "endColumnNumber" : 36
  }, {
    "charLength" : 10,
    "startLineNumber" : 57,
    "startColumnNumber" : 26,
    "endLineNumber" : 57,
    "endColumnNumber" : 36
  }, {
    "charLength" : 10,
    "startLineNumber" : 60,
    "startColumnNumber" : 26,
    "endLineNumber" : 60,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}