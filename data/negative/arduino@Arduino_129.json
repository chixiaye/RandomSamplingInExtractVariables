{
  "id" : 129,
  "expression" : "keyIter",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/cc/arduino/contributions/GPGDetachedSignatureVerifier.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keyIter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 82,
      "startColumnNumber" : 13,
      "endLineNumber" : 82,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 82,
        "startColumnNumber" : 13,
        "endLineNumber" : 82,
        "endColumnNumber" : 30
      },
      "nodeContext" : "keyIter.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (keyIter.hasNext()) {\n  PGPPublicKey key=(PGPPublicKey)keyIter.next();\n  if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n    return key;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 78,
        "startColumnNumber" : 34,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n  Iterator keyIter=keyRing.getPublicKeys();\n  while (keyIter.hasNext()) {\n    PGPPublicKey key=(PGPPublicKey)keyIter.next();\n    if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n      return key;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (keyRingIter.hasNext()) {\n  PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n  Iterator keyIter=keyRing.getPublicKeys();\n  while (keyIter.hasNext()) {\n    PGPPublicKey key=(PGPPublicKey)keyIter.next();\n    if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n      return key;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 74,
        "startColumnNumber" : 103,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  PGPPublicKeyRingCollection pgpPub=new PGPPublicKeyRingCollection(PGPUtil.getDecoderStream(input),new BcKeyFingerprintCalculator());\n  Iterator keyRingIter=pgpPub.getKeyRings();\n  while (keyRingIter.hasNext()) {\n    PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n    Iterator keyIter=keyRing.getPublicKeys();\n    while (keyIter.hasNext()) {\n      PGPPublicKey key=(PGPPublicKey)keyIter.next();\n      if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n        return key;\n      }\n    }\n  }\n  throw new IllegalArgumentException(\"Can't find encryption key in key ring.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private PGPPublicKey readPublicKey(InputStream input,String keyId) throws IOException, PGPException {\n  PGPPublicKeyRingCollection pgpPub=new PGPPublicKeyRingCollection(PGPUtil.getDecoderStream(input),new BcKeyFingerprintCalculator());\n  Iterator keyRingIter=pgpPub.getKeyRings();\n  while (keyRingIter.hasNext()) {\n    PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n    Iterator keyIter=keyRing.getPublicKeys();\n    while (keyIter.hasNext()) {\n      PGPPublicKey key=(PGPPublicKey)keyIter.next();\n      if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n        return key;\n      }\n    }\n  }\n  throw new IllegalArgumentException(\"Can't find encryption key in key ring.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 82,
        "startColumnNumber" : 13,
        "endLineNumber" : 82,
        "endColumnNumber" : 30
      },
      "nodeContext" : "keyIter.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator"
  }, {
    "nodeContext" : "keyIter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 83,
      "startColumnNumber" : 42,
      "endLineNumber" : 83,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 83,
        "startColumnNumber" : 42,
        "endLineNumber" : 83,
        "endColumnNumber" : 56
      },
      "nodeContext" : "keyIter.next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 83,
        "startColumnNumber" : 27,
        "endLineNumber" : 83,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(PGPPublicKey)keyIter.next()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 56
      },
      "nodeContext" : "key=(PGPPublicKey)keyIter.next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 57
      },
      "nodeContext" : "PGPPublicKey key=(PGPPublicKey)keyIter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 82,
        "startColumnNumber" : 32,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  PGPPublicKey key=(PGPPublicKey)keyIter.next();\n  if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n    return key;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (keyIter.hasNext()) {\n  PGPPublicKey key=(PGPPublicKey)keyIter.next();\n  if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n    return key;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 78,
        "startColumnNumber" : 34,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n  Iterator keyIter=keyRing.getPublicKeys();\n  while (keyIter.hasNext()) {\n    PGPPublicKey key=(PGPPublicKey)keyIter.next();\n    if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n      return key;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (keyRingIter.hasNext()) {\n  PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n  Iterator keyIter=keyRing.getPublicKeys();\n  while (keyIter.hasNext()) {\n    PGPPublicKey key=(PGPPublicKey)keyIter.next();\n    if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n      return key;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 74,
        "startColumnNumber" : 103,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  PGPPublicKeyRingCollection pgpPub=new PGPPublicKeyRingCollection(PGPUtil.getDecoderStream(input),new BcKeyFingerprintCalculator());\n  Iterator keyRingIter=pgpPub.getKeyRings();\n  while (keyRingIter.hasNext()) {\n    PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n    Iterator keyIter=keyRing.getPublicKeys();\n    while (keyIter.hasNext()) {\n      PGPPublicKey key=(PGPPublicKey)keyIter.next();\n      if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n        return key;\n      }\n    }\n  }\n  throw new IllegalArgumentException(\"Can't find encryption key in key ring.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private PGPPublicKey readPublicKey(InputStream input,String keyId) throws IOException, PGPException {\n  PGPPublicKeyRingCollection pgpPub=new PGPPublicKeyRingCollection(PGPUtil.getDecoderStream(input),new BcKeyFingerprintCalculator());\n  Iterator keyRingIter=pgpPub.getKeyRings();\n  while (keyRingIter.hasNext()) {\n    PGPPublicKeyRing keyRing=(PGPPublicKeyRing)keyRingIter.next();\n    Iterator keyIter=keyRing.getPublicKeys();\n    while (keyIter.hasNext()) {\n      PGPPublicKey key=(PGPPublicKey)keyIter.next();\n      if (Long.toHexString(key.getKeyID()).toUpperCase().endsWith(keyId)) {\n        return key;\n      }\n    }\n  }\n  throw new IllegalArgumentException(\"Can't find encryption key in key ring.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 57
      },
      "nodeContext" : "PGPPublicKey key=(PGPPublicKey)keyIter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 82,
    "startColumnNumber" : 13,
    "endLineNumber" : 82,
    "endColumnNumber" : 20
  }, {
    "charLength" : 7,
    "startLineNumber" : 83,
    "startColumnNumber" : 42,
    "endLineNumber" : 83,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}