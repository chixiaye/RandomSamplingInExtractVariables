{
  "id" : 323,
  "expression" : "!timestampStringFromContext.isEmpty()",
  "projectName" : "apache@druid",
  "commitID" : "58294329b77a563c5eb9327e9365c48ad60c0021",
  "filePath" : "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!timestampStringFromContext.isEmpty()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 717,
      "startColumnNumber" : 8,
      "endLineNumber" : 717,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 717,
        "startColumnNumber" : 4,
        "endLineNumber" : 729,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!timestampStringFromContext.isEmpty()) {\n  return DateTimes.utc(Long.parseLong(timestampStringFromContext));\n}\n else if (Granularities.ALL.equals(granularity)) {\n  final List<Interval> intervals=getIntervals();\n  if (intervals.isEmpty()) {\n    return null;\n  }\n  final DateTime timeStart=intervals.get(0).getStart();\n  return granularity.getIterable(new Interval(timeStart,timeStart.plus(1))).iterator().next().getStart();\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 713,
        "startColumnNumber" : 2,
        "endLineNumber" : 730,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String timestampStringFromContext=getContextValue(CTX_KEY_FUDGE_TIMESTAMP,\"\");\n  final Granularity granularity=getGranularity();\n  if (!timestampStringFromContext.isEmpty()) {\n    return DateTimes.utc(Long.parseLong(timestampStringFromContext));\n  }\n else   if (Granularities.ALL.equals(granularity)) {\n    final List<Interval> intervals=getIntervals();\n    if (intervals.isEmpty()) {\n      return null;\n    }\n    final DateTime timeStart=intervals.get(0).getStart();\n    return granularity.getIterable(new Interval(timeStart,timeStart.plus(1))).iterator().next().getStart();\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 869,
        "startLineNumber" : 708,
        "startColumnNumber" : 2,
        "endLineNumber" : 730,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Computes the timestamp that will be returned by  {@link #getUniversalTimestamp()}.\n */\n@Nullable private DateTime computeUniversalTimestamp(){\n  final String timestampStringFromContext=getContextValue(CTX_KEY_FUDGE_TIMESTAMP,\"\");\n  final Granularity granularity=getGranularity();\n  if (!timestampStringFromContext.isEmpty()) {\n    return DateTimes.utc(Long.parseLong(timestampStringFromContext));\n  }\n else   if (Granularities.ALL.equals(granularity)) {\n    final List<Interval> intervals=getIntervals();\n    if (intervals.isEmpty()) {\n      return null;\n    }\n    final DateTime timeStart=intervals.get(0).getStart();\n    return granularity.getIterable(new Interval(timeStart,timeStart.plus(1))).iterator().next().getStart();\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 717,
        "startColumnNumber" : 4,
        "endLineNumber" : 729,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!timestampStringFromContext.isEmpty()) {\n  return DateTimes.utc(Long.parseLong(timestampStringFromContext));\n}\n else if (Granularities.ALL.equals(granularity)) {\n  final List<Interval> intervals=getIntervals();\n  if (intervals.isEmpty()) {\n    return null;\n  }\n  final DateTime timeStart=intervals.get(0).getStart();\n  return granularity.getIterable(new Interval(timeStart,timeStart.plus(1))).iterator().next().getStart();\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 11
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 717,
    "startColumnNumber" : 8,
    "endLineNumber" : 717,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}