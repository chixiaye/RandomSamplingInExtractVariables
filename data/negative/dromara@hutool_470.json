{
  "id" : 470,
  "expression" : "v2s.get(i)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/comparator/VersionComparator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "v2s.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 73,
      "startColumnNumber" : 8,
      "endLineNumber" : 73,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 18
      },
      "nodeContext" : "v2=v2s.get(i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 19
      },
      "nodeContext" : "v2=v2s.get(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 71,
        "startColumnNumber" : 38,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  v1=v1s.get(i);\n  v2=v2s.get(i);\n  diff=v1.length() - v2.length();\n  if (0 == diff) {\n    diff=v1.compareTo(v2);\n  }\n  if (diff != 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < minLength; i++) {\n  v1=v1s.get(i);\n  v2=v2s.get(i);\n  diff=v1.length() - v2.length();\n  if (0 == diff) {\n    diff=v1.compareTo(v2);\n  }\n  if (diff != 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 52,
        "startColumnNumber" : 54,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (ObjectUtil.equal(version1,version2)) {\n    return 0;\n  }\n  if (version1 == null && version2 == null) {\n    return 0;\n  }\n else   if (version1 == null) {\n    return -1;\n  }\n else   if (version2 == null) {\n    return 1;\n  }\n  final List<String> v1s=StrUtil.split(version1,CharUtil.DOT);\n  final List<String> v2s=StrUtil.split(version2,CharUtil.DOT);\n  int diff=0;\n  int minLength=Math.min(v1s.size(),v2s.size());\n  String v1;\n  String v2;\n  for (int i=0; i < minLength; i++) {\n    v1=v1s.get(i);\n    v2=v2s.get(i);\n    diff=v1.length() - v2.length();\n    if (0 == diff) {\n      diff=v1.compareTo(v2);\n    }\n    if (diff != 0) {\n      break;\n    }\n  }\n  return (diff != 0) ? diff : v1s.size() - v2s.size();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1335,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 比较两个版本<br> null版本排在最小：即： <pre> compare(null, \"v1\") &lt; 0 compare(\"v1\", \"v1\")  = 0 compare(null, null)   = 0 compare(\"v1\", null) &gt; 0 compare(\"1.0.0\", \"1.0.2\") &lt; 0 compare(\"1.0.2\", \"1.0.2a\") &lt; 0 compare(\"1.13.0\", \"1.12.1c\") &gt; 0 compare(\"V0.0.20170102\", \"V0.0.20170101\") &gt; 0 </pre>\n * @param version1 版本1\n * @param version2 版本2\n */\n@Override public int compare(String version1,String version2){\n  if (ObjectUtil.equal(version1,version2)) {\n    return 0;\n  }\n  if (version1 == null && version2 == null) {\n    return 0;\n  }\n else   if (version1 == null) {\n    return -1;\n  }\n else   if (version2 == null) {\n    return 1;\n  }\n  final List<String> v1s=StrUtil.split(version1,CharUtil.DOT);\n  final List<String> v2s=StrUtil.split(version2,CharUtil.DOT);\n  int diff=0;\n  int minLength=Math.min(v1s.size(),v2s.size());\n  String v1;\n  String v2;\n  for (int i=0; i < minLength; i++) {\n    v1=v1s.get(i);\n    v2=v2s.get(i);\n    diff=v1.length() - v2.length();\n    if (0 == diff) {\n      diff=v1.compareTo(v2);\n    }\n    if (diff != 0) {\n      break;\n    }\n  }\n  return (diff != 0) ? diff : v1s.size() - v2s.size();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 19
      },
      "nodeContext" : "v2=v2s.get(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 73,
    "startColumnNumber" : 8,
    "endLineNumber" : 73,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}