{
  "id" : 24,
  "expression" : "nudged",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/GridSampler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nudged",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 106,
      "startColumnNumber" : 51,
      "endLineNumber" : 106,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 106,
        "startColumnNumber" : 25,
        "endLineNumber" : 106,
        "endColumnNumber" : 57
      },
      "nodeContext" : "offset < points.length && nudged",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int offset=0; offset < points.length && nudged; offset+=2) {\n  int x=(int)points[offset];\n  int y=(int)points[offset + 1];\n  if (x < -1 || x > width || y < -1 || y > height) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  nudged=false;\n  if (x == -1) {\n    points[offset]=0.0f;\n    nudged=true;\n  }\n else   if (x == width) {\n    points[offset]=width - 1;\n    nudged=true;\n  }\n  if (y == -1) {\n    points[offset + 1]=0.0f;\n    nudged=true;\n  }\n else   if (y == height) {\n    points[offset + 1]=height - 1;\n    nudged=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1597,
        "startLineNumber" : 101,
        "startColumnNumber" : 85,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int width=image.getWidth();\n  int height=image.getHeight();\n  boolean nudged=true;\n  for (int offset=0; offset < points.length && nudged; offset+=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n  nudged=true;\n  for (int offset=points.length - 2; offset >= 0 && nudged; offset-=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2636,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Checks a set of points that have been transformed to sample points on an image against the image's dimensions to see if the point are even within the image.</p> <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder patterns in an image where the QR Code runs all the way to the image border.</p> <p>For efficiency, the method will check points from either end of the line until one is found to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n * @param image image into which the points should map\n * @param points actual points in x1,y1,...,xn,yn form\n * @throws NotFoundException if an endpoint is lies outside the image boundaries\n */\nprotected static void checkAndNudgePoints(BitMatrix image,float[] points) throws NotFoundException {\n  int width=image.getWidth();\n  int height=image.getHeight();\n  boolean nudged=true;\n  for (int offset=0; offset < points.length && nudged; offset+=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n  nudged=true;\n  for (int offset=points.length - 2; offset >= 0 && nudged; offset-=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 106,
        "startColumnNumber" : 25,
        "endLineNumber" : 106,
        "endColumnNumber" : 57
      },
      "nodeContext" : "offset < points.length && nudged",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "nudged",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 130,
      "startColumnNumber" : 56,
      "endLineNumber" : 130,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 130,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 62
      },
      "nodeContext" : "offset >= 0 && nudged",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int offset=points.length - 2; offset >= 0 && nudged; offset-=2) {\n  int x=(int)points[offset];\n  int y=(int)points[offset + 1];\n  if (x < -1 || x > width || y < -1 || y > height) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  nudged=false;\n  if (x == -1) {\n    points[offset]=0.0f;\n    nudged=true;\n  }\n else   if (x == width) {\n    points[offset]=width - 1;\n    nudged=true;\n  }\n  if (y == -1) {\n    points[offset + 1]=0.0f;\n    nudged=true;\n  }\n else   if (y == height) {\n    points[offset + 1]=height - 1;\n    nudged=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 136,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1597,
        "startLineNumber" : 101,
        "startColumnNumber" : 85,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int width=image.getWidth();\n  int height=image.getHeight();\n  boolean nudged=true;\n  for (int offset=0; offset < points.length && nudged; offset+=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n  nudged=true;\n  for (int offset=points.length - 2; offset >= 0 && nudged; offset-=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2636,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Checks a set of points that have been transformed to sample points on an image against the image's dimensions to see if the point are even within the image.</p> <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder patterns in an image where the QR Code runs all the way to the image border.</p> <p>For efficiency, the method will check points from either end of the line until one is found to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n * @param image image into which the points should map\n * @param points actual points in x1,y1,...,xn,yn form\n * @throws NotFoundException if an endpoint is lies outside the image boundaries\n */\nprotected static void checkAndNudgePoints(BitMatrix image,float[] points) throws NotFoundException {\n  int width=image.getWidth();\n  int height=image.getHeight();\n  boolean nudged=true;\n  for (int offset=0; offset < points.length && nudged; offset+=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n  nudged=true;\n  for (int offset=points.length - 2; offset >= 0 && nudged; offset-=2) {\n    int x=(int)points[offset];\n    int y=(int)points[offset + 1];\n    if (x < -1 || x > width || y < -1 || y > height) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    nudged=false;\n    if (x == -1) {\n      points[offset]=0.0f;\n      nudged=true;\n    }\n else     if (x == width) {\n      points[offset]=width - 1;\n      nudged=true;\n    }\n    if (y == -1) {\n      points[offset + 1]=0.0f;\n      nudged=true;\n    }\n else     if (y == height) {\n      points[offset + 1]=height - 1;\n      nudged=true;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 130,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 62
      },
      "nodeContext" : "offset >= 0 && nudged",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 106,
    "startColumnNumber" : 51,
    "endLineNumber" : 106,
    "endColumnNumber" : 57
  }, {
    "charLength" : 6,
    "startLineNumber" : 130,
    "startColumnNumber" : 56,
    "endLineNumber" : 130,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}