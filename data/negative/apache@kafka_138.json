{
  "id" : 138,
  "expression" : "Optional.of(new ArrayList<>())",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/shell/src/test/java/org/apache/kafka/shell/GlobVisitorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Optional.of(new ArrayList<>())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 56,
      "startColumnNumber" : 28,
      "endLineNumber" : 56,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 7,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 56,
        "startColumnNumber" : 20,
        "endLineNumber" : 56,
        "endColumnNumber" : 58
      },
      "nodeContext" : "infos=Optional.of(new ArrayList<>())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 20,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "infos=Optional.of(new ArrayList<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 55,
        "startColumnNumber" : 38,
        "endLineNumber" : 58,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  infos=Optional.of(new ArrayList<>());\n  infos.get().add(info.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (info.isPresent()) {\n  infos=Optional.of(new ArrayList<>());\n  infos.get().add(info.get());\n}\n else {\n  infos=Optional.empty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (info.isPresent()) {\n    infos=Optional.of(new ArrayList<>());\n    infos.get().add(info.get());\n  }\n else {\n    infos=Optional.empty();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (infos == null) {\n  if (info.isPresent()) {\n    infos=Optional.of(new ArrayList<>());\n    infos.get().add(info.get());\n  }\n else {\n    infos=Optional.empty();\n  }\n}\n else {\n  if (info.isPresent()) {\n    infos.get().add(info.get());\n  }\n else {\n    throw new RuntimeException(\"Saw non-empty info after seeing empty info\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 53,
        "startColumnNumber" : 60,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (infos == null) {\n    if (info.isPresent()) {\n      infos=Optional.of(new ArrayList<>());\n      infos.get().add(info.get());\n    }\n else {\n      infos=Optional.empty();\n    }\n  }\n else {\n    if (info.isPresent()) {\n      infos.get().add(info.get());\n    }\n else {\n      throw new RuntimeException(\"Saw non-empty info after seeing empty info\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void accept(Optional<MetadataNodeInfo> info){\n  if (infos == null) {\n    if (info.isPresent()) {\n      infos=Optional.of(new ArrayList<>());\n      infos.get().add(info.get());\n    }\n else {\n      infos=Optional.empty();\n    }\n  }\n else {\n    if (info.isPresent()) {\n      infos.get().add(info.get());\n    }\n else {\n      throw new RuntimeException(\"Saw non-empty info after seeing empty info\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 20,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "infos=Optional.of(new ArrayList<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.util.Optional<java.util.List<org.apache.kafka.shell.GlobVisitor.MetadataNodeInfo>>"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 56,
    "startColumnNumber" : 28,
    "endLineNumber" : 56,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}