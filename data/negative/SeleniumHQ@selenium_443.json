{
  "id" : 443,
  "expression" : "\"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/com/thoughtworks/selenium/webdriven/commands/GetElementIndex.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 98,
      "startLineNumber" : 42,
      "startColumnNumber" : 8,
      "endLineNumber" : 42,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 40,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 27
      },
      "nodeContext" : "script=\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 28
      },
      "nodeContext" : "String script=\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 37,
        "startColumnNumber" : 89,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WebElement element=finder.findElement(driver,locator);\n  String script=\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\";\n  return (Long)js.executeScript(driver,script,element);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected Number handleSeleneseCommand(WebDriver driver,String locator,String value){\n  WebElement element=finder.findElement(driver,locator);\n  String script=\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\";\n  return (Long)js.executeScript(driver,script,element);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"var _isCommentOrEmptyTextNode = function(node) {\\n\" + \"    return node.nodeType == 8 || ((node.nodeType == 3) && !(/[^\\\\t\\\\n\\\\r ]/.test(node.data)));\\n\" + \"};\\n\"+ \"    var element = arguments[0];\\n\"+ \"    var previousSibling;\\n\"+ \"    var index = 0;\\n\"+ \"    while ((previousSibling = element.previousSibling) != null) {\\n\"+ \"        if (!_isCommentOrEmptyTextNode(previousSibling)) {\\n\"+ \"            index++;\\n\"+ \"        }\\n\"+ \"        element = previousSibling;\\n\"+ \"    }\\n\"+ \"    return index;\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 2
    },
    "tokenLength" : 21,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 98,
    "startLineNumber" : 42,
    "startColumnNumber" : 8,
    "endLineNumber" : 42,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}