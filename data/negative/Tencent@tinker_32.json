{
  "id" : 32,
  "expression" : "new FileInputStream(config.mSignatureFile)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new FileInputStream(config.mSignatureFile)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 92,
      "startColumnNumber" : 41,
      "endLineNumber" : 92,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 92,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new BufferedInputStream(new FileInputStream(config.mSignatureFile))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 84
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(config.mSignatureFile))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 85
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n  KeyStore keyStore=KeyStore.getInstance(\"JKS\");\n  keyStore.load(is,config.mStorePass.toCharArray());\n  Key key=keyStore.getKey(config.mStoreAlias,config.mKeyPass.toCharArray());\n  String keyAlgorithm=key.getAlgorithm();\n  String signatureAlgorithm;\n  if (keyAlgorithm.equalsIgnoreCase(\"DSA\")) {\n    signatureAlgorithm=\"SHA1withDSA\";\n  }\n else   if (keyAlgorithm.equalsIgnoreCase(\"RSA\")) {\n    signatureAlgorithm=\"SHA1withRSA\";\n  }\n else   if (keyAlgorithm.equalsIgnoreCase(\"EC\")) {\n    signatureAlgorithm=\"SHA1withECDSA\";\n  }\n else {\n    throw new RuntimeException(\"private key is not a DSA or \" + \"RSA key\");\n  }\n  return signatureAlgorithm;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n  KeyStore keyStore=KeyStore.getInstance(\"JKS\");\n  keyStore.load(is,config.mStorePass.toCharArray());\n  Key key=keyStore.getKey(config.mStoreAlias,config.mKeyPass.toCharArray());\n  String keyAlgorithm=key.getAlgorithm();\n  String signatureAlgorithm;\n  if (keyAlgorithm.equalsIgnoreCase(\"DSA\")) {\n    signatureAlgorithm=\"SHA1withDSA\";\n  }\n else   if (keyAlgorithm.equalsIgnoreCase(\"RSA\")) {\n    signatureAlgorithm=\"SHA1withRSA\";\n  }\n else   if (keyAlgorithm.equalsIgnoreCase(\"EC\")) {\n    signatureAlgorithm=\"SHA1withECDSA\";\n  }\n else {\n    throw new RuntimeException(\"private key is not a DSA or \" + \"RSA key\");\n  }\n  return signatureAlgorithm;\n}\n  finally {\n  IOHelper.closeQuietly(is);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 89,
        "startColumnNumber" : 60,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream is=null;\n  try {\n    is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n    KeyStore keyStore=KeyStore.getInstance(\"JKS\");\n    keyStore.load(is,config.mStorePass.toCharArray());\n    Key key=keyStore.getKey(config.mStoreAlias,config.mKeyPass.toCharArray());\n    String keyAlgorithm=key.getAlgorithm();\n    String signatureAlgorithm;\n    if (keyAlgorithm.equalsIgnoreCase(\"DSA\")) {\n      signatureAlgorithm=\"SHA1withDSA\";\n    }\n else     if (keyAlgorithm.equalsIgnoreCase(\"RSA\")) {\n      signatureAlgorithm=\"SHA1withRSA\";\n    }\n else     if (keyAlgorithm.equalsIgnoreCase(\"EC\")) {\n      signatureAlgorithm=\"SHA1withECDSA\";\n    }\n else {\n      throw new RuntimeException(\"private key is not a DSA or \" + \"RSA key\");\n    }\n    return signatureAlgorithm;\n  }\n  finally {\n    IOHelper.closeQuietly(is);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String getSignatureAlgorithm() throws Exception {\n  InputStream is=null;\n  try {\n    is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n    KeyStore keyStore=KeyStore.getInstance(\"JKS\");\n    keyStore.load(is,config.mStorePass.toCharArray());\n    Key key=keyStore.getKey(config.mStoreAlias,config.mKeyPass.toCharArray());\n    String keyAlgorithm=key.getAlgorithm();\n    String signatureAlgorithm;\n    if (keyAlgorithm.equalsIgnoreCase(\"DSA\")) {\n      signatureAlgorithm=\"SHA1withDSA\";\n    }\n else     if (keyAlgorithm.equalsIgnoreCase(\"RSA\")) {\n      signatureAlgorithm=\"SHA1withRSA\";\n    }\n else     if (keyAlgorithm.equalsIgnoreCase(\"EC\")) {\n      signatureAlgorithm=\"SHA1withECDSA\";\n    }\n else {\n      throw new RuntimeException(\"private key is not a DSA or \" + \"RSA key\");\n    }\n    return signatureAlgorithm;\n  }\n  finally {\n    IOHelper.closeQuietly(is);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 85
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(config.mSignatureFile));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.io.FileInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 92,
    "startColumnNumber" : 41,
    "endLineNumber" : 92,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}