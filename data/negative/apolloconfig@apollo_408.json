{
  "id" : 408,
  "expression" : "namespaceIdentifier.getClusterName()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "namespaceIdentifier.getClusterName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 167,
      "startColumnNumber" : 30,
      "endLineNumber" : 167,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(clusterName,namespaceIdentifier.getClusterName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(clusterName,namespaceIdentifier.getClusterName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2973,
        "startLineNumber" : 130,
        "startColumnNumber" : 27,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ItemDTO sourceItem1=new ItemDTO(\"a\",\"b\",\"comment\",1);\n  ItemDTO sourceItem2=new ItemDTO(\"newKey\",\"c\",\"comment\",2);\n  ItemDTO sourceItem3=new ItemDTO(\"c\",\"newValue\",\"comment\",3);\n  ItemDTO sourceItem4=new ItemDTO(\"d\",\"b\",\"newComment\",4);\n  List<ItemDTO> sourceItems=Arrays.asList(sourceItem1,sourceItem2,sourceItem3,sourceItem4);\n  ItemDTO targetItem1=new ItemDTO(\"a\",\"b\",\"comment\",1);\n  ItemDTO targetItem2=new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n  ItemDTO targetItem3=new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n  List<ItemDTO> targetItems=Arrays.asList(targetItem1,targetItem2,targetItem3);\n  String appId=\"6666\", env=\"LOCAL\", clusterName=ConfigConsts.CLUSTER_NAME_DEFAULT, namespaceName=ConfigConsts.NAMESPACE_APPLICATION;\n  List<NamespaceIdentifier> namespaceIdentifiers=generateNamespaceIdentifer(appId,env,clusterName,namespaceName);\n  NamespaceDTO namespaceDTO=generateNamespaceDTO(appId,clusterName,namespaceName);\n  when(namespaceAPI.loadNamespace(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(namespaceDTO);\n  when(itemAPI.findItems(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(targetItems);\n  UserInfo userInfo=new UserInfo();\n  userInfo.setUserId(\"test\");\n  when(userInfoHolder.getUser()).thenReturn(userInfo);\n  List<ItemDiffs> itemDiffses=configService.compare(namespaceIdentifiers,sourceItems);\n  assertEquals(1,itemDiffses.size());\n  ItemDiffs itemDiffs=itemDiffses.get(0);\n  ItemChangeSets changeSets=itemDiffs.getDiffs();\n  assertEquals(0,changeSets.getDeleteItems().size());\n  assertEquals(2,changeSets.getUpdateItems().size());\n  assertEquals(1,changeSets.getCreateItems().size());\n  NamespaceIdentifier namespaceIdentifier=itemDiffs.getNamespace();\n  assertEquals(appId,namespaceIdentifier.getAppId());\n  assertEquals(Env.valueOf(\"LOCAL\"),namespaceIdentifier.getEnv());\n  assertEquals(clusterName,namespaceIdentifier.getClusterName());\n  assertEquals(namespaceName,namespaceIdentifier.getNamespaceName());\n  ItemDTO createdItem=changeSets.getCreateItems().get(0);\n  assertEquals(\"newKey\",createdItem.getKey());\n  assertEquals(\"c\",createdItem.getValue());\n  assertEquals(\"comment\",createdItem.getComment());\n  assertEquals(4,createdItem.getLineNum());\n  List<ItemDTO> updateItems=changeSets.getUpdateItems();\n  ItemDTO updateItem1=updateItems.get(0);\n  ItemDTO updateItem2=updateItems.get(1);\n  assertEquals(\"c\",updateItem1.getKey());\n  assertEquals(\"newValue\",updateItem1.getValue());\n  assertEquals(\"comment\",updateItem1.getComment());\n  assertEquals(2,updateItem1.getLineNum());\n  assertEquals(\"d\",updateItem2.getKey());\n  assertEquals(\"b\",updateItem2.getValue());\n  assertEquals(\"newComment\",updateItem2.getComment());\n  assertEquals(3,updateItem2.getLineNum());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 438,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3006,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCompare(){\n  ItemDTO sourceItem1=new ItemDTO(\"a\",\"b\",\"comment\",1);\n  ItemDTO sourceItem2=new ItemDTO(\"newKey\",\"c\",\"comment\",2);\n  ItemDTO sourceItem3=new ItemDTO(\"c\",\"newValue\",\"comment\",3);\n  ItemDTO sourceItem4=new ItemDTO(\"d\",\"b\",\"newComment\",4);\n  List<ItemDTO> sourceItems=Arrays.asList(sourceItem1,sourceItem2,sourceItem3,sourceItem4);\n  ItemDTO targetItem1=new ItemDTO(\"a\",\"b\",\"comment\",1);\n  ItemDTO targetItem2=new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n  ItemDTO targetItem3=new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n  List<ItemDTO> targetItems=Arrays.asList(targetItem1,targetItem2,targetItem3);\n  String appId=\"6666\", env=\"LOCAL\", clusterName=ConfigConsts.CLUSTER_NAME_DEFAULT, namespaceName=ConfigConsts.NAMESPACE_APPLICATION;\n  List<NamespaceIdentifier> namespaceIdentifiers=generateNamespaceIdentifer(appId,env,clusterName,namespaceName);\n  NamespaceDTO namespaceDTO=generateNamespaceDTO(appId,clusterName,namespaceName);\n  when(namespaceAPI.loadNamespace(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(namespaceDTO);\n  when(itemAPI.findItems(appId,Env.valueOf(env),clusterName,namespaceName)).thenReturn(targetItems);\n  UserInfo userInfo=new UserInfo();\n  userInfo.setUserId(\"test\");\n  when(userInfoHolder.getUser()).thenReturn(userInfo);\n  List<ItemDiffs> itemDiffses=configService.compare(namespaceIdentifiers,sourceItems);\n  assertEquals(1,itemDiffses.size());\n  ItemDiffs itemDiffs=itemDiffses.get(0);\n  ItemChangeSets changeSets=itemDiffs.getDiffs();\n  assertEquals(0,changeSets.getDeleteItems().size());\n  assertEquals(2,changeSets.getUpdateItems().size());\n  assertEquals(1,changeSets.getCreateItems().size());\n  NamespaceIdentifier namespaceIdentifier=itemDiffs.getNamespace();\n  assertEquals(appId,namespaceIdentifier.getAppId());\n  assertEquals(Env.valueOf(\"LOCAL\"),namespaceIdentifier.getEnv());\n  assertEquals(clusterName,namespaceIdentifier.getClusterName());\n  assertEquals(namespaceName,namespaceIdentifier.getNamespaceName());\n  ItemDTO createdItem=changeSets.getCreateItems().get(0);\n  assertEquals(\"newKey\",createdItem.getKey());\n  assertEquals(\"c\",createdItem.getValue());\n  assertEquals(\"comment\",createdItem.getComment());\n  assertEquals(4,createdItem.getLineNum());\n  List<ItemDTO> updateItems=changeSets.getUpdateItems();\n  ItemDTO updateItem1=updateItems.get(0);\n  ItemDTO updateItem2=updateItems.get(1);\n  assertEquals(\"c\",updateItem1.getKey());\n  assertEquals(\"newValue\",updateItem1.getValue());\n  assertEquals(\"comment\",updateItem1.getComment());\n  assertEquals(2,updateItem1.getLineNum());\n  assertEquals(\"d\",updateItem2.getKey());\n  assertEquals(\"b\",updateItem2.getValue());\n  assertEquals(\"newComment\",updateItem2.getComment());\n  assertEquals(3,updateItem2.getLineNum());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 444,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(clusterName,namespaceIdentifier.getClusterName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 167,
    "startColumnNumber" : 30,
    "endLineNumber" : 167,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}