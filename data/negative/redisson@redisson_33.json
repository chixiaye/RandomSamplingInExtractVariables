{
  "id" : 33,
  "expression" : "s1.get(0).getName()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/RedissonStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "s1.get(0).getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 620,
      "startColumnNumber" : 19,
      "endLineNumber" : 620,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 620,
        "startColumnNumber" : 8,
        "endLineNumber" : 620,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertThat(s1.get(0).getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 620,
        "startColumnNumber" : 8,
        "endLineNumber" : 620,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(s1.get(0).getName()).isEqualTo(\"consumer1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 620,
        "startColumnNumber" : 8,
        "endLineNumber" : 620,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(s1.get(0).getName()).isEqualTo(\"consumer1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 598,
        "startColumnNumber" : 38,
        "endLineNumber" : 633,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RStream<String,String> stream=redisson.getStream(\"test1\");\n  StreamMessageId id1=new StreamMessageId(12,44);\n  stream.createGroup(\"testGroup\",id1);\n  stream.add(\"1\",\"1\");\n  stream.add(\"2\",\"2\");\n  stream.add(\"3\",\"3\");\n  StreamMessageId id2=new StreamMessageId(12,44);\n  stream.createGroup(\"testGroup2\",id2);\n  stream.add(\"1\",\"1\");\n  stream.add(\"2\",\"2\");\n  stream.add(\"3\",\"3\");\n  Map<StreamMessageId,Map<String,String>> map=stream.readGroup(\"testGroup\",\"consumer1\");\n  assertThat(map.size()).isEqualTo(6);\n  List<StreamConsumer> s1=stream.listConsumers(\"testGroup\");\n  assertThat(s1).hasSize(1);\n  assertThat(s1.get(0).getName()).isEqualTo(\"consumer1\");\n  assertThat(s1.get(0).getPending()).isEqualTo(6);\n  assertThat(s1.get(0).getIdleTime()).isLessThan(100L);\n  Map<StreamMessageId,Map<String,String>> map2=stream.readGroup(\"testGroup2\",\"consumer2\");\n  assertThat(map2.size()).isEqualTo(6);\n  List<StreamConsumer> s2=stream.listConsumers(\"testGroup2\");\n  assertThat(s2).hasSize(1);\n  assertThat(s2.get(0).getName()).isEqualTo(\"consumer2\");\n  assertThat(s2.get(0).getPending()).isEqualTo(6);\n  assertThat(s2.get(0).getIdleTime()).isLessThan(100L);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 597,
        "startColumnNumber" : 4,
        "endLineNumber" : 633,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStreamConsumers(){\n  RStream<String,String> stream=redisson.getStream(\"test1\");\n  StreamMessageId id1=new StreamMessageId(12,44);\n  stream.createGroup(\"testGroup\",id1);\n  stream.add(\"1\",\"1\");\n  stream.add(\"2\",\"2\");\n  stream.add(\"3\",\"3\");\n  StreamMessageId id2=new StreamMessageId(12,44);\n  stream.createGroup(\"testGroup2\",id2);\n  stream.add(\"1\",\"1\");\n  stream.add(\"2\",\"2\");\n  stream.add(\"3\",\"3\");\n  Map<StreamMessageId,Map<String,String>> map=stream.readGroup(\"testGroup\",\"consumer1\");\n  assertThat(map.size()).isEqualTo(6);\n  List<StreamConsumer> s1=stream.listConsumers(\"testGroup\");\n  assertThat(s1).hasSize(1);\n  assertThat(s1.get(0).getName()).isEqualTo(\"consumer1\");\n  assertThat(s1.get(0).getPending()).isEqualTo(6);\n  assertThat(s1.get(0).getIdleTime()).isLessThan(100L);\n  Map<StreamMessageId,Map<String,String>> map2=stream.readGroup(\"testGroup2\",\"consumer2\");\n  assertThat(map2.size()).isEqualTo(6);\n  List<StreamConsumer> s2=stream.listConsumers(\"testGroup2\");\n  assertThat(s2).hasSize(1);\n  assertThat(s2.get(0).getName()).isEqualTo(\"consumer2\");\n  assertThat(s2.get(0).getPending()).isEqualTo(6);\n  assertThat(s2.get(0).getIdleTime()).isLessThan(100L);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 620,
        "startColumnNumber" : 8,
        "endLineNumber" : 620,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(s1.get(0).getName()).isEqualTo(\"consumer1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 620,
    "startColumnNumber" : 19,
    "endLineNumber" : 620,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}