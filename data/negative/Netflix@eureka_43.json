{
  "id" : 43,
  "expression" : "part.substring(0,idx)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-kafka/src/main/java/com/netflix/eureka2/server/audit/kafka/KafkaServersProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "part.substring(0,idx)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 81,
      "startColumnNumber" : 23,
      "endLineNumber" : 81,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 45
      },
      "nodeContext" : "host=part.substring(0,idx)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 46
      },
      "nodeContext" : "host=part.substring(0,idx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 80,
        "startColumnNumber" : 26,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  host=part.substring(0,idx);\n  port=Integer.parseInt(part.substring(idx + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (idx >= 0) {\n  host=part.substring(0,idx);\n  port=Integer.parseInt(part.substring(idx + 1));\n}\n else {\n  host=part;\n  port=config.getKafkaPort();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 76,
        "startColumnNumber" : 76,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int idx=part.indexOf(':');\n  String host;\n  int port;\n  if (idx >= 0) {\n    host=part.substring(0,idx);\n    port=Integer.parseInt(part.substring(idx + 1));\n  }\n else {\n    host=part;\n    port=config.getKafkaPort();\n  }\n  servers.add(new InetSocketAddress(host,port));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String part : SEMICOLON_RE.split(config.getKafkaServerList())) {\n  int idx=part.indexOf(':');\n  String host;\n  int port;\n  if (idx >= 0) {\n    host=part.substring(0,idx);\n    port=Integer.parseInt(part.substring(idx + 1));\n  }\n else {\n    host=part;\n    port=config.getKafkaPort();\n  }\n  servers.add(new InetSocketAddress(host,port));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 74,
        "startColumnNumber" : 54,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<InetSocketAddress> servers=new ArrayList<>();\n  for (  String part : SEMICOLON_RE.split(config.getKafkaServerList())) {\n    int idx=part.indexOf(':');\n    String host;\n    int port;\n    if (idx >= 0) {\n      host=part.substring(0,idx);\n      port=Integer.parseInt(part.substring(idx + 1));\n    }\n else {\n      host=part;\n      port=config.getKafkaPort();\n    }\n    servers.add(new InetSocketAddress(host,port));\n  }\n  return servers;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<InetSocketAddress> parseServerList(){\n  List<InetSocketAddress> servers=new ArrayList<>();\n  for (  String part : SEMICOLON_RE.split(config.getKafkaServerList())) {\n    int idx=part.indexOf(':');\n    String host;\n    int port;\n    if (idx >= 0) {\n      host=part.substring(0,idx);\n      port=Integer.parseInt(part.substring(idx + 1));\n    }\n else {\n      host=part;\n      port=config.getKafkaPort();\n    }\n    servers.add(new InetSocketAddress(host,port));\n  }\n  return servers;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 46
      },
      "nodeContext" : "host=part.substring(0,idx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 81,
    "startColumnNumber" : 23,
    "endLineNumber" : 81,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}