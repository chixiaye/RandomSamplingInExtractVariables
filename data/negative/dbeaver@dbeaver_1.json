{
  "id" : 1,
  "expression" : "1",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/jdbc/data/handlers/JDBCTemporalAccessorValueHandler.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 66,
      "startColumnNumber" : 59,
      "endLineNumber" : 66,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 51,
        "endLineNumber" : 66,
        "endColumnNumber" : 60
      },
      "nodeContext" : "index + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 66,
        "startColumnNumber" : 31,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "dbResults.getString(index + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "return dbResults.getString(index + 1);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 65,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  return dbResults.getString(index + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 69,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  return dbResults.getString(index + 1);\n}\n catch (SQLException e) {\n  log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 64,
        "startColumnNumber" : 57,
        "endLineNumber" : 70,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    return dbResults.getString(index + 1);\n  }\n catch (  SQLException e) {\n    log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (session.isUseNativeDateTimeFormat()) {\n  try {\n    return dbResults.getString(index + 1);\n  }\n catch (  SQLException e) {\n    log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 61,
        "startColumnNumber" : 52,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (resultSet instanceof JDBCResultSet) {\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n else {\n  return resultSet.getAttributeValue(index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n catch (SQLException e) {\n  throw new DBCException(e,session.getExecutionContext());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 59,
        "startColumnNumber" : 158,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object fetchValueObject(@NotNull DBCSession session,@NotNull DBCResultSet resultSet,@NotNull DBSTypedObject type,int index) throws DBCException {\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "return dbResults.getString(index + 1);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 73,
      "startColumnNumber" : 55,
      "endLineNumber" : 73,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 73,
        "startColumnNumber" : 47,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "index + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 73,
        "startColumnNumber" : 27,
        "endLineNumber" : 73,
        "endColumnNumber" : 78
      },
      "nodeContext" : "dbResults.getObject(index + 1,ZonedDateTime.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 73,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return dbResults.getObject(index + 1,ZonedDateTime.class);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 72,
        "startColumnNumber" : 39,
        "endLineNumber" : 74,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return dbResults.getObject(index + 1,ZonedDateTime.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isZonedType(type)) {\n  return dbResults.getObject(index + 1,ZonedDateTime.class);\n}\n else {\n  return dbResults.getObject(index + 1,LocalDateTime.class);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 61,
        "startColumnNumber" : 52,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (resultSet instanceof JDBCResultSet) {\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n else {\n  return resultSet.getAttributeValue(index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n catch (SQLException e) {\n  throw new DBCException(e,session.getExecutionContext());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 59,
        "startColumnNumber" : 158,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object fetchValueObject(@NotNull DBCSession session,@NotNull DBCResultSet resultSet,@NotNull DBSTypedObject type,int index) throws DBCException {\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 73,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return dbResults.getObject(index + 1,ZonedDateTime.class);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 55,
      "endLineNumber" : 75,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 75,
        "startColumnNumber" : 47,
        "endLineNumber" : 75,
        "endColumnNumber" : 56
      },
      "nodeContext" : "index + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 75,
        "startColumnNumber" : 27,
        "endLineNumber" : 75,
        "endColumnNumber" : 78
      },
      "nodeContext" : "dbResults.getObject(index + 1,LocalDateTime.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return dbResults.getObject(index + 1,LocalDateTime.class);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 74,
        "startColumnNumber" : 23,
        "endLineNumber" : 76,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return dbResults.getObject(index + 1,LocalDateTime.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isZonedType(type)) {\n  return dbResults.getObject(index + 1,ZonedDateTime.class);\n}\n else {\n  return dbResults.getObject(index + 1,LocalDateTime.class);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 61,
        "startColumnNumber" : 52,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (resultSet instanceof JDBCResultSet) {\n  JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n  if (session.isUseNativeDateTimeFormat()) {\n    try {\n      return dbResults.getString(index + 1);\n    }\n catch (    SQLException e) {\n      log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n    }\n  }\n  if (isZonedType(type)) {\n    return dbResults.getObject(index + 1,ZonedDateTime.class);\n  }\n else {\n    return dbResults.getObject(index + 1,LocalDateTime.class);\n  }\n}\n else {\n  return resultSet.getAttributeValue(index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (resultSet instanceof JDBCResultSet) {\n    JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n    if (session.isUseNativeDateTimeFormat()) {\n      try {\n        return dbResults.getString(index + 1);\n      }\n catch (      SQLException e) {\n        log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n      }\n    }\n    if (isZonedType(type)) {\n      return dbResults.getObject(index + 1,ZonedDateTime.class);\n    }\n else {\n      return dbResults.getObject(index + 1,LocalDateTime.class);\n    }\n  }\n else {\n    return resultSet.getAttributeValue(index);\n  }\n}\n catch (SQLException e) {\n  throw new DBCException(e,session.getExecutionContext());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 59,
        "startColumnNumber" : 158,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object fetchValueObject(@NotNull DBCSession session,@NotNull DBCResultSet resultSet,@NotNull DBSTypedObject type,int index) throws DBCException {\n  try {\n    if (resultSet instanceof JDBCResultSet) {\n      JDBCResultSet dbResults=(JDBCResultSet)resultSet;\n      if (session.isUseNativeDateTimeFormat()) {\n        try {\n          return dbResults.getString(index + 1);\n        }\n catch (        SQLException e) {\n          log.debug(\"Can't read date/time value as string: \" + e.getMessage());\n        }\n      }\n      if (isZonedType(type)) {\n        return dbResults.getObject(index + 1,ZonedDateTime.class);\n      }\n else {\n        return dbResults.getObject(index + 1,LocalDateTime.class);\n      }\n    }\n else {\n      return resultSet.getAttributeValue(index);\n    }\n  }\n catch (  SQLException e) {\n    throw new DBCException(e,session.getExecutionContext());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return dbResults.getObject(index + 1,LocalDateTime.class);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 66,
    "startColumnNumber" : 59,
    "endLineNumber" : 66,
    "endColumnNumber" : 60
  }, {
    "charLength" : 1,
    "startLineNumber" : 73,
    "startColumnNumber" : 55,
    "endLineNumber" : 73,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 55,
    "endLineNumber" : 75,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}