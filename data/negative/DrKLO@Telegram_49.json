{
  "id" : 49,
  "expression" : "0",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ThemeDescription.java",
  "occurrences" : 54,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 223,
      "startColumnNumber" : 28,
      "endLineNumber" : 223,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 29
      },
      "nodeContext" : "alphaOverride > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 223,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (alphaOverride > 0) {\n  color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 29
      },
      "nodeContext" : "alphaOverride > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 227,
      "startColumnNumber" : 25,
      "endLineNumber" : 227,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 227,
        "startColumnNumber" : 21,
        "endLineNumber" : 227,
        "endColumnNumber" : 26
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 227,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 233,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < paintToUpdate.length; a++) {\n  if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n    ((TextPaint)paintToUpdate[a]).linkColor=color;\n  }\n else {\n    paintToUpdate[a].setColor(color);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 226,
        "startColumnNumber" : 35,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0; a < paintToUpdate.length; a++) {\n    if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n      ((TextPaint)paintToUpdate[a]).linkColor=color;\n    }\n else {\n      paintToUpdate[a].setColor(color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (paintToUpdate != null) {\n  for (int a=0; a < paintToUpdate.length; a++) {\n    if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n      ((TextPaint)paintToUpdate[a]).linkColor=color;\n    }\n else {\n      paintToUpdate[a].setColor(color);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 227,
        "startColumnNumber" : 17,
        "endLineNumber" : 227,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 228,
      "startColumnNumber" : 54,
      "endLineNumber" : 228,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 228,
        "startColumnNumber" : 20,
        "endLineNumber" : 228,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LINKCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 228,
        "startColumnNumber" : 20,
        "endLineNumber" : 228,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 228,
        "startColumnNumber" : 16,
        "endLineNumber" : 232,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n  ((TextPaint)paintToUpdate[a]).linkColor=color;\n}\n else {\n  paintToUpdate[a].setColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 227,
        "startColumnNumber" : 59,
        "endLineNumber" : 233,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n    ((TextPaint)paintToUpdate[a]).linkColor=color;\n  }\n else {\n    paintToUpdate[a].setColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 233,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < paintToUpdate.length; a++) {\n  if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n    ((TextPaint)paintToUpdate[a]).linkColor=color;\n  }\n else {\n    paintToUpdate[a].setColor(color);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 226,
        "startColumnNumber" : 35,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0; a < paintToUpdate.length; a++) {\n    if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n      ((TextPaint)paintToUpdate[a]).linkColor=color;\n    }\n else {\n      paintToUpdate[a].setColor(color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (paintToUpdate != null) {\n  for (int a=0; a < paintToUpdate.length; a++) {\n    if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n      ((TextPaint)paintToUpdate[a]).linkColor=color;\n    }\n else {\n      paintToUpdate[a].setColor(color);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 228,
        "startColumnNumber" : 20,
        "endLineNumber" : 228,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 236,
      "startColumnNumber" : 25,
      "endLineNumber" : 236,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 236,
        "startColumnNumber" : 21,
        "endLineNumber" : 236,
        "endColumnNumber" : 26
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 236,
        "startColumnNumber" : 17,
        "endLineNumber" : 236,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < drawablesToUpdate.length; a++) {\n  if (drawablesToUpdate[a] == null) {\n    continue;\n  }\n  if (drawablesToUpdate[a] instanceof BackDrawable) {\n    ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof ScamDrawable) {\n    ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n    if (lottieLayerName != null) {\n      ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n else {\n      ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n    ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else {\n    drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 235,
        "startColumnNumber" : 39,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0; a < drawablesToUpdate.length; a++) {\n    if (drawablesToUpdate[a] == null) {\n      continue;\n    }\n    if (drawablesToUpdate[a] instanceof BackDrawable) {\n      ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof ScamDrawable) {\n      ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n      if (lottieLayerName != null) {\n        ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n else {\n        ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n      ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else {\n      drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1601,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (drawablesToUpdate != null) {\n  for (int a=0; a < drawablesToUpdate.length; a++) {\n    if (drawablesToUpdate[a] == null) {\n      continue;\n    }\n    if (drawablesToUpdate[a] instanceof BackDrawable) {\n      ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof ScamDrawable) {\n      ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n      if (lottieLayerName != null) {\n        ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n else {\n        ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n      ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else {\n      drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 236,
        "startColumnNumber" : 17,
        "endLineNumber" : 236,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 249,
      "startColumnNumber" : 65,
      "endLineNumber" : 249,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 249,
        "startColumnNumber" : 24,
        "endLineNumber" : 249,
        "endColumnNumber" : 66
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUNDFILTER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 249,
        "startColumnNumber" : 20,
        "endLineNumber" : 253,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n  ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n else {\n  ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 248,
        "startColumnNumber" : 77,
        "endLineNumber" : 254,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n else {\n    ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 248,
        "startColumnNumber" : 23,
        "endLineNumber" : 258,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n else {\n    ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n  ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else {\n  drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 244,
        "startColumnNumber" : 23,
        "endLineNumber" : 258,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n  if (lottieLayerName != null) {\n    ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n  }\n}\n else if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n else {\n    ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n  ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else {\n  drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1213,
        "startLineNumber" : 242,
        "startColumnNumber" : 23,
        "endLineNumber" : 258,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (drawablesToUpdate[a] instanceof ScamDrawable) {\n  ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n  if (lottieLayerName != null) {\n    ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n  }\n}\n else if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n else {\n    ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n  ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else {\n  drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 140,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1363,
        "startLineNumber" : 240,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (drawablesToUpdate[a] instanceof BackDrawable) {\n  ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else if (drawablesToUpdate[a] instanceof ScamDrawable) {\n  ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n  if (lottieLayerName != null) {\n    ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n  }\n}\n else if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n else {\n    ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n  ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n}\n else {\n  drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1495,
        "startLineNumber" : 236,
        "startColumnNumber" : 63,
        "endLineNumber" : 259,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (drawablesToUpdate[a] == null) {\n    continue;\n  }\n  if (drawablesToUpdate[a] instanceof BackDrawable) {\n    ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof ScamDrawable) {\n    ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n    if (lottieLayerName != null) {\n      ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n else {\n      ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n    ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else {\n    drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < drawablesToUpdate.length; a++) {\n  if (drawablesToUpdate[a] == null) {\n    continue;\n  }\n  if (drawablesToUpdate[a] instanceof BackDrawable) {\n    ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof ScamDrawable) {\n    ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else   if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n    if (lottieLayerName != null) {\n      ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n else {\n      ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n    ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n  }\n else {\n    drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 235,
        "startColumnNumber" : 39,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0; a < drawablesToUpdate.length; a++) {\n    if (drawablesToUpdate[a] == null) {\n      continue;\n    }\n    if (drawablesToUpdate[a] instanceof BackDrawable) {\n      ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof ScamDrawable) {\n      ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n      if (lottieLayerName != null) {\n        ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n else {\n        ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n      ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else {\n      drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1601,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (drawablesToUpdate != null) {\n  for (int a=0; a < drawablesToUpdate.length; a++) {\n    if (drawablesToUpdate[a] == null) {\n      continue;\n    }\n    if (drawablesToUpdate[a] instanceof BackDrawable) {\n      ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof ScamDrawable) {\n      ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else     if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n      if (lottieLayerName != null) {\n        ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n else {\n        ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n      ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n    }\n else {\n      drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 249,
        "startColumnNumber" : 24,
        "endLineNumber" : 249,
        "endColumnNumber" : 66
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUNDFILTER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 262,
      "startColumnNumber" : 49,
      "endLineNumber" : 262,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 262,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 262,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 262,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 263,
      "startColumnNumber" : 55,
      "endLineNumber" : 263,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 263,
        "startColumnNumber" : 20,
        "endLineNumber" : 263,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 263,
        "startColumnNumber" : 16,
        "endLineNumber" : 270,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUND) != 0) {\n  Drawable background=viewToInvalidate.getBackground();\n  if (background instanceof MessageBackgroundDrawable) {\n    ((MessageBackgroundDrawable)background).setColor(color);\n  }\n else {\n    viewToInvalidate.setBackgroundColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 262,
        "startColumnNumber" : 94,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 263,
        "startColumnNumber" : 20,
        "endLineNumber" : 263,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 271,
      "startColumnNumber" : 61,
      "endLineNumber" : 271,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 271,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUNDFILTER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 262,
        "startColumnNumber" : 94,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 271,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_BACKGROUNDFILTER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 272,
      "startColumnNumber" : 60,
      "endLineNumber" : 272,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 272,
        "startColumnNumber" : 24,
        "endLineNumber" : 272,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 272,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n  }\n}\n else {\n  Drawable drawable=viewToInvalidate.getBackground();\n  if (drawable instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n      drawable=((CombinedDrawable)drawable).getBackground();\n    }\n else {\n      drawable=((CombinedDrawable)drawable).getIcon();\n    }\n  }\n  if (drawable != null) {\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n else     if (drawable instanceof ShapeDrawable) {\n      ((ShapeDrawable)drawable).getPaint().setColor(color);\n    }\n else {\n      drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 271,
        "startColumnNumber" : 64,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 262,
        "startColumnNumber" : 94,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 272,
        "startColumnNumber" : 24,
        "endLineNumber" : 272,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 279,
      "startColumnNumber" : 78,
      "endLineNumber" : 279,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 279,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 79
      },
      "nodeContext" : "(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 279,
        "startColumnNumber" : 28,
        "endLineNumber" : 283,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n  drawable=((CombinedDrawable)drawable).getBackground();\n}\n else {\n  drawable=((CombinedDrawable)drawable).getIcon();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 278,
        "startColumnNumber" : 66,
        "endLineNumber" : 284,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n    drawable=((CombinedDrawable)drawable).getBackground();\n  }\n else {\n    drawable=((CombinedDrawable)drawable).getIcon();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 278,
        "startColumnNumber" : 24,
        "endLineNumber" : 284,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (drawable instanceof CombinedDrawable) {\n  if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n    drawable=((CombinedDrawable)drawable).getBackground();\n  }\n else {\n    drawable=((CombinedDrawable)drawable).getIcon();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 276,
        "startColumnNumber" : 27,
        "endLineNumber" : 294,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Drawable drawable=viewToInvalidate.getBackground();\n  if (drawable instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n      drawable=((CombinedDrawable)drawable).getBackground();\n    }\n else {\n      drawable=((CombinedDrawable)drawable).getIcon();\n    }\n  }\n  if (drawable != null) {\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n else     if (drawable instanceof ShapeDrawable) {\n      ((ShapeDrawable)drawable).getPaint().setColor(color);\n    }\n else {\n      drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 272,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n  }\n}\n else {\n  Drawable drawable=viewToInvalidate.getBackground();\n  if (drawable instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n      drawable=((CombinedDrawable)drawable).getBackground();\n    }\n else {\n      drawable=((CombinedDrawable)drawable).getIcon();\n    }\n  }\n  if (drawable != null) {\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n else     if (drawable instanceof ShapeDrawable) {\n      ((ShapeDrawable)drawable).getPaint().setColor(color);\n    }\n else {\n      drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 271,
        "startColumnNumber" : 64,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 262,
        "startColumnNumber" : 94,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 279,
        "startColumnNumber" : 32,
        "endLineNumber" : 279,
        "endColumnNumber" : 79
      },
      "nodeContext" : "(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 287,
      "startColumnNumber" : 126,
      "endLineNumber" : 287,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 287,
        "startColumnNumber" : 80,
        "endLineNumber" : 287,
        "endColumnNumber" : 127
      },
      "nodeContext" : "(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 287,
        "startColumnNumber" : 32,
        "endLineNumber" : 287,
        "endColumnNumber" : 128
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 287,
        "startColumnNumber" : 32,
        "endLineNumber" : 287,
        "endColumnNumber" : 129
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 286,
        "startColumnNumber" : 140,
        "endLineNumber" : 288,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 286,
        "startColumnNumber" : 28,
        "endLineNumber" : 292,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n  Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n}\n else if (drawable instanceof ShapeDrawable) {\n  ((ShapeDrawable)drawable).getPaint().setColor(color);\n}\n else {\n  drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 285,
        "startColumnNumber" : 46,
        "endLineNumber" : 293,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n    Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n  }\n else   if (drawable instanceof ShapeDrawable) {\n    ((ShapeDrawable)drawable).getPaint().setColor(color);\n  }\n else {\n    drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 285,
        "startColumnNumber" : 24,
        "endLineNumber" : 293,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (drawable != null) {\n  if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n    Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n  }\n else   if (drawable instanceof ShapeDrawable) {\n    ((ShapeDrawable)drawable).getPaint().setColor(color);\n  }\n else {\n    drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 276,
        "startColumnNumber" : 27,
        "endLineNumber" : 294,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Drawable drawable=viewToInvalidate.getBackground();\n  if (drawable instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n      drawable=((CombinedDrawable)drawable).getBackground();\n    }\n else {\n      drawable=((CombinedDrawable)drawable).getIcon();\n    }\n  }\n  if (drawable != null) {\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n else     if (drawable instanceof ShapeDrawable) {\n      ((ShapeDrawable)drawable).getPaint().setColor(color);\n    }\n else {\n      drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 272,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n  }\n}\n else {\n  Drawable drawable=viewToInvalidate.getBackground();\n  if (drawable instanceof CombinedDrawable) {\n    if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n      drawable=((CombinedDrawable)drawable).getBackground();\n    }\n else {\n      drawable=((CombinedDrawable)drawable).getIcon();\n    }\n  }\n  if (drawable != null) {\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n else     if (drawable instanceof ShapeDrawable) {\n      ((ShapeDrawable)drawable).getPaint().setColor(color);\n    }\n else {\n      drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 271,
        "startColumnNumber" : 64,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1570,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 295,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n    }\n  }\n else {\n    Drawable drawable=viewToInvalidate.getBackground();\n    if (drawable instanceof CombinedDrawable) {\n      if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n        drawable=((CombinedDrawable)drawable).getBackground();\n      }\n else {\n        drawable=((CombinedDrawable)drawable).getIcon();\n      }\n    }\n    if (drawable != null) {\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n else       if (drawable instanceof ShapeDrawable) {\n        ((ShapeDrawable)drawable).getPaint().setColor(color);\n      }\n else {\n        drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 262,
        "startColumnNumber" : 94,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 262,
        "startColumnNumber" : 12,
        "endLineNumber" : 296,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if ((changeFlags & FLAG_BACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background instanceof MessageBackgroundDrawable) {\n      ((MessageBackgroundDrawable)background).setColor(color);\n    }\n else {\n      viewToInvalidate.setBackgroundColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      if (viewToInvalidate instanceof EditTextBoldCursor) {\n        ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n      }\n    }\n else {\n      Drawable drawable=viewToInvalidate.getBackground();\n      if (drawable instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n          drawable=((CombinedDrawable)drawable).getBackground();\n        }\n else {\n          drawable=((CombinedDrawable)drawable).getIcon();\n        }\n      }\n      if (drawable != null) {\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n else         if (drawable instanceof ShapeDrawable) {\n          ((ShapeDrawable)drawable).getPaint().setColor(color);\n        }\n else {\n          drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 192,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2138,
        "startLineNumber" : 261,
        "startColumnNumber" : 93,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 261,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if ((changeFlags & FLAG_BACKGROUND) != 0) {\n      Drawable background=viewToInvalidate.getBackground();\n      if (background instanceof MessageBackgroundDrawable) {\n        ((MessageBackgroundDrawable)background).setColor(color);\n      }\n else {\n        viewToInvalidate.setBackgroundColor(color);\n      }\n    }\n    if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        if (viewToInvalidate instanceof EditTextBoldCursor) {\n          ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n        }\n      }\n else {\n        Drawable drawable=viewToInvalidate.getBackground();\n        if (drawable instanceof CombinedDrawable) {\n          if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n            drawable=((CombinedDrawable)drawable).getBackground();\n          }\n else {\n            drawable=((CombinedDrawable)drawable).getIcon();\n          }\n        }\n        if (drawable != null) {\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n else           if (drawable instanceof ShapeDrawable) {\n            ((ShapeDrawable)drawable).getPaint().setColor(color);\n          }\n else {\n            drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 287,
        "startColumnNumber" : 32,
        "endLineNumber" : 287,
        "endColumnNumber" : 129
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 299,
      "startColumnNumber" : 54,
      "endLineNumber" : 299,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 299,
        "startColumnNumber" : 16,
        "endLineNumber" : 299,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_AB_ITEMSCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 299,
        "startColumnNumber" : 12,
        "endLineNumber" : 301,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 299,
        "startColumnNumber" : 16,
        "endLineNumber" : 299,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_AB_ITEMSCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 302,
      "startColumnNumber" : 54,
      "endLineNumber" : 302,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 302,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_AB_TITLECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 302,
        "startColumnNumber" : 12,
        "endLineNumber" : 304,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setTitleColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 302,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_AB_TITLECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 305,
      "startColumnNumber" : 57,
      "endLineNumber" : 305,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 305,
        "startColumnNumber" : 16,
        "endLineNumber" : 305,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SELECTORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 305,
        "startColumnNumber" : 12,
        "endLineNumber" : 307,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 305,
        "startColumnNumber" : 16,
        "endLineNumber" : 305,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SELECTORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 308,
      "startColumnNumber" : 60,
      "endLineNumber" : 308,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 308,
        "startColumnNumber" : 16,
        "endLineNumber" : 308,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 308,
        "startColumnNumber" : 12,
        "endLineNumber" : 310,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 308,
        "startColumnNumber" : 16,
        "endLineNumber" : 308,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 311,
      "startColumnNumber" : 57,
      "endLineNumber" : 311,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 311,
        "startColumnNumber" : 16,
        "endLineNumber" : 311,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 311,
        "startColumnNumber" : 12,
        "endLineNumber" : 313,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 311,
        "startColumnNumber" : 16,
        "endLineNumber" : 311,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 314,
      "startColumnNumber" : 57,
      "endLineNumber" : 314,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 314,
        "startColumnNumber" : 16,
        "endLineNumber" : 314,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBTITLECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 314,
        "startColumnNumber" : 12,
        "endLineNumber" : 316,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n  ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 314,
        "startColumnNumber" : 16,
        "endLineNumber" : 314,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBTITLECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 317,
      "startColumnNumber" : 57,
      "endLineNumber" : 317,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 317,
        "startColumnNumber" : 16,
        "endLineNumber" : 317,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_BACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 317,
        "startColumnNumber" : 12,
        "endLineNumber" : 319,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n  ((ActionBar)viewToInvalidate).setActionModeColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 317,
        "startColumnNumber" : 16,
        "endLineNumber" : 317,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_BACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 320,
      "startColumnNumber" : 60,
      "endLineNumber" : 320,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 320,
        "startColumnNumber" : 16,
        "endLineNumber" : 320,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 320,
        "startColumnNumber" : 12,
        "endLineNumber" : 322,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n  ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 320,
        "startColumnNumber" : 16,
        "endLineNumber" : 320,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 323,
      "startColumnNumber" : 61,
      "endLineNumber" : 323,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 323,
        "startColumnNumber" : 16,
        "endLineNumber" : 323,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 325,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n  ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 323,
        "startColumnNumber" : 16,
        "endLineNumber" : 323,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 326,
      "startColumnNumber" : 50,
      "endLineNumber" : 326,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 326,
        "startColumnNumber" : 16,
        "endLineNumber" : 326,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SEARCH) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 326,
        "startColumnNumber" : 12,
        "endLineNumber" : 328,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n  ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 326,
        "startColumnNumber" : 16,
        "endLineNumber" : 326,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SEARCH) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 329,
      "startColumnNumber" : 55,
      "endLineNumber" : 329,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 329,
        "startColumnNumber" : 16,
        "endLineNumber" : 329,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBMENUITEM) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 329,
        "startColumnNumber" : 12,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n  ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 329,
        "startColumnNumber" : 16,
        "endLineNumber" : 329,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBMENUITEM) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 330,
      "startColumnNumber" : 108,
      "endLineNumber" : 330,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 330,
        "startColumnNumber" : 73,
        "endLineNumber" : 330,
        "endColumnNumber" : 109
      },
      "nodeContext" : "(changeFlags & FLAG_IMAGECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 117
      },
      "nodeContext" : "((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 118
      },
      "nodeContext" : "((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 329,
        "startColumnNumber" : 58,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 329,
        "startColumnNumber" : 12,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n  ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 118
      },
      "nodeContext" : "((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 332,
      "startColumnNumber" : 61,
      "endLineNumber" : 332,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 332,
        "startColumnNumber" : 16,
        "endLineNumber" : 332,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 332,
        "startColumnNumber" : 12,
        "endLineNumber" : 334,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n  ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 298,
        "startColumnNumber" : 51,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1945,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ActionBar) {\n  if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setTitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n    ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeColor(color);\n  }\n  if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n  }\n  if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n  }\n  if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n    ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n  }\n  if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n    ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 332,
        "startColumnNumber" : 16,
        "endLineNumber" : 332,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 340,
      "startColumnNumber" : 50,
      "endLineNumber" : 340,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 340,
        "startColumnNumber" : 16,
        "endLineNumber" : 340,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_TEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 340,
        "startColumnNumber" : 12,
        "endLineNumber" : 344,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n  ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n}\n else if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 339,
        "startColumnNumber" : 63,
        "endLineNumber" : 345,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n  }\n else   if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 339,
        "startColumnNumber" : 8,
        "endLineNumber" : 345,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof EmptyTextProgressView) {\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n  }\n else   if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 340,
        "startColumnNumber" : 16,
        "endLineNumber" : 340,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_TEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 342,
      "startColumnNumber" : 59,
      "endLineNumber" : 342,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 342,
        "startColumnNumber" : 23,
        "endLineNumber" : 342,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 342,
        "startColumnNumber" : 19,
        "endLineNumber" : 344,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 340,
        "startColumnNumber" : 12,
        "endLineNumber" : 344,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n  ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n}\n else if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 339,
        "startColumnNumber" : 63,
        "endLineNumber" : 345,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n  }\n else   if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 339,
        "startColumnNumber" : 8,
        "endLineNumber" : 345,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof EmptyTextProgressView) {\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n  }\n else   if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 342,
        "startColumnNumber" : 23,
        "endLineNumber" : 342,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 349,
      "startColumnNumber" : 52,
      "endLineNumber" : 349,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 349,
        "startColumnNumber" : 16,
        "endLineNumber" : 349,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 349,
        "startColumnNumber" : 12,
        "endLineNumber" : 353,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((LineProgressView)viewToInvalidate).setProgressColor(color);\n}\n else {\n  ((LineProgressView)viewToInvalidate).setBackColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 348,
        "startColumnNumber" : 65,
        "endLineNumber" : 354,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((LineProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else {\n    ((LineProgressView)viewToInvalidate).setBackColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof LineProgressView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((LineProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else {\n    ((LineProgressView)viewToInvalidate).setBackColor(color);\n  }\n}\n else if (viewToInvalidate instanceof ContextProgressView) {\n  ((ContextProgressView)viewToInvalidate).updateColors();\n}\n else if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 346,
        "startColumnNumber" : 8,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RadialProgressView) {\n  ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n}\n else if (viewToInvalidate instanceof LineProgressView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((LineProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else {\n    ((LineProgressView)viewToInvalidate).setBackColor(color);\n  }\n}\n else if (viewToInvalidate instanceof ContextProgressView) {\n  ((ContextProgressView)viewToInvalidate).updateColors();\n}\n else if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 349,
        "startColumnNumber" : 16,
        "endLineNumber" : 349,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 357,
      "startColumnNumber" : 52,
      "endLineNumber" : 357,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 357,
        "startColumnNumber" : 16,
        "endLineNumber" : 357,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 357,
        "startColumnNumber" : 12,
        "endLineNumber" : 359,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((SeekBarView)viewToInvalidate).setOuterColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 356,
        "startColumnNumber" : 60,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 356,
        "startColumnNumber" : 15,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 354,
        "startColumnNumber" : 15,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ContextProgressView) {\n  ((ContextProgressView)viewToInvalidate).updateColors();\n}\n else if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof LineProgressView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((LineProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else {\n    ((LineProgressView)viewToInvalidate).setBackColor(color);\n  }\n}\n else if (viewToInvalidate instanceof ContextProgressView) {\n  ((ContextProgressView)viewToInvalidate).updateColors();\n}\n else if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 346,
        "startColumnNumber" : 8,
        "endLineNumber" : 360,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RadialProgressView) {\n  ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n}\n else if (viewToInvalidate instanceof LineProgressView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((LineProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else {\n    ((LineProgressView)viewToInvalidate).setBackColor(color);\n  }\n}\n else if (viewToInvalidate instanceof ContextProgressView) {\n  ((ContextProgressView)viewToInvalidate).updateColors();\n}\n else if (viewToInvalidate instanceof SeekBarView) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((SeekBarView)viewToInvalidate).setOuterColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 357,
        "startColumnNumber" : 16,
        "endLineNumber" : 357,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 361,
      "startColumnNumber" : 46,
      "endLineNumber" : 361,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 361,
        "startColumnNumber" : 12,
        "endLineNumber" : 361,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(changeFlags & FLAG_TEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 361,
        "startColumnNumber" : 8,
        "endLineNumber" : 373,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof TextView) {\n      ((TextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof NumberTextView) {\n      ((NumberTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      ((SimpleTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof ChatBigEmptyView) {\n      ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 361,
        "startColumnNumber" : 12,
        "endLineNumber" : 361,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(changeFlags & FLAG_TEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 362,
      "startColumnNumber" : 49,
      "endLineNumber" : 362,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 362,
        "startColumnNumber" : 16,
        "endLineNumber" : 362,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 362,
        "startColumnNumber" : 16,
        "endLineNumber" : 362,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 362,
        "startColumnNumber" : 12,
        "endLineNumber" : 372,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if (viewToInvalidate instanceof TextView) {\n    ((TextView)viewToInvalidate).setTextColor(color);\n  }\n else   if (viewToInvalidate instanceof NumberTextView) {\n    ((NumberTextView)viewToInvalidate).setTextColor(color);\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    ((SimpleTextView)viewToInvalidate).setTextColor(color);\n  }\n else   if (viewToInvalidate instanceof ChatBigEmptyView) {\n    ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 361,
        "startColumnNumber" : 49,
        "endLineNumber" : 373,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof TextView) {\n      ((TextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof NumberTextView) {\n      ((NumberTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      ((SimpleTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof ChatBigEmptyView) {\n      ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 361,
        "startColumnNumber" : 8,
        "endLineNumber" : 373,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof TextView) {\n      ((TextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof NumberTextView) {\n      ((NumberTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      ((SimpleTextView)viewToInvalidate).setTextColor(color);\n    }\n else     if (viewToInvalidate instanceof ChatBigEmptyView) {\n      ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 362,
        "startColumnNumber" : 16,
        "endLineNumber" : 362,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 374,
      "startColumnNumber" : 48,
      "endLineNumber" : 374,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 374,
        "startColumnNumber" : 12,
        "endLineNumber" : 374,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(changeFlags & FLAG_CURSORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 374,
        "startColumnNumber" : 8,
        "endLineNumber" : 378,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 374,
        "startColumnNumber" : 12,
        "endLineNumber" : 374,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(changeFlags & FLAG_CURSORCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 379,
      "startColumnNumber" : 50,
      "endLineNumber" : 379,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 379,
        "startColumnNumber" : 12,
        "endLineNumber" : 379,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_HINTTEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 379,
        "startColumnNumber" : 8,
        "endLineNumber" : 389,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n    }\n else {\n      ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof EditText) {\n    ((EditText)viewToInvalidate).setHintTextColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 379,
        "startColumnNumber" : 12,
        "endLineNumber" : 379,
        "endColumnNumber" : 51
      },
      "nodeContext" : "(changeFlags & FLAG_HINTTEXTCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 381,
      "startColumnNumber" : 56,
      "endLineNumber" : 381,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 381,
        "startColumnNumber" : 20,
        "endLineNumber" : 381,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 381,
        "startColumnNumber" : 16,
        "endLineNumber" : 385,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n  ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n}\n else {\n  ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 380,
        "startColumnNumber" : 64,
        "endLineNumber" : 386,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n  }\n else {\n    ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 380,
        "startColumnNumber" : 12,
        "endLineNumber" : 388,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (viewToInvalidate instanceof EditTextBoldCursor) {\n  if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n    ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n  }\n else {\n    ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n  }\n}\n else if (viewToInvalidate instanceof EditText) {\n  ((EditText)viewToInvalidate).setHintTextColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 379,
        "startColumnNumber" : 53,
        "endLineNumber" : 389,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n    }\n else {\n      ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof EditText) {\n    ((EditText)viewToInvalidate).setHintTextColor(color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 379,
        "startColumnNumber" : 8,
        "endLineNumber" : 389,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n  if (viewToInvalidate instanceof EditTextBoldCursor) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n    }\n else {\n      ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof EditText) {\n    ((EditText)viewToInvalidate).setHintTextColor(color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 381,
        "startColumnNumber" : 20,
        "endLineNumber" : 381,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(changeFlags & FLAG_PROGRESSBAR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 390,
      "startColumnNumber" : 82,
      "endLineNumber" : 390,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 390,
        "startColumnNumber" : 40,
        "endLineNumber" : 390,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(changeFlags & FLAG_SERVICEBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 390,
        "startColumnNumber" : 12,
        "endLineNumber" : 390,
        "endColumnNumber" : 83
      },
      "nodeContext" : "viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 390,
        "startColumnNumber" : 8,
        "endLineNumber" : 395,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n  Drawable background=viewToInvalidate.getBackground();\n  if (background != null) {\n    background.setColorFilter(Theme.colorFilter);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 390,
        "startColumnNumber" : 12,
        "endLineNumber" : 390,
        "endColumnNumber" : 83
      },
      "nodeContext" : "viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 396,
      "startColumnNumber" : 47,
      "endLineNumber" : 396,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 396,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(changeFlags & FLAG_IMAGECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 183,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 396,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(changeFlags & FLAG_IMAGECOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 397,
      "startColumnNumber" : 49,
      "endLineNumber" : 397,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 397,
        "startColumnNumber" : 16,
        "endLineNumber" : 397,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 397,
        "startColumnNumber" : 16,
        "endLineNumber" : 397,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1781,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 396,
        "startColumnNumber" : 50,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 183,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 397,
        "startColumnNumber" : 16,
        "endLineNumber" : 397,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 399,
      "startColumnNumber" : 70,
      "endLineNumber" : 399,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 399,
        "startColumnNumber" : 24,
        "endLineNumber" : 399,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 399,
        "startColumnNumber" : 20,
        "endLineNumber" : 406,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n  Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n  if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n    Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n  }\n}\n else {\n  ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 398,
        "startColumnNumber" : 59,
        "endLineNumber" : 407,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n    Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n  }\n else {\n    ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 398,
        "startColumnNumber" : 16,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof ImageView) {\n  if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n    Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n  }\n else {\n    ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (viewToInvalidate instanceof BackupImageView) {\n}\n else if (viewToInvalidate instanceof SimpleTextView) {\n  SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n  textView.setSideDrawablesColor(color);\n}\n else if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1699,
        "startLineNumber" : 397,
        "startColumnNumber" : 94,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1781,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 396,
        "startColumnNumber" : 50,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 183,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 399,
        "startColumnNumber" : 24,
        "endLineNumber" : 399,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 402,
      "startColumnNumber" : 122,
      "endLineNumber" : 402,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 402,
        "startColumnNumber" : 76,
        "endLineNumber" : 402,
        "endColumnNumber" : 123
      },
      "nodeContext" : "(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 402,
        "startColumnNumber" : 28,
        "endLineNumber" : 402,
        "endColumnNumber" : 124
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 402,
        "startColumnNumber" : 28,
        "endLineNumber" : 402,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 401,
        "startColumnNumber" : 136,
        "endLineNumber" : 403,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 401,
        "startColumnNumber" : 24,
        "endLineNumber" : 403,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n  Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 399,
        "startColumnNumber" : 73,
        "endLineNumber" : 404,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n  if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n    Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 399,
        "startColumnNumber" : 20,
        "endLineNumber" : 406,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n  Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n  if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n    Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n  }\n}\n else {\n  ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 398,
        "startColumnNumber" : 59,
        "endLineNumber" : 407,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n    Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n  }\n else {\n    ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 398,
        "startColumnNumber" : 16,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof ImageView) {\n  if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n    Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n  }\n else {\n    ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (viewToInvalidate instanceof BackupImageView) {\n}\n else if (viewToInvalidate instanceof SimpleTextView) {\n  SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n  textView.setSideDrawablesColor(color);\n}\n else if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1699,
        "startLineNumber" : 397,
        "startColumnNumber" : 94,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1781,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 396,
        "startColumnNumber" : 50,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 183,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 402,
        "startColumnNumber" : 28,
        "endLineNumber" : 402,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 415,
      "startColumnNumber" : 37,
      "endLineNumber" : 415,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 415,
        "startColumnNumber" : 33,
        "endLineNumber" : 415,
        "endColumnNumber" : 38
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 415,
        "startColumnNumber" : 29,
        "endLineNumber" : 415,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 415,
        "startColumnNumber" : 24,
        "endLineNumber" : 419,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int a=0; a < drawables.length; a++) {\n  if (drawables[a] != null) {\n    drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 414,
        "startColumnNumber" : 43,
        "endLineNumber" : 420,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  for (int a=0; a < drawables.length; a++) {\n    if (drawables[a] != null) {\n      drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 414,
        "startColumnNumber" : 20,
        "endLineNumber" : 420,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (drawables != null) {\n  for (int a=0; a < drawables.length; a++) {\n    if (drawables[a] != null) {\n      drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 412,
        "startColumnNumber" : 65,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 412,
        "startColumnNumber" : 23,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 409,
        "startColumnNumber" : 23,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof SimpleTextView) {\n  SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n  textView.setSideDrawablesColor(color);\n}\n else if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 407,
        "startColumnNumber" : 23,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof BackupImageView) {\n}\n else if (viewToInvalidate instanceof SimpleTextView) {\n  SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n  textView.setSideDrawablesColor(color);\n}\n else if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 398,
        "startColumnNumber" : 16,
        "endLineNumber" : 421,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (viewToInvalidate instanceof ImageView) {\n  if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n    Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n    if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n      Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n    }\n  }\n else {\n    ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n  }\n}\n else if (viewToInvalidate instanceof BackupImageView) {\n}\n else if (viewToInvalidate instanceof SimpleTextView) {\n  SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n  textView.setSideDrawablesColor(color);\n}\n else if (viewToInvalidate instanceof TextView) {\n  Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n  if (drawables != null) {\n    for (int a=0; a < drawables.length; a++) {\n      if (drawables[a] != null) {\n        drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1699,
        "startLineNumber" : 397,
        "startColumnNumber" : 94,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1781,
        "startLineNumber" : 397,
        "startColumnNumber" : 12,
        "endLineNumber" : 422,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n  if (viewToInvalidate instanceof ImageView) {\n    if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n      Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n      if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n        Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n      }\n    }\n else {\n      ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    }\n  }\n else   if (viewToInvalidate instanceof BackupImageView) {\n  }\n else   if (viewToInvalidate instanceof SimpleTextView) {\n    SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n    textView.setSideDrawablesColor(color);\n  }\n else   if (viewToInvalidate instanceof TextView) {\n    Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n    if (drawables != null) {\n      for (int a=0; a < drawables.length; a++) {\n        if (drawables[a] != null) {\n          drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 396,
        "startColumnNumber" : 50,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 423,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n  if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n    if (viewToInvalidate instanceof ImageView) {\n      if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n        Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n        if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n          Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n        }\n      }\n else {\n        ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n else     if (viewToInvalidate instanceof BackupImageView) {\n    }\n else     if (viewToInvalidate instanceof SimpleTextView) {\n      SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n      textView.setSideDrawablesColor(color);\n    }\n else     if (viewToInvalidate instanceof TextView) {\n      Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n      if (drawables != null) {\n        for (int a=0; a < drawables.length; a++) {\n          if (drawables[a] != null) {\n            drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 183,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 415,
        "startColumnNumber" : 29,
        "endLineNumber" : 415,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 425,
      "startColumnNumber" : 54,
      "endLineNumber" : 425,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 425,
        "startColumnNumber" : 16,
        "endLineNumber" : 425,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 425,
        "startColumnNumber" : 12,
        "endLineNumber" : 427,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n  AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 424,
        "startColumnNumber" : 52,
        "endLineNumber" : 428,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 424,
        "startColumnNumber" : 8,
        "endLineNumber" : 428,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ScrollView) {\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 425,
        "startColumnNumber" : 16,
        "endLineNumber" : 425,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 430,
      "startColumnNumber" : 54,
      "endLineNumber" : 430,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 430,
        "startColumnNumber" : 16,
        "endLineNumber" : 430,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 430,
        "startColumnNumber" : 12,
        "endLineNumber" : 432,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n  AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 429,
        "startColumnNumber" : 51,
        "endLineNumber" : 433,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 429,
        "startColumnNumber" : 8,
        "endLineNumber" : 433,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof ViewPager) {\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 430,
        "startColumnNumber" : 16,
        "endLineNumber" : 430,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 436,
      "startColumnNumber" : 49,
      "endLineNumber" : 436,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 436,
        "startColumnNumber" : 16,
        "endLineNumber" : 436,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 436,
        "startColumnNumber" : 12,
        "endLineNumber" : 438,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SELECTOR) != 0) {\n  recyclerListView.setListSelectorColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 436,
        "startColumnNumber" : 16,
        "endLineNumber" : 436,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 439,
      "startColumnNumber" : 51,
      "endLineNumber" : 439,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 439,
        "startColumnNumber" : 16,
        "endLineNumber" : 439,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(changeFlags & FLAG_FASTSCROLL) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 439,
        "startColumnNumber" : 12,
        "endLineNumber" : 441,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n  recyclerListView.updateFastScrollColors();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 439,
        "startColumnNumber" : 16,
        "endLineNumber" : 439,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(changeFlags & FLAG_FASTSCROLL) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 442,
      "startColumnNumber" : 54,
      "endLineNumber" : 442,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 442,
        "startColumnNumber" : 16,
        "endLineNumber" : 442,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 442,
        "startColumnNumber" : 12,
        "endLineNumber" : 444,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n  recyclerListView.setGlowColor(color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 442,
        "startColumnNumber" : 16,
        "endLineNumber" : 442,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(changeFlags & FLAG_LISTGLOWCOLOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 445,
      "startColumnNumber" : 49,
      "endLineNumber" : 445,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 445,
        "startColumnNumber" : 16,
        "endLineNumber" : 445,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SECTIONS) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 445,
        "startColumnNumber" : 12,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SECTIONS) != 0) {\n  ArrayList<View> headers=recyclerListView.getHeaders();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  headers=recyclerListView.getHeadersCache();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  View header=recyclerListView.getPinnedHeader();\n  if (header != null) {\n    processViewColor(header,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 445,
        "startColumnNumber" : 16,
        "endLineNumber" : 445,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SECTIONS) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 448,
      "startColumnNumber" : 33,
      "endLineNumber" : 448,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 448,
        "startColumnNumber" : 29,
        "endLineNumber" : 448,
        "endColumnNumber" : 34
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 448,
        "startColumnNumber" : 25,
        "endLineNumber" : 448,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 448,
        "startColumnNumber" : 20,
        "endLineNumber" : 450,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int a=0; a < headers.size(); a++) {\n  processViewColor(headers.get(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 447,
        "startColumnNumber" : 37,
        "endLineNumber" : 451,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int a=0; a < headers.size(); a++) {\n    processViewColor(headers.get(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 447,
        "startColumnNumber" : 16,
        "endLineNumber" : 451,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (headers != null) {\n  for (int a=0; a < headers.size(); a++) {\n    processViewColor(headers.get(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 445,
        "startColumnNumber" : 52,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ArrayList<View> headers=recyclerListView.getHeaders();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  headers=recyclerListView.getHeadersCache();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  View header=recyclerListView.getPinnedHeader();\n  if (header != null) {\n    processViewColor(header,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 445,
        "startColumnNumber" : 12,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SECTIONS) != 0) {\n  ArrayList<View> headers=recyclerListView.getHeaders();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  headers=recyclerListView.getHeadersCache();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  View header=recyclerListView.getPinnedHeader();\n  if (header != null) {\n    processViewColor(header,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 448,
        "startColumnNumber" : 25,
        "endLineNumber" : 448,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 454,
      "startColumnNumber" : 33,
      "endLineNumber" : 454,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 454,
        "startColumnNumber" : 29,
        "endLineNumber" : 454,
        "endColumnNumber" : 34
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 454,
        "startColumnNumber" : 25,
        "endLineNumber" : 454,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 454,
        "startColumnNumber" : 20,
        "endLineNumber" : 456,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int a=0; a < headers.size(); a++) {\n  processViewColor(headers.get(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 453,
        "startColumnNumber" : 37,
        "endLineNumber" : 457,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (int a=0; a < headers.size(); a++) {\n    processViewColor(headers.get(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 453,
        "startColumnNumber" : 16,
        "endLineNumber" : 457,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (headers != null) {\n  for (int a=0; a < headers.size(); a++) {\n    processViewColor(headers.get(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 445,
        "startColumnNumber" : 52,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ArrayList<View> headers=recyclerListView.getHeaders();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  headers=recyclerListView.getHeadersCache();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  View header=recyclerListView.getPinnedHeader();\n  if (header != null) {\n    processViewColor(header,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 445,
        "startColumnNumber" : 12,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SECTIONS) != 0) {\n  ArrayList<View> headers=recyclerListView.getHeaders();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  headers=recyclerListView.getHeadersCache();\n  if (headers != null) {\n    for (int a=0; a < headers.size(); a++) {\n      processViewColor(headers.get(a),color);\n    }\n  }\n  View header=recyclerListView.getPinnedHeader();\n  if (header != null) {\n    processViewColor(header,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 434,
        "startColumnNumber" : 58,
        "endLineNumber" : 463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 454,
        "startColumnNumber" : 25,
        "endLineNumber" : 454,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 463,
      "startColumnNumber" : 93,
      "endLineNumber" : 463,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 463,
        "startColumnNumber" : 71,
        "endLineNumber" : 463,
        "endColumnNumber" : 94
      },
      "nodeContext" : "listClasses.length == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 463,
        "startColumnNumber" : 48,
        "endLineNumber" : 463,
        "endColumnNumber" : 94
      },
      "nodeContext" : "listClasses == null || listClasses.length == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 463,
        "startColumnNumber" : 47,
        "endLineNumber" : 463,
        "endColumnNumber" : 95
      },
      "nodeContext" : "(listClasses == null || listClasses.length == 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 463,
        "startColumnNumber" : 19,
        "endLineNumber" : 463,
        "endColumnNumber" : 95
      },
      "nodeContext" : "viewToInvalidate != null && (listClasses == null || listClasses.length == 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 463,
        "startColumnNumber" : 15,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 463,
        "startColumnNumber" : 19,
        "endLineNumber" : 463,
        "endColumnNumber" : 95
      },
      "nodeContext" : "viewToInvalidate != null && (listClasses == null || listClasses.length == 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 464,
      "startColumnNumber" : 49,
      "endLineNumber" : 464,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 464,
        "startColumnNumber" : 16,
        "endLineNumber" : 464,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 464,
        "startColumnNumber" : 12,
        "endLineNumber" : 468,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SELECTOR) != 0) {\n  viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n}\n else if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n  viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 463,
        "startColumnNumber" : 97,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 463,
        "startColumnNumber" : 15,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 464,
        "startColumnNumber" : 16,
        "endLineNumber" : 464,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTOR) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 466,
      "startColumnNumber" : 61,
      "endLineNumber" : 466,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 466,
        "startColumnNumber" : 23,
        "endLineNumber" : 466,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTORWHITE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 466,
        "startColumnNumber" : 19,
        "endLineNumber" : 468,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n  viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 464,
        "startColumnNumber" : 12,
        "endLineNumber" : 468,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((changeFlags & FLAG_SELECTOR) != 0) {\n  viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n}\n else if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n  viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 463,
        "startColumnNumber" : 97,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 463,
        "startColumnNumber" : 15,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 434,
        "startColumnNumber" : 8,
        "endLineNumber" : 469,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    recyclerListView.setListSelectorColor(color);\n  }\n  if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n    recyclerListView.updateFastScrollColors();\n  }\n  if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n    recyclerListView.setGlowColor(color);\n  }\n  if ((changeFlags & FLAG_SECTIONS) != 0) {\n    ArrayList<View> headers=recyclerListView.getHeaders();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    headers=recyclerListView.getHeadersCache();\n    if (headers != null) {\n      for (int a=0; a < headers.size(); a++) {\n        processViewColor(headers.get(a),color);\n      }\n    }\n    View header=recyclerListView.getPinnedHeader();\n    if (header != null) {\n      processViewColor(header,color);\n    }\n  }\n}\n else if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n  if ((changeFlags & FLAG_SELECTOR) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n  }\n else   if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n    viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 466,
        "startColumnNumber" : 23,
        "endLineNumber" : 466,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(changeFlags & FLAG_SELECTORWHITE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 475,
      "startColumnNumber" : 29,
      "endLineNumber" : 475,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 475,
        "startColumnNumber" : 25,
        "endLineNumber" : 475,
        "endColumnNumber" : 30
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 475,
        "startColumnNumber" : 21,
        "endLineNumber" : 475,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 475,
        "startColumnNumber" : 16,
        "endLineNumber" : 477,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  processViewColor(recyclerListView.getHiddenChildAt(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 471,
        "startColumnNumber" : 62,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 471,
        "startColumnNumber" : 12,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 470,
        "startColumnNumber" : 33,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 470,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (listClasses != null) {\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 475,
        "startColumnNumber" : 21,
        "endLineNumber" : 475,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 479,
      "startColumnNumber" : 29,
      "endLineNumber" : 479,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 479,
        "startColumnNumber" : 25,
        "endLineNumber" : 479,
        "endColumnNumber" : 30
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 479,
        "startColumnNumber" : 21,
        "endLineNumber" : 479,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 479,
        "startColumnNumber" : 16,
        "endLineNumber" : 481,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  processViewColor(recyclerListView.getCachedChildAt(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 471,
        "startColumnNumber" : 62,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 471,
        "startColumnNumber" : 12,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 470,
        "startColumnNumber" : 33,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 470,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (listClasses != null) {\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 479,
        "startColumnNumber" : 21,
        "endLineNumber" : 479,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 483,
      "startColumnNumber" : 29,
      "endLineNumber" : 483,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 483,
        "startColumnNumber" : 25,
        "endLineNumber" : 483,
        "endColumnNumber" : 30
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 483,
        "startColumnNumber" : 21,
        "endLineNumber" : 483,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 483,
        "startColumnNumber" : 16,
        "endLineNumber" : 485,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 471,
        "startColumnNumber" : 62,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 471,
        "startColumnNumber" : 12,
        "endLineNumber" : 486,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (viewToInvalidate instanceof RecyclerListView) {\n  RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n  recyclerListView.getRecycledViewPool().clear();\n  int count=recyclerListView.getHiddenChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getHiddenChildAt(a),color);\n  }\n  count=recyclerListView.getCachedChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getCachedChildAt(a),color);\n  }\n  count=recyclerListView.getAttachedScrapChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 470,
        "startColumnNumber" : 33,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 470,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (listClasses != null) {\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 483,
        "startColumnNumber" : 21,
        "endLineNumber" : 483,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 490,
      "startColumnNumber" : 29,
      "endLineNumber" : 490,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 490,
        "startColumnNumber" : 25,
        "endLineNumber" : 490,
        "endColumnNumber" : 30
      },
      "nodeContext" : "a=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 490,
        "startColumnNumber" : 21,
        "endLineNumber" : 490,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 490,
        "startColumnNumber" : 16,
        "endLineNumber" : 492,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  processViewColor(viewGroup.getChildAt(a),color);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 487,
        "startColumnNumber" : 55,
        "endLineNumber" : 493,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n  int count=viewGroup.getChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(viewGroup.getChildAt(a),color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 487,
        "startColumnNumber" : 12,
        "endLineNumber" : 493,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (viewToInvalidate instanceof ViewGroup) {\n  ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n  int count=viewGroup.getChildCount();\n  for (int a=0; a < count; a++) {\n    processViewColor(viewGroup.getChildAt(a),color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 470,
        "startColumnNumber" : 33,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 470,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (listClasses != null) {\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    recyclerListView.getRecycledViewPool().clear();\n    int count=recyclerListView.getHiddenChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getHiddenChildAt(a),color);\n    }\n    count=recyclerListView.getCachedChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getCachedChildAt(a),color);\n    }\n    count=recyclerListView.getAttachedScrapChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewGroup) {\n    ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n    int count=viewGroup.getChildCount();\n    for (int a=0; a < count; a++) {\n      processViewColor(viewGroup.getChildAt(a),color);\n    }\n  }\n  processViewColor(viewToInvalidate,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 15174,
        "startLineNumber" : 218,
        "startColumnNumber" : 70,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1637,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 15240,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 502,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setColor(int color,boolean useDefault,boolean save){\n  if (save) {\n    Theme.setColor(currentKey,color,useDefault);\n  }\n  currentColor=color;\n  if (alphaOverride > 0) {\n    color=Color.argb(alphaOverride,Color.red(color),Color.green(color),Color.blue(color));\n  }\n  if (paintToUpdate != null) {\n    for (int a=0; a < paintToUpdate.length; a++) {\n      if ((changeFlags & FLAG_LINKCOLOR) != 0 && paintToUpdate[a] instanceof TextPaint) {\n        ((TextPaint)paintToUpdate[a]).linkColor=color;\n      }\n else {\n        paintToUpdate[a].setColor(color);\n      }\n    }\n  }\n  if (drawablesToUpdate != null) {\n    for (int a=0; a < drawablesToUpdate.length; a++) {\n      if (drawablesToUpdate[a] == null) {\n        continue;\n      }\n      if (drawablesToUpdate[a] instanceof BackDrawable) {\n        ((BackDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof ScamDrawable) {\n        ((ScamDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else       if (drawablesToUpdate[a] instanceof RLottieDrawable) {\n        if (lottieLayerName != null) {\n          ((RLottieDrawable)drawablesToUpdate[a]).setLayerColor(lottieLayerName + \".**\",color);\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof CombinedDrawable) {\n        if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n          ((CombinedDrawable)drawablesToUpdate[a]).getBackground().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n else {\n          ((CombinedDrawable)drawablesToUpdate[a]).getIcon().setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (drawablesToUpdate[a] instanceof AvatarDrawable) {\n        ((AvatarDrawable)drawablesToUpdate[a]).setColor(color);\n      }\n else {\n        drawablesToUpdate[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      }\n    }\n  }\n  if (viewToInvalidate != null && listClasses == null && listClassesFieldName == null) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if ((changeFlags & FLAG_BACKGROUND) != 0) {\n        Drawable background=viewToInvalidate.getBackground();\n        if (background instanceof MessageBackgroundDrawable) {\n          ((MessageBackgroundDrawable)background).setColor(color);\n        }\n else {\n          viewToInvalidate.setBackgroundColor(color);\n        }\n      }\n      if ((changeFlags & FLAG_BACKGROUNDFILTER) != 0) {\n        if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n          if (viewToInvalidate instanceof EditTextBoldCursor) {\n            ((EditTextBoldCursor)viewToInvalidate).setErrorLineColor(color);\n          }\n        }\n else {\n          Drawable drawable=viewToInvalidate.getBackground();\n          if (drawable instanceof CombinedDrawable) {\n            if ((changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0) {\n              drawable=((CombinedDrawable)drawable).getBackground();\n            }\n else {\n              drawable=((CombinedDrawable)drawable).getIcon();\n            }\n          }\n          if (drawable != null) {\n            if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n              Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n            }\n else             if (drawable instanceof ShapeDrawable) {\n              ((ShapeDrawable)drawable).getPaint().setColor(color);\n            }\n else {\n              drawable.setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ActionBar) {\n    if ((changeFlags & FLAG_AB_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_TITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setTitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_AM_SELECTORCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsBackgroundColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_AM_ITEMSCOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setItemsColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SUBTITLECOLOR) != 0) {\n      ((ActionBar)viewToInvalidate).setSubtitleColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_BACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeColor(color);\n    }\n    if ((changeFlags & FLAG_AB_AM_TOPBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setActionModeTopColor(color);\n    }\n    if ((changeFlags & FLAG_AB_SEARCHPLACEHOLDER) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,true);\n    }\n    if ((changeFlags & FLAG_AB_SEARCH) != 0) {\n      ((ActionBar)viewToInvalidate).setSearchTextColor(color,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUITEM) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupItemsColor(color,(changeFlags & FLAG_IMAGECOLOR) != 0,false);\n    }\n    if ((changeFlags & FLAG_AB_SUBMENUBACKGROUND) != 0) {\n      ((ActionBar)viewToInvalidate).setPopupBackgroundColor(color,false);\n    }\n  }\n  if (viewToInvalidate instanceof VideoTimelineView) {\n    ((VideoTimelineView)viewToInvalidate).setColor(color);\n  }\n  if (viewToInvalidate instanceof EmptyTextProgressView) {\n    if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setTextColor(color);\n    }\n else     if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((EmptyTextProgressView)viewToInvalidate).setProgressBarColor(color);\n    }\n  }\n  if (viewToInvalidate instanceof RadialProgressView) {\n    ((RadialProgressView)viewToInvalidate).setProgressColor(color);\n  }\n else   if (viewToInvalidate instanceof LineProgressView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((LineProgressView)viewToInvalidate).setProgressColor(color);\n    }\n else {\n      ((LineProgressView)viewToInvalidate).setBackColor(color);\n    }\n  }\n else   if (viewToInvalidate instanceof ContextProgressView) {\n    ((ContextProgressView)viewToInvalidate).updateColors();\n  }\n else   if (viewToInvalidate instanceof SeekBarView) {\n    if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n      ((SeekBarView)viewToInvalidate).setOuterColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_TEXTCOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof TextView) {\n        ((TextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof NumberTextView) {\n        ((NumberTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        ((SimpleTextView)viewToInvalidate).setTextColor(color);\n      }\n else       if (viewToInvalidate instanceof ChatBigEmptyView) {\n        ((ChatBigEmptyView)viewToInvalidate).setTextColor(color);\n      }\n    }\n  }\n  if ((changeFlags & FLAG_CURSORCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      ((EditTextBoldCursor)viewToInvalidate).setCursorColor(color);\n    }\n  }\n  if ((changeFlags & FLAG_HINTTEXTCOLOR) != 0) {\n    if (viewToInvalidate instanceof EditTextBoldCursor) {\n      if ((changeFlags & FLAG_PROGRESSBAR) != 0) {\n        ((EditTextBoldCursor)viewToInvalidate).setHeaderHintColor(color);\n      }\n else {\n        ((EditTextBoldCursor)viewToInvalidate).setHintColor(color);\n      }\n    }\n else     if (viewToInvalidate instanceof EditText) {\n      ((EditText)viewToInvalidate).setHintTextColor(color);\n    }\n  }\n  if (viewToInvalidate != null && (changeFlags & FLAG_SERVICEBACKGROUND) != 0) {\n    Drawable background=viewToInvalidate.getBackground();\n    if (background != null) {\n      background.setColorFilter(Theme.colorFilter);\n    }\n  }\n  if ((changeFlags & FLAG_IMAGECOLOR) != 0) {\n    if ((changeFlags & FLAG_CHECKTAG) == 0 || checkTag(currentKey,viewToInvalidate)) {\n      if (viewToInvalidate instanceof ImageView) {\n        if ((changeFlags & FLAG_USEBACKGROUNDDRAWABLE) != 0) {\n          Drawable drawable=((ImageView)viewToInvalidate).getDrawable();\n          if (drawable instanceof StateListDrawable || Build.VERSION.SDK_INT >= 21 && drawable instanceof RippleDrawable) {\n            Theme.setSelectorDrawableColor(drawable,color,(changeFlags & FLAG_DRAWABLESELECTEDSTATE) != 0);\n          }\n        }\n else {\n          ((ImageView)viewToInvalidate).setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n        }\n      }\n else       if (viewToInvalidate instanceof BackupImageView) {\n      }\n else       if (viewToInvalidate instanceof SimpleTextView) {\n        SimpleTextView textView=(SimpleTextView)viewToInvalidate;\n        textView.setSideDrawablesColor(color);\n      }\n else       if (viewToInvalidate instanceof TextView) {\n        Drawable[] drawables=((TextView)viewToInvalidate).getCompoundDrawables();\n        if (drawables != null) {\n          for (int a=0; a < drawables.length; a++) {\n            if (drawables[a] != null) {\n              drawables[a].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (viewToInvalidate instanceof ScrollView) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setScrollViewEdgeEffectColor((ScrollView)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof ViewPager) {\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      AndroidUtilities.setViewPagerEdgeEffectColor((ViewPager)viewToInvalidate,color);\n    }\n  }\n  if (viewToInvalidate instanceof RecyclerListView) {\n    RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      recyclerListView.setListSelectorColor(color);\n    }\n    if ((changeFlags & FLAG_FASTSCROLL) != 0) {\n      recyclerListView.updateFastScrollColors();\n    }\n    if ((changeFlags & FLAG_LISTGLOWCOLOR) != 0) {\n      recyclerListView.setGlowColor(color);\n    }\n    if ((changeFlags & FLAG_SECTIONS) != 0) {\n      ArrayList<View> headers=recyclerListView.getHeaders();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      headers=recyclerListView.getHeadersCache();\n      if (headers != null) {\n        for (int a=0; a < headers.size(); a++) {\n          processViewColor(headers.get(a),color);\n        }\n      }\n      View header=recyclerListView.getPinnedHeader();\n      if (header != null) {\n        processViewColor(header,color);\n      }\n    }\n  }\n else   if (viewToInvalidate != null && (listClasses == null || listClasses.length == 0)) {\n    if ((changeFlags & FLAG_SELECTOR) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(false));\n    }\n else     if ((changeFlags & FLAG_SELECTORWHITE) != 0) {\n      viewToInvalidate.setBackgroundDrawable(Theme.getSelectorDrawable(true));\n    }\n  }\n  if (listClasses != null) {\n    if (viewToInvalidate instanceof RecyclerListView) {\n      RecyclerListView recyclerListView=(RecyclerListView)viewToInvalidate;\n      recyclerListView.getRecycledViewPool().clear();\n      int count=recyclerListView.getHiddenChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getHiddenChildAt(a),color);\n      }\n      count=recyclerListView.getCachedChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getCachedChildAt(a),color);\n      }\n      count=recyclerListView.getAttachedScrapChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(recyclerListView.getAttachedScrapChildAt(a),color);\n      }\n    }\n    if (viewToInvalidate instanceof ViewGroup) {\n      ViewGroup viewGroup=(ViewGroup)viewToInvalidate;\n      int count=viewGroup.getChildCount();\n      for (int a=0; a < count; a++) {\n        processViewColor(viewGroup.getChildAt(a),color);\n      }\n    }\n    processViewColor(viewToInvalidate,color);\n  }\n  if (delegate != null) {\n    delegate.didSetColor();\n  }\n  if (viewToInvalidate != null) {\n    viewToInvalidate.invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1650,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 490,
        "startColumnNumber" : 21,
        "endLineNumber" : 490,
        "endColumnNumber" : 30
      },
      "nodeContext" : "int a=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 223,
    "startColumnNumber" : 28,
    "endLineNumber" : 223,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 227,
    "startColumnNumber" : 25,
    "endLineNumber" : 227,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 228,
    "startColumnNumber" : 54,
    "endLineNumber" : 228,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 236,
    "startColumnNumber" : 25,
    "endLineNumber" : 236,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 249,
    "startColumnNumber" : 65,
    "endLineNumber" : 249,
    "endColumnNumber" : 66
  }, {
    "charLength" : 1,
    "startLineNumber" : 262,
    "startColumnNumber" : 49,
    "endLineNumber" : 262,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 263,
    "startColumnNumber" : 55,
    "endLineNumber" : 263,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 271,
    "startColumnNumber" : 61,
    "endLineNumber" : 271,
    "endColumnNumber" : 62
  }, {
    "charLength" : 1,
    "startLineNumber" : 272,
    "startColumnNumber" : 60,
    "endLineNumber" : 272,
    "endColumnNumber" : 61
  }, {
    "charLength" : 1,
    "startLineNumber" : 279,
    "startColumnNumber" : 78,
    "endLineNumber" : 279,
    "endColumnNumber" : 79
  }, {
    "charLength" : 1,
    "startLineNumber" : 287,
    "startColumnNumber" : 126,
    "endLineNumber" : 287,
    "endColumnNumber" : 127
  }, {
    "charLength" : 1,
    "startLineNumber" : 299,
    "startColumnNumber" : 54,
    "endLineNumber" : 299,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 302,
    "startColumnNumber" : 54,
    "endLineNumber" : 302,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 305,
    "startColumnNumber" : 57,
    "endLineNumber" : 305,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 308,
    "startColumnNumber" : 60,
    "endLineNumber" : 308,
    "endColumnNumber" : 61
  }, {
    "charLength" : 1,
    "startLineNumber" : 311,
    "startColumnNumber" : 57,
    "endLineNumber" : 311,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 314,
    "startColumnNumber" : 57,
    "endLineNumber" : 314,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 317,
    "startColumnNumber" : 57,
    "endLineNumber" : 317,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 320,
    "startColumnNumber" : 60,
    "endLineNumber" : 320,
    "endColumnNumber" : 61
  }, {
    "charLength" : 1,
    "startLineNumber" : 323,
    "startColumnNumber" : 61,
    "endLineNumber" : 323,
    "endColumnNumber" : 62
  }, {
    "charLength" : 1,
    "startLineNumber" : 326,
    "startColumnNumber" : 50,
    "endLineNumber" : 326,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 329,
    "startColumnNumber" : 55,
    "endLineNumber" : 329,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 330,
    "startColumnNumber" : 108,
    "endLineNumber" : 330,
    "endColumnNumber" : 109
  }, {
    "charLength" : 1,
    "startLineNumber" : 332,
    "startColumnNumber" : 61,
    "endLineNumber" : 332,
    "endColumnNumber" : 62
  }, {
    "charLength" : 1,
    "startLineNumber" : 340,
    "startColumnNumber" : 50,
    "endLineNumber" : 340,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 342,
    "startColumnNumber" : 59,
    "endLineNumber" : 342,
    "endColumnNumber" : 60
  }, {
    "charLength" : 1,
    "startLineNumber" : 349,
    "startColumnNumber" : 52,
    "endLineNumber" : 349,
    "endColumnNumber" : 53
  }, {
    "charLength" : 1,
    "startLineNumber" : 357,
    "startColumnNumber" : 52,
    "endLineNumber" : 357,
    "endColumnNumber" : 53
  }, {
    "charLength" : 1,
    "startLineNumber" : 361,
    "startColumnNumber" : 46,
    "endLineNumber" : 361,
    "endColumnNumber" : 47
  }, {
    "charLength" : 1,
    "startLineNumber" : 362,
    "startColumnNumber" : 49,
    "endLineNumber" : 362,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 374,
    "startColumnNumber" : 48,
    "endLineNumber" : 374,
    "endColumnNumber" : 49
  }, {
    "charLength" : 1,
    "startLineNumber" : 379,
    "startColumnNumber" : 50,
    "endLineNumber" : 379,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 381,
    "startColumnNumber" : 56,
    "endLineNumber" : 381,
    "endColumnNumber" : 57
  }, {
    "charLength" : 1,
    "startLineNumber" : 390,
    "startColumnNumber" : 82,
    "endLineNumber" : 390,
    "endColumnNumber" : 83
  }, {
    "charLength" : 1,
    "startLineNumber" : 396,
    "startColumnNumber" : 47,
    "endLineNumber" : 396,
    "endColumnNumber" : 48
  }, {
    "charLength" : 1,
    "startLineNumber" : 397,
    "startColumnNumber" : 49,
    "endLineNumber" : 397,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 399,
    "startColumnNumber" : 70,
    "endLineNumber" : 399,
    "endColumnNumber" : 71
  }, {
    "charLength" : 1,
    "startLineNumber" : 402,
    "startColumnNumber" : 122,
    "endLineNumber" : 402,
    "endColumnNumber" : 123
  }, {
    "charLength" : 1,
    "startLineNumber" : 415,
    "startColumnNumber" : 37,
    "endLineNumber" : 415,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 425,
    "startColumnNumber" : 54,
    "endLineNumber" : 425,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 430,
    "startColumnNumber" : 54,
    "endLineNumber" : 430,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 436,
    "startColumnNumber" : 49,
    "endLineNumber" : 436,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 439,
    "startColumnNumber" : 51,
    "endLineNumber" : 439,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 442,
    "startColumnNumber" : 54,
    "endLineNumber" : 442,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 445,
    "startColumnNumber" : 49,
    "endLineNumber" : 445,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 448,
    "startColumnNumber" : 33,
    "endLineNumber" : 448,
    "endColumnNumber" : 34
  }, {
    "charLength" : 1,
    "startLineNumber" : 454,
    "startColumnNumber" : 33,
    "endLineNumber" : 454,
    "endColumnNumber" : 34
  }, {
    "charLength" : 1,
    "startLineNumber" : 463,
    "startColumnNumber" : 93,
    "endLineNumber" : 463,
    "endColumnNumber" : 94
  }, {
    "charLength" : 1,
    "startLineNumber" : 464,
    "startColumnNumber" : 49,
    "endLineNumber" : 464,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 466,
    "startColumnNumber" : 61,
    "endLineNumber" : 466,
    "endColumnNumber" : 62
  }, {
    "charLength" : 1,
    "startLineNumber" : 475,
    "startColumnNumber" : 29,
    "endLineNumber" : 475,
    "endColumnNumber" : 30
  }, {
    "charLength" : 1,
    "startLineNumber" : 479,
    "startColumnNumber" : 29,
    "endLineNumber" : 479,
    "endColumnNumber" : 30
  }, {
    "charLength" : 1,
    "startLineNumber" : 483,
    "startColumnNumber" : 29,
    "endLineNumber" : 483,
    "endColumnNumber" : 30
  }, {
    "charLength" : 1,
    "startLineNumber" : 490,
    "startColumnNumber" : 29,
    "endLineNumber" : 490,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 28,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 29,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 30,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 31,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 32,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 34,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 35,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 36,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 37,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 38,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 39,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 40,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 47,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 49,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 50,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 51,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 52,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 53,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 50,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 51,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 52,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 53,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 27,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 28,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 29,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 30,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 31,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 32,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 33,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 34,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 35,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 36,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 37,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 38,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 39,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 40,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 41,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 42,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 43,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 44,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 45,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 46,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 47,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 48,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 49,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 50,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 51,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 52,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 53,
    "layout" : 11
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 35,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 37,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 38,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 39,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 40,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 41,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 42,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 43,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 44,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 45,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 46,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 47,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 48,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 49,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 50,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 51,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 52,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 53,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 35,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 37,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 38,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 39,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 40,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 41,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 42,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 43,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 44,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 45,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 46,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 47,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 48,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 49,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 50,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 51,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 52,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 53,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 30,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 31,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 32,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 33,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 34,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 35,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 36,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 37,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 38,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 39,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 40,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 41,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 42,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 43,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 44,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 45,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 46,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 47,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 48,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 49,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 50,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 51,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 52,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 53,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 27,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 28,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 29,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 30,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 31,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 32,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 33,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 34,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 35,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 36,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 37,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 38,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 39,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 40,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 41,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 42,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 43,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 44,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 45,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 46,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 47,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 48,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 49,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 50,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 51,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 52,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 53,
    "layout" : 12
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 27,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 28,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 29,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 30,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 31,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 32,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 33,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 34,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 35,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 36,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 37,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 38,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 39,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 40,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 41,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 42,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 43,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 44,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 45,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 46,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 47,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 48,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 49,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 50,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 51,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 52,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 53,
    "layout" : 15
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 1
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 50,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 51,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 52,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 53,
    "layout" : 7
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 1
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 26,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 26,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 27,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 27,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 50,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 51,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 52,
    "layout" : 7
  }, {
    "firstKey" : 27,
    "secondKey" : 53,
    "layout" : 7
  }, {
    "firstKey" : 28,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 29,
    "layout" : 1
  }, {
    "firstKey" : 28,
    "secondKey" : 30,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 31,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 32,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 34,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 35,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 36,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 37,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 38,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 39,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 40,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 47,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 49,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 50,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 51,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 52,
    "layout" : 2
  }, {
    "firstKey" : 28,
    "secondKey" : 53,
    "layout" : 2
  }, {
    "firstKey" : 29,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 29,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 29,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 30,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 28,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 29,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 31,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 32,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 34,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 35,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 36,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 37,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 38,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 39,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 40,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 47,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 49,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 50,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 51,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 52,
    "layout" : 2
  }, {
    "firstKey" : 30,
    "secondKey" : 53,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 28,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 29,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 30,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 32,
    "layout" : 1
  }, {
    "firstKey" : 31,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 34,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 35,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 36,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 37,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 38,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 39,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 40,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 47,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 49,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 50,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 51,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 52,
    "layout" : 2
  }, {
    "firstKey" : 31,
    "secondKey" : 53,
    "layout" : 2
  }, {
    "firstKey" : 32,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 32,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 35,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 37,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 38,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 39,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 40,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 41,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 42,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 43,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 44,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 45,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 46,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 47,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 48,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 49,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 50,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 51,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 52,
    "layout" : 6
  }, {
    "firstKey" : 32,
    "secondKey" : 53,
    "layout" : 6
  }, {
    "firstKey" : 33,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 28,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 29,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 30,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 31,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 32,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 34,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 35,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 36,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 37,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 38,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 39,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 40,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 41,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 42,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 43,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 44,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 45,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 46,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 48,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 49,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 50,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 51,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 52,
    "layout" : 3
  }, {
    "firstKey" : 33,
    "secondKey" : 53,
    "layout" : 3
  }, {
    "firstKey" : 34,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 28,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 29,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 30,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 31,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 32,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 33,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 35,
    "layout" : 1
  }, {
    "firstKey" : 34,
    "secondKey" : 36,
    "layout" : 1
  }, {
    "firstKey" : 34,
    "secondKey" : 37,
    "layout" : 1
  }, {
    "firstKey" : 34,
    "secondKey" : 38,
    "layout" : 1
  }, {
    "firstKey" : 34,
    "secondKey" : 39,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 40,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 47,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 49,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 50,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 51,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 52,
    "layout" : 2
  }, {
    "firstKey" : 34,
    "secondKey" : 53,
    "layout" : 2
  }, {
    "firstKey" : 35,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 35,
    "secondKey" : 36,
    "layout" : 2
  }, {
    "firstKey" : 35,
    "secondKey" : 37,
    "layout" : 2
  }, {
    "firstKey" : 35,
    "secondKey" : 38,
    "layout" : 2
  }, {
    "firstKey" : 35,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 47,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 48,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 49,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 35,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 36,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 30,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 31,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 32,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 33,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 36,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 36,
    "secondKey" : 37,
    "layout" : 1
  }, {
    "firstKey" : 36,
    "secondKey" : 38,
    "layout" : 3
  }, {
    "firstKey" : 36,
    "secondKey" : 39,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 40,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 41,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 42,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 43,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 44,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 45,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 46,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 47,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 48,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 49,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 50,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 51,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 52,
    "layout" : 8
  }, {
    "firstKey" : 36,
    "secondKey" : 53,
    "layout" : 8
  }, {
    "firstKey" : 37,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 2,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 3,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 4,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 5,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 6,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 7,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 8,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 9,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 10,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 11,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 12,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 13,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 14,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 15,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 16,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 17,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 18,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 19,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 20,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 21,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 22,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 23,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 24,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 25,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 26,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 27,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 28,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 29,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 30,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 31,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 32,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 33,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 34,
    "layout" : 12
  }, {
    "firstKey" : 37,
    "secondKey" : 35,
    "layout" : 10
  }, {
    "firstKey" : 37,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 37,
    "secondKey" : 38,
    "layout" : 8
  }, {
    "firstKey" : 37,
    "secondKey" : 39,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 40,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 41,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 42,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 43,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 44,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 45,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 46,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 47,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 48,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 49,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 50,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 51,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 52,
    "layout" : 13
  }, {
    "firstKey" : 37,
    "secondKey" : 53,
    "layout" : 13
  }, {
    "firstKey" : 38,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 1,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 2,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 3,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 4,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 5,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 6,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 7,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 8,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 9,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 10,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 11,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 12,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 13,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 14,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 15,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 16,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 17,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 18,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 19,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 20,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 21,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 22,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 23,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 24,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 25,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 26,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 27,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 28,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 29,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 30,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 31,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 32,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 33,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 34,
    "layout" : 13
  }, {
    "firstKey" : 38,
    "secondKey" : 35,
    "layout" : 11
  }, {
    "firstKey" : 38,
    "secondKey" : 36,
    "layout" : 9
  }, {
    "firstKey" : 38,
    "secondKey" : 37,
    "layout" : 9
  }, {
    "firstKey" : 38,
    "secondKey" : 39,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 40,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 41,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 42,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 43,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 44,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 45,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 46,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 47,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 48,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 49,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 50,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 51,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 52,
    "layout" : 14
  }, {
    "firstKey" : 38,
    "secondKey" : 53,
    "layout" : 14
  }, {
    "firstKey" : 39,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 39,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 40,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 41,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 41,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 41,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 41,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 41,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 41,
    "secondKey" : 48,
    "layout" : 3
  }, {
    "firstKey" : 41,
    "secondKey" : 49,
    "layout" : 3
  }, {
    "firstKey" : 41,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 41,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 42,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 42,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 42,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 42,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 42,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 42,
    "secondKey" : 48,
    "layout" : 3
  }, {
    "firstKey" : 42,
    "secondKey" : 49,
    "layout" : 3
  }, {
    "firstKey" : 42,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 42,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 43,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 43,
    "secondKey" : 44,
    "layout" : 2
  }, {
    "firstKey" : 43,
    "secondKey" : 45,
    "layout" : 2
  }, {
    "firstKey" : 43,
    "secondKey" : 46,
    "layout" : 2
  }, {
    "firstKey" : 43,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 43,
    "secondKey" : 48,
    "layout" : 3
  }, {
    "firstKey" : 43,
    "secondKey" : 49,
    "layout" : 3
  }, {
    "firstKey" : 43,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 43,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 30,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 31,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 32,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 33,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 34,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 35,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 36,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 37,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 38,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 39,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 40,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 41,
    "layout" : 2
  }, {
    "firstKey" : 44,
    "secondKey" : 42,
    "layout" : 2
  }, {
    "firstKey" : 44,
    "secondKey" : 43,
    "layout" : 2
  }, {
    "firstKey" : 44,
    "secondKey" : 45,
    "layout" : 1
  }, {
    "firstKey" : 44,
    "secondKey" : 46,
    "layout" : 1
  }, {
    "firstKey" : 44,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 44,
    "secondKey" : 48,
    "layout" : 3
  }, {
    "firstKey" : 44,
    "secondKey" : 49,
    "layout" : 3
  }, {
    "firstKey" : 44,
    "secondKey" : 50,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 51,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 52,
    "layout" : 4
  }, {
    "firstKey" : 44,
    "secondKey" : 53,
    "layout" : 4
  }, {
    "firstKey" : 45,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 12,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 14,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 15,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 16,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 17,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 18,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 19,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 20,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 21,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 28,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 29,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 30,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 31,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 32,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 33,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 34,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 35,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 36,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 37,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 38,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 39,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 40,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 45,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 45,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 45,
    "secondKey" : 44,
    "layout" : 6
  }, {
    "firstKey" : 45,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 45,
    "secondKey" : 47,
    "layout" : 8
  }, {
    "firstKey" : 45,
    "secondKey" : 48,
    "layout" : 8
  }, {
    "firstKey" : 45,
    "secondKey" : 49,
    "layout" : 8
  }, {
    "firstKey" : 45,
    "secondKey" : 50,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 51,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 52,
    "layout" : 9
  }, {
    "firstKey" : 45,
    "secondKey" : 53,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 12,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 14,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 15,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 16,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 17,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 18,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 19,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 20,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 21,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 28,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 29,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 30,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 31,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 32,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 33,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 34,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 35,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 36,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 37,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 38,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 39,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 40,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 46,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 46,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 46,
    "secondKey" : 44,
    "layout" : 6
  }, {
    "firstKey" : 46,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 46,
    "secondKey" : 47,
    "layout" : 8
  }, {
    "firstKey" : 46,
    "secondKey" : 48,
    "layout" : 8
  }, {
    "firstKey" : 46,
    "secondKey" : 49,
    "layout" : 8
  }, {
    "firstKey" : 46,
    "secondKey" : 50,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 51,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 52,
    "layout" : 9
  }, {
    "firstKey" : 46,
    "secondKey" : 53,
    "layout" : 9
  }, {
    "firstKey" : 47,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 35,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 37,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 38,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 39,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 40,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 47,
    "secondKey" : 48,
    "layout" : 4
  }, {
    "firstKey" : 47,
    "secondKey" : 49,
    "layout" : 4
  }, {
    "firstKey" : 47,
    "secondKey" : 50,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 51,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 52,
    "layout" : 6
  }, {
    "firstKey" : 47,
    "secondKey" : 53,
    "layout" : 6
  }, {
    "firstKey" : 48,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 27,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 28,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 29,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 30,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 31,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 32,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 33,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 34,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 35,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 36,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 37,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 38,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 39,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 40,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 41,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 42,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 43,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 44,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 45,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 46,
    "layout" : 4
  }, {
    "firstKey" : 48,
    "secondKey" : 47,
    "layout" : 3
  }, {
    "firstKey" : 48,
    "secondKey" : 49,
    "layout" : 1
  }, {
    "firstKey" : 48,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 52,
    "layout" : 5
  }, {
    "firstKey" : 48,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 28,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 29,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 30,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 31,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 32,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 33,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 34,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 35,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 36,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 37,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 38,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 39,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 40,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 41,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 42,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 43,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 44,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 45,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 46,
    "layout" : 5
  }, {
    "firstKey" : 49,
    "secondKey" : 47,
    "layout" : 4
  }, {
    "firstKey" : 49,
    "secondKey" : 48,
    "layout" : 2
  }, {
    "firstKey" : 49,
    "secondKey" : 50,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 51,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 52,
    "layout" : 6
  }, {
    "firstKey" : 49,
    "secondKey" : 53,
    "layout" : 6
  }, {
    "firstKey" : 50,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 50,
    "secondKey" : 51,
    "layout" : 3
  }, {
    "firstKey" : 50,
    "secondKey" : 52,
    "layout" : 3
  }, {
    "firstKey" : 50,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 51,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 51,
    "secondKey" : 50,
    "layout" : 3
  }, {
    "firstKey" : 51,
    "secondKey" : 52,
    "layout" : 3
  }, {
    "firstKey" : 51,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 52,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 52,
    "secondKey" : 50,
    "layout" : 3
  }, {
    "firstKey" : 52,
    "secondKey" : 51,
    "layout" : 3
  }, {
    "firstKey" : 52,
    "secondKey" : 53,
    "layout" : 5
  }, {
    "firstKey" : 53,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 28,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 29,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 30,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 31,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 32,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 33,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 34,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 35,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 36,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 37,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 38,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 39,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 40,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 41,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 42,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 43,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 44,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 45,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 46,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 47,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 48,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 49,
    "layout" : 7
  }, {
    "firstKey" : 53,
    "secondKey" : 50,
    "layout" : 5
  }, {
    "firstKey" : 53,
    "secondKey" : 51,
    "layout" : 5
  }, {
    "firstKey" : 53,
    "secondKey" : 52,
    "layout" : 5
  } ]
}