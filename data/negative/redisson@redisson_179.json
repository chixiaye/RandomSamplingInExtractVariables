{
  "id" : 179,
  "expression" : "\"10\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"10\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 123,
      "startColumnNumber" : 41,
      "endLineNumber" : 123,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 123,
        "startColumnNumber" : 19,
        "endLineNumber" : 123,
        "endColumnNumber" : 46
      },
      "nodeContext" : "map.replace(\"3\",\"4\",\"10\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"4\",\"10\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 116,
        "startColumnNumber" : 31,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RMap<String,String> m=getMap();\n  m.put(\"1\",\"2\");\n  m.put(\"3\",\"4\");\n  RTransaction transaction=redisson.createTransaction(TransactionOptions.defaults());\n  RMap<String,String> map=getTransactionalMap(transaction);\n  assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n  assertThat(map.replace(\"1\",\"1\",\"3\")).isFalse();\n  assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n  assertThat(m.get(\"3\")).isEqualTo(\"4\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n  assertThat(m.size()).isEqualTo(2);\n  transaction.commit();\n  assertThat(m.size()).isEqualTo(2);\n  assertThat(m.get(\"3\")).isEqualTo(\"11\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testReplace2(){\n  RMap<String,String> m=getMap();\n  m.put(\"1\",\"2\");\n  m.put(\"3\",\"4\");\n  RTransaction transaction=redisson.createTransaction(TransactionOptions.defaults());\n  RMap<String,String> map=getTransactionalMap(transaction);\n  assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n  assertThat(map.replace(\"1\",\"1\",\"3\")).isFalse();\n  assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n  assertThat(m.get(\"3\")).isEqualTo(\"4\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n  assertThat(m.size()).isEqualTo(2);\n  transaction.commit();\n  assertThat(m.size()).isEqualTo(2);\n  assertThat(m.get(\"3\")).isEqualTo(\"11\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"10\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 125,
      "startColumnNumber" : 36,
      "endLineNumber" : 125,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 125,
        "startColumnNumber" : 19,
        "endLineNumber" : 125,
        "endColumnNumber" : 47
      },
      "nodeContext" : "map.replace(\"3\",\"10\",\"11\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"10\",\"11\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 116,
        "startColumnNumber" : 31,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RMap<String,String> m=getMap();\n  m.put(\"1\",\"2\");\n  m.put(\"3\",\"4\");\n  RTransaction transaction=redisson.createTransaction(TransactionOptions.defaults());\n  RMap<String,String> map=getTransactionalMap(transaction);\n  assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n  assertThat(map.replace(\"1\",\"1\",\"3\")).isFalse();\n  assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n  assertThat(m.get(\"3\")).isEqualTo(\"4\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n  assertThat(m.size()).isEqualTo(2);\n  transaction.commit();\n  assertThat(m.size()).isEqualTo(2);\n  assertThat(m.get(\"3\")).isEqualTo(\"11\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testReplace2(){\n  RMap<String,String> m=getMap();\n  m.put(\"1\",\"2\");\n  m.put(\"3\",\"4\");\n  RTransaction transaction=redisson.createTransaction(TransactionOptions.defaults());\n  RMap<String,String> map=getTransactionalMap(transaction);\n  assertThat(map.replace(\"3\",\"4\",\"10\")).isTrue();\n  assertThat(map.replace(\"1\",\"1\",\"3\")).isFalse();\n  assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n  assertThat(m.get(\"3\")).isEqualTo(\"4\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n  assertThat(m.size()).isEqualTo(2);\n  transaction.commit();\n  assertThat(m.size()).isEqualTo(2);\n  assertThat(m.get(\"3\")).isEqualTo(\"11\");\n  assertThat(m.get(\"1\")).isEqualTo(\"2\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(map.replace(\"3\",\"10\",\"11\")).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 123,
    "startColumnNumber" : 41,
    "endLineNumber" : 123,
    "endColumnNumber" : 45
  }, {
    "charLength" : 4,
    "startLineNumber" : 125,
    "startColumnNumber" : 36,
    "endLineNumber" : 125,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}