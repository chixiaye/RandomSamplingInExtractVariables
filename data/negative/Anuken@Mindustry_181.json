{
  "id" : 181,
  "expression" : "cat",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/dialogs/ContentInfoDialog.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 69,
      "endLineNumber" : 58,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "stats.toMap().get(cat)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 45,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "map=stats.toMap().get(cat)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 57,
        "startColumnNumber" : 47,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n  if (map.size == 0)   continue;\n  if (stats.useCategories) {\n    table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n    table.row();\n  }\n  for (  Stat stat : map.keys()) {\n    table.table(inset -> {\n      inset.left();\n      inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n      Seq<StatValue> arr=map.get(stat);\n      for (      StatValue value : arr) {\n        value.display(inset);\n        inset.add().size(10f);\n      }\n    }\n).fillX().padLeft(10);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (StatCat cat : stats.toMap().keys()) {\n  OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n  if (map.size == 0)   continue;\n  if (stats.useCategories) {\n    table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n    table.row();\n  }\n  for (  Stat stat : map.keys()) {\n    table.table(inset -> {\n      inset.left();\n      inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n      Seq<StatValue> arr=map.get(stat);\n      for (      StatValue value : arr) {\n        value.display(inset);\n        inset.add().size(10f);\n      }\n    }\n).fillX().padLeft(10);\n    table.row();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2187,
        "startLineNumber" : 20,
        "startColumnNumber" : 47,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cont.clear();\n  Table table=new Table();\n  table.margin(10);\n  content.checkStats();\n  table.table(title1 -> {\n    int size=8 * 6;\n    title1.image(content.icon(Cicon.xlarge)).size(size).scaling(Scaling.fit);\n    title1.add(\"[accent]\" + content.localizedName).padLeft(5);\n  }\n);\n  table.row();\n  if (content.description != null) {\n    var any=content.stats.toMap().size > 0;\n    if (any) {\n      table.add(\"@category.purpose\").color(Pal.accent).fillX().padTop(10);\n      table.row();\n    }\n    table.add(\"[lightgray]\" + content.displayDescription()).wrap().fillX().padLeft(any ? 10 : 0).width(500f).padTop(any ? 0 : 10).left();\n    table.row();\n    if (!content.stats.useCategories && any) {\n      table.add(\"@category.general\").fillX().color(Pal.accent);\n      table.row();\n    }\n  }\n  Stats stats=content.stats;\n  for (  StatCat cat : stats.toMap().keys()) {\n    OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n    if (map.size == 0)     continue;\n    if (stats.useCategories) {\n      table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n      table.row();\n    }\n    for (    Stat stat : map.keys()) {\n      table.table(inset -> {\n        inset.left();\n        inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n        Seq<StatValue> arr=map.get(stat);\n        for (        StatValue value : arr) {\n          value.display(inset);\n          inset.add().size(10f);\n        }\n      }\n).fillX().padLeft(10);\n      table.row();\n    }\n  }\n  if (content.details != null) {\n    table.add(\"[gray]\" + content.details).pad(6).padTop(20).width(400f).wrap().fillX();\n    table.row();\n  }\n  ScrollPane pane=new ScrollPane(table);\n  cont.add(pane);\n  show();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2230,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void show(UnlockableContent content){\n  cont.clear();\n  Table table=new Table();\n  table.margin(10);\n  content.checkStats();\n  table.table(title1 -> {\n    int size=8 * 6;\n    title1.image(content.icon(Cicon.xlarge)).size(size).scaling(Scaling.fit);\n    title1.add(\"[accent]\" + content.localizedName).padLeft(5);\n  }\n);\n  table.row();\n  if (content.description != null) {\n    var any=content.stats.toMap().size > 0;\n    if (any) {\n      table.add(\"@category.purpose\").color(Pal.accent).fillX().padTop(10);\n      table.row();\n    }\n    table.add(\"[lightgray]\" + content.displayDescription()).wrap().fillX().padLeft(any ? 10 : 0).width(500f).padTop(any ? 0 : 10).left();\n    table.row();\n    if (!content.stats.useCategories && any) {\n      table.add(\"@category.general\").fillX().color(Pal.accent);\n      table.row();\n    }\n  }\n  Stats stats=content.stats;\n  for (  StatCat cat : stats.toMap().keys()) {\n    OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n    if (map.size == 0)     continue;\n    if (stats.useCategories) {\n      table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n      table.row();\n    }\n    for (    Stat stat : map.keys()) {\n      table.table(inset -> {\n        inset.left();\n        inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n        Seq<StatValue> arr=map.get(stat);\n        for (        StatValue value : arr) {\n          value.display(inset);\n          inset.add().size(10f);\n        }\n      }\n).fillX().padLeft(10);\n      table.row();\n    }\n  }\n  if (content.details != null) {\n    table.add(\"[gray]\" + content.details).pad(6).padTop(20).width(400f).wrap().fillX();\n    table.row();\n  }\n  ScrollPane pane=new ScrollPane(table);\n  cont.add(pane);\n  show();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 375,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.StatCat"
  }, {
    "nodeContext" : "cat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 64,
      "startColumnNumber" : 41,
      "endLineNumber" : 64,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 64,
        "startColumnNumber" : 41,
        "endLineNumber" : 64,
        "endColumnNumber" : 51
      },
      "nodeContext" : "cat.name()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 64,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 51
      },
      "nodeContext" : "\"@category.\" + cat.name()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 52
      },
      "nodeContext" : "table.add(\"@category.\" + cat.name())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 70
      },
      "nodeContext" : "table.add(\"@category.\" + cat.name()).color(Pal.accent)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 78
      },
      "nodeContext" : "table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 79
      },
      "nodeContext" : "table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (stats.useCategories) {\n  table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n  table.row();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 57,
        "startColumnNumber" : 47,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n  if (map.size == 0)   continue;\n  if (stats.useCategories) {\n    table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n    table.row();\n  }\n  for (  Stat stat : map.keys()) {\n    table.table(inset -> {\n      inset.left();\n      inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n      Seq<StatValue> arr=map.get(stat);\n      for (      StatValue value : arr) {\n        value.display(inset);\n        inset.add().size(10f);\n      }\n    }\n).fillX().padLeft(10);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (StatCat cat : stats.toMap().keys()) {\n  OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n  if (map.size == 0)   continue;\n  if (stats.useCategories) {\n    table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n    table.row();\n  }\n  for (  Stat stat : map.keys()) {\n    table.table(inset -> {\n      inset.left();\n      inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n      Seq<StatValue> arr=map.get(stat);\n      for (      StatValue value : arr) {\n        value.display(inset);\n        inset.add().size(10f);\n      }\n    }\n).fillX().padLeft(10);\n    table.row();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2187,
        "startLineNumber" : 20,
        "startColumnNumber" : 47,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cont.clear();\n  Table table=new Table();\n  table.margin(10);\n  content.checkStats();\n  table.table(title1 -> {\n    int size=8 * 6;\n    title1.image(content.icon(Cicon.xlarge)).size(size).scaling(Scaling.fit);\n    title1.add(\"[accent]\" + content.localizedName).padLeft(5);\n  }\n);\n  table.row();\n  if (content.description != null) {\n    var any=content.stats.toMap().size > 0;\n    if (any) {\n      table.add(\"@category.purpose\").color(Pal.accent).fillX().padTop(10);\n      table.row();\n    }\n    table.add(\"[lightgray]\" + content.displayDescription()).wrap().fillX().padLeft(any ? 10 : 0).width(500f).padTop(any ? 0 : 10).left();\n    table.row();\n    if (!content.stats.useCategories && any) {\n      table.add(\"@category.general\").fillX().color(Pal.accent);\n      table.row();\n    }\n  }\n  Stats stats=content.stats;\n  for (  StatCat cat : stats.toMap().keys()) {\n    OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n    if (map.size == 0)     continue;\n    if (stats.useCategories) {\n      table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n      table.row();\n    }\n    for (    Stat stat : map.keys()) {\n      table.table(inset -> {\n        inset.left();\n        inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n        Seq<StatValue> arr=map.get(stat);\n        for (        StatValue value : arr) {\n          value.display(inset);\n          inset.add().size(10f);\n        }\n      }\n).fillX().padLeft(10);\n      table.row();\n    }\n  }\n  if (content.details != null) {\n    table.add(\"[gray]\" + content.details).pad(6).padTop(20).width(400f).wrap().fillX();\n    table.row();\n  }\n  ScrollPane pane=new ScrollPane(table);\n  cont.add(pane);\n  show();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2230,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void show(UnlockableContent content){\n  cont.clear();\n  Table table=new Table();\n  table.margin(10);\n  content.checkStats();\n  table.table(title1 -> {\n    int size=8 * 6;\n    title1.image(content.icon(Cicon.xlarge)).size(size).scaling(Scaling.fit);\n    title1.add(\"[accent]\" + content.localizedName).padLeft(5);\n  }\n);\n  table.row();\n  if (content.description != null) {\n    var any=content.stats.toMap().size > 0;\n    if (any) {\n      table.add(\"@category.purpose\").color(Pal.accent).fillX().padTop(10);\n      table.row();\n    }\n    table.add(\"[lightgray]\" + content.displayDescription()).wrap().fillX().padLeft(any ? 10 : 0).width(500f).padTop(any ? 0 : 10).left();\n    table.row();\n    if (!content.stats.useCategories && any) {\n      table.add(\"@category.general\").fillX().color(Pal.accent);\n      table.row();\n    }\n  }\n  Stats stats=content.stats;\n  for (  StatCat cat : stats.toMap().keys()) {\n    OrderedMap<Stat,Seq<StatValue>> map=stats.toMap().get(cat);\n    if (map.size == 0)     continue;\n    if (stats.useCategories) {\n      table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n      table.row();\n    }\n    for (    Stat stat : map.keys()) {\n      table.table(inset -> {\n        inset.left();\n        inset.add(\"[lightgray]\" + stat.localized() + \":[] \").left();\n        Seq<StatValue> arr=map.get(stat);\n        for (        StatValue value : arr) {\n          value.display(inset);\n          inset.add().size(10f);\n        }\n      }\n).fillX().padLeft(10);\n      table.row();\n    }\n  }\n  if (content.details != null) {\n    table.add(\"[gray]\" + content.details).pad(6).padTop(20).width(400f).wrap().fillX();\n    table.row();\n  }\n  ScrollPane pane=new ScrollPane(table);\n  cont.add(pane);\n  show();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 375,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 79
      },
      "nodeContext" : "table.add(\"@category.\" + cat.name()).color(Pal.accent).fillX();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.StatCat"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 69,
    "endLineNumber" : 58,
    "endColumnNumber" : 72
  }, {
    "charLength" : 3,
    "startLineNumber" : 64,
    "startColumnNumber" : 41,
    "endLineNumber" : 64,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  } ]
}