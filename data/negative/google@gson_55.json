{
  "id" : 55,
  "expression" : "\"_\"",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/proto/src/main/java/com/google/gson/protobuf/ProtoTypeAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"_\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 92,
      "startColumnNumber" : 38,
      "endLineNumber" : 92,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 92,
        "startColumnNumber" : 31,
        "endLineNumber" : 92,
        "endColumnNumber" : 41
      },
      "nodeContext" : "name + \"_\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 92,
        "startColumnNumber" : 19,
        "endLineNumber" : 92,
        "endColumnNumber" : 41
      },
      "nodeContext" : "fieldName=name + \"_\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String fieldName=name + \"_\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 90,
        "startColumnNumber" : 36,
        "endLineNumber" : 99,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  JsonElement jsonElement=jsonObject.get(name);\n  String fieldName=name + \"_\";\n  Field field=protoClass.getDeclaredField(fieldName);\n  Type fieldType=field.getGenericType();\n  Object fieldValue=context.deserialize(jsonElement,fieldType);\n  Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n  method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 90,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (jsonObject.has(name)) {\n  JsonElement jsonElement=jsonObject.get(name);\n  String fieldName=name + \"_\";\n  Field field=protoClass.getDeclaredField(fieldName);\n  Type fieldType=field.getGenericType();\n  Object fieldValue=context.deserialize(jsonElement,fieldType);\n  Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n  method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 88,
        "startColumnNumber" : 76,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=fieldDescriptor.getName();\n  if (jsonObject.has(name)) {\n    JsonElement jsonElement=jsonObject.get(name);\n    String fieldName=name + \"_\";\n    Field field=protoClass.getDeclaredField(fieldName);\n    Type fieldType=field.getGenericType();\n    Object fieldValue=context.deserialize(jsonElement,fieldType);\n    Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n    method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n  String name=fieldDescriptor.getName();\n  if (jsonObject.has(name)) {\n    JsonElement jsonElement=jsonObject.get(name);\n    String fieldName=name + \"_\";\n    Field field=protoClass.getDeclaredField(fieldName);\n    Type fieldType=field.getGenericType();\n    Object fieldValue=context.deserialize(jsonElement,fieldType);\n    Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n    method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 79,
        "startColumnNumber" : 10,
        "endLineNumber" : 105,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n  Class<?> builderClass=protoBuilder.getClass();\n  Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n  for (  FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n    String name=fieldDescriptor.getName();\n    if (jsonObject.has(name)) {\n      JsonElement jsonElement=jsonObject.get(name);\n      String fieldName=name + \"_\";\n      Field field=protoClass.getDeclaredField(fieldName);\n      Type fieldType=field.getGenericType();\n      Object fieldValue=context.deserialize(jsonElement,fieldType);\n      Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n      method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n    }\n  }\n  return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n  Class<?> builderClass=protoBuilder.getClass();\n  Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n  for (  FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n    String name=fieldDescriptor.getName();\n    if (jsonObject.has(name)) {\n      JsonElement jsonElement=jsonObject.get(name);\n      String fieldName=name + \"_\";\n      Field field=protoClass.getDeclaredField(fieldName);\n      Type fieldType=field.getGenericType();\n      Object fieldValue=context.deserialize(jsonElement,fieldType);\n      Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n      method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n    }\n  }\n  return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n}\n catch (SecurityException e) {\n  throw new JsonParseException(e);\n}\ncatch (NoSuchMethodException e) {\n  throw new JsonParseException(e);\n}\ncatch (IllegalArgumentException e) {\n  throw new JsonParseException(e);\n}\ncatch (IllegalAccessException e) {\n  throw new JsonParseException(e);\n}\ncatch (InvocationTargetException e) {\n  throw new JsonParseException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 194,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1851,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JsonObject jsonObject=json.getAsJsonObject();\n  Class<? extends GeneratedMessage> protoClass=(Class<? extends GeneratedMessage>)typeOfT;\n  try {\n    Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n    Class<?> builderClass=protoBuilder.getClass();\n    Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n    for (    FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n      String name=fieldDescriptor.getName();\n      if (jsonObject.has(name)) {\n        JsonElement jsonElement=jsonObject.get(name);\n        String fieldName=name + \"_\";\n        Field field=protoClass.getDeclaredField(fieldName);\n        Type fieldType=field.getGenericType();\n        Object fieldValue=context.deserialize(jsonElement,fieldType);\n        Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n        method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n      }\n    }\n    return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n  }\n catch (  SecurityException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  NoSuchMethodException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  IllegalArgumentException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  InvocationTargetException e) {\n    throw new JsonParseException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1953,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  JsonObject jsonObject=json.getAsJsonObject();\n  Class<? extends GeneratedMessage> protoClass=(Class<? extends GeneratedMessage>)typeOfT;\n  try {\n    Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n    Class<?> builderClass=protoBuilder.getClass();\n    Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n    for (    FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n      String name=fieldDescriptor.getName();\n      if (jsonObject.has(name)) {\n        JsonElement jsonElement=jsonObject.get(name);\n        String fieldName=name + \"_\";\n        Field field=protoClass.getDeclaredField(fieldName);\n        Type fieldType=field.getGenericType();\n        Object fieldValue=context.deserialize(jsonElement,fieldType);\n        Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n        method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n      }\n    }\n    return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n  }\n catch (  SecurityException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  NoSuchMethodException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  IllegalArgumentException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new JsonParseException(e);\n  }\ncatch (  InvocationTargetException e) {\n    throw new JsonParseException(e);\n  }\n}\n catch (Exception e) {\n  throw new JsonParseException(\"Error while parsing proto: \",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1963,
        "startLineNumber" : 74,
        "startColumnNumber" : 68,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    JsonObject jsonObject=json.getAsJsonObject();\n    Class<? extends GeneratedMessage> protoClass=(Class<? extends GeneratedMessage>)typeOfT;\n    try {\n      Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n      Class<?> builderClass=protoBuilder.getClass();\n      Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n      for (      FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n        String name=fieldDescriptor.getName();\n        if (jsonObject.has(name)) {\n          JsonElement jsonElement=jsonObject.get(name);\n          String fieldName=name + \"_\";\n          Field field=protoClass.getDeclaredField(fieldName);\n          Type fieldType=field.getGenericType();\n          Object fieldValue=context.deserialize(jsonElement,fieldType);\n          Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n          method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n        }\n      }\n      return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n    }\n catch (    SecurityException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    NoSuchMethodException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    IllegalAccessException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    InvocationTargetException e) {\n      throw new JsonParseException(e);\n    }\n  }\n catch (  Exception e) {\n    throw new JsonParseException(\"Error while parsing proto: \",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2144,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public GeneratedMessage deserialize(JsonElement json,Type typeOfT,JsonDeserializationContext context) throws JsonParseException {\n  try {\n    JsonObject jsonObject=json.getAsJsonObject();\n    Class<? extends GeneratedMessage> protoClass=(Class<? extends GeneratedMessage>)typeOfT;\n    try {\n      Object protoBuilder=getCachedMethod(protoClass,\"newBuilder\").invoke(null);\n      Class<?> builderClass=protoBuilder.getClass();\n      Descriptor protoDescriptor=(Descriptor)getCachedMethod(protoClass,\"getDescriptor\").invoke(null);\n      for (      FieldDescriptor fieldDescriptor : protoDescriptor.getFields()) {\n        String name=fieldDescriptor.getName();\n        if (jsonObject.has(name)) {\n          JsonElement jsonElement=jsonObject.get(name);\n          String fieldName=name + \"_\";\n          Field field=protoClass.getDeclaredField(fieldName);\n          Type fieldType=field.getGenericType();\n          Object fieldValue=context.deserialize(jsonElement,fieldType);\n          Method method=getCachedMethod(builderClass,\"setField\",FieldDescriptor.class,Object.class);\n          method.invoke(protoBuilder,fieldDescriptor,fieldValue);\n        }\n      }\n      return (GeneratedMessage)getCachedMethod(builderClass,\"build\").invoke(protoBuilder);\n    }\n catch (    SecurityException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    NoSuchMethodException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    IllegalAccessException e) {\n      throw new JsonParseException(e);\n    }\ncatch (    InvocationTargetException e) {\n      throw new JsonParseException(e);\n    }\n  }\n catch (  Exception e) {\n    throw new JsonParseException(\"Error while parsing proto: \",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String fieldName=name + \"_\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 92,
    "startColumnNumber" : 38,
    "endLineNumber" : 92,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}