{
  "id" : 309,
  "expression" : "ImmutableList",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/skyframe/serialization/ObjectCodec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ImmutableList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 56,
      "startColumnNumber" : 11,
      "endLineNumber" : 56,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 11,
        "endLineNumber" : 56,
        "endColumnNumber" : 29
      },
      "nodeContext" : "ImmutableList.of()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return ImmutableList.of();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 55,
        "startColumnNumber" : 62,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return ImmutableList.of();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns additional subtypes of  {@code T} that may be serialized/deserialized using this codecwithout loss of information. <p>This method is intended for when  {@code T} has multiple concrete implementations whosedetails are known to the codec but not to the codec dispatching mechanism. It signals that the dispatcher may choose to use this codec for the subtype, rather than raise  {@link SerializationException.NoCodecException}. <p>This method should not be used if the codec's serialization and deserialization methods perform their own dispatching to other codecs for subtypes of  {@code T}. <p> {@code T} itself should not be included in the returned list.\n */\ndefault List<Class<? extends T>> additionalEncodedClasses(){\n  return ImmutableList.of();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 18,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return ImmutableList.of();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 56,
    "startColumnNumber" : 11,
    "endLineNumber" : 56,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}