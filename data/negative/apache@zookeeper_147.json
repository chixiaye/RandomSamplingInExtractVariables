{
  "id" : 147,
  "expression" : "report",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/GenerateLoad.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "report",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 225,
      "startColumnNumber" : 43,
      "endLineNumber" : 225,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 225,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.err.println(report)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 225,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.err.println(report);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 200,
        "startColumnNumber" : 82,
        "endLineNumber" : 229,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (count < min) {\n    min=count;\n  }\n  if (count > max) {\n    max=count;\n  }\n  total+=count;\n  number++;\n  Calendar calendar=Calendar.getInstance();\n  calendar.setTimeInMillis(lastInterval * INTERVAL);\n  String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n  System.err.println(report);\n  if (sf != null) {\n    sf.println(report);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 200,
        "startColumnNumber" : 20,
        "endLineNumber" : 233,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n  if (count < min) {\n    min=count;\n  }\n  if (count > max) {\n    max=count;\n  }\n  total+=count;\n  number++;\n  Calendar calendar=Calendar.getInstance();\n  calendar.setTimeInMillis(lastInterval * INTERVAL);\n  String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n  System.err.println(report);\n  if (sf != null) {\n    sf.println(report);\n  }\n}\n else {\n  max=total=0;\n  min=999999999;\n  number=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1987,
        "startLineNumber" : 194,
        "startColumnNumber" : 29,
        "endLineNumber" : 235,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long now=System.currentTimeMillis();\n  long lastInterval=currentInterval;\n  currentInterval+=1;\n  long count=remove(lastInterval);\n  count=count * 1000 / INTERVAL;\n  if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n    if (count < min) {\n      min=count;\n    }\n    if (count > max) {\n      max=count;\n    }\n    total+=count;\n    number++;\n    Calendar calendar=Calendar.getInstance();\n    calendar.setTimeInMillis(lastInterval * INTERVAL);\n    String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n    System.err.println(report);\n    if (sf != null) {\n      sf.println(report);\n    }\n  }\n else {\n    max=total=0;\n    min=999999999;\n    number=0;\n  }\n  Thread.sleep(INTERVAL);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2000,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  long now=System.currentTimeMillis();\n  long lastInterval=currentInterval;\n  currentInterval+=1;\n  long count=remove(lastInterval);\n  count=count * 1000 / INTERVAL;\n  if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n    if (count < min) {\n      min=count;\n    }\n    if (count > max) {\n      max=count;\n    }\n    total+=count;\n    number++;\n    Calendar calendar=Calendar.getInstance();\n    calendar.setTimeInMillis(lastInterval * INTERVAL);\n    String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n    System.err.println(report);\n    if (sf != null) {\n      sf.println(report);\n    }\n  }\n else {\n    max=total=0;\n    min=999999999;\n    number=0;\n  }\n  Thread.sleep(INTERVAL);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2322,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 236,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  currentInterval=System.currentTimeMillis() / INTERVAL;\n  Thread.sleep(INTERVAL * 2);\n  long min=99999;\n  long max=0;\n  long total=0;\n  int number=0;\n  while (true) {\n    long now=System.currentTimeMillis();\n    long lastInterval=currentInterval;\n    currentInterval+=1;\n    long count=remove(lastInterval);\n    count=count * 1000 / INTERVAL;\n    if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n      if (count < min) {\n        min=count;\n      }\n      if (count > max) {\n        max=count;\n      }\n      total+=count;\n      number++;\n      Calendar calendar=Calendar.getInstance();\n      calendar.setTimeInMillis(lastInterval * INTERVAL);\n      String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n      System.err.println(report);\n      if (sf != null) {\n        sf.println(report);\n      }\n    }\n else {\n      max=total=0;\n      min=999999999;\n      number=0;\n    }\n    Thread.sleep(INTERVAL);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2399,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  currentInterval=System.currentTimeMillis() / INTERVAL;\n  Thread.sleep(INTERVAL * 2);\n  long min=99999;\n  long max=0;\n  long total=0;\n  int number=0;\n  while (true) {\n    long now=System.currentTimeMillis();\n    long lastInterval=currentInterval;\n    currentInterval+=1;\n    long count=remove(lastInterval);\n    count=count * 1000 / INTERVAL;\n    if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n      if (count < min) {\n        min=count;\n      }\n      if (count > max) {\n        max=count;\n      }\n      total+=count;\n      number++;\n      Calendar calendar=Calendar.getInstance();\n      calendar.setTimeInMillis(lastInterval * INTERVAL);\n      String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n      System.err.println(report);\n      if (sf != null) {\n        sf.println(report);\n      }\n    }\n else {\n      max=total=0;\n      min=999999999;\n      number=0;\n    }\n    Thread.sleep(INTERVAL);\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 219,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2424,
        "startLineNumber" : 185,
        "startColumnNumber" : 26,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    currentInterval=System.currentTimeMillis() / INTERVAL;\n    Thread.sleep(INTERVAL * 2);\n    long min=99999;\n    long max=0;\n    long total=0;\n    int number=0;\n    while (true) {\n      long now=System.currentTimeMillis();\n      long lastInterval=currentInterval;\n      currentInterval+=1;\n      long count=remove(lastInterval);\n      count=count * 1000 / INTERVAL;\n      if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n        if (count < min) {\n          min=count;\n        }\n        if (count > max) {\n          max=count;\n        }\n        total+=count;\n        number++;\n        Calendar calendar=Calendar.getInstance();\n        calendar.setTimeInMillis(lastInterval * INTERVAL);\n        String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n        System.err.println(report);\n        if (sf != null) {\n          sf.println(report);\n        }\n      }\n else {\n        max=total=0;\n        min=999999999;\n        number=0;\n      }\n      Thread.sleep(INTERVAL);\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void run(){\n  try {\n    currentInterval=System.currentTimeMillis() / INTERVAL;\n    Thread.sleep(INTERVAL * 2);\n    long min=99999;\n    long max=0;\n    long total=0;\n    int number=0;\n    while (true) {\n      long now=System.currentTimeMillis();\n      long lastInterval=currentInterval;\n      currentInterval+=1;\n      long count=remove(lastInterval);\n      count=count * 1000 / INTERVAL;\n      if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n        if (count < min) {\n          min=count;\n        }\n        if (count > max) {\n          max=count;\n        }\n        total+=count;\n        number++;\n        Calendar calendar=Calendar.getInstance();\n        calendar.setTimeInMillis(lastInterval * INTERVAL);\n        String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n        System.err.println(report);\n        if (sf != null) {\n          sf.println(report);\n        }\n      }\n else {\n        max=total=0;\n        min=999999999;\n        number=0;\n      }\n      Thread.sleep(INTERVAL);\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 225,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.err.println(report);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "report",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 227,
      "startColumnNumber" : 39,
      "endLineNumber" : 227,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 227,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 46
      },
      "nodeContext" : "sf.println(report)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 227,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sf.println(report);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 226,
        "startColumnNumber" : 40,
        "endLineNumber" : 228,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  sf.println(report);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 226,
        "startColumnNumber" : 24,
        "endLineNumber" : 228,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (sf != null) {\n  sf.println(report);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 200,
        "startColumnNumber" : 82,
        "endLineNumber" : 229,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (count < min) {\n    min=count;\n  }\n  if (count > max) {\n    max=count;\n  }\n  total+=count;\n  number++;\n  Calendar calendar=Calendar.getInstance();\n  calendar.setTimeInMillis(lastInterval * INTERVAL);\n  String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n  System.err.println(report);\n  if (sf != null) {\n    sf.println(report);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 200,
        "startColumnNumber" : 20,
        "endLineNumber" : 233,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n  if (count < min) {\n    min=count;\n  }\n  if (count > max) {\n    max=count;\n  }\n  total+=count;\n  number++;\n  Calendar calendar=Calendar.getInstance();\n  calendar.setTimeInMillis(lastInterval * INTERVAL);\n  String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n  System.err.println(report);\n  if (sf != null) {\n    sf.println(report);\n  }\n}\n else {\n  max=total=0;\n  min=999999999;\n  number=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1987,
        "startLineNumber" : 194,
        "startColumnNumber" : 29,
        "endLineNumber" : 235,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long now=System.currentTimeMillis();\n  long lastInterval=currentInterval;\n  currentInterval+=1;\n  long count=remove(lastInterval);\n  count=count * 1000 / INTERVAL;\n  if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n    if (count < min) {\n      min=count;\n    }\n    if (count > max) {\n      max=count;\n    }\n    total+=count;\n    number++;\n    Calendar calendar=Calendar.getInstance();\n    calendar.setTimeInMillis(lastInterval * INTERVAL);\n    String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n    System.err.println(report);\n    if (sf != null) {\n      sf.println(report);\n    }\n  }\n else {\n    max=total=0;\n    min=999999999;\n    number=0;\n  }\n  Thread.sleep(INTERVAL);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2000,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  long now=System.currentTimeMillis();\n  long lastInterval=currentInterval;\n  currentInterval+=1;\n  long count=remove(lastInterval);\n  count=count * 1000 / INTERVAL;\n  if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n    if (count < min) {\n      min=count;\n    }\n    if (count > max) {\n      max=count;\n    }\n    total+=count;\n    number++;\n    Calendar calendar=Calendar.getInstance();\n    calendar.setTimeInMillis(lastInterval * INTERVAL);\n    String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n    System.err.println(report);\n    if (sf != null) {\n      sf.println(report);\n    }\n  }\n else {\n    max=total=0;\n    min=999999999;\n    number=0;\n  }\n  Thread.sleep(INTERVAL);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2322,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 236,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  currentInterval=System.currentTimeMillis() / INTERVAL;\n  Thread.sleep(INTERVAL * 2);\n  long min=99999;\n  long max=0;\n  long total=0;\n  int number=0;\n  while (true) {\n    long now=System.currentTimeMillis();\n    long lastInterval=currentInterval;\n    currentInterval+=1;\n    long count=remove(lastInterval);\n    count=count * 1000 / INTERVAL;\n    if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n      if (count < min) {\n        min=count;\n      }\n      if (count > max) {\n        max=count;\n      }\n      total+=count;\n      number++;\n      Calendar calendar=Calendar.getInstance();\n      calendar.setTimeInMillis(lastInterval * INTERVAL);\n      String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n      System.err.println(report);\n      if (sf != null) {\n        sf.println(report);\n      }\n    }\n else {\n      max=total=0;\n      min=999999999;\n      number=0;\n    }\n    Thread.sleep(INTERVAL);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2399,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  currentInterval=System.currentTimeMillis() / INTERVAL;\n  Thread.sleep(INTERVAL * 2);\n  long min=99999;\n  long max=0;\n  long total=0;\n  int number=0;\n  while (true) {\n    long now=System.currentTimeMillis();\n    long lastInterval=currentInterval;\n    currentInterval+=1;\n    long count=remove(lastInterval);\n    count=count * 1000 / INTERVAL;\n    if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n      if (count < min) {\n        min=count;\n      }\n      if (count > max) {\n        max=count;\n      }\n      total+=count;\n      number++;\n      Calendar calendar=Calendar.getInstance();\n      calendar.setTimeInMillis(lastInterval * INTERVAL);\n      String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n      System.err.println(report);\n      if (sf != null) {\n        sf.println(report);\n      }\n    }\n else {\n      max=total=0;\n      min=999999999;\n      number=0;\n    }\n    Thread.sleep(INTERVAL);\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 219,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2424,
        "startLineNumber" : 185,
        "startColumnNumber" : 26,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    currentInterval=System.currentTimeMillis() / INTERVAL;\n    Thread.sleep(INTERVAL * 2);\n    long min=99999;\n    long max=0;\n    long total=0;\n    int number=0;\n    while (true) {\n      long now=System.currentTimeMillis();\n      long lastInterval=currentInterval;\n      currentInterval+=1;\n      long count=remove(lastInterval);\n      count=count * 1000 / INTERVAL;\n      if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n        if (count < min) {\n          min=count;\n        }\n        if (count > max) {\n          max=count;\n        }\n        total+=count;\n        number++;\n        Calendar calendar=Calendar.getInstance();\n        calendar.setTimeInMillis(lastInterval * INTERVAL);\n        String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n        System.err.println(report);\n        if (sf != null) {\n          sf.println(report);\n        }\n      }\n else {\n        max=total=0;\n        min=999999999;\n        number=0;\n      }\n      Thread.sleep(INTERVAL);\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2442,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void run(){\n  try {\n    currentInterval=System.currentTimeMillis() / INTERVAL;\n    Thread.sleep(INTERVAL * 2);\n    long min=99999;\n    long max=0;\n    long total=0;\n    int number=0;\n    while (true) {\n      long now=System.currentTimeMillis();\n      long lastInterval=currentInterval;\n      currentInterval+=1;\n      long count=remove(lastInterval);\n      count=count * 1000 / INTERVAL;\n      if (lastChange != 0 && (lastChange + INTERVAL * 4 + 5000) < now) {\n        if (count < min) {\n          min=count;\n        }\n        if (count > max) {\n          max=count;\n        }\n        total+=count;\n        number++;\n        Calendar calendar=Calendar.getInstance();\n        calendar.setTimeInMillis(lastInterval * INTERVAL);\n        String report=lastInterval + \" \" + calendar.get(Calendar.HOUR_OF_DAY)+ \":\"+ calendar.get(Calendar.MINUTE)+ \":\"+ calendar.get(Calendar.SECOND)+ \" \"+ percentage+ \"% \"+ count+ \" \"+ min+ \" \"+ ((double)total / (double)number)+ \" \"+ max;\n        System.err.println(report);\n        if (sf != null) {\n          sf.println(report);\n        }\n      }\n else {\n        max=total=0;\n        min=999999999;\n        number=0;\n      }\n      Thread.sleep(INTERVAL);\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 227,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sf.println(report);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 225,
    "startColumnNumber" : 43,
    "endLineNumber" : 225,
    "endColumnNumber" : 49
  }, {
    "charLength" : 6,
    "startLineNumber" : 227,
    "startColumnNumber" : 39,
    "endLineNumber" : 227,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}