{
  "id" : 472,
  "expression" : "i < TEST_SZ",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/balancedtree/RedBlackTreeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < TEST_SZ",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 239,
      "startColumnNumber" : 20,
      "endLineNumber" : 239,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < TEST_SZ; i++) {\n  int v=randValue();\n  assertEquals(set.add(v),tree.insert(v));\n  assertEquals(set.size(),tree.size());\n  assertTrue(tree.contains(v));\n  assertBinarySearchTreeInvariant(tree,tree.root);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 236,
        "startColumnNumber" : 60,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TreeSet<Integer> set=new TreeSet<>();\n  for (int i=0; i < TEST_SZ; i++) {\n    int v=randValue();\n    assertEquals(set.add(v),tree.insert(v));\n    assertEquals(set.size(),tree.size());\n    assertTrue(tree.contains(v));\n    assertBinarySearchTreeInvariant(tree,tree.root);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 235,
        "startColumnNumber" : 2,
        "endLineNumber" : 246,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRandomizedValueInsertionsAgainstTreeSet(){\n  TreeSet<Integer> set=new TreeSet<>();\n  for (int i=0; i < TEST_SZ; i++) {\n    int v=randValue();\n    assertEquals(set.add(v),tree.insert(v));\n    assertEquals(set.size(),tree.size());\n    assertTrue(tree.contains(v));\n    assertBinarySearchTreeInvariant(tree,tree.root);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < TEST_SZ; i++) {\n  int v=randValue();\n  assertEquals(set.add(v),tree.insert(v));\n  assertEquals(set.size(),tree.size());\n  assertTrue(tree.contains(v));\n  assertBinarySearchTreeInvariant(tree,tree.root);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 239,
    "startColumnNumber" : 20,
    "endLineNumber" : 239,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}