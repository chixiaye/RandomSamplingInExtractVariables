{
  "id" : 18,
  "expression" : "sonicSession != null",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicEngine.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sonicSession != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 201,
      "startColumnNumber" : 16,
      "endLineNumber" : 201,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 201,
        "startColumnNumber" : 12,
        "endLineNumber" : 216,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (sonicSession != null) {\n  if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n    if (runtime.shouldLog(Log.ERROR)) {\n      runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n    }\n    preloadSessionPool.remove(sessionId);\n    sonicSession.destroy();\n    return null;\n  }\n  if (pick) {\n    preloadSessionPool.remove(sessionId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 199,
        "startColumnNumber" : 61,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SonicSession sonicSession=preloadSessionPool.get(sessionId);\n  if (sonicSession != null) {\n    if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n      if (runtime.shouldLog(Log.ERROR)) {\n        runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n      }\n      preloadSessionPool.remove(sessionId);\n      sonicSession.destroy();\n      return null;\n    }\n    if (pick) {\n      preloadSessionPool.remove(sessionId);\n    }\n  }\n  return sonicSession;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!TextUtils.isEmpty(sessionId) && config != null) {\n  SonicSession sonicSession=preloadSessionPool.get(sessionId);\n  if (sonicSession != null) {\n    if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n      if (runtime.shouldLog(Log.ERROR)) {\n        runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n      }\n      preloadSessionPool.remove(sessionId);\n      sonicSession.destroy();\n      return null;\n    }\n    if (pick) {\n      preloadSessionPool.remove(sessionId);\n    }\n  }\n  return sonicSession;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 198,
        "startColumnNumber" : 98,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!TextUtils.isEmpty(sessionId) && config != null) {\n    SonicSession sonicSession=preloadSessionPool.get(sessionId);\n    if (sonicSession != null) {\n      if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n        if (runtime.shouldLog(Log.ERROR)) {\n          runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n        }\n        preloadSessionPool.remove(sessionId);\n        sonicSession.destroy();\n        return null;\n      }\n      if (pick) {\n        preloadSessionPool.remove(sessionId);\n      }\n    }\n    return sonicSession;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param sessionId possible sessionId\n * @param pick      When {@code pick} is true and there is SonicSession in {@link #preloadSessionPool}, it will remove from  {@link #preloadSessionPool}\n * @return Return valid SonicSession Object from  {@link #preloadSessionPool} if the specified sessionId is a key in {@link #preloadSessionPool}.\n */\nprivate SonicSession lookupSession(SonicSessionConfig config,String sessionId,boolean pick){\n  if (!TextUtils.isEmpty(sessionId) && config != null) {\n    SonicSession sonicSession=preloadSessionPool.get(sessionId);\n    if (sonicSession != null) {\n      if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n        if (runtime.shouldLog(Log.ERROR)) {\n          runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n        }\n        preloadSessionPool.remove(sessionId);\n        sonicSession.destroy();\n        return null;\n      }\n      if (pick) {\n        preloadSessionPool.remove(sessionId);\n      }\n    }\n    return sonicSession;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 201,
        "startColumnNumber" : 12,
        "endLineNumber" : 216,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (sonicSession != null) {\n  if (!config.equals(sonicSession.config) || sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME > 0 && System.currentTimeMillis() - sonicSession.createdTime > sonicSession.config.PRELOAD_SESSION_EXPIRED_TIME) {\n    if (runtime.shouldLog(Log.ERROR)) {\n      runtime.log(TAG,Log.ERROR,\"lookupSession error:sessionId(\" + sessionId + \") is expired.\");\n    }\n    preloadSessionPool.remove(sessionId);\n    sonicSession.destroy();\n    return null;\n  }\n  if (pick) {\n    preloadSessionPool.remove(sessionId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 10
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 201,
    "startColumnNumber" : 16,
    "endLineNumber" : 201,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}