{
  "id" : 99,
  "expression" : "matcher.group() != null",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/plugins/XposedGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matcher.group() != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 211,
      "startColumnNumber" : 24,
      "endLineNumber" : 211,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 211,
        "startColumnNumber" : 20,
        "endLineNumber" : 219,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matcher.group() != null) {\n  System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n  methodsNames.add(quote(line.trim()));\n}\n else {\n  methodsNames.add(\"No methods found\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 209,
        "startColumnNumber" : 38,
        "endLineNumber" : 221,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (matcher.group() != null) {\n    System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n    methodsNames.add(quote(line.trim()));\n  }\n else {\n    methodsNames.add(\"No methods found\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 209,
        "startColumnNumber" : 16,
        "endLineNumber" : 221,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (matcher.find()) {\n  if (matcher.group() != null) {\n    System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n    methodsNames.add(quote(line.trim()));\n  }\n else {\n    methodsNames.add(\"No methods found\");\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 204,
        "startColumnNumber" : 42,
        "endLineNumber" : 223,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String line=scanner.nextLine();\n  Matcher matcher=pattern.matcher(line);\n  while (matcher.find()) {\n    if (matcher.group() != null) {\n      System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n      methodsNames.add(quote(line.trim()));\n    }\n else {\n      methodsNames.add(\"No methods found\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 204,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (scanner.hasNextLine()) {\n  String line=scanner.nextLine();\n  Matcher matcher=pattern.matcher(line);\n  while (matcher.find()) {\n    if (matcher.group() != null) {\n      System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n      methodsNames.add(quote(line.trim()));\n    }\n else {\n      methodsNames.add(\"No methods found\");\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 195,
        "startColumnNumber" : 11,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  scanner=new Scanner(contentFile);\n  String regexclass=\"public\";\n  Pattern pattern=Pattern.compile(regexclass,Pattern.CASE_INSENSITIVE);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    Matcher matcher=pattern.matcher(line);\n    while (matcher.find()) {\n      if (matcher.group() != null) {\n        System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n        methodsNames.add(quote(line.trim()));\n      }\n else {\n        methodsNames.add(\"No methods found\");\n      }\n    }\n  }\n  if (methodsNames.isEmpty()) {\n    methodsNames.add(\"No methods found\");\n  }\n else {\n    return methodsNames;\n  }\n  return methodsNames;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 238,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  scanner=new Scanner(contentFile);\n  String regexclass=\"public\";\n  Pattern pattern=Pattern.compile(regexclass,Pattern.CASE_INSENSITIVE);\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    Matcher matcher=pattern.matcher(line);\n    while (matcher.find()) {\n      if (matcher.group() != null) {\n        System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n        methodsNames.add(quote(line.trim()));\n      }\n else {\n        methodsNames.add(\"No methods found\");\n      }\n    }\n  }\n  if (methodsNames.isEmpty()) {\n    methodsNames.add(\"No methods found\");\n  }\n else {\n    return methodsNames;\n  }\n  return methodsNames;\n}\n  finally {\n  if (scanner != null)   scanner.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 113,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1549,
        "startLineNumber" : 193,
        "startColumnNumber" : 81,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Scanner scanner=null;\n  try {\n    scanner=new Scanner(contentFile);\n    String regexclass=\"public\";\n    Pattern pattern=Pattern.compile(regexclass,Pattern.CASE_INSENSITIVE);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      Matcher matcher=pattern.matcher(line);\n      while (matcher.find()) {\n        if (matcher.group() != null) {\n          System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n          methodsNames.add(quote(line.trim()));\n        }\n else {\n          methodsNames.add(\"No methods found\");\n        }\n      }\n    }\n    if (methodsNames.isEmpty()) {\n      methodsNames.add(\"No methods found\");\n    }\n else {\n      return methodsNames;\n    }\n    return methodsNames;\n  }\n  finally {\n    if (scanner != null)     scanner.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1626,
        "startLineNumber" : 193,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static List<String> ProcessContentExtractedClass(String contentFile){\n  Scanner scanner=null;\n  try {\n    scanner=new Scanner(contentFile);\n    String regexclass=\"public\";\n    Pattern pattern=Pattern.compile(regexclass,Pattern.CASE_INSENSITIVE);\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      Matcher matcher=pattern.matcher(line);\n      while (matcher.find()) {\n        if (matcher.group() != null) {\n          System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n          methodsNames.add(quote(line.trim()));\n        }\n else {\n          methodsNames.add(\"No methods found\");\n        }\n      }\n    }\n    if (methodsNames.isEmpty()) {\n      methodsNames.add(\"No methods found\");\n    }\n else {\n      return methodsNames;\n    }\n    return methodsNames;\n  }\n  finally {\n    if (scanner != null)     scanner.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 211,
        "startColumnNumber" : 20,
        "endLineNumber" : 219,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matcher.group() != null) {\n  System.out.println(\"find() found the pattern \\\"\" + quote(line.trim()));\n  methodsNames.add(quote(line.trim()));\n}\n else {\n  methodsNames.add(\"No methods found\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 211,
    "startColumnNumber" : 24,
    "endLineNumber" : 211,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}