{
  "id" : 42,
  "expression" : "segmentCapacity * segmentCount < initialCapacity",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/cache/LocalCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "segmentCapacity * segmentCount < initialCapacity",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 291,
      "startColumnNumber" : 8,
      "endLineNumber" : 291,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 291,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (segmentCapacity * segmentCount < initialCapacity) {\n  ++segmentCapacity;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3010,
        "startLineNumber" : 243,
        "startColumnNumber" : 94,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  concurrencyLevel=Math.min(builder.getConcurrencyLevel(),MAX_SEGMENTS);\n  keyStrength=builder.getKeyStrength();\n  valueStrength=builder.getValueStrength();\n  keyEquivalence=builder.getKeyEquivalence();\n  valueEquivalence=builder.getValueEquivalence();\n  maxWeight=builder.getMaximumWeight();\n  weigher=builder.getWeigher();\n  expireAfterAccessNanos=builder.getExpireAfterAccessNanos();\n  expireAfterWriteNanos=builder.getExpireAfterWriteNanos();\n  refreshNanos=builder.getRefreshNanos();\n  removalListener=builder.getRemovalListener();\n  removalNotificationQueue=(removalListener == NullListener.INSTANCE) ? LocalCache.<RemovalNotification<K,V>>discardingQueue() : new ConcurrentLinkedQueue<RemovalNotification<K,V>>();\n  ticker=builder.getTicker(recordsTime());\n  entryFactory=EntryFactory.getFactory(keyStrength,usesAccessEntries(),usesWriteEntries());\n  globalStatsCounter=builder.getStatsCounterSupplier().get();\n  defaultLoader=loader;\n  int initialCapacity=Math.min(builder.getInitialCapacity(),MAXIMUM_CAPACITY);\n  if (evictsBySize() && !customWeigher()) {\n    initialCapacity=(int)Math.min(initialCapacity,maxWeight);\n  }\n  int segmentShift=0;\n  int segmentCount=1;\n  while (segmentCount < concurrencyLevel && (!evictsBySize() || segmentCount * 20 <= maxWeight)) {\n    ++segmentShift;\n    segmentCount<<=1;\n  }\n  this.segmentShift=32 - segmentShift;\n  segmentMask=segmentCount - 1;\n  this.segments=newSegmentArray(segmentCount);\n  int segmentCapacity=initialCapacity / segmentCount;\n  if (segmentCapacity * segmentCount < initialCapacity) {\n    ++segmentCapacity;\n  }\n  int segmentSize=1;\n  while (segmentSize < segmentCapacity) {\n    segmentSize<<=1;\n  }\n  if (evictsBySize()) {\n    long maxSegmentWeight=maxWeight / segmentCount + 1;\n    long remainder=maxWeight % segmentCount;\n    for (int i=0; i < this.segments.length; ++i) {\n      if (i == remainder) {\n        maxSegmentWeight--;\n      }\n      this.segments[i]=createSegment(segmentSize,maxSegmentWeight,builder.getStatsCounterSupplier().get());\n    }\n  }\n else {\n    for (int i=0; i < this.segments.length; ++i) {\n      this.segments[i]=createSegment(segmentSize,UNSET_INT,builder.getStatsCounterSupplier().get());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 341,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3231,
        "startLineNumber" : 239,
        "startColumnNumber" : 2,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a new, empty map with the specified strategy, initial capacity and concurrency level.\n */\nLocalCache(CacheBuilder<? super K,? super V> builder,@Nullable CacheLoader<? super K,V> loader){\n  concurrencyLevel=Math.min(builder.getConcurrencyLevel(),MAX_SEGMENTS);\n  keyStrength=builder.getKeyStrength();\n  valueStrength=builder.getValueStrength();\n  keyEquivalence=builder.getKeyEquivalence();\n  valueEquivalence=builder.getValueEquivalence();\n  maxWeight=builder.getMaximumWeight();\n  weigher=builder.getWeigher();\n  expireAfterAccessNanos=builder.getExpireAfterAccessNanos();\n  expireAfterWriteNanos=builder.getExpireAfterWriteNanos();\n  refreshNanos=builder.getRefreshNanos();\n  removalListener=builder.getRemovalListener();\n  removalNotificationQueue=(removalListener == NullListener.INSTANCE) ? LocalCache.<RemovalNotification<K,V>>discardingQueue() : new ConcurrentLinkedQueue<RemovalNotification<K,V>>();\n  ticker=builder.getTicker(recordsTime());\n  entryFactory=EntryFactory.getFactory(keyStrength,usesAccessEntries(),usesWriteEntries());\n  globalStatsCounter=builder.getStatsCounterSupplier().get();\n  defaultLoader=loader;\n  int initialCapacity=Math.min(builder.getInitialCapacity(),MAXIMUM_CAPACITY);\n  if (evictsBySize() && !customWeigher()) {\n    initialCapacity=(int)Math.min(initialCapacity,maxWeight);\n  }\n  int segmentShift=0;\n  int segmentCount=1;\n  while (segmentCount < concurrencyLevel && (!evictsBySize() || segmentCount * 20 <= maxWeight)) {\n    ++segmentShift;\n    segmentCount<<=1;\n  }\n  this.segmentShift=32 - segmentShift;\n  segmentMask=segmentCount - 1;\n  this.segments=newSegmentArray(segmentCount);\n  int segmentCapacity=initialCapacity / segmentCount;\n  if (segmentCapacity * segmentCount < initialCapacity) {\n    ++segmentCapacity;\n  }\n  int segmentSize=1;\n  while (segmentSize < segmentCapacity) {\n    segmentSize<<=1;\n  }\n  if (evictsBySize()) {\n    long maxSegmentWeight=maxWeight / segmentCount + 1;\n    long remainder=maxWeight % segmentCount;\n    for (int i=0; i < this.segments.length; ++i) {\n      if (i == remainder) {\n        maxSegmentWeight--;\n      }\n      this.segments[i]=createSegment(segmentSize,maxSegmentWeight,builder.getStatsCounterSupplier().get());\n    }\n  }\n else {\n    for (int i=0; i < this.segments.length; ++i) {\n      this.segments[i]=createSegment(segmentSize,UNSET_INT,builder.getStatsCounterSupplier().get());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 291,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (segmentCapacity * segmentCount < initialCapacity) {\n  ++segmentCapacity;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 291,
    "startColumnNumber" : 8,
    "endLineNumber" : 291,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}