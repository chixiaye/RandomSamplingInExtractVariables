{
  "id" : 125,
  "expression" : "timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/test/java/com/google/android/exoplayer2/mediacodec/C2Mp3TimestampTrackerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 86,
      "startColumnNumber" : 28,
      "endLineNumber" : 86,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 99
      },
      "nodeContext" : "presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 100
      },
      "nodeContext" : "presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 82,
        "startColumnNumber" : 60,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Long> presentationTimesUs=new ArrayList<>();\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,buffer));\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,buffer));\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer));\n  presentationTimesUs.add(timestampTracker.getLastOutputBufferPresentationTimeUs(FORMAT));\n  assertThat(presentationTimesUs).containsExactly(100_000L,114_126L,120_000L,120_000L);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void handleInvalidBuffer_stopsUpdatingTimestamps(){\n  List<Long> presentationTimesUs=new ArrayList<>();\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,buffer));\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,buffer));\n  presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer));\n  presentationTimesUs.add(timestampTracker.getLastOutputBufferPresentationTimeUs(FORMAT));\n  assertThat(presentationTimesUs).containsExactly(100_000L,114_126L,120_000L,120_000L);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 100
      },
      "nodeContext" : "presentationTimesUs.add(timestampTracker.updateAndGetPresentationTimeUs(FORMAT,invalidBuffer));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 86,
    "startColumnNumber" : 28,
    "endLineNumber" : 86,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}