{
  "id" : 304,
  "expression" : "Throwable.class",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/error/BasicObservableErrorPropagationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Throwable.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 125,
      "startColumnNumber" : 39,
      "endLineNumber" : 125,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 55
      },
      "nodeContext" : "testSubscriber.assertError(Throwable.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 56
      },
      "nodeContext" : "testSubscriber.assertError(Throwable.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TestSubscriber<Void> testSubscriber=new TestSubscriber<Void>();\n  userService.blockUser(\"1\").subscribe(testSubscriber);\n  testSubscriber.assertError(Throwable.class);\n  assertTrue(testSubscriber.getOnErrorEvents().size() == 1);\n  assertTrue(testSubscriber.getOnErrorEvents().get(0).getCause() instanceof OperationException);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  TestSubscriber<Void> testSubscriber=new TestSubscriber<Void>();\n  userService.blockUser(\"1\").subscribe(testSubscriber);\n  testSubscriber.assertError(Throwable.class);\n  assertTrue(testSubscriber.getOnErrorEvents().size() == 1);\n  assertTrue(testSubscriber.getOnErrorEvents().get(0).getCause() instanceof OperationException);\n}\n  finally {\n  assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  com.netflix.hystrix.HystrixInvokableInfo activateUserCommand=getHystrixCommandByKey(\"blockUser\");\n  assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n  assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_FAILURE));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 119,
        "startColumnNumber" : 98,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    TestSubscriber<Void> testSubscriber=new TestSubscriber<Void>();\n    userService.blockUser(\"1\").subscribe(testSubscriber);\n    testSubscriber.assertError(Throwable.class);\n    assertTrue(testSubscriber.getOnErrorEvents().size() == 1);\n    assertTrue(testSubscriber.getOnErrorEvents().get(0).getCause() instanceof OperationException);\n  }\n  finally {\n    assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n    com.netflix.hystrix.HystrixInvokableInfo activateUserCommand=getHystrixCommandByKey(\"blockUser\");\n    assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n    assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_FAILURE));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBlockUser() throws NotFoundException, ActivationException, OperationException {\n  try {\n    TestSubscriber<Void> testSubscriber=new TestSubscriber<Void>();\n    userService.blockUser(\"1\").subscribe(testSubscriber);\n    testSubscriber.assertError(Throwable.class);\n    assertTrue(testSubscriber.getOnErrorEvents().size() == 1);\n    assertTrue(testSubscriber.getOnErrorEvents().get(0).getCause() instanceof OperationException);\n  }\n  finally {\n    assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n    com.netflix.hystrix.HystrixInvokableInfo activateUserCommand=getHystrixCommandByKey(\"blockUser\");\n    assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FAILURE));\n    assertTrue(activateUserCommand.getExecutionEvents().contains(HystrixEventType.FALLBACK_FAILURE));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 56
      },
      "nodeContext" : "testSubscriber.assertError(Throwable.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Throwable>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 125,
    "startColumnNumber" : 39,
    "endLineNumber" : 125,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}