{
  "id" : 334,
  "expression" : "0",
  "projectName" : "Tencent@tinker",
  "commitID" : "0cde919b9d4b143363fcd5c9d612d982ee15d266",
  "filePath" : "tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/NewClassLoaderInjector.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 89,
      "endLineNumber" : 87,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 87,
        "startColumnNumber" : 66,
        "endLineNumber" : 87,
        "endColumnNumber" : 90
      },
      "nodeContext" : "patchDexPaths.length > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 87,
        "startColumnNumber" : 41,
        "endLineNumber" : 87,
        "endColumnNumber" : 90
      },
      "nodeContext" : "patchDexPaths != null && patchDexPaths.length > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 87,
        "startColumnNumber" : 22,
        "endLineNumber" : 87,
        "endColumnNumber" : 90
      },
      "nodeContext" : "hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2765,
        "startLineNumber" : 80,
        "startColumnNumber" : 94,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3121,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private static ClassLoader createNewClassLoader(ClassLoader oldClassLoader,File dexOptDir,boolean useDLCOnAPI29AndAbove,String... patchDexPaths) throws Throwable {\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 89,
      "startColumnNumber" : 25,
      "endLineNumber" : 89,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 89,
        "startColumnNumber" : 21,
        "endLineNumber" : 89,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 89,
        "startColumnNumber" : 17,
        "endLineNumber" : 89,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < patchDexPaths.length; ++i) {\n  if (i > 0) {\n    dexPathBuilder.append(File.pathSeparator);\n  }\n  dexPathBuilder.append(patchDexPaths[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < patchDexPaths.length; ++i) {\n    if (i > 0) {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(patchDexPaths[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hasPatchDexPaths) {\n  for (int i=0; i < patchDexPaths.length; ++i) {\n    if (i > 0) {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(patchDexPaths[i]);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2765,
        "startLineNumber" : 80,
        "startColumnNumber" : 94,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3121,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private static ClassLoader createNewClassLoader(ClassLoader oldClassLoader,File dexOptDir,boolean useDLCOnAPI29AndAbove,String... patchDexPaths) throws Throwable {\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 89,
        "startColumnNumber" : 17,
        "endLineNumber" : 89,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 90,
      "startColumnNumber" : 24,
      "endLineNumber" : 90,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 0) {\n  dexPathBuilder.append(File.pathSeparator);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 89,
        "startColumnNumber" : 59,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 0) {\n    dexPathBuilder.append(File.pathSeparator);\n  }\n  dexPathBuilder.append(patchDexPaths[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < patchDexPaths.length; ++i) {\n  if (i > 0) {\n    dexPathBuilder.append(File.pathSeparator);\n  }\n  dexPathBuilder.append(patchDexPaths[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < patchDexPaths.length; ++i) {\n    if (i > 0) {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(patchDexPaths[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hasPatchDexPaths) {\n  for (int i=0; i < patchDexPaths.length; ++i) {\n    if (i > 0) {\n      dexPathBuilder.append(File.pathSeparator);\n    }\n    dexPathBuilder.append(patchDexPaths[i]);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2765,
        "startLineNumber" : 80,
        "startColumnNumber" : 94,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3121,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private static ClassLoader createNewClassLoader(ClassLoader oldClassLoader,File dexOptDir,boolean useDLCOnAPI29AndAbove,String... patchDexPaths) throws Throwable {\n  final Field pathListField=findField(Class.forName(\"dalvik.system.BaseDexClassLoader\",false,oldClassLoader),\"pathList\");\n  final Object oldPathList=pathListField.get(oldClassLoader);\n  final StringBuilder dexPathBuilder=new StringBuilder();\n  final boolean hasPatchDexPaths=patchDexPaths != null && patchDexPaths.length > 0;\n  if (hasPatchDexPaths) {\n    for (int i=0; i < patchDexPaths.length; ++i) {\n      if (i > 0) {\n        dexPathBuilder.append(File.pathSeparator);\n      }\n      dexPathBuilder.append(patchDexPaths[i]);\n    }\n  }\n  final String combinedDexPath=dexPathBuilder.toString();\n  final Field nativeLibraryDirectoriesField=findField(oldPathList.getClass(),\"nativeLibraryDirectories\");\n  List<File> oldNativeLibraryDirectories=null;\n  if (nativeLibraryDirectoriesField.getType().isArray()) {\n    oldNativeLibraryDirectories=Arrays.asList((File[])nativeLibraryDirectoriesField.get(oldPathList));\n  }\n else {\n    oldNativeLibraryDirectories=(List<File>)nativeLibraryDirectoriesField.get(oldPathList);\n  }\n  final StringBuilder libraryPathBuilder=new StringBuilder();\n  boolean isFirstItem=true;\n  for (  File libDir : oldNativeLibraryDirectories) {\n    if (libDir == null) {\n      continue;\n    }\n    if (isFirstItem) {\n      isFirstItem=false;\n    }\n else {\n      libraryPathBuilder.append(File.pathSeparator);\n    }\n    libraryPathBuilder.append(libDir.getAbsolutePath());\n  }\n  final String combinedLibraryPath=libraryPathBuilder.toString();\n  ClassLoader result=null;\n  if (useDLCOnAPI29AndAbove && Build.VERSION.SDK_INT >= 29) {\n    final ClassLoader removedItemFixCL=new RemovedItemFixClassLoader(oldClassLoader);\n    result=new DelegateLastClassLoader(combinedDexPath,combinedLibraryPath,ClassLoader.getSystemClassLoader());\n    final Field parentField=ClassLoader.class.getDeclaredField(\"parent\");\n    parentField.setAccessible(true);\n    parentField.set(result,removedItemFixCL);\n  }\n else {\n    result=new TinkerClassLoader(combinedDexPath,dexOptDir,combinedLibraryPath,oldClassLoader);\n  }\n  if (Build.VERSION.SDK_INT < 26) {\n    findField(oldPathList.getClass(),\"definingContext\").set(oldPathList,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 89,
    "endLineNumber" : 87,
    "endColumnNumber" : 90
  }, {
    "charLength" : 1,
    "startLineNumber" : 89,
    "startColumnNumber" : 25,
    "endLineNumber" : 89,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 90,
    "startColumnNumber" : 24,
    "endLineNumber" : 90,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}