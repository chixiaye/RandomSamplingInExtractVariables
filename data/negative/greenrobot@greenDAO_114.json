{
  "id" : 114,
  "expression" : "100000",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/DaoBase/src/de/greenrobot/dao/test/AbstractDaoTestSinglePk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "100000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 184,
      "startColumnNumber" : 28,
      "endLineNumber" : 184,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 184,
        "startColumnNumber" : 24,
        "endLineNumber" : 184,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < 100000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100000; i++) {\n  K pk=createRandomPk();\n  if (usedPks.add(pk)) {\n    return pk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 183,
        "startColumnNumber" : 25,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < 100000; i++) {\n    K pk=createRandomPk();\n    if (usedPks.add(pk)) {\n      return pk;\n    }\n  }\n  throw new IllegalStateException(\"Could not find a new PK\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected K nextPk(){\n  for (int i=0; i < 100000; i++) {\n    K pk=createRandomPk();\n    if (usedPks.add(pk)) {\n      return pk;\n    }\n  }\n  throw new IllegalStateException(\"Could not find a new PK\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 184,
        "startColumnNumber" : 24,
        "endLineNumber" : 184,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < 100000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 184,
    "startColumnNumber" : 28,
    "endLineNumber" : 184,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}