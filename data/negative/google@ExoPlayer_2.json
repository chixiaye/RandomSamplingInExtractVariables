{
  "id" : 2,
  "expression" : "inputBuffer",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/flac/src/main/java/com/google/android/exoplayer2/ext/flac/FlacDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inputBuffer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 105,
      "startColumnNumber" : 40,
      "endLineNumber" : 105,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 105,
        "startColumnNumber" : 40,
        "endLineNumber" : 105,
        "endColumnNumber" : 56
      },
      "nodeContext" : "inputBuffer.data",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 105,
        "startColumnNumber" : 23,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Util.castNonNull(inputBuffer.data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 58
      },
      "nodeContext" : "decoderJni.setData(Util.castNonNull(inputBuffer.data))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 59
      },
      "nodeContext" : "decoderJni.setData(Util.castNonNull(inputBuffer.data));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 101,
        "startColumnNumber" : 93,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (reset) {\n    decoderJni.flush();\n  }\n  decoderJni.setData(Util.castNonNull(inputBuffer.data));\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize());\n  try {\n    decoderJni.decodeSample(outputData);\n  }\n catch (  FlacDecoderJni.FlacFrameDecodeException e) {\n    return new FlacDecoderException(\"Frame decoding failed\",e);\n  }\ncatch (  IOException e) {\n    throw new IllegalStateException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable protected FlacDecoderException decode(DecoderInputBuffer inputBuffer,SimpleDecoderOutputBuffer outputBuffer,boolean reset){\n  if (reset) {\n    decoderJni.flush();\n  }\n  decoderJni.setData(Util.castNonNull(inputBuffer.data));\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize());\n  try {\n    decoderJni.decodeSample(outputData);\n  }\n catch (  FlacDecoderJni.FlacFrameDecodeException e) {\n    return new FlacDecoderException(\"Frame decoding failed\",e);\n  }\ncatch (  IOException e) {\n    throw new IllegalStateException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 59
      },
      "nodeContext" : "decoderJni.setData(Util.castNonNull(inputBuffer.data));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.decoder.DecoderInputBuffer"
  }, {
    "nodeContext" : "inputBuffer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 107,
      "startColumnNumber" : 26,
      "endLineNumber" : 107,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 107,
        "startColumnNumber" : 26,
        "endLineNumber" : 107,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inputBuffer.timeUs",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 86
      },
      "nodeContext" : "outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 106,
        "startColumnNumber" : 15,
        "endLineNumber" : 107,
        "endColumnNumber" : 86
      },
      "nodeContext" : "outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 101,
        "startColumnNumber" : 93,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (reset) {\n    decoderJni.flush();\n  }\n  decoderJni.setData(Util.castNonNull(inputBuffer.data));\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize());\n  try {\n    decoderJni.decodeSample(outputData);\n  }\n catch (  FlacDecoderJni.FlacFrameDecodeException e) {\n    return new FlacDecoderException(\"Frame decoding failed\",e);\n  }\ncatch (  IOException e) {\n    throw new IllegalStateException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable protected FlacDecoderException decode(DecoderInputBuffer inputBuffer,SimpleDecoderOutputBuffer outputBuffer,boolean reset){\n  if (reset) {\n    decoderJni.flush();\n  }\n  decoderJni.setData(Util.castNonNull(inputBuffer.data));\n  ByteBuffer outputData=outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize());\n  try {\n    decoderJni.decodeSample(outputData);\n  }\n catch (  FlacDecoderJni.FlacFrameDecodeException e) {\n    return new FlacDecoderException(\"Frame decoding failed\",e);\n  }\ncatch (  IOException e) {\n    throw new IllegalStateException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 86
      },
      "nodeContext" : "outputBuffer.init(inputBuffer.timeUs,streamMetadata.getMaxDecodedFrameSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.decoder.DecoderInputBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 105,
    "startColumnNumber" : 40,
    "endLineNumber" : 105,
    "endColumnNumber" : 51
  }, {
    "charLength" : 11,
    "startLineNumber" : 107,
    "startColumnNumber" : 26,
    "endLineNumber" : 107,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}