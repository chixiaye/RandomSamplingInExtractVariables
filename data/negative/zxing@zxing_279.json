{
  "id" : 279,
  "expression" : "null",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/client/result/VEventResultParser.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 36,
      "startColumnNumber" : 13,
      "endLineNumber" : 36,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 35,
        "startColumnNumber" : 25,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (vEventStart < 0) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 41,
      "startColumnNumber" : 17,
      "endLineNumber" : 41,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 21
      },
      "nodeContext" : "start == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (start == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 21
      },
      "nodeContext" : "start == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 13,
      "endLineNumber" : 42,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 41,
        "startColumnNumber" : 23,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (start == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 21,
      "endLineNumber" : 51,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 25
      },
      "nodeContext" : "geoString == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (geoString == null) {\n  latitude=Double.NaN;\n  longitude=Double.NaN;\n}\n else {\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 25
      },
      "nodeContext" : "geoString == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 60,
      "startColumnNumber" : 15,
      "endLineNumber" : 60,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 59,
        "startColumnNumber" : 42,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (NumberFormatException nfe) {\n  return null;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  latitude=Double.parseDouble(geoString.substring(0,semicolon));\n  longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n}\n catch (NumberFormatException nfe) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 54,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (geoString == null) {\n  latitude=Double.NaN;\n  longitude=Double.NaN;\n}\n else {\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 65,
      "startColumnNumber" : 69,
      "endLineNumber" : 65,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 65,
        "startColumnNumber" : 13,
        "endLineNumber" : 65,
        "endColumnNumber" : 108
      },
      "nodeContext" : "new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 109
      },
      "nodeContext" : "return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n}\n catch (IllegalArgumentException iae) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 109
      },
      "nodeContext" : "return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 67,
      "startColumnNumber" : 13,
      "endLineNumber" : 67,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 66,
        "startColumnNumber" : 43,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IllegalArgumentException iae) {\n  return null;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n}\n catch (IllegalArgumentException iae) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 36,
    "startColumnNumber" : 13,
    "endLineNumber" : 36,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 41,
    "startColumnNumber" : 17,
    "endLineNumber" : 41,
    "endColumnNumber" : 21
  }, {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 13,
    "endLineNumber" : 42,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 21,
    "endLineNumber" : 51,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 60,
    "startColumnNumber" : 15,
    "endLineNumber" : 60,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 65,
    "startColumnNumber" : 69,
    "endLineNumber" : 65,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 67,
    "startColumnNumber" : 13,
    "endLineNumber" : 67,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}