{
  "id" : 289,
  "expression" : "dy",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/production/Drill.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 125,
      "startColumnNumber" : 56,
      "endLineNumber" : 125,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 125,
        "startColumnNumber" : 56,
        "endLineNumber" : 125,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dy - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 121,
        "startColumnNumber" : 30,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n  float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n  Draw.mixcol(Color.darkGray,1f);\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n  Draw.reset();\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n  if (drawMineItem) {\n    Draw.color(returnItem.color);\n    Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n    Draw.color();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1049,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnItem != null) {\n  float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n  float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n  Draw.mixcol(Color.darkGray,1f);\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n  Draw.reset();\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n  if (drawMineItem) {\n    Draw.color(returnItem.color);\n    Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n    Draw.color();\n  }\n}\n else {\n  Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n  Item item=to == null ? null : to.drop();\n  if (item != null) {\n    drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 115,
        "startColumnNumber" : 68,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Tile tile=world.tile(x,y);\n  if (tile == null)   return;\n  countOre(tile);\n  if (returnItem != null) {\n    float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n    float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n    Draw.mixcol(Color.darkGray,1f);\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n    Draw.reset();\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n    if (drawMineItem) {\n      Draw.color(returnItem.color);\n      Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n      Draw.color();\n    }\n  }\n else {\n    Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n    Item item=to == null ? null : to.drop();\n    if (item != null) {\n      drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawPlace(int x,int y,int rotation,boolean valid){\n  Tile tile=world.tile(x,y);\n  if (tile == null)   return;\n  countOre(tile);\n  if (returnItem != null) {\n    float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n    float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n    Draw.mixcol(Color.darkGray,1f);\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n    Draw.reset();\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n    if (drawMineItem) {\n      Draw.color(returnItem.color);\n      Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n      Draw.color();\n    }\n  }\n else {\n    Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n    Item item=to == null ? null : to.drop();\n    if (item != null) {\n      drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "dy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 127,
      "startColumnNumber" : 56,
      "endLineNumber" : 127,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 121,
        "startColumnNumber" : 30,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n  float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n  Draw.mixcol(Color.darkGray,1f);\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n  Draw.reset();\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n  if (drawMineItem) {\n    Draw.color(returnItem.color);\n    Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n    Draw.color();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1049,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnItem != null) {\n  float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n  float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n  Draw.mixcol(Color.darkGray,1f);\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n  Draw.reset();\n  Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n  if (drawMineItem) {\n    Draw.color(returnItem.color);\n    Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n    Draw.color();\n  }\n}\n else {\n  Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n  Item item=to == null ? null : to.drop();\n  if (item != null) {\n    drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 115,
        "startColumnNumber" : 68,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Tile tile=world.tile(x,y);\n  if (tile == null)   return;\n  countOre(tile);\n  if (returnItem != null) {\n    float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n    float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n    Draw.mixcol(Color.darkGray,1f);\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n    Draw.reset();\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n    if (drawMineItem) {\n      Draw.color(returnItem.color);\n      Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n      Draw.color();\n    }\n  }\n else {\n    Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n    Item item=to == null ? null : to.drop();\n    if (item != null) {\n      drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawPlace(int x,int y,int rotation,boolean valid){\n  Tile tile=world.tile(x,y);\n  if (tile == null)   return;\n  countOre(tile);\n  if (returnItem != null) {\n    float width=drawPlaceText(Core.bundle.formatFloat(\"bar.drillspeed\",60f / (drillTime + hardnessDrillMultiplier * returnItem.hardness) * returnCount,2),x,y,valid);\n    float dx=x * tilesize + offset - width / 2f - 4f, dy=y * tilesize + offset + size * tilesize / 2f + 5;\n    Draw.mixcol(Color.darkGray,1f);\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy - 1);\n    Draw.reset();\n    Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n    if (drawMineItem) {\n      Draw.color(returnItem.color);\n      Draw.rect(itemRegion,tile.worldx() + offset,tile.worldy() + offset);\n      Draw.color();\n    }\n  }\n else {\n    Tile to=tile.getLinkedTilesAs(this,tempTiles).find(t -> t.drop() != null && t.drop().hardness > tier);\n    Item item=to == null ? null : to.drop();\n    if (item != null) {\n      drawPlaceText(Core.bundle.get(\"bar.drilltierreq\"),x,y,valid);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 127,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Draw.rect(returnItem.icon(Cicon.small),dx,dy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 125,
    "startColumnNumber" : 56,
    "endLineNumber" : 125,
    "endColumnNumber" : 58
  }, {
    "charLength" : 2,
    "startLineNumber" : 127,
    "startColumnNumber" : 56,
    "endLineNumber" : 127,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}