{
  "id" : 289,
  "expression" : "new TurnEvent()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "86c2fe880585bab8824356d7ed2e11a41df2b5e0",
  "filePath" : "core/src/mindustry/game/Universe.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TurnEvent()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 195,
      "startColumnNumber" : 20,
      "endLineNumber" : 195,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Events.fire(new TurnEvent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Events.fire(new TurnEvent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 357,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3303,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Runs possible events. Resets event counter. \n */\npublic void runTurn(){\n  turn++;\n  int newSecondsPassed=(int)(turnDuration / 60);\n  for (  Planet planet : content.planets()) {\n    for (    Sector sector : planet.sectors) {\n      if (sector.hasSave()) {\n        int spent=(int)(sector.getTimeSpent() / 60);\n        int actuallyPassed=Math.max(newSecondsPassed - spent,0);\n        if (!sector.isBeingPlayed()) {\n          int secPassed=sector.getSecondsPassed() + actuallyPassed;\n          sector.setSecondsPassed(secPassed);\n          boolean attacked=sector.isUnderAttack();\n          int wavesPassed=(int)(secPassed * 60f / sector.save.meta.rules.waveSpacing);\n          float damage=attacked ? SectorDamage.getDamage(sector.save.meta.secinfo,sector.save.meta.rules.waveSpacing,sector.save.meta.wave,wavesPassed) : 0f;\n          if (attacked) {\n            sector.setWavesPassed(wavesPassed);\n          }\n          sector.setDamage(damage);\n          if (attacked && damage >= 0.999f) {\n            Events.fire(new SectorLoseEvent(sector));\n            sector.save.delete();\n            sector.setExtraItems(new ItemSeq());\n            sector.save=null;\n            sector.setDamage(0f);\n          }\n else           if (attacked && wavesPassed > 0 && sector.save.meta.wave + wavesPassed >= sector.save.meta.rules.winWave && !sector.hasEnemyBase()) {\n            sector.setUnderAttack(false);\n            Events.fire(new SectorCaptureEvent(state.rules.sector));\n          }\n        }\n        if (sector.save != null && sector.save.meta != null && sector.save.meta.secinfo != null && sector.save.meta.secinfo.destination != null) {\n          Sector to=sector.save.meta.secinfo.destination;\n          if (to.save != null) {\n            ItemSeq items=new ItemSeq();\n            sector.save.meta.secinfo.export.each((item,stat) -> items.add(item,(int)(stat.mean * newSecondsPassed)));\n            to.addItems(items);\n          }\n        }\n        sector.setTimeSpent(0f);\n      }\n    }\n  }\n  Events.fire(new TurnEvent());\n  save();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Events.fire(new TurnEvent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.game.EventType.TurnEvent"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 195,
    "startColumnNumber" : 20,
    "endLineNumber" : 195,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}