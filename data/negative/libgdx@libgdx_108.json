{
  "id" : 108,
  "expression" : "'['",
  "projectName" : "libgdx@libgdx",
  "commitID" : "f30ba6ef64beea41145d9dbf991329d081b3e536",
  "filePath" : "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'['",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 856,
      "startColumnNumber" : 31,
      "endLineNumber" : 856,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 856,
        "startColumnNumber" : 25,
        "endLineNumber" : 856,
        "endColumnNumber" : 34
      },
      "nodeContext" : "ch == '['",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 856,
        "startColumnNumber" : 8,
        "endLineNumber" : 856,
        "endColumnNumber" : 34
      },
      "nodeContext" : "markupEnabled && ch == '['",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 856,
        "startColumnNumber" : 8,
        "endLineNumber" : 856,
        "endColumnNumber" : 49
      },
      "nodeContext" : "markupEnabled && ch == '[' && start < end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 856,
        "startColumnNumber" : 8,
        "endLineNumber" : 856,
        "endColumnNumber" : 77
      },
      "nodeContext" : "markupEnabled && ch == '[' && start < end && str.charAt(start) == '['",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 856,
        "startColumnNumber" : 4,
        "endLineNumber" : 856,
        "endColumnNumber" : 87
      },
      "nodeContext" : "if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[') start++;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 841,
        "startColumnNumber" : 6,
        "endLineNumber" : 857,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  char ch=str.charAt(start++);\n  if (ch == '\\r')   continue;\n  Glyph glyph=getGlyph(ch);\n  if (glyph == null) {\n    if (missingGlyph == null)     continue;\n    glyph=missingGlyph;\n  }\n  glyphs.add(glyph);\n  xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n  lastGlyph=glyph;\n  if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')   start++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 841,
        "startColumnNumber" : 3,
        "endLineNumber" : 857,
        "endColumnNumber" : 25
      },
      "nodeContext" : "do {\n  char ch=str.charAt(start++);\n  if (ch == '\\r')   continue;\n  Glyph glyph=getGlyph(ch);\n  if (glyph == null) {\n    if (missingGlyph == null)     continue;\n    glyph=missingGlyph;\n  }\n  glyphs.add(glyph);\n  xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n  lastGlyph=glyph;\n  if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')   start++;\n}\n while (start < end);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 829,
        "startColumnNumber" : 94,
        "endLineNumber" : 863,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int max=end - start;\n  if (max == 0)   return;\n  boolean markupEnabled=this.markupEnabled;\n  float scaleX=this.scaleX;\n  Array<Glyph> glyphs=run.glyphs;\n  FloatArray xAdvances=run.xAdvances;\n  glyphs.ensureCapacity(max);\n  run.xAdvances.ensureCapacity(max + 1);\n  do {\n    char ch=str.charAt(start++);\n    if (ch == '\\r')     continue;\n    Glyph glyph=getGlyph(ch);\n    if (glyph == null) {\n      if (missingGlyph == null)       continue;\n      glyph=missingGlyph;\n    }\n    glyphs.add(glyph);\n    xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n    lastGlyph=glyph;\n    if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')     start++;\n  }\n while (start < end);\n  if (lastGlyph != null) {\n    float lastGlyphWidth=lastGlyph.fixedWidth ? lastGlyph.xadvance * scaleX : (lastGlyph.width + lastGlyph.xoffset) * scaleX - padRight;\n    xAdvances.add(lastGlyphWidth);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1691,
        "startLineNumber" : 825,
        "startColumnNumber" : 2,
        "endLineNumber" : 863,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Using the specified string, populates the glyphs and positions of the specified glyph run.\n * @param str Characters to convert to glyphs. Will not contain newline or color tags. May contain \"[[\" for an escaped leftsquare bracket.\n * @param lastGlyph The glyph immediately before this run, or null if this is run is the first on a line of text. \n */\npublic void getGlyphs(GlyphRun run,CharSequence str,int start,int end,Glyph lastGlyph){\n  int max=end - start;\n  if (max == 0)   return;\n  boolean markupEnabled=this.markupEnabled;\n  float scaleX=this.scaleX;\n  Array<Glyph> glyphs=run.glyphs;\n  FloatArray xAdvances=run.xAdvances;\n  glyphs.ensureCapacity(max);\n  run.xAdvances.ensureCapacity(max + 1);\n  do {\n    char ch=str.charAt(start++);\n    if (ch == '\\r')     continue;\n    Glyph glyph=getGlyph(ch);\n    if (glyph == null) {\n      if (missingGlyph == null)       continue;\n      glyph=missingGlyph;\n    }\n    glyphs.add(glyph);\n    xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n    lastGlyph=glyph;\n    if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')     start++;\n  }\n while (start < end);\n  if (lastGlyph != null) {\n    float lastGlyphWidth=lastGlyph.fixedWidth ? lastGlyph.xadvance * scaleX : (lastGlyph.width + lastGlyph.xoffset) * scaleX - padRight;\n    xAdvances.add(lastGlyphWidth);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 856,
        "startColumnNumber" : 4,
        "endLineNumber" : 856,
        "endColumnNumber" : 87
      },
      "nodeContext" : "if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[') start++;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "char"
  }, {
    "nodeContext" : "'['",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 856,
      "startColumnNumber" : 74,
      "endLineNumber" : 856,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 856,
        "startColumnNumber" : 53,
        "endLineNumber" : 856,
        "endColumnNumber" : 77
      },
      "nodeContext" : "str.charAt(start) == '['",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 856,
        "startColumnNumber" : 8,
        "endLineNumber" : 856,
        "endColumnNumber" : 77
      },
      "nodeContext" : "markupEnabled && ch == '[' && start < end && str.charAt(start) == '['",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 856,
        "startColumnNumber" : 4,
        "endLineNumber" : 856,
        "endColumnNumber" : 87
      },
      "nodeContext" : "if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[') start++;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 841,
        "startColumnNumber" : 6,
        "endLineNumber" : 857,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  char ch=str.charAt(start++);\n  if (ch == '\\r')   continue;\n  Glyph glyph=getGlyph(ch);\n  if (glyph == null) {\n    if (missingGlyph == null)     continue;\n    glyph=missingGlyph;\n  }\n  glyphs.add(glyph);\n  xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n  lastGlyph=glyph;\n  if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')   start++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 841,
        "startColumnNumber" : 3,
        "endLineNumber" : 857,
        "endColumnNumber" : 25
      },
      "nodeContext" : "do {\n  char ch=str.charAt(start++);\n  if (ch == '\\r')   continue;\n  Glyph glyph=getGlyph(ch);\n  if (glyph == null) {\n    if (missingGlyph == null)     continue;\n    glyph=missingGlyph;\n  }\n  glyphs.add(glyph);\n  xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n  lastGlyph=glyph;\n  if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')   start++;\n}\n while (start < end);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 829,
        "startColumnNumber" : 94,
        "endLineNumber" : 863,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int max=end - start;\n  if (max == 0)   return;\n  boolean markupEnabled=this.markupEnabled;\n  float scaleX=this.scaleX;\n  Array<Glyph> glyphs=run.glyphs;\n  FloatArray xAdvances=run.xAdvances;\n  glyphs.ensureCapacity(max);\n  run.xAdvances.ensureCapacity(max + 1);\n  do {\n    char ch=str.charAt(start++);\n    if (ch == '\\r')     continue;\n    Glyph glyph=getGlyph(ch);\n    if (glyph == null) {\n      if (missingGlyph == null)       continue;\n      glyph=missingGlyph;\n    }\n    glyphs.add(glyph);\n    xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n    lastGlyph=glyph;\n    if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')     start++;\n  }\n while (start < end);\n  if (lastGlyph != null) {\n    float lastGlyphWidth=lastGlyph.fixedWidth ? lastGlyph.xadvance * scaleX : (lastGlyph.width + lastGlyph.xoffset) * scaleX - padRight;\n    xAdvances.add(lastGlyphWidth);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1691,
        "startLineNumber" : 825,
        "startColumnNumber" : 2,
        "endLineNumber" : 863,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Using the specified string, populates the glyphs and positions of the specified glyph run.\n * @param str Characters to convert to glyphs. Will not contain newline or color tags. May contain \"[[\" for an escaped leftsquare bracket.\n * @param lastGlyph The glyph immediately before this run, or null if this is run is the first on a line of text. \n */\npublic void getGlyphs(GlyphRun run,CharSequence str,int start,int end,Glyph lastGlyph){\n  int max=end - start;\n  if (max == 0)   return;\n  boolean markupEnabled=this.markupEnabled;\n  float scaleX=this.scaleX;\n  Array<Glyph> glyphs=run.glyphs;\n  FloatArray xAdvances=run.xAdvances;\n  glyphs.ensureCapacity(max);\n  run.xAdvances.ensureCapacity(max + 1);\n  do {\n    char ch=str.charAt(start++);\n    if (ch == '\\r')     continue;\n    Glyph glyph=getGlyph(ch);\n    if (glyph == null) {\n      if (missingGlyph == null)       continue;\n      glyph=missingGlyph;\n    }\n    glyphs.add(glyph);\n    xAdvances.add(lastGlyph == null ? (glyph.fixedWidth ? 0 : -glyph.xoffset * scaleX - padLeft) : (lastGlyph.xadvance + lastGlyph.getKerning(ch)) * scaleX);\n    lastGlyph=glyph;\n    if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[')     start++;\n  }\n while (start < end);\n  if (lastGlyph != null) {\n    float lastGlyphWidth=lastGlyph.fixedWidth ? lastGlyph.xadvance * scaleX : (lastGlyph.width + lastGlyph.xoffset) * scaleX - padRight;\n    xAdvances.add(lastGlyphWidth);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 856,
        "startColumnNumber" : 4,
        "endLineNumber" : 856,
        "endColumnNumber" : 87
      },
      "nodeContext" : "if (markupEnabled && ch == '[' && start < end && str.charAt(start) == '[') start++;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 856,
    "startColumnNumber" : 31,
    "endLineNumber" : 856,
    "endColumnNumber" : 34
  }, {
    "charLength" : 3,
    "startLineNumber" : 856,
    "startColumnNumber" : 74,
    "endLineNumber" : 856,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}