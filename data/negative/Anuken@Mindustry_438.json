{
  "id" : 438,
  "expression" : "\".name\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/dialogs/DatabaseDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 46,
      "startColumnNumber" : 50,
      "endLineNumber" : 46,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 46,
        "endColumnNumber" : 57
      },
      "nodeContext" : "\"@content.\" + type.name() + \".name\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 58
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 66
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\").growX()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 73
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\").growX().left()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 91
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 92
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2244,
        "startLineNumber" : 40,
        "startColumnNumber" : 50,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ContentType type=ContentType.all[j];\n  Seq<Content> array=allContent[j].select(c -> c instanceof   UnlockableContent u && (!u.isHidden() || u.node() != null));\n  if (array.size == 0)   continue;\n  table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n  table.row();\n  table.image().growX().pad(5).padLeft(0).padRight(0).height(3).color(Pal.accent);\n  table.row();\n  table.table(list -> {\n    list.left();\n    int cols=Mathf.clamp((Core.graphics.getWidth() - 30) / (32 + 10),1,18);\n    int count=0;\n    for (int i=0; i < array.size; i++) {\n      UnlockableContent unlock=(UnlockableContent)array.get(i);\n      Image image=unlocked(unlock) ? new Image(unlock.icon(Cicon.medium)).setScaling(Scaling.fit) : new Image(Icon.lock,Pal.gray);\n      list.add(image).size(8 * 4).pad(3);\n      ClickListener listener=new ClickListener();\n      image.addListener(listener);\n      if (!mobile && unlocked(unlock)) {\n        image.addListener(new HandCursorListener());\n        image.update(() -> image.color.lerp(!listener.isOver() ? Color.lightGray : Color.white,Mathf.clamp(0.4f * Time.delta)));\n      }\n      if (unlocked(unlock)) {\n        image.clicked(() -> {\n          if (Core.input.keyDown(KeyCode.shiftLeft) && Fonts.getUnicode(unlock.name) != 0) {\n            Core.app.setClipboardText((char)Fonts.getUnicode(unlock.name) + \"\");\n            ui.showInfoFade(\"@copied\");\n          }\n else {\n            ui.content.show(unlock);\n          }\n        }\n);\n        image.addListener(new Tooltip(t -> t.background(Tex.button).add(unlock.localizedName)));\n      }\n      if ((++count) % cols == 0) {\n        list.row();\n      }\n    }\n  }\n).growX().left().padBottom(10);\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 373,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2286,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < allContent.length; j++) {\n  ContentType type=ContentType.all[j];\n  Seq<Content> array=allContent[j].select(c -> c instanceof   UnlockableContent u && (!u.isHidden() || u.node() != null));\n  if (array.size == 0)   continue;\n  table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n  table.row();\n  table.image().growX().pad(5).padLeft(0).padRight(0).height(3).color(Pal.accent);\n  table.row();\n  table.table(list -> {\n    list.left();\n    int cols=Mathf.clamp((Core.graphics.getWidth() - 30) / (32 + 10),1,18);\n    int count=0;\n    for (int i=0; i < array.size; i++) {\n      UnlockableContent unlock=(UnlockableContent)array.get(i);\n      Image image=unlocked(unlock) ? new Image(unlock.icon(Cicon.medium)).setScaling(Scaling.fit) : new Image(Icon.lock,Pal.gray);\n      list.add(image).size(8 * 4).pad(3);\n      ClickListener listener=new ClickListener();\n      image.addListener(listener);\n      if (!mobile && unlocked(unlock)) {\n        image.addListener(new HandCursorListener());\n        image.update(() -> image.color.lerp(!listener.isOver() ? Color.lightGray : Color.white,Mathf.clamp(0.4f * Time.delta)));\n      }\n      if (unlocked(unlock)) {\n        image.clicked(() -> {\n          if (Core.input.keyDown(KeyCode.shiftLeft) && Fonts.getUnicode(unlock.name) != 0) {\n            Core.app.setClipboardText((char)Fonts.getUnicode(unlock.name) + \"\");\n            ui.showInfoFade(\"@copied\");\n          }\n else {\n            ui.content.show(unlock);\n          }\n        }\n);\n        image.addListener(new Tooltip(t -> t.background(Tex.button).add(unlock.localizedName)));\n      }\n      if ((++count) % cols == 0) {\n        list.row();\n      }\n    }\n  }\n).growX().left().padBottom(10);\n  table.row();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 386,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2528,
        "startLineNumber" : 31,
        "startColumnNumber" : 18,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cont.clear();\n  Table table=new Table();\n  table.margin(20);\n  ScrollPane pane=new ScrollPane(table);\n  Seq<Content>[] allContent=Vars.content.getContentMap();\n  for (int j=0; j < allContent.length; j++) {\n    ContentType type=ContentType.all[j];\n    Seq<Content> array=allContent[j].select(c -> c instanceof     UnlockableContent u && (!u.isHidden() || u.node() != null));\n    if (array.size == 0)     continue;\n    table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n    table.row();\n    table.image().growX().pad(5).padLeft(0).padRight(0).height(3).color(Pal.accent);\n    table.row();\n    table.table(list -> {\n      list.left();\n      int cols=Mathf.clamp((Core.graphics.getWidth() - 30) / (32 + 10),1,18);\n      int count=0;\n      for (int i=0; i < array.size; i++) {\n        UnlockableContent unlock=(UnlockableContent)array.get(i);\n        Image image=unlocked(unlock) ? new Image(unlock.icon(Cicon.medium)).setScaling(Scaling.fit) : new Image(Icon.lock,Pal.gray);\n        list.add(image).size(8 * 4).pad(3);\n        ClickListener listener=new ClickListener();\n        image.addListener(listener);\n        if (!mobile && unlocked(unlock)) {\n          image.addListener(new HandCursorListener());\n          image.update(() -> image.color.lerp(!listener.isOver() ? Color.lightGray : Color.white,Mathf.clamp(0.4f * Time.delta)));\n        }\n        if (unlocked(unlock)) {\n          image.clicked(() -> {\n            if (Core.input.keyDown(KeyCode.shiftLeft) && Fonts.getUnicode(unlock.name) != 0) {\n              Core.app.setClipboardText((char)Fonts.getUnicode(unlock.name) + \"\");\n              ui.showInfoFade(\"@copied\");\n            }\n else {\n              ui.content.show(unlock);\n            }\n          }\n);\n          image.addListener(new Tooltip(t -> t.background(Tex.button).add(unlock.localizedName)));\n        }\n        if ((++count) % cols == 0) {\n          list.row();\n        }\n      }\n    }\n).growX().left().padBottom(10);\n    table.row();\n  }\n  cont.add(pane);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 433,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2542,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void rebuild(){\n  cont.clear();\n  Table table=new Table();\n  table.margin(20);\n  ScrollPane pane=new ScrollPane(table);\n  Seq<Content>[] allContent=Vars.content.getContentMap();\n  for (int j=0; j < allContent.length; j++) {\n    ContentType type=ContentType.all[j];\n    Seq<Content> array=allContent[j].select(c -> c instanceof     UnlockableContent u && (!u.isHidden() || u.node() != null));\n    if (array.size == 0)     continue;\n    table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n    table.row();\n    table.image().growX().pad(5).padLeft(0).padRight(0).height(3).color(Pal.accent);\n    table.row();\n    table.table(list -> {\n      list.left();\n      int cols=Mathf.clamp((Core.graphics.getWidth() - 30) / (32 + 10),1,18);\n      int count=0;\n      for (int i=0; i < array.size; i++) {\n        UnlockableContent unlock=(UnlockableContent)array.get(i);\n        Image image=unlocked(unlock) ? new Image(unlock.icon(Cicon.medium)).setScaling(Scaling.fit) : new Image(Icon.lock,Pal.gray);\n        list.add(image).size(8 * 4).pad(3);\n        ClickListener listener=new ClickListener();\n        image.addListener(listener);\n        if (!mobile && unlocked(unlock)) {\n          image.addListener(new HandCursorListener());\n          image.update(() -> image.color.lerp(!listener.isOver() ? Color.lightGray : Color.white,Mathf.clamp(0.4f * Time.delta)));\n        }\n        if (unlocked(unlock)) {\n          image.clicked(() -> {\n            if (Core.input.keyDown(KeyCode.shiftLeft) && Fonts.getUnicode(unlock.name) != 0) {\n              Core.app.setClipboardText((char)Fonts.getUnicode(unlock.name) + \"\");\n              ui.showInfoFade(\"@copied\");\n            }\n else {\n              ui.content.show(unlock);\n            }\n          }\n);\n          image.addListener(new Tooltip(t -> t.background(Tex.button).add(unlock.localizedName)));\n        }\n        if ((++count) % cols == 0) {\n          list.row();\n        }\n      }\n    }\n).growX().left().padBottom(10);\n    table.row();\n  }\n  cont.add(pane);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 436,
      "astHeight" : 28
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 92
      },
      "nodeContext" : "table.add(\"@content.\" + type.name() + \".name\").growX().left().color(Pal.accent);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 46,
    "startColumnNumber" : 50,
    "endLineNumber" : 46,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}