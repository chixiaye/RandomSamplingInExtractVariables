{
  "id" : 118,
  "expression" : "period.toMillis()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/scheduling/TaskScheduler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "period.toMillis()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 117,
      "startColumnNumber" : 57,
      "endLineNumber" : 117,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 117,
        "startColumnNumber" : 9,
        "endLineNumber" : 117,
        "endColumnNumber" : 75
      },
      "nodeContext" : "scheduleAtFixedRate(task,Date.from(startTime),period.toMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return scheduleAtFixedRate(task,Date.from(startTime),period.toMillis());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 116,
        "startColumnNumber" : 99,
        "endLineNumber" : 118,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  return scheduleAtFixedRate(task,Date.from(startTime),period.toMillis());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1079,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 118,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Schedule the given  {@link Runnable}, invoking it at the specified execution time and subsequently with the given period. <p>Execution will end once the scheduler shuts down or the returned {@link ScheduledFuture} gets cancelled.\n * @param task the Runnable to execute whenever the trigger fires\n * @param startTime the desired first execution time for the task(if this is in the past, the task will be executed immediately, i.e. as soon as possible)\n * @param period the interval between successive executions of the task\n * @return a {@link ScheduledFuture} representing pending completion of the task\n * @throws org.springframework.core.task.TaskRejectedException if  the given task was not acceptedfor internal reasons (e.g. a pool overload handling policy or a pool shutdown in progress)\n * @since 5.0\n * @see #scheduleAtFixedRate(Runnable,Date,long)\n */\ndefault ScheduledFuture<?> scheduleAtFixedRate(Runnable task,Instant startTime,Duration period){\n  return scheduleAtFixedRate(task,Date.from(startTime),period.toMillis());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 32,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return scheduleAtFixedRate(task,Date.from(startTime),period.toMillis());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 117,
    "startColumnNumber" : 57,
    "endLineNumber" : 117,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}