{
  "id" : 229,
  "expression" : "outgoingQueue.size() == 0",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/ClientCnxn.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outgoingQueue.size() == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 654,
      "startColumnNumber" : 16,
      "endLineNumber" : 654,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 654,
        "startColumnNumber" : 12,
        "endLineNumber" : 658,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (outgoingQueue.size() == 0) {\n  disableWrite();\n}\n else {\n  enableWrite();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2270,
        "startLineNumber" : 605,
        "startColumnNumber" : 64,
        "endLineNumber" : 660,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean packetReceived=false;\n  SocketChannel sock=(SocketChannel)sockKey.channel();\n  if (sock == null) {\n    throw new IOException(\"Socket is null!\");\n  }\n  if (sockKey.isReadable()) {\n    int rc=sock.read(incomingBuffer);\n    if (rc < 0) {\n      throw new IOException(\"Read error rc = \" + rc + \" \"+ incomingBuffer);\n    }\n    if (incomingBuffer.remaining() == 0) {\n      incomingBuffer.flip();\n      if (incomingBuffer == lenBuffer) {\n        readLength();\n      }\n else       if (!initialized) {\n        readConnectResult();\n        enableRead();\n        if (outgoingQueue.size() > 0) {\n          enableWrite();\n        }\n        lenBuffer.clear();\n        incomingBuffer=lenBuffer;\n        packetReceived=true;\n        initialized=true;\n      }\n else {\n        readResponse();\n        lenBuffer.clear();\n        incomingBuffer=lenBuffer;\n        packetReceived=true;\n      }\n    }\n  }\n  if (sockKey.isWritable()) {\nsynchronized (outgoingQueue) {\n      if (outgoingQueue.size() > 0) {\n        sock.write(outgoingQueue.getFirst().bb);\n        if (outgoingQueue.getFirst().bb.remaining() == 0) {\n          Packet p=outgoingQueue.removeFirst();\n          if (p.header != null && p.header.getType() != OpCode.ping && p.header.getType() != OpCode.auth) {\n            pendingQueue.add(p);\n          }\n        }\n      }\n    }\n  }\n  if (outgoingQueue.size() == 0) {\n    disableWrite();\n  }\n else {\n    enableWrite();\n  }\n  return packetReceived;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 600,
        "startColumnNumber" : 8,
        "endLineNumber" : 660,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @return true if a packet was received\n * @throws InterruptedException\n * @throws IOException\n */\nboolean doIO() throws InterruptedException, IOException {\n  boolean packetReceived=false;\n  SocketChannel sock=(SocketChannel)sockKey.channel();\n  if (sock == null) {\n    throw new IOException(\"Socket is null!\");\n  }\n  if (sockKey.isReadable()) {\n    int rc=sock.read(incomingBuffer);\n    if (rc < 0) {\n      throw new IOException(\"Read error rc = \" + rc + \" \"+ incomingBuffer);\n    }\n    if (incomingBuffer.remaining() == 0) {\n      incomingBuffer.flip();\n      if (incomingBuffer == lenBuffer) {\n        readLength();\n      }\n else       if (!initialized) {\n        readConnectResult();\n        enableRead();\n        if (outgoingQueue.size() > 0) {\n          enableWrite();\n        }\n        lenBuffer.clear();\n        incomingBuffer=lenBuffer;\n        packetReceived=true;\n        initialized=true;\n      }\n else {\n        readResponse();\n        lenBuffer.clear();\n        incomingBuffer=lenBuffer;\n        packetReceived=true;\n      }\n    }\n  }\n  if (sockKey.isWritable()) {\nsynchronized (outgoingQueue) {\n      if (outgoingQueue.size() > 0) {\n        sock.write(outgoingQueue.getFirst().bb);\n        if (outgoingQueue.getFirst().bb.remaining() == 0) {\n          Packet p=outgoingQueue.removeFirst();\n          if (p.header != null && p.header.getType() != OpCode.ping && p.header.getType() != OpCode.auth) {\n            pendingQueue.add(p);\n          }\n        }\n      }\n    }\n  }\n  if (outgoingQueue.size() == 0) {\n    disableWrite();\n  }\n else {\n    enableWrite();\n  }\n  return packetReceived;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 654,
        "startColumnNumber" : 12,
        "endLineNumber" : 658,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (outgoingQueue.size() == 0) {\n  disableWrite();\n}\n else {\n  enableWrite();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 654,
    "startColumnNumber" : 16,
    "endLineNumber" : 654,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}