{
  "id" : 330,
  "expression" : "\"'val' is not allowed in old-style for loops\"",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/HandleVal.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"'val' is not allowed in old-style for loops\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 62,
      "startColumnNumber" : 22,
      "endLineNumber" : 62,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 68
      },
      "nodeContext" : "localNode.addError(\"'val' is not allowed in old-style for loops\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 69
      },
      "nodeContext" : "localNode.addError(\"'val' is not allowed in old-style for loops\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 61,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  localNode.addError(\"'val' is not allowed in old-style for loops\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (localNode.directUp().get() instanceof ForStatement) {\n  localNode.addError(\"'val' is not allowed in old-style for loops\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 42,
        "startColumnNumber" : 81,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!EclipseHandlerUtil.typeMatches(val.class,localNode,local.type))   return;\n  boolean variableOfForEach=false;\n  if (localNode.directUp().get() instanceof ForeachStatement) {\n    ForeachStatement fs=(ForeachStatement)localNode.directUp().get();\n    variableOfForEach=fs.elementVariable == local;\n  }\n  if (local.initialization == null && !variableOfForEach) {\n    localNode.addError(\"'val' on a local variable requires an initializer expression\");\n    return;\n  }\n  if (local.initialization instanceof ArrayInitializer) {\n    localNode.addError(\"'val' is not compatible with array initializer expressions. Use the full form (new int[] { ... } instead of just { ... })\");\n    return;\n  }\n  if (localNode.directUp().get() instanceof ForStatement) {\n    localNode.addError(\"'val' is not allowed in old-style for loops\");\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 42,
        "startColumnNumber" : 1,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void visitLocal(EclipseNode localNode,LocalDeclaration local){\n  if (!EclipseHandlerUtil.typeMatches(val.class,localNode,local.type))   return;\n  boolean variableOfForEach=false;\n  if (localNode.directUp().get() instanceof ForeachStatement) {\n    ForeachStatement fs=(ForeachStatement)localNode.directUp().get();\n    variableOfForEach=fs.elementVariable == local;\n  }\n  if (local.initialization == null && !variableOfForEach) {\n    localNode.addError(\"'val' on a local variable requires an initializer expression\");\n    return;\n  }\n  if (local.initialization instanceof ArrayInitializer) {\n    localNode.addError(\"'val' is not compatible with array initializer expressions. Use the full form (new int[] { ... } instead of just { ... })\");\n    return;\n  }\n  if (localNode.directUp().get() instanceof ForStatement) {\n    localNode.addError(\"'val' is not allowed in old-style for loops\");\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 69
      },
      "nodeContext" : "localNode.addError(\"'val' is not allowed in old-style for loops\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 62,
    "startColumnNumber" : 22,
    "endLineNumber" : 62,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}