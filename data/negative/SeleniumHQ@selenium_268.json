{
  "id" : 268,
  "expression" : "jars.stream().map(file -> {\n  try {\n    return file.toURI().toURL();\n  }\n catch (  MalformedURLException e) {\n    LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n    throw new UncheckedIOException(e);\n  }\n}\n).toArray(URL[]::new)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/Main.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jars.stream().map(file -> {\n  try {\n    return file.toURI().toURL();\n  }\n catch (  MalformedURLException e) {\n    LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n    throw new UncheckedIOException(e);\n  }\n}\n).toArray(URL[]::new)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 265,
      "startLineNumber" : 124,
      "startColumnNumber" : 20,
      "endLineNumber" : 131,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 46,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 124,
        "startColumnNumber" : 10,
        "endLineNumber" : 131,
        "endColumnNumber" : 26
      },
      "nodeContext" : "jarUrls=jars.stream().map(file -> {\n  try {\n    return file.toURI().toURL();\n  }\n catch (  MalformedURLException e) {\n    LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n    throw new UncheckedIOException(e);\n  }\n}\n).toArray(URL[]::new)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 48,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 27
      },
      "nodeContext" : "URL[] jarUrls=jars.stream().map(file -> {\n  try {\n    return file.toURI().toURL();\n  }\n catch (  MalformedURLException e) {\n    LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n    throw new UncheckedIOException(e);\n  }\n}\n).toArray(URL[]::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 53,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 99,
        "startColumnNumber" : 70,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<File> jars=new ArrayList<>();\n  for (  String part : ext.split(File.pathSeparator)) {\n    File file=new File(part);\n    if (!file.exists()) {\n      LOG.warning(\"Extension file or directory does not exist: \" + file);\n      continue;\n    }\n    if (file.isDirectory()) {\n      File[] files=file.listFiles();\n      if (files == null) {\n        LOG.warning(\"Cannot list files in directory: \" + file);\n      }\n else {\n        for (        File subdirFile : files) {\n          if (subdirFile.isFile() && subdirFile.getName().endsWith(\".jar\")) {\n            jars.add(subdirFile);\n          }\n        }\n      }\n    }\n else {\n      jars.add(file);\n    }\n  }\n  URL[] jarUrls=jars.stream().map(file -> {\n    try {\n      return file.toURI().toURL();\n    }\n catch (    MalformedURLException e) {\n      LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n      throw new UncheckedIOException(e);\n    }\n  }\n).toArray(URL[]::new);\n  return AccessController.doPrivileged((PrivilegedAction<URLClassLoader>)() -> new URLClassLoader(jarUrls,Main.class.getClassLoader()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static URLClassLoader createExtendedClassLoader(String ext){\n  List<File> jars=new ArrayList<>();\n  for (  String part : ext.split(File.pathSeparator)) {\n    File file=new File(part);\n    if (!file.exists()) {\n      LOG.warning(\"Extension file or directory does not exist: \" + file);\n      continue;\n    }\n    if (file.isDirectory()) {\n      File[] files=file.listFiles();\n      if (files == null) {\n        LOG.warning(\"Cannot list files in directory: \" + file);\n      }\n else {\n        for (        File subdirFile : files) {\n          if (subdirFile.isFile() && subdirFile.getName().endsWith(\".jar\")) {\n            jars.add(subdirFile);\n          }\n        }\n      }\n    }\n else {\n      jars.add(file);\n    }\n  }\n  URL[] jarUrls=jars.stream().map(file -> {\n    try {\n      return file.toURI().toURL();\n    }\n catch (    MalformedURLException e) {\n      LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n      throw new UncheckedIOException(e);\n    }\n  }\n).toArray(URL[]::new);\n  return AccessController.doPrivileged((PrivilegedAction<URLClassLoader>)() -> new URLClassLoader(jarUrls,Main.class.getClassLoader()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 27
      },
      "nodeContext" : "URL[] jarUrls=jars.stream().map(file -> {\n  try {\n    return file.toURI().toURL();\n  }\n catch (  MalformedURLException e) {\n    LOG.log(Level.SEVERE,\"Unable to find JAR file \" + file,e);\n    throw new UncheckedIOException(e);\n  }\n}\n).toArray(URL[]::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 53,
      "astHeight" : 13
    },
    "tokenLength" : 26,
    "type" : "java.net.URL[]"
  } ],
  "positionList" : [ {
    "charLength" : 265,
    "startLineNumber" : 124,
    "startColumnNumber" : 20,
    "endLineNumber" : 131,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}