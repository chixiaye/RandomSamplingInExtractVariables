{
  "id" : 376,
  "expression" : "\"PrivateKey must be not null !\"",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-crypto/src/main/java/cn/hutool/crypto/asymmetric/SM2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"PrivateKey must be not null !\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 488,
      "startColumnNumber" : 42,
      "endLineNumber" : 488,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 488,
        "startColumnNumber" : 4,
        "endLineNumber" : 488,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 488,
        "startColumnNumber" : 4,
        "endLineNumber" : 488,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 483,
        "startColumnNumber" : 2,
        "endLineNumber" : 490,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (keyType) {\ncase PublicKey:  Assert.notNull(this.publicKeyParams,\"PublicKey must be not null !\");\nreturn this.publicKeyParams;\ncase PrivateKey:Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\");\nreturn this.privateKeyParams;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 482,
        "startColumnNumber" : 63,
        "endLineNumber" : 493,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\nswitch (keyType) {\ncase PublicKey:    Assert.notNull(this.publicKeyParams,\"PublicKey must be not null !\");\n  return this.publicKeyParams;\ncase PrivateKey:Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\");\nreturn this.privateKeyParams;\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 476,
        "startColumnNumber" : 1,
        "endLineNumber" : 493,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 获取密钥类型对应的加密参数对象 {@link CipherParameters}\n * @param keyType Key类型枚举，包括私钥或公钥\n * @return {@link CipherParameters}\n */\nprivate CipherParameters getCipherParameters(KeyType keyType){\nswitch (keyType) {\ncase PublicKey:    Assert.notNull(this.publicKeyParams,\"PublicKey must be not null !\");\n  return this.publicKeyParams;\ncase PrivateKey:Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\");\nreturn this.privateKeyParams;\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 488,
        "startColumnNumber" : 4,
        "endLineNumber" : 488,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.notNull(this.privateKeyParams,\"PrivateKey must be not null !\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 488,
    "startColumnNumber" : 42,
    "endLineNumber" : 488,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}