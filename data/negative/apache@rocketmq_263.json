{
  "id" : 263,
  "expression" : "remoteAddr.contains(\":\")",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/acl/src/main/java/org/apache/rocketmq/acl/plain/PlainAccessValidator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "remoteAddr.contains(\":\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 50,
      "startColumnNumber" : 34,
      "endLineNumber" : 50,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 58
      },
      "nodeContext" : "remoteAddr != null && remoteAddr.contains(\":\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remoteAddr != null && remoteAddr.contains(\":\")) {\n  accessResource.setWhiteRemoteAddress(remoteAddr.split(\":\")[0]);\n}\n else {\n  accessResource.setWhiteRemoteAddress(remoteAddr);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4691,
        "startLineNumber" : 48,
        "startColumnNumber" : 76,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PlainAccessResource accessResource=new PlainAccessResource();\n  if (remoteAddr != null && remoteAddr.contains(\":\")) {\n    accessResource.setWhiteRemoteAddress(remoteAddr.split(\":\")[0]);\n  }\n else {\n    accessResource.setWhiteRemoteAddress(remoteAddr);\n  }\n  accessResource.setRequestCode(request.getCode());\n  accessResource.setAccessKey(request.getExtFields().get(SessionCredentials.ACCESS_KEY));\n  accessResource.setSignature(request.getExtFields().get(SessionCredentials.SIGNATURE));\n  accessResource.setSecretToken(request.getExtFields().get(SessionCredentials.SECURITY_TOKEN));\n  try {\nswitch (request.getCode()) {\ncase RequestCode.SEND_MESSAGE:      accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.PUB);\n    break;\ncase RequestCode.SEND_MESSAGE_V2:  accessResource.addResourceAndPerm(request.getExtFields().get(\"b\"),Permission.PUB);\nbreak;\ncase RequestCode.CONSUMER_SEND_MSG_BACK:accessResource.addResourceAndPerm(request.getExtFields().get(\"originTopic\"),Permission.PUB);\naccessResource.addResourceAndPerm(getRetryTopic(request.getExtFields().get(\"group\")),Permission.SUB);\nbreak;\ncase RequestCode.PULL_MESSAGE:accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.SUB);\naccessResource.addResourceAndPerm(getRetryTopic(request.getExtFields().get(\"consumerGroup\")),Permission.SUB);\nbreak;\ncase RequestCode.QUERY_MESSAGE:accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.SUB);\nbreak;\ncase RequestCode.HEART_BEAT:HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\nfor (ConsumerData data : heartbeatData.getConsumerDataSet()) {\naccessResource.addResourceAndPerm(getRetryTopic(data.getGroupName()),Permission.SUB);\nfor (SubscriptionData subscriptionData : data.getSubscriptionDataSet()) {\naccessResource.addResourceAndPerm(subscriptionData.getTopic(),Permission.SUB);\n}\n}\nbreak;\ncase RequestCode.UNREGISTER_CLIENT:final UnregisterClientRequestHeader unregisterClientRequestHeader=(UnregisterClientRequestHeader)request.decodeCommandCustomHeader(UnregisterClientRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(unregisterClientRequestHeader.getConsumerGroup()),Permission.SUB);\nbreak;\ncase RequestCode.GET_CONSUMER_LIST_BY_GROUP:final GetConsumerListByGroupRequestHeader getConsumerListByGroupRequestHeader=(GetConsumerListByGroupRequestHeader)request.decodeCommandCustomHeader(GetConsumerListByGroupRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(getConsumerListByGroupRequestHeader.getConsumerGroup()),Permission.SUB);\nbreak;\ncase RequestCode.UPDATE_CONSUMER_OFFSET:final UpdateConsumerOffsetRequestHeader updateConsumerOffsetRequestHeader=(UpdateConsumerOffsetRequestHeader)request.decodeCommandCustomHeader(UpdateConsumerOffsetRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(updateConsumerOffsetRequestHeader.getConsumerGroup()),Permission.SUB);\naccessResource.addResourceAndPerm(updateConsumerOffsetRequestHeader.getTopic(),Permission.SUB);\nbreak;\ndefault:break;\n}\n}\n catch (Throwable t) {\nthrow new AclException(t.getMessage(),t);\n}\nSortedMap<String,String> map=new TreeMap<String,String>();\nfor (Map.Entry<String,String> entry : request.getExtFields().entrySet()) {\nif (!SessionCredentials.SIGNATURE.equals(entry.getKey())) {\nmap.put(entry.getKey(),entry.getValue());\n}\n}\naccessResource.setContent(AclUtils.combineRequestContent(request,map));\nreturn accessResource;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 453,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4777,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public AccessResource parse(RemotingCommand request,String remoteAddr){\n  PlainAccessResource accessResource=new PlainAccessResource();\n  if (remoteAddr != null && remoteAddr.contains(\":\")) {\n    accessResource.setWhiteRemoteAddress(remoteAddr.split(\":\")[0]);\n  }\n else {\n    accessResource.setWhiteRemoteAddress(remoteAddr);\n  }\n  accessResource.setRequestCode(request.getCode());\n  accessResource.setAccessKey(request.getExtFields().get(SessionCredentials.ACCESS_KEY));\n  accessResource.setSignature(request.getExtFields().get(SessionCredentials.SIGNATURE));\n  accessResource.setSecretToken(request.getExtFields().get(SessionCredentials.SECURITY_TOKEN));\n  try {\nswitch (request.getCode()) {\ncase RequestCode.SEND_MESSAGE:      accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.PUB);\n    break;\ncase RequestCode.SEND_MESSAGE_V2:  accessResource.addResourceAndPerm(request.getExtFields().get(\"b\"),Permission.PUB);\nbreak;\ncase RequestCode.CONSUMER_SEND_MSG_BACK:accessResource.addResourceAndPerm(request.getExtFields().get(\"originTopic\"),Permission.PUB);\naccessResource.addResourceAndPerm(getRetryTopic(request.getExtFields().get(\"group\")),Permission.SUB);\nbreak;\ncase RequestCode.PULL_MESSAGE:accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.SUB);\naccessResource.addResourceAndPerm(getRetryTopic(request.getExtFields().get(\"consumerGroup\")),Permission.SUB);\nbreak;\ncase RequestCode.QUERY_MESSAGE:accessResource.addResourceAndPerm(request.getExtFields().get(\"topic\"),Permission.SUB);\nbreak;\ncase RequestCode.HEART_BEAT:HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\nfor (ConsumerData data : heartbeatData.getConsumerDataSet()) {\naccessResource.addResourceAndPerm(getRetryTopic(data.getGroupName()),Permission.SUB);\nfor (SubscriptionData subscriptionData : data.getSubscriptionDataSet()) {\naccessResource.addResourceAndPerm(subscriptionData.getTopic(),Permission.SUB);\n}\n}\nbreak;\ncase RequestCode.UNREGISTER_CLIENT:final UnregisterClientRequestHeader unregisterClientRequestHeader=(UnregisterClientRequestHeader)request.decodeCommandCustomHeader(UnregisterClientRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(unregisterClientRequestHeader.getConsumerGroup()),Permission.SUB);\nbreak;\ncase RequestCode.GET_CONSUMER_LIST_BY_GROUP:final GetConsumerListByGroupRequestHeader getConsumerListByGroupRequestHeader=(GetConsumerListByGroupRequestHeader)request.decodeCommandCustomHeader(GetConsumerListByGroupRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(getConsumerListByGroupRequestHeader.getConsumerGroup()),Permission.SUB);\nbreak;\ncase RequestCode.UPDATE_CONSUMER_OFFSET:final UpdateConsumerOffsetRequestHeader updateConsumerOffsetRequestHeader=(UpdateConsumerOffsetRequestHeader)request.decodeCommandCustomHeader(UpdateConsumerOffsetRequestHeader.class);\naccessResource.addResourceAndPerm(getRetryTopic(updateConsumerOffsetRequestHeader.getConsumerGroup()),Permission.SUB);\naccessResource.addResourceAndPerm(updateConsumerOffsetRequestHeader.getTopic(),Permission.SUB);\nbreak;\ndefault:break;\n}\n}\n catch (Throwable t) {\nthrow new AclException(t.getMessage(),t);\n}\nSortedMap<String,String> map=new TreeMap<String,String>();\nfor (Map.Entry<String,String> entry : request.getExtFields().entrySet()) {\nif (!SessionCredentials.SIGNATURE.equals(entry.getKey())) {\nmap.put(entry.getKey(),entry.getValue());\n}\n}\naccessResource.setContent(AclUtils.combineRequestContent(request,map));\nreturn accessResource;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 468,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 58
      },
      "nodeContext" : "remoteAddr != null && remoteAddr.contains(\":\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 50,
    "startColumnNumber" : 34,
    "endLineNumber" : 50,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}