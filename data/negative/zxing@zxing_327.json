{
  "id" : 327,
  "expression" : "position + 2",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/Code128Writer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "position + 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 130,
      "startColumnNumber" : 75,
      "endLineNumber" : 130,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 130,
        "startColumnNumber" : 46,
        "endLineNumber" : 130,
        "endColumnNumber" : 88
      },
      "nodeContext" : "contents.substring(position,position + 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 130,
        "startColumnNumber" : 29,
        "endLineNumber" : 130,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Integer.parseInt(contents.substring(position,position + 2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 89
      },
      "nodeContext" : "patternIndex=Integer.parseInt(contents.substring(position,position + 2))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "patternIndex=Integer.parseInt(contents.substring(position,position + 2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 112,
        "startColumnNumber" : 10,
        "endLineNumber" : 133,
        "endColumnNumber" : 11
      },
      "nodeContext" : "switch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:  patternIndex=CODE_FNC_1;\nposition++;\nbreak;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 111,
        "startColumnNumber" : 15,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:    patternIndex=CODE_FNC_1;\n  position++;\nbreak;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 916,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (codeSet == CODE_CODE_B) {\n  patternIndex=contents.charAt(position) - ' ';\n  position+=1;\n}\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:    patternIndex=CODE_FNC_1;\n  position++;\nbreak;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 106,
        "startColumnNumber" : 33,
        "endLineNumber" : 135,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (codeSet == CODE_CODE_B) {\n    patternIndex=contents.charAt(position) - ' ';\n    position+=1;\n  }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    position++;\n  break;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1499,
        "startLineNumber" : 106,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (newCodeSet == codeSet) {\n  if (codeSet == CODE_CODE_B) {\n    patternIndex=contents.charAt(position) - ' ';\n    position+=1;\n  }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    position++;\n  break;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n else {\nif (codeSet == 0) {\nif (newCodeSet == CODE_CODE_B) {\npatternIndex=CODE_START_B;\n}\n else {\npatternIndex=CODE_START_C;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2093,
        "startLineNumber" : 94,
        "startColumnNumber" : 30,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int requiredDigitCount=codeSet == CODE_CODE_C ? 2 : 4;\n  int newCodeSet;\n  if (isDigits(contents,position,requiredDigitCount)) {\n    newCodeSet=CODE_CODE_C;\n  }\n else {\n    newCodeSet=CODE_CODE_B;\n  }\n  int patternIndex;\n  if (newCodeSet == codeSet) {\n    if (codeSet == CODE_CODE_B) {\n      patternIndex=contents.charAt(position) - ' ';\n      position+=1;\n    }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:        patternIndex=CODE_FNC_1;\n      position++;\n    break;\ncase ESCAPE_FNC_2:  patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n else {\nif (codeSet == 0) {\nif (newCodeSet == CODE_CODE_B) {\npatternIndex=CODE_START_B;\n}\n else {\npatternIndex=CODE_START_C;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2119,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (position < length) {\n  int requiredDigitCount=codeSet == CODE_CODE_C ? 2 : 4;\n  int newCodeSet;\n  if (isDigits(contents,position,requiredDigitCount)) {\n    newCodeSet=CODE_CODE_C;\n  }\n else {\n    newCodeSet=CODE_CODE_B;\n  }\n  int patternIndex;\n  if (newCodeSet == codeSet) {\n    if (codeSet == CODE_CODE_B) {\n      patternIndex=contents.charAt(position) - ' ';\n      position+=1;\n    }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:        patternIndex=CODE_FNC_1;\n      position++;\n    break;\ncase ESCAPE_FNC_2:  patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n else {\nif (codeSet == 0) {\nif (newCodeSet == CODE_CODE_B) {\npatternIndex=CODE_START_B;\n}\n else {\npatternIndex=CODE_START_C;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 179,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3655,
        "startLineNumber" : 65,
        "startColumnNumber" : 40,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length < 1 || length > 80) {\n    throw new IllegalArgumentException(\"Contents length should be between 1 and 80 characters, but got \" + length);\n  }\n  for (int i=0; i < length; i++) {\n    char c=contents.charAt(i);\n    if (c < ' ' || c > '~') {\nswitch (c) {\ncase ESCAPE_FNC_1:case ESCAPE_FNC_2:case ESCAPE_FNC_3:case ESCAPE_FNC_4:        break;\ndefault:      throw new IllegalArgumentException(\"Bad character in input: \" + c);\n  }\n}\n}\nCollection<int[]> patterns=new ArrayList<int[]>();\nint checkSum=0;\nint checkWeight=1;\nint codeSet=0;\nint position=0;\nwhile (position < length) {\nint requiredDigitCount=codeSet == CODE_CODE_C ? 2 : 4;\nint newCodeSet;\nif (isDigits(contents,position,requiredDigitCount)) {\n  newCodeSet=CODE_CODE_C;\n}\n else {\n  newCodeSet=CODE_CODE_B;\n}\nint patternIndex;\nif (newCodeSet == codeSet) {\n  if (codeSet == CODE_CODE_B) {\n    patternIndex=contents.charAt(position) - ' ';\n    position+=1;\n  }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    position++;\n  break;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n else {\nif (codeSet == 0) {\nif (newCodeSet == CODE_CODE_B) {\npatternIndex=CODE_START_B;\n}\n else {\npatternIndex=CODE_START_C;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\ncheckSum%=103;\npatterns.add(Code128Reader.CODE_PATTERNS[checkSum]);\npatterns.add(Code128Reader.CODE_PATTERNS[CODE_STOP]);\nint codeWidth=0;\nfor (int[] pattern : patterns) {\nfor (int width : pattern) {\ncodeWidth+=width;\n}\n}\nbyte[] result=new byte[codeWidth];\nint pos=0;\nfor (int[] pattern : patterns) {\npos+=appendPattern(result,pos,pattern,1);\n}\nreturn result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3706,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] encode(String contents){\n  int length=contents.length();\n  if (length < 1 || length > 80) {\n    throw new IllegalArgumentException(\"Contents length should be between 1 and 80 characters, but got \" + length);\n  }\n  for (int i=0; i < length; i++) {\n    char c=contents.charAt(i);\n    if (c < ' ' || c > '~') {\nswitch (c) {\ncase ESCAPE_FNC_1:case ESCAPE_FNC_2:case ESCAPE_FNC_3:case ESCAPE_FNC_4:        break;\ndefault:      throw new IllegalArgumentException(\"Bad character in input: \" + c);\n  }\n}\n}\nCollection<int[]> patterns=new ArrayList<int[]>();\nint checkSum=0;\nint checkWeight=1;\nint codeSet=0;\nint position=0;\nwhile (position < length) {\nint requiredDigitCount=codeSet == CODE_CODE_C ? 2 : 4;\nint newCodeSet;\nif (isDigits(contents,position,requiredDigitCount)) {\n  newCodeSet=CODE_CODE_C;\n}\n else {\n  newCodeSet=CODE_CODE_B;\n}\nint patternIndex;\nif (newCodeSet == codeSet) {\n  if (codeSet == CODE_CODE_B) {\n    patternIndex=contents.charAt(position) - ' ';\n    position+=1;\n  }\n else {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    position++;\n  break;\ncase ESCAPE_FNC_2:patternIndex=CODE_FNC_2;\nposition++;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nposition++;\nbreak;\ncase ESCAPE_FNC_4:patternIndex=CODE_FNC_4_B;\nposition++;\nbreak;\ndefault:patternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition+=2;\nbreak;\n}\n}\n}\n else {\nif (codeSet == 0) {\nif (newCodeSet == CODE_CODE_B) {\npatternIndex=CODE_START_B;\n}\n else {\npatternIndex=CODE_START_C;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\ncheckSum%=103;\npatterns.add(Code128Reader.CODE_PATTERNS[checkSum]);\npatterns.add(Code128Reader.CODE_PATTERNS[CODE_STOP]);\nint codeWidth=0;\nfor (int[] pattern : patterns) {\nfor (int width : pattern) {\ncodeWidth+=width;\n}\n}\nbyte[] result=new byte[codeWidth];\nint pos=0;\nfor (int[] pattern : patterns) {\npos+=appendPattern(result,pos,pattern,1);\n}\nreturn result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 379,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "patternIndex=Integer.parseInt(contents.substring(position,position + 2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 130,
    "startColumnNumber" : 75,
    "endLineNumber" : 130,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}