{
  "id" : 64,
  "expression" : "resourceKey(file + \"+encoding=br,gzip\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webmvc/src/test/java/org/springframework/web/servlet/resource/CachingResourceResolverTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resourceKey(file + \"+encoding=br,gzip\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 130,
      "startColumnNumber" : 13,
      "endLineNumber" : 130,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 130,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 52
      },
      "nodeContext" : "cacheKey=resourceKey(file + \"+encoding=br,gzip\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 130,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 53
      },
      "nodeContext" : "cacheKey=resourceKey(file + \"+encoding=br,gzip\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 111,
        "startColumnNumber" : 74,
        "endLineNumber" : 141,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String file=\"bar.css\";\n  EncodedResourceResolverTests.createGzippedFile(file);\n  MockHttpServletRequest request=new MockHttpServletRequest(\"GET\",file);\n  Resource expected=this.chain.resolveResource(request,file,this.locations);\n  String cacheKey=resourceKey(file);\n  assertSame(expected,this.cache.get(cacheKey).get());\n  request=new MockHttpServletRequest(\"GET\",file);\n  request.addHeader(\"Accept-Encoding\",\"gzip ; a=b  , deflate ,  br  ; c=d \");\n  expected=this.chain.resolveResource(request,file,this.locations);\n  cacheKey=resourceKey(file + \"+encoding=br,gzip\");\n  assertSame(expected,this.cache.get(cacheKey).get());\n  request=new MockHttpServletRequest(\"GET\",file);\n  request.addHeader(\"Accept-Encoding\",\"deflate\");\n  expected=this.chain.resolveResource(request,file,this.locations);\n  cacheKey=resourceKey(file);\n  assertSame(expected,this.cache.get(cacheKey).get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 141,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void resolveResourceAcceptEncodingInCacheKey() throws IOException {\n  String file=\"bar.css\";\n  EncodedResourceResolverTests.createGzippedFile(file);\n  MockHttpServletRequest request=new MockHttpServletRequest(\"GET\",file);\n  Resource expected=this.chain.resolveResource(request,file,this.locations);\n  String cacheKey=resourceKey(file);\n  assertSame(expected,this.cache.get(cacheKey).get());\n  request=new MockHttpServletRequest(\"GET\",file);\n  request.addHeader(\"Accept-Encoding\",\"gzip ; a=b  , deflate ,  br  ; c=d \");\n  expected=this.chain.resolveResource(request,file,this.locations);\n  cacheKey=resourceKey(file + \"+encoding=br,gzip\");\n  assertSame(expected,this.cache.get(cacheKey).get());\n  request=new MockHttpServletRequest(\"GET\",file);\n  request.addHeader(\"Accept-Encoding\",\"deflate\");\n  expected=this.chain.resolveResource(request,file,this.locations);\n  cacheKey=resourceKey(file);\n  assertSame(expected,this.cache.get(cacheKey).get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 130,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 53
      },
      "nodeContext" : "cacheKey=resourceKey(file + \"+encoding=br,gzip\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 130,
    "startColumnNumber" : 13,
    "endLineNumber" : 130,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}