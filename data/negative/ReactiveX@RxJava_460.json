{
  "id" : 460,
  "expression" : "fullCheck",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/queue/SpscExactArrayQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fullCheck",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 56,
      "startColumnNumber" : 16,
      "endLineNumber" : 56,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 26
      },
      "nodeContext" : "get(fullCheck)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 34
      },
      "nodeContext" : "get(fullCheck) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (get(fullCheck) != null) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Objects.requireNonNull(value,\"value is null\");\n  long pi=producerIndex.get();\n  int m=mask;\n  int fullCheck=(int)(pi + capacitySkip) & m;\n  if (get(fullCheck) != null) {\n    return false;\n  }\n  int offset=(int)pi & m;\n  producerIndex.lazySet(pi + 1);\n  lazySet(offset,value);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean offer(T value){\n  Objects.requireNonNull(value,\"value is null\");\n  long pi=producerIndex.get();\n  int m=mask;\n  int fullCheck=(int)(pi + capacitySkip) & m;\n  if (get(fullCheck) != null) {\n    return false;\n  }\n  int offset=(int)pi & m;\n  producerIndex.lazySet(pi + 1);\n  lazySet(offset,value);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 34
      },
      "nodeContext" : "get(fullCheck) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 56,
    "startColumnNumber" : 16,
    "endLineNumber" : 56,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}