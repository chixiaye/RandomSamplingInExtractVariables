{
  "id" : 441,
  "expression" : "arr.length - nEmptyRows",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/GaussianElimination.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arr.length - nEmptyRows",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 67,
      "startColumnNumber" : 23,
      "endLineNumber" : 67,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 67,
        "startColumnNumber" : 11,
        "endLineNumber" : 67,
        "endColumnNumber" : 46
      },
      "nodeContext" : "nCols - 1 > arr.length - nEmptyRows",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return nCols - 1 > arr.length - nEmptyRows;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 60,
        "startColumnNumber" : 54,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nCols=arr[0].length, nEmptyRows=0;\n  outer:   for (int y=0; y < arr.length; y++) {\n    for (int x=0; x < nCols; x++)     if (Math.abs(arr[y][x]) > EPS)     continue outer;\n    nEmptyRows++;\n  }\n  return nCols - 1 > arr.length - nEmptyRows;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static boolean hasMultipleSolutions(double[][] arr){\n  int nCols=arr[0].length, nEmptyRows=0;\n  outer:   for (int y=0; y < arr.length; y++) {\n    for (int x=0; x < nCols; x++)     if (Math.abs(arr[y][x]) > EPS)     continue outer;\n    nEmptyRows++;\n  }\n  return nCols - 1 > arr.length - nEmptyRows;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 47
      },
      "nodeContext" : "return nCols - 1 > arr.length - nEmptyRows;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 67,
    "startColumnNumber" : 23,
    "endLineNumber" : 67,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}