{
  "id" : 338,
  "expression" : "42L",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-oxm/src/test/java/org/springframework/oxm/jaxb/Jaxb2UnmarshallerTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "42L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 75,
      "startColumnNumber" : 36,
      "endLineNumber" : 75,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(\"Number is invalid\",42L,flight.getNumber())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(\"Number is invalid\",42L,flight.getNumber());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 72,
        "startColumnNumber" : 37,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FlightType flight=(FlightType)o;\n  assertNotNull(\"Flight is null\",flight);\n  assertEquals(\"Number is invalid\",42L,flight.getNumber());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 71,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void testFlight(Object o){\n  FlightType flight=(FlightType)o;\n  assertNotNull(\"Flight is null\",flight);\n  assertEquals(\"Number is invalid\",42L,flight.getNumber());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 33,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(\"Number is invalid\",42L,flight.getNumber());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 75,
    "startColumnNumber" : 36,
    "endLineNumber" : 75,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}