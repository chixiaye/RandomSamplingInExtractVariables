{
  "id" : 131,
  "expression" : "(secretData == null)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/core/src/main/java/org/keycloak/representations/idm/CredentialRepresentation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(secretData == null)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 182,
      "startColumnNumber" : 35,
      "endLineNumber" : 182,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 182,
        "startColumnNumber" : 35,
        "endLineNumber" : 182,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(secretData == null) ? 0 : secretData.hashCode()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 182,
        "startColumnNumber" : 34,
        "endLineNumber" : 182,
        "endColumnNumber" : 84
      },
      "nodeContext" : "((secretData == null) ? 0 : secretData.hashCode())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 182,
        "startColumnNumber" : 17,
        "endLineNumber" : 182,
        "endColumnNumber" : 84
      },
      "nodeContext" : "prime * result + ((secretData == null) ? 0 : secretData.hashCode())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result=prime * result + ((secretData == null) ? 0 : secretData.hashCode())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result=prime * result + ((secretData == null) ? 0 : secretData.hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 177,
        "startColumnNumber" : 26,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int prime=31;\n  int result=1;\n  result=prime * result + ((createdDate == null) ? 0 : createdDate.hashCode());\n  result=prime * result + ((userLabel == null) ? 0 : userLabel.hashCode());\n  result=prime * result + ((secretData == null) ? 0 : secretData.hashCode());\n  result=prime * result + ((credentialData == null) ? 0 : credentialData.hashCode());\n  result=prime * result + ((temporary == null) ? 0 : temporary.hashCode());\n  result=prime * result + ((type == null) ? 0 : type.hashCode());\n  result=prime * result + ((id == null) ? 0 : id.hashCode());\n  result=prime * result + ((value == null) ? 0 : value.hashCode());\n  result=prime * result + ((priority == null) ? 0 : priority);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int hashCode(){\n  final int prime=31;\n  int result=1;\n  result=prime * result + ((createdDate == null) ? 0 : createdDate.hashCode());\n  result=prime * result + ((userLabel == null) ? 0 : userLabel.hashCode());\n  result=prime * result + ((secretData == null) ? 0 : secretData.hashCode());\n  result=prime * result + ((credentialData == null) ? 0 : credentialData.hashCode());\n  result=prime * result + ((temporary == null) ? 0 : temporary.hashCode());\n  result=prime * result + ((type == null) ? 0 : type.hashCode());\n  result=prime * result + ((id == null) ? 0 : id.hashCode());\n  result=prime * result + ((value == null) ? 0 : value.hashCode());\n  result=prime * result + ((priority == null) ? 0 : priority);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result=prime * result + ((secretData == null) ? 0 : secretData.hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 182,
    "startColumnNumber" : 35,
    "endLineNumber" : 182,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}