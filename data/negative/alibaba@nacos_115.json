{
  "id" : 115,
  "expression" : "StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)",
  "projectName" : "alibaba@nacos",
  "commitID" : "6027d36222bb3cb89f0fb5fde147f916055427f5",
  "filePath" : "core/src/main/java/com/alibaba/nacos/core/remote/ConnectionManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 124,
      "startLineNumber" : 146,
      "startColumnNumber" : 16,
      "endLineNumber" : 147,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n  Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n  if (integerApp != null && integerApp.intValue() >= 0) {\n    return currentCount.get() < integerApp.intValue();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 136,
        "startColumnNumber" : 41,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (connectionLimitRule.getCountLimitPerClientIp().containsKey(clientIp)) {\n    Integer integer=connectionLimitRule.getCountLimitPerClientIp().get(clientIp);\n    if (integer != null && integer.intValue() >= 0) {\n      return currentCount.get() < integer.intValue();\n    }\n  }\n  String appName=connection.getMetaInfo().getAppName();\n  if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n    Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n    if (integerApp != null && integerApp.intValue() >= 0) {\n      return currentCount.get() < integerApp.intValue();\n    }\n  }\n  int countLimitPerClientIpDefault=connectionLimitRule.getCountLimitPerClientIpDefault();\n  return countLimitPerClientIpDefault <= 0 || currentCount.get() < countLimitPerClientIpDefault;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (connectionLimitRule != null) {\n  if (connectionLimitRule.getCountLimitPerClientIp().containsKey(clientIp)) {\n    Integer integer=connectionLimitRule.getCountLimitPerClientIp().get(clientIp);\n    if (integer != null && integer.intValue() >= 0) {\n      return currentCount.get() < integer.intValue();\n    }\n  }\n  String appName=connection.getMetaInfo().getAppName();\n  if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n    Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n    if (integerApp != null && integerApp.intValue() >= 0) {\n      return currentCount.get() < integerApp.intValue();\n    }\n  }\n  int countLimitPerClientIpDefault=connectionLimitRule.getCountLimitPerClientIpDefault();\n  return countLimitPerClientIpDefault <= 0 || currentCount.get() < countLimitPerClientIpDefault;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1707,
        "startLineNumber" : 123,
        "startColumnNumber" : 54,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isOverLimit()) {\n    return false;\n  }\n  String clientIp=connection.getMetaInfo().clientIp;\n  if (!connectionForClientIp.containsKey(clientIp)) {\n    connectionForClientIp.putIfAbsent(clientIp,new AtomicInteger(0));\n  }\n  AtomicInteger currentCount=connectionForClientIp.get(clientIp);\n  if (connectionLimitRule != null) {\n    if (connectionLimitRule.getCountLimitPerClientIp().containsKey(clientIp)) {\n      Integer integer=connectionLimitRule.getCountLimitPerClientIp().get(clientIp);\n      if (integer != null && integer.intValue() >= 0) {\n        return currentCount.get() < integer.intValue();\n      }\n    }\n    String appName=connection.getMetaInfo().getAppName();\n    if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n      Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n      if (integerApp != null && integerApp.intValue() >= 0) {\n        return currentCount.get() < integerApp.intValue();\n      }\n    }\n    int countLimitPerClientIpDefault=connectionLimitRule.getCountLimitPerClientIpDefault();\n    return countLimitPerClientIpDefault <= 0 || currentCount.get() < countLimitPerClientIpDefault;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1757,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean checkLimit(Connection connection){\n  if (isOverLimit()) {\n    return false;\n  }\n  String clientIp=connection.getMetaInfo().clientIp;\n  if (!connectionForClientIp.containsKey(clientIp)) {\n    connectionForClientIp.putIfAbsent(clientIp,new AtomicInteger(0));\n  }\n  AtomicInteger currentCount=connectionForClientIp.get(clientIp);\n  if (connectionLimitRule != null) {\n    if (connectionLimitRule.getCountLimitPerClientIp().containsKey(clientIp)) {\n      Integer integer=connectionLimitRule.getCountLimitPerClientIp().get(clientIp);\n      if (integer != null && integer.intValue() >= 0) {\n        return currentCount.get() < integer.intValue();\n      }\n    }\n    String appName=connection.getMetaInfo().getAppName();\n    if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n      Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n      if (integerApp != null && integerApp.intValue() >= 0) {\n        return currentCount.get() < integerApp.intValue();\n      }\n    }\n    int countLimitPerClientIpDefault=connectionLimitRule.getCountLimitPerClientIpDefault();\n    return countLimitPerClientIpDefault <= 0 || currentCount.get() < countLimitPerClientIpDefault;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (StringUtils.isNotBlank(appName) && connectionLimitRule.getCountLimitPerClientApp().containsKey(appName)) {\n  Integer integerApp=connectionLimitRule.getCountLimitPerClientApp().get(appName);\n  if (integerApp != null && integerApp.intValue() >= 0) {\n    return currentCount.get() < integerApp.intValue();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 124,
    "startLineNumber" : 146,
    "startColumnNumber" : 16,
    "endLineNumber" : 147,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}