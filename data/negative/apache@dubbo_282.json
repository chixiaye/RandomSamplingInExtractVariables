{
  "id" : 282,
  "expression" : "sb.append(line)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/textui/TKv.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sb.append(line)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 72,
      "startColumnNumber" : 16,
      "endLineNumber" : 72,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sb.append(line).append(System.lineSeparator())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 63
      },
      "nodeContext" : "sb.append(line).append(System.lineSeparator());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 63,
        "startColumnNumber" : 42,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String line=scanner.nextLine();\n  if (line != null) {\n    line=StringUtils.stripEnd(line,\" \");\n    if (line.isEmpty()) {\n      line=\" \";\n    }\n  }\n  sb.append(line).append(System.lineSeparator());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (scanner.hasNextLine()) {\n  String line=scanner.nextLine();\n  if (line != null) {\n    line=StringUtils.stripEnd(line,\" \");\n    if (line.isEmpty()) {\n      line=\" \";\n    }\n  }\n  sb.append(line).append(System.lineSeparator());\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 62,
        "startColumnNumber" : 53,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line != null) {\n      line=StringUtils.stripEnd(line,\" \");\n      if (line.isEmpty()) {\n        line=\" \";\n      }\n    }\n    sb.append(line).append(System.lineSeparator());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Scanner scanner=new Scanner(content)){\n  while (scanner.hasNextLine()) {\n    String line=scanner.nextLine();\n    if (line != null) {\n      line=StringUtils.stripEnd(line,\" \");\n      if (line.isEmpty()) {\n        line=\" \";\n      }\n    }\n    sb.append(line).append(System.lineSeparator());\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 60,
        "startColumnNumber" : 51,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringBuilder sb=new StringBuilder();\n  try (Scanner scanner=new Scanner(content)){\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line != null) {\n        line=StringUtils.stripEnd(line,\" \");\n        if (line.isEmpty()) {\n          line=\" \";\n        }\n      }\n      sb.append(line).append(System.lineSeparator());\n    }\n  }\n   return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String filterEmptyLine(String content){\n  final StringBuilder sb=new StringBuilder();\n  try (Scanner scanner=new Scanner(content)){\n    while (scanner.hasNextLine()) {\n      String line=scanner.nextLine();\n      if (line != null) {\n        line=StringUtils.stripEnd(line,\" \");\n        if (line.isEmpty()) {\n          line=\" \";\n        }\n      }\n      sb.append(line).append(System.lineSeparator());\n    }\n  }\n   return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 63
      },
      "nodeContext" : "sb.append(line).append(System.lineSeparator());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 72,
    "startColumnNumber" : 16,
    "endLineNumber" : 72,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}