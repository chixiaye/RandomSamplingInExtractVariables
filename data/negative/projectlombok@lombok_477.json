{
  "id" : 477,
  "expression" : "b",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/EclipseHandlerUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 344,
      "startColumnNumber" : 43,
      "endLineNumber" : 344,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 344,
        "startColumnNumber" : 43,
        "endLineNumber" : 344,
        "endColumnNumber" : 52
      },
      "nodeContext" : "b[idx2++]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 344,
        "startColumnNumber" : 43,
        "endLineNumber" : 344,
        "endColumnNumber" : 76
      },
      "nodeContext" : "b[idx2++]=copyType(ref,source)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 344,
        "startColumnNumber" : 43,
        "endLineNumber" : 344,
        "endColumnNumber" : 77
      },
      "nodeContext" : "b[idx2++]=copyType(ref,source);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 344,
        "startColumnNumber" : 4,
        "endLineNumber" : 344,
        "endColumnNumber" : 77
      },
      "nodeContext" : "for (TypeReference ref : param.bounds) b[idx2++]=copyType(ref,source);\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 341,
        "startColumnNumber" : 29,
        "endLineNumber" : 346,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  TypeReference[] b=new TypeReference[param.bounds.length];\n  int idx2=0;\n  for (  TypeReference ref : param.bounds)   b[idx2++]=copyType(ref,source);\n  o.bounds=b;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 341,
        "startColumnNumber" : 3,
        "endLineNumber" : 346,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (param.bounds != null) {\n  TypeReference[] b=new TypeReference[param.bounds.length];\n  int idx2=0;\n  for (  TypeReference ref : param.bounds)   b[idx2++]=copyType(ref,source);\n  o.bounds=b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 328,
        "startColumnNumber" : 37,
        "endLineNumber" : 348,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeParameter o=new TypeParameter();\n  setGeneratedBy(o,source);\n  o.annotations=param.annotations;\n  o.bits=param.bits;\n  o.modifiers=param.modifiers;\n  o.name=param.name;\n  o.type=copyType(param.type,source);\n  o.sourceStart=param.sourceStart;\n  o.sourceEnd=param.sourceEnd;\n  o.declarationEnd=param.declarationEnd;\n  o.declarationSourceStart=param.declarationSourceStart;\n  o.declarationSourceEnd=param.declarationSourceEnd;\n  if (param.bounds != null) {\n    TypeReference[] b=new TypeReference[param.bounds.length];\n    int idx2=0;\n    for (    TypeReference ref : param.bounds)     b[idx2++]=copyType(ref,source);\n    o.bounds=b;\n  }\n  out[idx++]=o;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 328,
        "startColumnNumber" : 2,
        "endLineNumber" : 348,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (TypeParameter param : params) {\n  TypeParameter o=new TypeParameter();\n  setGeneratedBy(o,source);\n  o.annotations=param.annotations;\n  o.bits=param.bits;\n  o.modifiers=param.modifiers;\n  o.name=param.name;\n  o.type=copyType(param.type,source);\n  o.sourceStart=param.sourceStart;\n  o.sourceEnd=param.sourceEnd;\n  o.declarationEnd=param.declarationEnd;\n  o.declarationSourceStart=param.declarationSourceStart;\n  o.declarationSourceEnd=param.declarationSourceEnd;\n  if (param.bounds != null) {\n    TypeReference[] b=new TypeReference[param.bounds.length];\n    int idx2=0;\n    for (    TypeReference ref : param.bounds)     b[idx2++]=copyType(ref,source);\n    o.bounds=b;\n  }\n  out[idx++]=o;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 163,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 324,
        "startColumnNumber" : 86,
        "endLineNumber" : 350,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (params == null)   return null;\n  TypeParameter[] out=new TypeParameter[params.length];\n  int idx=0;\n  for (  TypeParameter param : params) {\n    TypeParameter o=new TypeParameter();\n    setGeneratedBy(o,source);\n    o.annotations=param.annotations;\n    o.bits=param.bits;\n    o.modifiers=param.modifiers;\n    o.name=param.name;\n    o.type=copyType(param.type,source);\n    o.sourceStart=param.sourceStart;\n    o.sourceEnd=param.sourceEnd;\n    o.declarationEnd=param.declarationEnd;\n    o.declarationSourceStart=param.declarationSourceStart;\n    o.declarationSourceEnd=param.declarationSourceEnd;\n    if (param.bounds != null) {\n      TypeReference[] b=new TypeReference[param.bounds.length];\n      int idx2=0;\n      for (      TypeReference ref : param.bounds)       b[idx2++]=copyType(ref,source);\n      o.bounds=b;\n    }\n    out[idx++]=o;\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 319,
        "startColumnNumber" : 1,
        "endLineNumber" : 350,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * You can't share TypeParameter objects or bad things happen; for example, one 'T' resolves differently from another 'T', even for the same T in a single class file. Unfortunately the TypeParameter type hierarchy is complicated and there's no clone method on TypeParameter itself. This method can clone them.\n */\npublic static TypeParameter[] copyTypeParams(TypeParameter[] params,ASTNode source){\n  if (params == null)   return null;\n  TypeParameter[] out=new TypeParameter[params.length];\n  int idx=0;\n  for (  TypeParameter param : params) {\n    TypeParameter o=new TypeParameter();\n    setGeneratedBy(o,source);\n    o.annotations=param.annotations;\n    o.bits=param.bits;\n    o.modifiers=param.modifiers;\n    o.name=param.name;\n    o.type=copyType(param.type,source);\n    o.sourceStart=param.sourceStart;\n    o.sourceEnd=param.sourceEnd;\n    o.declarationEnd=param.declarationEnd;\n    o.declarationSourceStart=param.declarationSourceStart;\n    o.declarationSourceEnd=param.declarationSourceEnd;\n    if (param.bounds != null) {\n      TypeReference[] b=new TypeReference[param.bounds.length];\n      int idx2=0;\n      for (      TypeReference ref : param.bounds)       b[idx2++]=copyType(ref,source);\n      o.bounds=b;\n    }\n    out[idx++]=o;\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 344,
        "startColumnNumber" : 4,
        "endLineNumber" : 344,
        "endColumnNumber" : 77
      },
      "nodeContext" : "for (TypeReference ref : param.bounds) b[idx2++]=copyType(ref,source);\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "lombok.eclipse.handlers.TypeReference[]"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 345,
      "startColumnNumber" : 15,
      "endLineNumber" : 345,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 345,
        "startColumnNumber" : 4,
        "endLineNumber" : 345,
        "endColumnNumber" : 16
      },
      "nodeContext" : "o.bounds=b",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 345,
        "startColumnNumber" : 4,
        "endLineNumber" : 345,
        "endColumnNumber" : 17
      },
      "nodeContext" : "o.bounds=b;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 341,
        "startColumnNumber" : 29,
        "endLineNumber" : 346,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  TypeReference[] b=new TypeReference[param.bounds.length];\n  int idx2=0;\n  for (  TypeReference ref : param.bounds)   b[idx2++]=copyType(ref,source);\n  o.bounds=b;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 341,
        "startColumnNumber" : 3,
        "endLineNumber" : 346,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (param.bounds != null) {\n  TypeReference[] b=new TypeReference[param.bounds.length];\n  int idx2=0;\n  for (  TypeReference ref : param.bounds)   b[idx2++]=copyType(ref,source);\n  o.bounds=b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 328,
        "startColumnNumber" : 37,
        "endLineNumber" : 348,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeParameter o=new TypeParameter();\n  setGeneratedBy(o,source);\n  o.annotations=param.annotations;\n  o.bits=param.bits;\n  o.modifiers=param.modifiers;\n  o.name=param.name;\n  o.type=copyType(param.type,source);\n  o.sourceStart=param.sourceStart;\n  o.sourceEnd=param.sourceEnd;\n  o.declarationEnd=param.declarationEnd;\n  o.declarationSourceStart=param.declarationSourceStart;\n  o.declarationSourceEnd=param.declarationSourceEnd;\n  if (param.bounds != null) {\n    TypeReference[] b=new TypeReference[param.bounds.length];\n    int idx2=0;\n    for (    TypeReference ref : param.bounds)     b[idx2++]=copyType(ref,source);\n    o.bounds=b;\n  }\n  out[idx++]=o;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 328,
        "startColumnNumber" : 2,
        "endLineNumber" : 348,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (TypeParameter param : params) {\n  TypeParameter o=new TypeParameter();\n  setGeneratedBy(o,source);\n  o.annotations=param.annotations;\n  o.bits=param.bits;\n  o.modifiers=param.modifiers;\n  o.name=param.name;\n  o.type=copyType(param.type,source);\n  o.sourceStart=param.sourceStart;\n  o.sourceEnd=param.sourceEnd;\n  o.declarationEnd=param.declarationEnd;\n  o.declarationSourceStart=param.declarationSourceStart;\n  o.declarationSourceEnd=param.declarationSourceEnd;\n  if (param.bounds != null) {\n    TypeReference[] b=new TypeReference[param.bounds.length];\n    int idx2=0;\n    for (    TypeReference ref : param.bounds)     b[idx2++]=copyType(ref,source);\n    o.bounds=b;\n  }\n  out[idx++]=o;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 163,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 324,
        "startColumnNumber" : 86,
        "endLineNumber" : 350,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (params == null)   return null;\n  TypeParameter[] out=new TypeParameter[params.length];\n  int idx=0;\n  for (  TypeParameter param : params) {\n    TypeParameter o=new TypeParameter();\n    setGeneratedBy(o,source);\n    o.annotations=param.annotations;\n    o.bits=param.bits;\n    o.modifiers=param.modifiers;\n    o.name=param.name;\n    o.type=copyType(param.type,source);\n    o.sourceStart=param.sourceStart;\n    o.sourceEnd=param.sourceEnd;\n    o.declarationEnd=param.declarationEnd;\n    o.declarationSourceStart=param.declarationSourceStart;\n    o.declarationSourceEnd=param.declarationSourceEnd;\n    if (param.bounds != null) {\n      TypeReference[] b=new TypeReference[param.bounds.length];\n      int idx2=0;\n      for (      TypeReference ref : param.bounds)       b[idx2++]=copyType(ref,source);\n      o.bounds=b;\n    }\n    out[idx++]=o;\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 319,
        "startColumnNumber" : 1,
        "endLineNumber" : 350,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * You can't share TypeParameter objects or bad things happen; for example, one 'T' resolves differently from another 'T', even for the same T in a single class file. Unfortunately the TypeParameter type hierarchy is complicated and there's no clone method on TypeParameter itself. This method can clone them.\n */\npublic static TypeParameter[] copyTypeParams(TypeParameter[] params,ASTNode source){\n  if (params == null)   return null;\n  TypeParameter[] out=new TypeParameter[params.length];\n  int idx=0;\n  for (  TypeParameter param : params) {\n    TypeParameter o=new TypeParameter();\n    setGeneratedBy(o,source);\n    o.annotations=param.annotations;\n    o.bits=param.bits;\n    o.modifiers=param.modifiers;\n    o.name=param.name;\n    o.type=copyType(param.type,source);\n    o.sourceStart=param.sourceStart;\n    o.sourceEnd=param.sourceEnd;\n    o.declarationEnd=param.declarationEnd;\n    o.declarationSourceStart=param.declarationSourceStart;\n    o.declarationSourceEnd=param.declarationSourceEnd;\n    if (param.bounds != null) {\n      TypeReference[] b=new TypeReference[param.bounds.length];\n      int idx2=0;\n      for (      TypeReference ref : param.bounds)       b[idx2++]=copyType(ref,source);\n      o.bounds=b;\n    }\n    out[idx++]=o;\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 345,
        "startColumnNumber" : 4,
        "endLineNumber" : 345,
        "endColumnNumber" : 17
      },
      "nodeContext" : "o.bounds=b;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "lombok.eclipse.handlers.TypeReference[]"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 344,
    "startColumnNumber" : 43,
    "endLineNumber" : 344,
    "endColumnNumber" : 44
  }, {
    "charLength" : 1,
    "startLineNumber" : 345,
    "startColumnNumber" : 15,
    "endLineNumber" : 345,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}