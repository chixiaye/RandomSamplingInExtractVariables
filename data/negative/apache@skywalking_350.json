{
  "id" : 350,
  "expression" : "null != argument",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/kafka-plugin/src/test/java/org/apache/skywalking/apm/plugin/kafka/KafkaProducerInterceptorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null != argument",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 125,
      "startColumnNumber" : 12,
      "endLineNumber" : 125,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != argument) {\n  Callback callback=(Callback)argument;\n  callback.onCompletion(null,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 122,
        "startColumnNumber" : 62,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  producerInterceptor.beforeMethod(kafkaProducerInstance,null,arguments,argumentType,null);\n  Object argument=arguments[1];\n  if (null != argument) {\n    Callback callback=(Callback)argument;\n    callback.onCompletion(null,null);\n  }\n  producerInterceptor.afterMethod(kafkaProducerInstance,null,arguments,argumentType,null);\n  List<TraceSegment> traceSegmentList=segmentStorage.getTraceSegments();\n  assertThat(traceSegmentList.size(),is(1));\n  TraceSegment segment=traceSegmentList.get(0);\n  List<AbstractTracingSpan> spans=SegmentHelper.getSpans(segment);\n  assertThat(spans.size(),is(2));\n  assertCallbackSpan(spans.get(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendMessageAndCallBack() throws Throwable {\n  producerInterceptor.beforeMethod(kafkaProducerInstance,null,arguments,argumentType,null);\n  Object argument=arguments[1];\n  if (null != argument) {\n    Callback callback=(Callback)argument;\n    callback.onCompletion(null,null);\n  }\n  producerInterceptor.afterMethod(kafkaProducerInstance,null,arguments,argumentType,null);\n  List<TraceSegment> traceSegmentList=segmentStorage.getTraceSegments();\n  assertThat(traceSegmentList.size(),is(1));\n  TraceSegment segment=traceSegmentList.get(0);\n  List<AbstractTracingSpan> spans=SegmentHelper.getSpans(segment);\n  assertThat(spans.size(),is(2));\n  assertCallbackSpan(spans.get(0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != argument) {\n  Callback callback=(Callback)argument;\n  callback.onCompletion(null,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 125,
    "startColumnNumber" : 12,
    "endLineNumber" : 125,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}