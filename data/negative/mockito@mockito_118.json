{
  "id" : 118,
  "expression" : "verify(mock,atLeastOnce())",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/bugs/ShouldMocksCompareToBeConsistentWithEqualsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "verify(mock,atLeastOnce())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 60,
      "startColumnNumber" : 8,
      "endLineNumber" : 60,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 62
      },
      "nodeContext" : "verify(mock,atLeastOnce()).compareTo(any(Date.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 63
      },
      "nodeContext" : "verify(mock,atLeastOnce()).compareTo(any(Date.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Date mock=mock(Date.class);\n  when(mock.compareTo(any(Date.class))).thenReturn(10);\n  mock.compareTo(new Date());\n  assertEquals(10,mock.compareTo(new Date()));\n  verify(mock,atLeastOnce()).compareTo(any(Date.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_allow_stubbing_and_verifying_compare_to(){\n  Date mock=mock(Date.class);\n  when(mock.compareTo(any(Date.class))).thenReturn(10);\n  mock.compareTo(new Date());\n  assertEquals(10,mock.compareTo(new Date()));\n  verify(mock,atLeastOnce()).compareTo(any(Date.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 63
      },
      "nodeContext" : "verify(mock,atLeastOnce()).compareTo(any(Date.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 60,
    "startColumnNumber" : 8,
    "endLineNumber" : 60,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}