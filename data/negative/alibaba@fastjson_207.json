{
  "id" : 207,
  "expression" : "new long[]{1}",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/JSONTest2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new long[]{1}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 65,
      "startColumnNumber" : 33,
      "endLineNumber" : 65,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assert.assertArrayEquals(new long[]{1},(long[])JSON.parseObject(\"[1]\",long[].class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertArrayEquals(new long[]{1},(long[])JSON.parseObject(\"[1]\",long[].class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 61,
        "startColumnNumber" : 42,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertArrayEquals(new byte[]{1},(byte[])JSON.parseObject(\"[1]\",byte[].class));\n  Assert.assertArrayEquals(new short[]{1},(short[])JSON.parseObject(\"[1]\",short[].class));\n  Assert.assertArrayEquals(new int[]{1},(int[])JSON.parseObject(\"[1]\",int[].class));\n  Assert.assertArrayEquals(new long[]{1},(long[])JSON.parseObject(\"[1]\",long[].class));\n  float[] array1=JSON.parseObject(\"[1]\",float[].class);\n  double[] array2=JSON.parseObject(\"[1]\",double[].class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_5() throws Exception {\n  Assert.assertArrayEquals(new byte[]{1},(byte[])JSON.parseObject(\"[1]\",byte[].class));\n  Assert.assertArrayEquals(new short[]{1},(short[])JSON.parseObject(\"[1]\",short[].class));\n  Assert.assertArrayEquals(new int[]{1},(int[])JSON.parseObject(\"[1]\",int[].class));\n  Assert.assertArrayEquals(new long[]{1},(long[])JSON.parseObject(\"[1]\",long[].class));\n  float[] array1=JSON.parseObject(\"[1]\",float[].class);\n  double[] array2=JSON.parseObject(\"[1]\",double[].class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertArrayEquals(new long[]{1},(long[])JSON.parseObject(\"[1]\",long[].class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "long[]"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 65,
    "startColumnNumber" : 33,
    "endLineNumber" : 65,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}