{
  "id" : 289,
  "expression" : "expectedData",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/datasource/src/test/java/com/google/android/exoplayer2/upstream/DataSchemeDataSourceTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 165,
      "startColumnNumber" : 35,
      "endLineNumber" : 165,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 165,
        "startColumnNumber" : 35,
        "endLineNumber" : 165,
        "endColumnNumber" : 54
      },
      "nodeContext" : "expectedData.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(length).isEqualTo(expectedData.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(length).isEqualTo(expectedData.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long length=dataSource.open(dataSpec);\n  assertThat(length).isEqualTo(expectedData.length);\n  byte[] readData=DataSourceUtil.readToEnd(dataSource);\n  assertThat(readData).isEqualTo(expectedData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  long length=dataSource.open(dataSpec);\n  assertThat(length).isEqualTo(expectedData.length);\n  byte[] readData=DataSourceUtil.readToEnd(dataSource);\n  assertThat(readData).isEqualTo(expectedData);\n}\n  finally {\n  dataSource.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 162,
        "startColumnNumber" : 88,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    long length=dataSource.open(dataSpec);\n    assertThat(length).isEqualTo(expectedData.length);\n    byte[] readData=DataSourceUtil.readToEnd(dataSource);\n    assertThat(readData).isEqualTo(expectedData);\n  }\n  finally {\n    dataSource.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 153,
        "startColumnNumber" : 2,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Asserts that data read from a  {@link DataSource} matches {@code expected}.\n * @param dataSource The {@link DataSource} through which to read.\n * @param dataSpec The {@link DataSpec} to use when opening the {@link DataSource}.\n * @param expectedData The expected data.\n * @throws IOException If an error occurs reading fom the {@link DataSource}.\n */\nprivate static void assertDataSourceContent(DataSource dataSource,DataSpec dataSpec,byte[] expectedData) throws IOException {\n  try {\n    long length=dataSource.open(dataSpec);\n    assertThat(length).isEqualTo(expectedData.length);\n    byte[] readData=DataSourceUtil.readToEnd(dataSource);\n    assertThat(readData).isEqualTo(expectedData);\n  }\n  finally {\n    dataSource.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThat(length).isEqualTo(expectedData.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "expectedData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 167,
      "startColumnNumber" : 37,
      "endLineNumber" : 167,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(readData).isEqualTo(expectedData)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(readData).isEqualTo(expectedData);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long length=dataSource.open(dataSpec);\n  assertThat(length).isEqualTo(expectedData.length);\n  byte[] readData=DataSourceUtil.readToEnd(dataSource);\n  assertThat(readData).isEqualTo(expectedData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  long length=dataSource.open(dataSpec);\n  assertThat(length).isEqualTo(expectedData.length);\n  byte[] readData=DataSourceUtil.readToEnd(dataSource);\n  assertThat(readData).isEqualTo(expectedData);\n}\n  finally {\n  dataSource.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 162,
        "startColumnNumber" : 88,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    long length=dataSource.open(dataSpec);\n    assertThat(length).isEqualTo(expectedData.length);\n    byte[] readData=DataSourceUtil.readToEnd(dataSource);\n    assertThat(readData).isEqualTo(expectedData);\n  }\n  finally {\n    dataSource.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 153,
        "startColumnNumber" : 2,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Asserts that data read from a  {@link DataSource} matches {@code expected}.\n * @param dataSource The {@link DataSource} through which to read.\n * @param dataSpec The {@link DataSpec} to use when opening the {@link DataSource}.\n * @param expectedData The expected data.\n * @throws IOException If an error occurs reading fom the {@link DataSource}.\n */\nprivate static void assertDataSourceContent(DataSource dataSource,DataSpec dataSpec,byte[] expectedData) throws IOException {\n  try {\n    long length=dataSource.open(dataSpec);\n    assertThat(length).isEqualTo(expectedData.length);\n    byte[] readData=DataSourceUtil.readToEnd(dataSource);\n    assertThat(readData).isEqualTo(expectedData);\n  }\n  finally {\n    dataSource.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(readData).isEqualTo(expectedData);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 165,
    "startColumnNumber" : 35,
    "endLineNumber" : 165,
    "endColumnNumber" : 47
  }, {
    "charLength" : 12,
    "startLineNumber" : 167,
    "startColumnNumber" : 37,
    "endLineNumber" : 167,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}