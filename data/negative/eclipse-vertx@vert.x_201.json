{
  "id" : 201,
  "expression" : "getOption(opt.substring(0,1))",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/cli/impl/DefaultParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getOption(opt.substring(0,1))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 454,
      "startColumnNumber" : 21,
      "endLineNumber" : 454,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 454,
        "startColumnNumber" : 8,
        "endLineNumber" : 454,
        "endColumnNumber" : 52
      },
      "nodeContext" : "handleOption(getOption(opt.substring(0,1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 454,
        "startColumnNumber" : 8,
        "endLineNumber" : 454,
        "endColumnNumber" : 53
      },
      "nodeContext" : "handleOption(getOption(opt.substring(0,1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 452,
        "startColumnNumber" : 74,
        "endLineNumber" : 457,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  handleOption(getOption(opt.substring(0,1)));\n  commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n  current=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 452,
        "startColumnNumber" : 13,
        "endLineNumber" : 460,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n  handleOption(getOption(opt.substring(0,1)));\n  commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n  current=null;\n}\n else {\n  handleLongOptionWithEqual(token);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 438,
        "startColumnNumber" : 6,
        "endLineNumber" : 460,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (opt.length() == 1) {\n  Option option=getOption(opt);\n  if (option != null) {\n    if (commandLine.acceptMoreValues(option)) {\n      handleOption(option);\n      commandLine.addRawValue(option,value);\n      current=null;\n    }\n else {\n      throw new InvalidValueException(option,value);\n    }\n  }\n else {\n    handleArgument(token);\n  }\n}\n else if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n  handleOption(getOption(opt.substring(0,1)));\n  commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n  current=null;\n}\n else {\n  handleLongOptionWithEqual(token);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 913,
        "startLineNumber" : 434,
        "startColumnNumber" : 11,
        "endLineNumber" : 461,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String opt=t.substring(0,pos);\n  String value=t.substring(pos + 1);\n  if (opt.length() == 1) {\n    Option option=getOption(opt);\n    if (option != null) {\n      if (commandLine.acceptMoreValues(option)) {\n        handleOption(option);\n        commandLine.addRawValue(option,value);\n        current=null;\n      }\n else {\n        throw new InvalidValueException(option,value);\n      }\n    }\n else {\n      handleArgument(token);\n    }\n  }\n else   if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n    handleOption(getOption(opt.substring(0,1)));\n    commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n    current=null;\n  }\n else {\n    handleLongOptionWithEqual(token);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2015,
        "startLineNumber" : 404,
        "startColumnNumber" : 11,
        "endLineNumber" : 461,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (pos == -1) {\n  if (hasOptionWithShortName(t)) {\n    handleOption(getOption(t));\n  }\n else   if (!getMatchingOptions(t).isEmpty()) {\n    handleLongOptionWithoutEqual(token);\n  }\n else {\n    String opt=getLongPrefix(t);\n    if (opt != null) {\n      if (commandLine.acceptMoreValues(getOption(opt))) {\n        handleOption(getOption(opt));\n        commandLine.addRawValue(getOption(opt),t.substring(opt.length()));\n        current=null;\n      }\n else {\n        throw new InvalidValueException(getOption(opt),t.substring(opt.length()));\n      }\n    }\n else     if (isAValidShortOption(t)) {\n      String strip=t.substring(0,1);\n      Option option=getOption(strip);\n      handleOption(option);\n      commandLine.addRawValue(current,t.substring(1));\n      current=null;\n    }\n else {\n      handleConcatenatedOptions(token);\n    }\n  }\n}\n else {\n  String opt=t.substring(0,pos);\n  String value=t.substring(pos + 1);\n  if (opt.length() == 1) {\n    Option option=getOption(opt);\n    if (option != null) {\n      if (commandLine.acceptMoreValues(option)) {\n        handleOption(option);\n        commandLine.addRawValue(option,value);\n        current=null;\n      }\n else {\n        throw new InvalidValueException(option,value);\n      }\n    }\n else {\n      handleArgument(token);\n    }\n  }\n else   if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n    handleOption(getOption(opt.substring(0,1)));\n    commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n    current=null;\n  }\n else {\n    handleLongOptionWithEqual(token);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2190,
        "startLineNumber" : 397,
        "startColumnNumber" : 4,
        "endLineNumber" : 461,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (t.length() == 1) {\n  if (hasOptionWithShortName(t)) {\n    handleOption(getOption(t));\n  }\n else {\n    handleArgument(token);\n  }\n}\n else if (pos == -1) {\n  if (hasOptionWithShortName(t)) {\n    handleOption(getOption(t));\n  }\n else   if (!getMatchingOptions(t).isEmpty()) {\n    handleLongOptionWithoutEqual(token);\n  }\n else {\n    String opt=getLongPrefix(t);\n    if (opt != null) {\n      if (commandLine.acceptMoreValues(getOption(opt))) {\n        handleOption(getOption(opt));\n        commandLine.addRawValue(getOption(opt),t.substring(opt.length()));\n        current=null;\n      }\n else {\n        throw new InvalidValueException(getOption(opt),t.substring(opt.length()));\n      }\n    }\n else     if (isAValidShortOption(t)) {\n      String strip=t.substring(0,1);\n      Option option=getOption(strip);\n      handleOption(option);\n      commandLine.addRawValue(current,t.substring(1));\n      current=null;\n    }\n else {\n      handleConcatenatedOptions(token);\n    }\n  }\n}\n else {\n  String opt=t.substring(0,pos);\n  String value=t.substring(pos + 1);\n  if (opt.length() == 1) {\n    Option option=getOption(opt);\n    if (option != null) {\n      if (commandLine.acceptMoreValues(option)) {\n        handleOption(option);\n        commandLine.addRawValue(option,value);\n        current=null;\n      }\n else {\n        throw new InvalidValueException(option,value);\n      }\n    }\n else {\n      handleArgument(token);\n    }\n  }\n else   if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n    handleOption(getOption(opt.substring(0,1)));\n    commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n    current=null;\n  }\n else {\n    handleLongOptionWithEqual(token);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 271,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2274,
        "startLineNumber" : 393,
        "startColumnNumber" : 74,
        "endLineNumber" : 462,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String t=stripLeadingHyphens(token);\n  int pos=t.indexOf('=');\n  if (t.length() == 1) {\n    if (hasOptionWithShortName(t)) {\n      handleOption(getOption(t));\n    }\n else {\n      handleArgument(token);\n    }\n  }\n else   if (pos == -1) {\n    if (hasOptionWithShortName(t)) {\n      handleOption(getOption(t));\n    }\n else     if (!getMatchingOptions(t).isEmpty()) {\n      handleLongOptionWithoutEqual(token);\n    }\n else {\n      String opt=getLongPrefix(t);\n      if (opt != null) {\n        if (commandLine.acceptMoreValues(getOption(opt))) {\n          handleOption(getOption(opt));\n          commandLine.addRawValue(getOption(opt),t.substring(opt.length()));\n          current=null;\n        }\n else {\n          throw new InvalidValueException(getOption(opt),t.substring(opt.length()));\n        }\n      }\n else       if (isAValidShortOption(t)) {\n        String strip=t.substring(0,1);\n        Option option=getOption(strip);\n        handleOption(option);\n        commandLine.addRawValue(current,t.substring(1));\n        current=null;\n      }\n else {\n        handleConcatenatedOptions(token);\n      }\n    }\n  }\n else {\n    String opt=t.substring(0,pos);\n    String value=t.substring(pos + 1);\n    if (opt.length() == 1) {\n      Option option=getOption(opt);\n      if (option != null) {\n        if (commandLine.acceptMoreValues(option)) {\n          handleOption(option);\n          commandLine.addRawValue(option,value);\n          current=null;\n        }\n else {\n          throw new InvalidValueException(option,value);\n        }\n      }\n else {\n        handleArgument(token);\n      }\n    }\n else     if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n      handleOption(getOption(opt.substring(0,1)));\n      commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n      current=null;\n    }\n else {\n      handleLongOptionWithEqual(token);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 288,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2551,
        "startLineNumber" : 377,
        "startColumnNumber" : 2,
        "endLineNumber" : 462,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Handles the following tokens: <p/> -S -SV -S V -S=V <p/> -L -LV -L V -L=V -l\n * @param token the command line token to handle\n */\nprivate void handleShortAndLongOption(String token) throws CLIException {\n  String t=stripLeadingHyphens(token);\n  int pos=t.indexOf('=');\n  if (t.length() == 1) {\n    if (hasOptionWithShortName(t)) {\n      handleOption(getOption(t));\n    }\n else {\n      handleArgument(token);\n    }\n  }\n else   if (pos == -1) {\n    if (hasOptionWithShortName(t)) {\n      handleOption(getOption(t));\n    }\n else     if (!getMatchingOptions(t).isEmpty()) {\n      handleLongOptionWithoutEqual(token);\n    }\n else {\n      String opt=getLongPrefix(t);\n      if (opt != null) {\n        if (commandLine.acceptMoreValues(getOption(opt))) {\n          handleOption(getOption(opt));\n          commandLine.addRawValue(getOption(opt),t.substring(opt.length()));\n          current=null;\n        }\n else {\n          throw new InvalidValueException(getOption(opt),t.substring(opt.length()));\n        }\n      }\n else       if (isAValidShortOption(t)) {\n        String strip=t.substring(0,1);\n        Option option=getOption(strip);\n        handleOption(option);\n        commandLine.addRawValue(current,t.substring(1));\n        current=null;\n      }\n else {\n        handleConcatenatedOptions(token);\n      }\n    }\n  }\n else {\n    String opt=t.substring(0,pos);\n    String value=t.substring(pos + 1);\n    if (opt.length() == 1) {\n      Option option=getOption(opt);\n      if (option != null) {\n        if (commandLine.acceptMoreValues(option)) {\n          handleOption(option);\n          commandLine.addRawValue(option,value);\n          current=null;\n        }\n else {\n          throw new InvalidValueException(option,value);\n        }\n      }\n else {\n        handleArgument(token);\n      }\n    }\n else     if (isAValidShortOption(opt) && !hasOptionWithLongName(opt)) {\n      handleOption(getOption(opt.substring(0,1)));\n      commandLine.addRawValue(current,opt.substring(1) + \"=\" + value);\n      current=null;\n    }\n else {\n      handleLongOptionWithEqual(token);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 454,
        "startColumnNumber" : 8,
        "endLineNumber" : 454,
        "endColumnNumber" : 53
      },
      "nodeContext" : "handleOption(getOption(opt.substring(0,1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "io.vertx.core.cli.Option"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 454,
    "startColumnNumber" : 21,
    "endLineNumber" : 454,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}