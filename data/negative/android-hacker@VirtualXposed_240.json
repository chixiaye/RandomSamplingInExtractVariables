{
  "id" : 240,
  "expression" : "1",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/pm/VUserManagerService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 405,
      "startColumnNumber" : 33,
      "endLineNumber" : 405,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 405,
        "startColumnNumber" : 32,
        "endLineNumber" : 405,
        "endColumnNumber" : 34
      },
      "nodeContext" : "-1",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mNextSerialNumber=-1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mNextSerialNumber=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1913,
        "startLineNumber" : 389,
        "startColumnNumber" : 12,
        "endLineNumber" : 435,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fis=userListFile.openRead();\n  XmlPullParser parser=Xml.newPullParser();\n  parser.setInput(fis,null);\n  int type;\n  while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n    ;\n  }\n  if (type != XmlPullParser.START_TAG) {\n    VLog.e(LOG_TAG,\"Unable to read user list\");\n    fallbackToSingleUserLocked();\n    return;\n  }\n  mNextSerialNumber=-1;\n  if (parser.getName().equals(TAG_USERS)) {\n    String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n    if (lastSerialNumber != null) {\n      mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n    }\n    String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n    if (versionNumber != null) {\n      mUserVersion=Integer.parseInt(versionNumber);\n    }\n  }\n  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n    if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n      String id=parser.getAttributeValue(null,ATTR_ID);\n      VUserInfo user=readUser(Integer.parseInt(id));\n      if (user != null) {\n        mUsers.put(user.id,user);\n        if (user.isGuest()) {\n          mGuestEnabled=true;\n        }\n        if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n          mNextSerialNumber=user.id + 1;\n        }\n      }\n    }\n  }\n  updateUserIdsLocked();\n  upgradeIfNecessary();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 447,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  fis=userListFile.openRead();\n  XmlPullParser parser=Xml.newPullParser();\n  parser.setInput(fis,null);\n  int type;\n  while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n    ;\n  }\n  if (type != XmlPullParser.START_TAG) {\n    VLog.e(LOG_TAG,\"Unable to read user list\");\n    fallbackToSingleUserLocked();\n    return;\n  }\n  mNextSerialNumber=-1;\n  if (parser.getName().equals(TAG_USERS)) {\n    String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n    if (lastSerialNumber != null) {\n      mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n    }\n    String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n    if (versionNumber != null) {\n      mUserVersion=Integer.parseInt(versionNumber);\n    }\n  }\n  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n    if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n      String id=parser.getAttributeValue(null,ATTR_ID);\n      VUserInfo user=readUser(Integer.parseInt(id));\n      if (user != null) {\n        mUsers.put(user.id,user);\n        if (user.isGuest()) {\n          mGuestEnabled=true;\n        }\n        if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n          mNextSerialNumber=user.id + 1;\n        }\n      }\n    }\n  }\n  updateUserIdsLocked();\n  upgradeIfNecessary();\n}\n catch (IOException ioe) {\n  fallbackToSingleUserLocked();\n}\ncatch (XmlPullParserException pe) {\n  fallbackToSingleUserLocked();\n}\n finally {\n  if (fis != null) {\n    try {\n      fis.close();\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 253,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2563,
        "startLineNumber" : 381,
        "startColumnNumber" : 38,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mGuestEnabled=false;\n  if (!mUserListFile.exists()) {\n    fallbackToSingleUserLocked();\n    return;\n  }\n  FileInputStream fis=null;\n  AtomicFile userListFile=new AtomicFile(mUserListFile);\n  try {\n    fis=userListFile.openRead();\n    XmlPullParser parser=Xml.newPullParser();\n    parser.setInput(fis,null);\n    int type;\n    while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n      ;\n    }\n    if (type != XmlPullParser.START_TAG) {\n      VLog.e(LOG_TAG,\"Unable to read user list\");\n      fallbackToSingleUserLocked();\n      return;\n    }\n    mNextSerialNumber=-1;\n    if (parser.getName().equals(TAG_USERS)) {\n      String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n      if (lastSerialNumber != null) {\n        mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n      }\n      String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n      if (versionNumber != null) {\n        mUserVersion=Integer.parseInt(versionNumber);\n      }\n    }\n    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n      if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n        String id=parser.getAttributeValue(null,ATTR_ID);\n        VUserInfo user=readUser(Integer.parseInt(id));\n        if (user != null) {\n          mUsers.put(user.id,user);\n          if (user.isGuest()) {\n            mGuestEnabled=true;\n          }\n          if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n            mNextSerialNumber=user.id + 1;\n          }\n        }\n      }\n    }\n    updateUserIdsLocked();\n    upgradeIfNecessary();\n  }\n catch (  IOException ioe) {\n    fallbackToSingleUserLocked();\n  }\ncatch (  XmlPullParserException pe) {\n    fallbackToSingleUserLocked();\n  }\n finally {\n    if (fis != null) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2597,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readUserListLocked(){\n  mGuestEnabled=false;\n  if (!mUserListFile.exists()) {\n    fallbackToSingleUserLocked();\n    return;\n  }\n  FileInputStream fis=null;\n  AtomicFile userListFile=new AtomicFile(mUserListFile);\n  try {\n    fis=userListFile.openRead();\n    XmlPullParser parser=Xml.newPullParser();\n    parser.setInput(fis,null);\n    int type;\n    while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n      ;\n    }\n    if (type != XmlPullParser.START_TAG) {\n      VLog.e(LOG_TAG,\"Unable to read user list\");\n      fallbackToSingleUserLocked();\n      return;\n    }\n    mNextSerialNumber=-1;\n    if (parser.getName().equals(TAG_USERS)) {\n      String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n      if (lastSerialNumber != null) {\n        mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n      }\n      String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n      if (versionNumber != null) {\n        mUserVersion=Integer.parseInt(versionNumber);\n      }\n    }\n    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n      if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n        String id=parser.getAttributeValue(null,ATTR_ID);\n        VUserInfo user=readUser(Integer.parseInt(id));\n        if (user != null) {\n          mUsers.put(user.id,user);\n          if (user.isGuest()) {\n            mGuestEnabled=true;\n          }\n          if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n            mNextSerialNumber=user.id + 1;\n          }\n        }\n      }\n    }\n    updateUserIdsLocked();\n    upgradeIfNecessary();\n  }\n catch (  IOException ioe) {\n    fallbackToSingleUserLocked();\n  }\ncatch (  XmlPullParserException pe) {\n    fallbackToSingleUserLocked();\n  }\n finally {\n    if (fis != null) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mNextSerialNumber=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 428,
      "startColumnNumber" : 58,
      "endLineNumber" : 428,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 428,
        "startColumnNumber" : 48,
        "endLineNumber" : 428,
        "endColumnNumber" : 59
      },
      "nodeContext" : "user.id + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 428,
        "startColumnNumber" : 28,
        "endLineNumber" : 428,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mNextSerialNumber=user.id + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 428,
        "startColumnNumber" : 28,
        "endLineNumber" : 428,
        "endColumnNumber" : 60
      },
      "nodeContext" : "mNextSerialNumber=user.id + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 427,
        "startColumnNumber" : 83,
        "endLineNumber" : 429,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  mNextSerialNumber=user.id + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 427,
        "startColumnNumber" : 24,
        "endLineNumber" : 429,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n  mNextSerialNumber=user.id + 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 422,
        "startColumnNumber" : 38,
        "endLineNumber" : 430,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  mUsers.put(user.id,user);\n  if (user.isGuest()) {\n    mGuestEnabled=true;\n  }\n  if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n    mNextSerialNumber=user.id + 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 430,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (user != null) {\n  mUsers.put(user.id,user);\n  if (user.isGuest()) {\n    mGuestEnabled=true;\n  }\n  if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n    mNextSerialNumber=user.id + 1;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 418,
        "startColumnNumber" : 90,
        "endLineNumber" : 431,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String id=parser.getAttributeValue(null,ATTR_ID);\n  VUserInfo user=readUser(Integer.parseInt(id));\n  if (user != null) {\n    mUsers.put(user.id,user);\n    if (user.isGuest()) {\n      mGuestEnabled=true;\n    }\n    if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n      mNextSerialNumber=user.id + 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 418,
        "startColumnNumber" : 16,
        "endLineNumber" : 431,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n  String id=parser.getAttributeValue(null,ATTR_ID);\n  VUserInfo user=readUser(Integer.parseInt(id));\n  if (user != null) {\n    mUsers.put(user.id,user);\n    if (user.isGuest()) {\n      mGuestEnabled=true;\n    }\n    if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n      mNextSerialNumber=user.id + 1;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 417,
        "startColumnNumber" : 73,
        "endLineNumber" : 432,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n    String id=parser.getAttributeValue(null,ATTR_ID);\n    VUserInfo user=readUser(Integer.parseInt(id));\n    if (user != null) {\n      mUsers.put(user.id,user);\n      if (user.isGuest()) {\n        mGuestEnabled=true;\n      }\n      if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n        mNextSerialNumber=user.id + 1;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 417,
        "startColumnNumber" : 12,
        "endLineNumber" : 432,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n  if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n    String id=parser.getAttributeValue(null,ATTR_ID);\n    VUserInfo user=readUser(Integer.parseInt(id));\n    if (user != null) {\n      mUsers.put(user.id,user);\n      if (user.isGuest()) {\n        mGuestEnabled=true;\n      }\n      if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n        mNextSerialNumber=user.id + 1;\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 88,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1913,
        "startLineNumber" : 389,
        "startColumnNumber" : 12,
        "endLineNumber" : 435,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fis=userListFile.openRead();\n  XmlPullParser parser=Xml.newPullParser();\n  parser.setInput(fis,null);\n  int type;\n  while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n    ;\n  }\n  if (type != XmlPullParser.START_TAG) {\n    VLog.e(LOG_TAG,\"Unable to read user list\");\n    fallbackToSingleUserLocked();\n    return;\n  }\n  mNextSerialNumber=-1;\n  if (parser.getName().equals(TAG_USERS)) {\n    String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n    if (lastSerialNumber != null) {\n      mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n    }\n    String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n    if (versionNumber != null) {\n      mUserVersion=Integer.parseInt(versionNumber);\n    }\n  }\n  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n    if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n      String id=parser.getAttributeValue(null,ATTR_ID);\n      VUserInfo user=readUser(Integer.parseInt(id));\n      if (user != null) {\n        mUsers.put(user.id,user);\n        if (user.isGuest()) {\n          mGuestEnabled=true;\n        }\n        if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n          mNextSerialNumber=user.id + 1;\n        }\n      }\n    }\n  }\n  updateUserIdsLocked();\n  upgradeIfNecessary();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 447,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  fis=userListFile.openRead();\n  XmlPullParser parser=Xml.newPullParser();\n  parser.setInput(fis,null);\n  int type;\n  while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n    ;\n  }\n  if (type != XmlPullParser.START_TAG) {\n    VLog.e(LOG_TAG,\"Unable to read user list\");\n    fallbackToSingleUserLocked();\n    return;\n  }\n  mNextSerialNumber=-1;\n  if (parser.getName().equals(TAG_USERS)) {\n    String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n    if (lastSerialNumber != null) {\n      mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n    }\n    String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n    if (versionNumber != null) {\n      mUserVersion=Integer.parseInt(versionNumber);\n    }\n  }\n  while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n    if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n      String id=parser.getAttributeValue(null,ATTR_ID);\n      VUserInfo user=readUser(Integer.parseInt(id));\n      if (user != null) {\n        mUsers.put(user.id,user);\n        if (user.isGuest()) {\n          mGuestEnabled=true;\n        }\n        if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n          mNextSerialNumber=user.id + 1;\n        }\n      }\n    }\n  }\n  updateUserIdsLocked();\n  upgradeIfNecessary();\n}\n catch (IOException ioe) {\n  fallbackToSingleUserLocked();\n}\ncatch (XmlPullParserException pe) {\n  fallbackToSingleUserLocked();\n}\n finally {\n  if (fis != null) {\n    try {\n      fis.close();\n    }\n catch (    IOException e) {\n      e.printStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 253,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2563,
        "startLineNumber" : 381,
        "startColumnNumber" : 38,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mGuestEnabled=false;\n  if (!mUserListFile.exists()) {\n    fallbackToSingleUserLocked();\n    return;\n  }\n  FileInputStream fis=null;\n  AtomicFile userListFile=new AtomicFile(mUserListFile);\n  try {\n    fis=userListFile.openRead();\n    XmlPullParser parser=Xml.newPullParser();\n    parser.setInput(fis,null);\n    int type;\n    while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n      ;\n    }\n    if (type != XmlPullParser.START_TAG) {\n      VLog.e(LOG_TAG,\"Unable to read user list\");\n      fallbackToSingleUserLocked();\n      return;\n    }\n    mNextSerialNumber=-1;\n    if (parser.getName().equals(TAG_USERS)) {\n      String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n      if (lastSerialNumber != null) {\n        mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n      }\n      String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n      if (versionNumber != null) {\n        mUserVersion=Integer.parseInt(versionNumber);\n      }\n    }\n    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n      if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n        String id=parser.getAttributeValue(null,ATTR_ID);\n        VUserInfo user=readUser(Integer.parseInt(id));\n        if (user != null) {\n          mUsers.put(user.id,user);\n          if (user.isGuest()) {\n            mGuestEnabled=true;\n          }\n          if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n            mNextSerialNumber=user.id + 1;\n          }\n        }\n      }\n    }\n    updateUserIdsLocked();\n    upgradeIfNecessary();\n  }\n catch (  IOException ioe) {\n    fallbackToSingleUserLocked();\n  }\ncatch (  XmlPullParserException pe) {\n    fallbackToSingleUserLocked();\n  }\n finally {\n    if (fis != null) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2597,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readUserListLocked(){\n  mGuestEnabled=false;\n  if (!mUserListFile.exists()) {\n    fallbackToSingleUserLocked();\n    return;\n  }\n  FileInputStream fis=null;\n  AtomicFile userListFile=new AtomicFile(mUserListFile);\n  try {\n    fis=userListFile.openRead();\n    XmlPullParser parser=Xml.newPullParser();\n    parser.setInput(fis,null);\n    int type;\n    while ((type=parser.next()) != XmlPullParser.START_TAG && type != XmlPullParser.END_DOCUMENT) {\n      ;\n    }\n    if (type != XmlPullParser.START_TAG) {\n      VLog.e(LOG_TAG,\"Unable to read user list\");\n      fallbackToSingleUserLocked();\n      return;\n    }\n    mNextSerialNumber=-1;\n    if (parser.getName().equals(TAG_USERS)) {\n      String lastSerialNumber=parser.getAttributeValue(null,ATTR_NEXT_SERIAL_NO);\n      if (lastSerialNumber != null) {\n        mNextSerialNumber=Integer.parseInt(lastSerialNumber);\n      }\n      String versionNumber=parser.getAttributeValue(null,ATTR_USER_VERSION);\n      if (versionNumber != null) {\n        mUserVersion=Integer.parseInt(versionNumber);\n      }\n    }\n    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT) {\n      if (type == XmlPullParser.START_TAG && parser.getName().equals(TAG_USER)) {\n        String id=parser.getAttributeValue(null,ATTR_ID);\n        VUserInfo user=readUser(Integer.parseInt(id));\n        if (user != null) {\n          mUsers.put(user.id,user);\n          if (user.isGuest()) {\n            mGuestEnabled=true;\n          }\n          if (mNextSerialNumber < 0 || mNextSerialNumber <= user.id) {\n            mNextSerialNumber=user.id + 1;\n          }\n        }\n      }\n    }\n    updateUserIdsLocked();\n    upgradeIfNecessary();\n  }\n catch (  IOException ioe) {\n    fallbackToSingleUserLocked();\n  }\ncatch (  XmlPullParserException pe) {\n    fallbackToSingleUserLocked();\n  }\n finally {\n    if (fis != null) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 428,
        "startColumnNumber" : 28,
        "endLineNumber" : 428,
        "endColumnNumber" : 60
      },
      "nodeContext" : "mNextSerialNumber=user.id + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 405,
    "startColumnNumber" : 33,
    "endLineNumber" : 405,
    "endColumnNumber" : 34
  }, {
    "charLength" : 1,
    "startLineNumber" : 428,
    "startColumnNumber" : 58,
    "endLineNumber" : 428,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 11
  } ]
}