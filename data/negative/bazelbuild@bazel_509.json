{
  "id" : 509,
  "expression" : "flags != 0",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/android/ziputils/ZipFileBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "flags != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 79,
      "startColumnNumber" : 10,
      "endLineNumber" : 79,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (flags != 0) {\n  DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n  out.write(desc);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 59,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int compressed=info.compressedSize();\n  int uncompressed=info.uncompressedSize();\n  int dirCompressed=info.dirCompressedSize();\n  int dirUncompressed=info.dirUncompressedSize();\n  short flags=info.flags();\n  DirectoryEntry entry=DirectoryEntry.allocate(info.name,info.extra,info.comment);\n  out.nextEntry(entry).set(CENOFF,out.fileOffset()).set(CENFLG,flags).set(CENTIM,info.date).set(CENLEN,dirUncompressed).set(CENSIZ,dirCompressed);\n  LocalFileHeader header=LocalFileHeader.allocate(info.name,null).set(LOCFLG,flags).set(LOCTIM,info.date).set(LOCLEN,uncompressed).set(LOCSIZ,compressed);\n  out.write(header);\n  out.write(ByteBuffer.wrap(info.data));\n  if (flags != 0) {\n    DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n    out.write(desc);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (FileInfo info : input) {\n  int compressed=info.compressedSize();\n  int uncompressed=info.uncompressedSize();\n  int dirCompressed=info.dirCompressedSize();\n  int dirUncompressed=info.dirUncompressedSize();\n  short flags=info.flags();\n  DirectoryEntry entry=DirectoryEntry.allocate(info.name,info.extra,info.comment);\n  out.nextEntry(entry).set(CENOFF,out.fileOffset()).set(CENFLG,flags).set(CENTIM,info.date).set(CENLEN,dirUncompressed).set(CENSIZ,dirCompressed);\n  LocalFileHeader header=LocalFileHeader.allocate(info.name,null).set(LOCFLG,flags).set(LOCTIM,info.date).set(LOCLEN,uncompressed).set(LOCSIZ,compressed);\n  out.write(header);\n  out.write(ByteBuffer.wrap(info.data));\n  if (flags != 0) {\n    DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n    out.write(desc);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 159,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1176,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ZipOut out=new ZipOut(FileSystem.fileSystem().getOutputChannel(filename,false),filename);\n  for (  FileInfo info : input) {\n    int compressed=info.compressedSize();\n    int uncompressed=info.uncompressedSize();\n    int dirCompressed=info.dirCompressedSize();\n    int dirUncompressed=info.dirUncompressedSize();\n    short flags=info.flags();\n    DirectoryEntry entry=DirectoryEntry.allocate(info.name,info.extra,info.comment);\n    out.nextEntry(entry).set(CENOFF,out.fileOffset()).set(CENFLG,flags).set(CENTIM,info.date).set(CENLEN,dirUncompressed).set(CENSIZ,dirCompressed);\n    LocalFileHeader header=LocalFileHeader.allocate(info.name,null).set(LOCFLG,flags).set(LOCTIM,info.date).set(LOCLEN,uncompressed).set(LOCSIZ,compressed);\n    out.write(header);\n    out.write(ByteBuffer.wrap(info.data));\n    if (flags != 0) {\n      DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n      out.write(desc);\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void create(String filename) throws IOException {\n  ZipOut out=new ZipOut(FileSystem.fileSystem().getOutputChannel(filename,false),filename);\n  for (  FileInfo info : input) {\n    int compressed=info.compressedSize();\n    int uncompressed=info.uncompressedSize();\n    int dirCompressed=info.dirCompressedSize();\n    int dirUncompressed=info.dirUncompressedSize();\n    short flags=info.flags();\n    DirectoryEntry entry=DirectoryEntry.allocate(info.name,info.extra,info.comment);\n    out.nextEntry(entry).set(CENOFF,out.fileOffset()).set(CENFLG,flags).set(CENTIM,info.date).set(CENLEN,dirUncompressed).set(CENSIZ,dirCompressed);\n    LocalFileHeader header=LocalFileHeader.allocate(info.name,null).set(LOCFLG,flags).set(LOCTIM,info.date).set(LOCLEN,uncompressed).set(LOCSIZ,compressed);\n    out.write(header);\n    out.write(ByteBuffer.wrap(info.data));\n    if (flags != 0) {\n      DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n      out.write(desc);\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (flags != 0) {\n  DataDescriptor desc=DataDescriptor.allocate().set(EXTLEN,dirUncompressed).set(EXTSIZ,dirCompressed);\n  out.write(desc);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 79,
    "startColumnNumber" : 10,
    "endLineNumber" : 79,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}