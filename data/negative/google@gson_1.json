{
  "id" : 1,
  "expression" : "sub.subName",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/InstanceCreatorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sub.subName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 70,
      "startColumnNumber" : 36,
      "endLineNumber" : 70,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 48
      },
      "nodeContext" : "\"SubRevised\".equals(sub.subName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertFalse(\"SubRevised\".equals(sub.subName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertFalse(\"SubRevised\".equals(sub.subName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 56,
        "startColumnNumber" : 67,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new GsonBuilder().registerTypeAdapter(Base.class,new InstanceCreator<Base>(){\n    public Base createInstance(    Type type){\n      return new Sub();\n    }\n  }\n).create();\n  String json=\"{baseName:'Base',subName:'SubRevised'}\";\n  Base base=gson.fromJson(json,Base.class);\n  assertTrue(base instanceof Sub);\n  Sub sub=(Sub)base;\n  assertFalse(\"SubRevised\".equals(sub.subName));\n  assertEquals(Sub.SUB_NAME,sub.subName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testInstanceCreatorReturnsSubTypeForTopLevelObject(){\n  Gson gson=new GsonBuilder().registerTypeAdapter(Base.class,new InstanceCreator<Base>(){\n    public Base createInstance(    Type type){\n      return new Sub();\n    }\n  }\n).create();\n  String json=\"{baseName:'Base',subName:'SubRevised'}\";\n  Base base=gson.fromJson(json,Base.class);\n  assertTrue(base instanceof Sub);\n  Sub sub=(Sub)base;\n  assertFalse(\"SubRevised\".equals(sub.subName));\n  assertEquals(Sub.SUB_NAME,sub.subName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertFalse(\"SubRevised\".equals(sub.subName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "sub.subName",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 71,
      "startColumnNumber" : 31,
      "endLineNumber" : 71,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(Sub.SUB_NAME,sub.subName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(Sub.SUB_NAME,sub.subName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 56,
        "startColumnNumber" : 67,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new GsonBuilder().registerTypeAdapter(Base.class,new InstanceCreator<Base>(){\n    public Base createInstance(    Type type){\n      return new Sub();\n    }\n  }\n).create();\n  String json=\"{baseName:'Base',subName:'SubRevised'}\";\n  Base base=gson.fromJson(json,Base.class);\n  assertTrue(base instanceof Sub);\n  Sub sub=(Sub)base;\n  assertFalse(\"SubRevised\".equals(sub.subName));\n  assertEquals(Sub.SUB_NAME,sub.subName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testInstanceCreatorReturnsSubTypeForTopLevelObject(){\n  Gson gson=new GsonBuilder().registerTypeAdapter(Base.class,new InstanceCreator<Base>(){\n    public Base createInstance(    Type type){\n      return new Sub();\n    }\n  }\n).create();\n  String json=\"{baseName:'Base',subName:'SubRevised'}\";\n  Base base=gson.fromJson(json,Base.class);\n  assertTrue(base instanceof Sub);\n  Sub sub=(Sub)base;\n  assertFalse(\"SubRevised\".equals(sub.subName));\n  assertEquals(Sub.SUB_NAME,sub.subName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(Sub.SUB_NAME,sub.subName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 70,
    "startColumnNumber" : 36,
    "endLineNumber" : 70,
    "endColumnNumber" : 47
  }, {
    "charLength" : 11,
    "startLineNumber" : 71,
    "startColumnNumber" : 31,
    "endLineNumber" : 71,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}