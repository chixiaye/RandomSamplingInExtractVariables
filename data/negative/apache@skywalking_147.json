{
  "id" : 147,
  "expression" : "HttpClientPluginConfig.Plugin",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/httpClient-4.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/httpClient/v4/HttpClientExecuteInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HttpClientPluginConfig.Plugin",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 74,
      "startColumnNumber" : 12,
      "endLineNumber" : 74,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "HttpClientPluginConfig.Plugin.HttpClient",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 72
      },
      "nodeContext" : "HttpClientPluginConfig.Plugin.HttpClient.COLLECT_HTTP_PARAMS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (HttpClientPluginConfig.Plugin.HttpClient.COLLECT_HTTP_PARAMS) {\n  collectHttpParam(httpRequest,span);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 48,
        "startColumnNumber" : 76,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (allArguments[0] == null || allArguments[1] == null) {\n    return;\n  }\n  final HttpHost httpHost=(HttpHost)allArguments[0];\n  HttpRequest httpRequest=(HttpRequest)allArguments[1];\n  final ContextCarrier contextCarrier=new ContextCarrier();\n  String remotePeer=httpHost.getHostName() + \":\" + port(httpHost);\n  String uri=httpRequest.getRequestLine().getUri();\n  String requestURI=getRequestURI(uri);\n  String operationName=requestURI;\n  AbstractSpan span=ContextManager.createExitSpan(operationName,contextCarrier,remotePeer);\n  span.setComponent(ComponentsDefine.HTTPCLIENT);\n  Tags.URL.set(span,buildSpanValue(httpHost,uri));\n  Tags.HTTP.METHOD.set(span,httpRequest.getRequestLine().getMethod());\n  SpanLayer.asHttp(span);\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    httpRequest.setHeader(next.getHeadKey(),next.getHeadValue());\n  }\n  if (HttpClientPluginConfig.Plugin.HttpClient.COLLECT_HTTP_PARAMS) {\n    collectHttpParam(httpRequest,span);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1447,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void beforeMethod(EnhancedInstance objInst,Method method,Object[] allArguments,Class<?>[] argumentsTypes,MethodInterceptResult result) throws Throwable {\n  if (allArguments[0] == null || allArguments[1] == null) {\n    return;\n  }\n  final HttpHost httpHost=(HttpHost)allArguments[0];\n  HttpRequest httpRequest=(HttpRequest)allArguments[1];\n  final ContextCarrier contextCarrier=new ContextCarrier();\n  String remotePeer=httpHost.getHostName() + \":\" + port(httpHost);\n  String uri=httpRequest.getRequestLine().getUri();\n  String requestURI=getRequestURI(uri);\n  String operationName=requestURI;\n  AbstractSpan span=ContextManager.createExitSpan(operationName,contextCarrier,remotePeer);\n  span.setComponent(ComponentsDefine.HTTPCLIENT);\n  Tags.URL.set(span,buildSpanValue(httpHost,uri));\n  Tags.HTTP.METHOD.set(span,httpRequest.getRequestLine().getMethod());\n  SpanLayer.asHttp(span);\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    httpRequest.setHeader(next.getHeadKey(),next.getHeadValue());\n  }\n  if (HttpClientPluginConfig.Plugin.HttpClient.COLLECT_HTTP_PARAMS) {\n    collectHttpParam(httpRequest,span);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 72
      },
      "nodeContext" : "HttpClientPluginConfig.Plugin.HttpClient.COLLECT_HTTP_PARAMS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.skywalking.apm.plugin.httpclient.HttpClientPluginConfig.Plugin"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 74,
    "startColumnNumber" : 12,
    "endLineNumber" : 74,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}