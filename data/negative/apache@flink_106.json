{
  "id" : 106,
  "expression" : "1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/operations/utils/OperationTreeBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 405,
      "startColumnNumber" : 41,
      "endLineNumber" : 405,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 42
      },
      "nodeContext" : "resolvedExpression.size() != 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 405,
        "startColumnNumber" : 8,
        "endLineNumber" : 409,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resolvedExpression.size() != 1) {\n  throw new ValidationException(\"Expected single expression\");\n}\n else {\n  return resolvedExpression.get(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 402,
        "startColumnNumber" : 64,
        "endLineNumber" : 410,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ResolvedExpression> resolvedExpression=resolver.resolve(Collections.singletonList(expression));\n  if (resolvedExpression.size() != 1) {\n    throw new ValidationException(\"Expected single expression\");\n  }\n else {\n    return resolvedExpression.get(0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 401,
        "startColumnNumber" : 4,
        "endLineNumber" : 410,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private ResolvedExpression resolveSingleExpression(Expression expression,ExpressionResolver resolver){\n  List<ResolvedExpression> resolvedExpression=resolver.resolve(Collections.singletonList(expression));\n  if (resolvedExpression.size() != 1) {\n    throw new ValidationException(\"Expected single expression\");\n  }\n else {\n    return resolvedExpression.get(0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 405,
        "endColumnNumber" : 42
      },
      "nodeContext" : "resolvedExpression.size() != 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 405,
    "startColumnNumber" : 41,
    "endLineNumber" : 405,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}