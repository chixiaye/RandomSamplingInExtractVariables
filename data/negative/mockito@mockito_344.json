{
  "id" : 344,
  "expression" : "loader.resolveStrategy(InjectionBase.class,classLoader,false)",
  "projectName" : "mockito@mockito",
  "commitID" : "74b87089ddc9abc183317e2a9cb75efb48d502fe",
  "filePath" : "src/main/java/org/mockito/internal/creation/bytebuddy/ModuleHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "loader.resolveStrategy(InjectionBase.class,classLoader,false)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 63,
      "startLineNumber" : 109,
      "startColumnNumber" : 43,
      "endLineNumber" : 109,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 109,
        "endColumnNumber" : 107
      },
      "nodeContext" : "byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 36
      },
      "nodeContext" : "byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 110,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 97,
        "startColumnNumber" : 36,
        "endLineNumber" : 111,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n  try {\n    Class<?> type=Class.forName(name,false,classLoader);\n    if (type.getClassLoader() == classLoader) {\n      return type;\n    }\n  }\n catch (  Exception ignored) {\n  }\n  return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 17
      },
      "nodeContext" : "synchronized (this) {\n  String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n  try {\n    Class<?> type=Class.forName(name,false,classLoader);\n    if (type.getClassLoader() == classLoader) {\n      return type;\n    }\n  }\n catch (  Exception ignored) {\n  }\n  return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 96,
        "startColumnNumber" : 19,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nsynchronized (this) {\n    String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n    try {\n      Class<?> type=Class.forName(name,false,classLoader);\n      if (type.getClassLoader() == classLoader) {\n        return type;\n      }\n    }\n catch (    Exception ignored) {\n    }\n    return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (classLoader == Mockito.class.getClassLoader() && InjectionBase.class.getPackage().getName().equals(packageName)) {\n  return InjectionBase.class;\n}\n else {\nsynchronized (this) {\n    String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n    try {\n      Class<?> type=Class.forName(name,false,classLoader);\n      if (type.getClassLoader() == classLoader) {\n        return type;\n      }\n    }\n catch (    Exception ignored) {\n    }\n    return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 92,
        "startColumnNumber" : 73,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String packageName=typeName.substring(0,typeName.lastIndexOf('.'));\n  if (classLoader == Mockito.class.getClassLoader() && InjectionBase.class.getPackage().getName().equals(packageName)) {\n    return InjectionBase.class;\n  }\n else {\nsynchronized (this) {\n      String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n      try {\n        Class<?> type=Class.forName(name,false,classLoader);\n        if (type.getClassLoader() == classLoader) {\n          return type;\n        }\n      }\n catch (      Exception ignored) {\n      }\n      return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1216,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override Class<?> injectionBase(ClassLoader classLoader,String typeName){\n  String packageName=typeName.substring(0,typeName.lastIndexOf('.'));\n  if (classLoader == Mockito.class.getClassLoader() && InjectionBase.class.getPackage().getName().equals(packageName)) {\n    return InjectionBase.class;\n  }\n else {\nsynchronized (this) {\n      String name=packageName + \".\" + InjectionBase.class.getSimpleName()+ \"$\"+ injectonBaseSuffix;\n      try {\n        Class<?> type=Class.forName(name,false,classLoader);\n        if (type.getClassLoader() == classLoader) {\n          return type;\n        }\n      }\n catch (      Exception ignored) {\n      }\n      return byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false)).getLoaded();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 109,
        "endColumnNumber" : 107
      },
      "nodeContext" : "byteBuddy.subclass(Object.class,ConstructorStrategy.Default.NO_CONSTRUCTORS).name(name).make().load(classLoader,loader.resolveStrategy(InjectionBase.class,classLoader,false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "org.mockito.internal.creation.bytebuddy.ClassLoadingStrategy<java.lang.ClassLoader>"
  } ],
  "positionList" : [ {
    "charLength" : 63,
    "startLineNumber" : 109,
    "startColumnNumber" : 43,
    "endLineNumber" : 109,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}