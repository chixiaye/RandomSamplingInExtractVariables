{
  "id" : 19,
  "expression" : "wrapResult.bytesConsumed()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/network/SslTransportLayer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "wrapResult.bytesConsumed()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 714,
      "startColumnNumber" : 27,
      "endLineNumber" : 714,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 714,
        "startColumnNumber" : 16,
        "endLineNumber" : 714,
        "endColumnNumber" : 53
      },
      "nodeContext" : "written+=wrapResult.bytesConsumed()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 714,
        "startColumnNumber" : 16,
        "endLineNumber" : 714,
        "endColumnNumber" : 54
      },
      "nodeContext" : "written+=wrapResult.bytesConsumed();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 713,
        "startColumnNumber" : 53,
        "endLineNumber" : 715,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  written+=wrapResult.bytesConsumed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 713,
        "startColumnNumber" : 12,
        "endLineNumber" : 723,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (wrapResult.getStatus() == Status.OK) {\n  written+=wrapResult.bytesConsumed();\n}\n else if (wrapResult.getStatus() == Status.BUFFER_OVERFLOW) {\n  netWriteBuffer=Utils.ensureCapacity(netWriteBuffer,netWriteBufferSize());\n  netWriteBuffer.position(netWriteBuffer.limit());\n}\n else if (wrapResult.getStatus() == Status.BUFFER_UNDERFLOW) {\n  throw new IllegalStateException(\"SSL BUFFER_UNDERFLOW during write\");\n}\n else if (wrapResult.getStatus() == Status.CLOSED) {\n  throw new EOFException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 704,
        "startColumnNumber" : 60,
        "endLineNumber" : 724,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  netWriteBuffer.clear();\n  SSLEngineResult wrapResult=sslEngine.wrap(src,netWriteBuffer);\n  netWriteBuffer.flip();\n  if (wrapResult.getHandshakeStatus() != HandshakeStatus.NOT_HANDSHAKING && wrapResult.getStatus() == Status.OK)   throw renegotiationException();\n  if (wrapResult.getStatus() == Status.OK) {\n    written+=wrapResult.bytesConsumed();\n  }\n else   if (wrapResult.getStatus() == Status.BUFFER_OVERFLOW) {\n    netWriteBuffer=Utils.ensureCapacity(netWriteBuffer,netWriteBufferSize());\n    netWriteBuffer.position(netWriteBuffer.limit());\n  }\n else   if (wrapResult.getStatus() == Status.BUFFER_UNDERFLOW) {\n    throw new IllegalStateException(\"SSL BUFFER_UNDERFLOW during write\");\n  }\n else   if (wrapResult.getStatus() == Status.CLOSED) {\n    throw new EOFException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 704,
        "startColumnNumber" : 8,
        "endLineNumber" : 724,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (flush(netWriteBuffer) && src.hasRemaining()) {\n  netWriteBuffer.clear();\n  SSLEngineResult wrapResult=sslEngine.wrap(src,netWriteBuffer);\n  netWriteBuffer.flip();\n  if (wrapResult.getHandshakeStatus() != HandshakeStatus.NOT_HANDSHAKING && wrapResult.getStatus() == Status.OK)   throw renegotiationException();\n  if (wrapResult.getStatus() == Status.OK) {\n    written+=wrapResult.bytesConsumed();\n  }\n else   if (wrapResult.getStatus() == Status.BUFFER_OVERFLOW) {\n    netWriteBuffer=Utils.ensureCapacity(netWriteBuffer,netWriteBufferSize());\n    netWriteBuffer.position(netWriteBuffer.limit());\n  }\n else   if (wrapResult.getStatus() == Status.BUFFER_UNDERFLOW) {\n    throw new IllegalStateException(\"SSL BUFFER_UNDERFLOW during write\");\n  }\n else   if (wrapResult.getStatus() == Status.CLOSED) {\n    throw new EOFException();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1355,
        "startLineNumber" : 697,
        "startColumnNumber" : 56,
        "endLineNumber" : 726,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state == State.CLOSING)   throw closingException();\n  if (!ready())   return 0;\n  int written=0;\n  while (flush(netWriteBuffer) && src.hasRemaining()) {\n    netWriteBuffer.clear();\n    SSLEngineResult wrapResult=sslEngine.wrap(src,netWriteBuffer);\n    netWriteBuffer.flip();\n    if (wrapResult.getHandshakeStatus() != HandshakeStatus.NOT_HANDSHAKING && wrapResult.getStatus() == Status.OK)     throw renegotiationException();\n    if (wrapResult.getStatus() == Status.OK) {\n      written+=wrapResult.bytesConsumed();\n    }\n else     if (wrapResult.getStatus() == Status.BUFFER_OVERFLOW) {\n      netWriteBuffer=Utils.ensureCapacity(netWriteBuffer,netWriteBufferSize());\n      netWriteBuffer.position(netWriteBuffer.limit());\n    }\n else     if (wrapResult.getStatus() == Status.BUFFER_UNDERFLOW) {\n      throw new IllegalStateException(\"SSL BUFFER_UNDERFLOW during write\");\n    }\n else     if (wrapResult.getStatus() == Status.CLOSED) {\n      throw new EOFException();\n    }\n  }\n  return written;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 689,
        "startColumnNumber" : 4,
        "endLineNumber" : 726,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Writes a sequence of bytes to this channel from the given buffer.\n * @param src The buffer from which bytes are to be retrieved\n * @return The number of bytes read from src, possibly zero, or -1 if the channel has reached end-of-stream\n * @throws IOException If some other I/O error occurs\n */\n@Override public int write(ByteBuffer src) throws IOException {\n  if (state == State.CLOSING)   throw closingException();\n  if (!ready())   return 0;\n  int written=0;\n  while (flush(netWriteBuffer) && src.hasRemaining()) {\n    netWriteBuffer.clear();\n    SSLEngineResult wrapResult=sslEngine.wrap(src,netWriteBuffer);\n    netWriteBuffer.flip();\n    if (wrapResult.getHandshakeStatus() != HandshakeStatus.NOT_HANDSHAKING && wrapResult.getStatus() == Status.OK)     throw renegotiationException();\n    if (wrapResult.getStatus() == Status.OK) {\n      written+=wrapResult.bytesConsumed();\n    }\n else     if (wrapResult.getStatus() == Status.BUFFER_OVERFLOW) {\n      netWriteBuffer=Utils.ensureCapacity(netWriteBuffer,netWriteBufferSize());\n      netWriteBuffer.position(netWriteBuffer.limit());\n    }\n else     if (wrapResult.getStatus() == Status.BUFFER_UNDERFLOW) {\n      throw new IllegalStateException(\"SSL BUFFER_UNDERFLOW during write\");\n    }\n else     if (wrapResult.getStatus() == Status.CLOSED) {\n      throw new EOFException();\n    }\n  }\n  return written;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 714,
        "startColumnNumber" : 16,
        "endLineNumber" : 714,
        "endColumnNumber" : 54
      },
      "nodeContext" : "written+=wrapResult.bytesConsumed();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 714,
    "startColumnNumber" : 27,
    "endLineNumber" : 714,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}