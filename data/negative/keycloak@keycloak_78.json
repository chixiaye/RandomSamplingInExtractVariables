{
  "id" : 78,
  "expression" : "\"//body\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/adapter/servlet/OfflineServletsAdapterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"//body\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 217,
      "startColumnNumber" : 38,
      "endLineNumber" : 217,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 217,
        "startColumnNumber" : 29,
        "endLineNumber" : 217,
        "endColumnNumber" : 47
      },
      "nodeContext" : "By.xpath(\"//body\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 48
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 55
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 61
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().not()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 88
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 89
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1919,
        "startLineNumber" : 208,
        "startColumnNumber" : 52,
        "endLineNumber" : 246,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  offlineTokenPage.navigateTo();\n  loginPage.assertCurrent();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n  oauthGrantPage.cancel();\n  String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n  driver.navigate().to(servletUri);\n  waitUntilElement(By.tagName(\"body\")).is().visible();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n  oauthGrantPage.accept();\n  assertCurrentUrlStartsWith(offlineTokenPage);\n  assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n  assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n  accountAppPage.open();\n  AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n  assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n  assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n  accountAppPage.logout();\n  assertCurrentUrlDoesntStartWith(offlineTokenPage);\n  loginPage.assertCurrent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2155,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n  offlineTokenPage.navigateTo();\n  loginPage.assertCurrent();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n  oauthGrantPage.cancel();\n  String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n  driver.navigate().to(servletUri);\n  waitUntilElement(By.tagName(\"body\")).is().visible();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n  oauthGrantPage.accept();\n  assertCurrentUrlStartsWith(offlineTokenPage);\n  assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n  assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n  accountAppPage.open();\n  AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n  assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n  assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n  accountAppPage.logout();\n  assertCurrentUrlDoesntStartWith(offlineTokenPage);\n  loginPage.assertCurrent();\n}\n  finally {\n  events.clear();\n  resetTimeOffsetAuthenticated();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 207,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2171,
        "startLineNumber" : 206,
        "startColumnNumber" : 60,
        "endLineNumber" : 250,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n    offlineTokenPage.navigateTo();\n    loginPage.assertCurrent();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n    oauthGrantPage.cancel();\n    String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n    driver.navigate().to(servletUri);\n    waitUntilElement(By.tagName(\"body\")).is().visible();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n    oauthGrantPage.accept();\n    assertCurrentUrlStartsWith(offlineTokenPage);\n    assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n    assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n    accountAppPage.open();\n    AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n    assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n    assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n    accountAppPage.logout();\n    assertCurrentUrlDoesntStartWith(offlineTokenPage);\n    loginPage.assertCurrent();\n  }\n  finally {\n    events.clear();\n    resetTimeOffsetAuthenticated();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2237,
        "startLineNumber" : 205,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testServletWithConsent() throws IOException {\n  try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n    offlineTokenPage.navigateTo();\n    loginPage.assertCurrent();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n    oauthGrantPage.cancel();\n    String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n    driver.navigate().to(servletUri);\n    waitUntilElement(By.tagName(\"body\")).is().visible();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n    oauthGrantPage.accept();\n    assertCurrentUrlStartsWith(offlineTokenPage);\n    assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n    assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n    accountAppPage.open();\n    AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n    assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n    assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n    accountAppPage.logout();\n    assertCurrentUrlDoesntStartWith(offlineTokenPage);\n    loginPage.assertCurrent();\n  }\n  finally {\n    events.clear();\n    resetTimeOffsetAuthenticated();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 89
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"//body\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 229,
      "startColumnNumber" : 38,
      "endLineNumber" : 229,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 229,
        "startColumnNumber" : 29,
        "endLineNumber" : 229,
        "endColumnNumber" : 47
      },
      "nodeContext" : "By.xpath(\"//body\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 48
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 55
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 108
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 109
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1919,
        "startLineNumber" : 208,
        "startColumnNumber" : 52,
        "endLineNumber" : 246,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  offlineTokenPage.navigateTo();\n  loginPage.assertCurrent();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n  oauthGrantPage.cancel();\n  String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n  driver.navigate().to(servletUri);\n  waitUntilElement(By.tagName(\"body\")).is().visible();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n  oauthGrantPage.accept();\n  assertCurrentUrlStartsWith(offlineTokenPage);\n  assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n  assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n  accountAppPage.open();\n  AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n  assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n  assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n  accountAppPage.logout();\n  assertCurrentUrlDoesntStartWith(offlineTokenPage);\n  loginPage.assertCurrent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2155,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n  offlineTokenPage.navigateTo();\n  loginPage.assertCurrent();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n  oauthGrantPage.cancel();\n  String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n  driver.navigate().to(servletUri);\n  waitUntilElement(By.tagName(\"body\")).is().visible();\n  loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n  oauthGrantPage.assertCurrent();\n  waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n  oauthGrantPage.accept();\n  assertCurrentUrlStartsWith(offlineTokenPage);\n  assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n  assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n  accountAppPage.open();\n  AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n  assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n  assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n  accountAppPage.logout();\n  assertCurrentUrlDoesntStartWith(offlineTokenPage);\n  loginPage.assertCurrent();\n}\n  finally {\n  events.clear();\n  resetTimeOffsetAuthenticated();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 207,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2171,
        "startLineNumber" : 206,
        "startColumnNumber" : 60,
        "endLineNumber" : 250,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n    offlineTokenPage.navigateTo();\n    loginPage.assertCurrent();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n    oauthGrantPage.cancel();\n    String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n    driver.navigate().to(servletUri);\n    waitUntilElement(By.tagName(\"body\")).is().visible();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n    oauthGrantPage.accept();\n    assertCurrentUrlStartsWith(offlineTokenPage);\n    assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n    assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n    accountAppPage.open();\n    AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n    assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n    assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n    accountAppPage.logout();\n    assertCurrentUrlDoesntStartWith(offlineTokenPage);\n    loginPage.assertCurrent();\n  }\n  finally {\n    events.clear();\n    resetTimeOffsetAuthenticated();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2237,
        "startLineNumber" : 205,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testServletWithConsent() throws IOException {\n  try (Closeable cau=ClientAttributeUpdater.forClient(adminClient,TEST,OFFLINE_CLIENT_ID).setConsentRequired(true).update()){\n    offlineTokenPage.navigateTo();\n    loginPage.assertCurrent();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().not().contains(\"Offline access\");\n    oauthGrantPage.cancel();\n    String servletUri=UriBuilder.fromUri(offlineTokenPage.toString()).queryParam(OAuth2Constants.SCOPE,OAuth2Constants.OFFLINE_ACCESS).build().toString();\n    driver.navigate().to(servletUri);\n    waitUntilElement(By.tagName(\"body\")).is().visible();\n    loginPage.login(DEFAULT_USERNAME,DEFAULT_PASSWORD);\n    oauthGrantPage.assertCurrent();\n    waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n    oauthGrantPage.accept();\n    assertCurrentUrlStartsWith(offlineTokenPage);\n    assertThat(offlineTokenPage.getRefreshToken(),notNullValue());\n    assertThat(offlineTokenPage.getRefreshToken().getType(),is(TokenUtil.TOKEN_TYPE_OFFLINE));\n    accountAppPage.open();\n    AccountApplicationsPage.AppEntry offlineClient=accountAppPage.getApplications().get(OFFLINE_CLIENT_ID);\n    assertThat(offlineClient.getClientScopesGranted(),Matchers.hasItem(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT));\n    assertThat(offlineClient.getAdditionalGrants(),Matchers.hasItem(\"Offline Token\"));\n    accountAppPage.logout();\n    assertCurrentUrlDoesntStartWith(offlineTokenPage);\n    loginPage.assertCurrent();\n  }\n  finally {\n    events.clear();\n    resetTimeOffsetAuthenticated();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 109
      },
      "nodeContext" : "waitUntilElement(By.xpath(\"//body\")).text().contains(OAuthGrantPage.OFFLINE_ACCESS_CONSENT_TEXT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 217,
    "startColumnNumber" : 38,
    "endLineNumber" : 217,
    "endColumnNumber" : 46
  }, {
    "charLength" : 8,
    "startLineNumber" : 229,
    "startColumnNumber" : 38,
    "endLineNumber" : 229,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}