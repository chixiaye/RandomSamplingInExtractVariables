{
  "id" : 487,
  "expression" : "12",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/collect/ImmutableList.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 194,
      "startColumnNumber" : 45,
      "endLineNumber" : 194,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 194,
        "startColumnNumber" : 25,
        "endLineNumber" : 194,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Integer.MAX_VALUE - 12",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 47
      },
      "nodeContext" : "others.length <= Integer.MAX_VALUE - 12",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 193,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 99
      },
      "nodeContext" : "checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 193,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 100
      },
      "nodeContext" : "checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 192,
        "startColumnNumber" : 94,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an immutable list containing the given elements, in order. <p>The array  {@code others} must not be longer than {@code Integer.MAX_VALUE - 12}.\n * @throws NullPointerException if any element is null\n * @since 3.0 (source-compatible since 2.0)\n */\n@SafeVarargs public static <E>ImmutableList<E> of(E e1,E e2,E e3,E e4,E e5,E e6,E e7,E e8,E e9,E e10,E e11,E e12,E... others){\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 47
      },
      "nodeContext" : "others.length <= Integer.MAX_VALUE - 12",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 195,
      "startColumnNumber" : 32,
      "endLineNumber" : 195,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 195,
        "startColumnNumber" : 32,
        "endLineNumber" : 195,
        "endColumnNumber" : 50
      },
      "nodeContext" : "12 + others.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 195,
        "startColumnNumber" : 21,
        "endLineNumber" : 195,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new Object[12 + others.length]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 195,
        "startColumnNumber" : 13,
        "endLineNumber" : 195,
        "endColumnNumber" : 51
      },
      "nodeContext" : "array=new Object[12 + others.length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Object[] array=new Object[12 + others.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 192,
        "startColumnNumber" : 94,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an immutable list containing the given elements, in order. <p>The array  {@code others} must not be longer than {@code Integer.MAX_VALUE - 12}.\n * @throws NullPointerException if any element is null\n * @since 3.0 (source-compatible since 2.0)\n */\n@SafeVarargs public static <E>ImmutableList<E> of(E e1,E e2,E e3,E e4,E e5,E e6,E e7,E e8,E e9,E e10,E e11,E e12,E... others){\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Object[] array=new Object[12 + others.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 208,
      "startColumnNumber" : 39,
      "endLineNumber" : 208,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 57
      },
      "nodeContext" : "System.arraycopy(others,0,array,12,others.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 58
      },
      "nodeContext" : "System.arraycopy(others,0,array,12,others.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 192,
        "startColumnNumber" : 94,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an immutable list containing the given elements, in order. <p>The array  {@code others} must not be longer than {@code Integer.MAX_VALUE - 12}.\n * @throws NullPointerException if any element is null\n * @since 3.0 (source-compatible since 2.0)\n */\n@SafeVarargs public static <E>ImmutableList<E> of(E e1,E e2,E e3,E e4,E e5,E e6,E e7,E e8,E e9,E e10,E e11,E e12,E... others){\n  checkArgument(others.length <= Integer.MAX_VALUE - 12,\"the total number of elements must fit in an int\");\n  Object[] array=new Object[12 + others.length];\n  array[0]=e1;\n  array[1]=e2;\n  array[2]=e3;\n  array[3]=e4;\n  array[4]=e5;\n  array[5]=e6;\n  array[6]=e7;\n  array[7]=e8;\n  array[8]=e9;\n  array[9]=e10;\n  array[10]=e11;\n  array[11]=e12;\n  System.arraycopy(others,0,array,12,others.length);\n  return construct(array);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 58
      },
      "nodeContext" : "System.arraycopy(others,0,array,12,others.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 194,
    "startColumnNumber" : 45,
    "endLineNumber" : 194,
    "endColumnNumber" : 47
  }, {
    "charLength" : 2,
    "startLineNumber" : 195,
    "startColumnNumber" : 32,
    "endLineNumber" : 195,
    "endColumnNumber" : 34
  }, {
    "charLength" : 2,
    "startLineNumber" : 208,
    "startColumnNumber" : 39,
    "endLineNumber" : 208,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}