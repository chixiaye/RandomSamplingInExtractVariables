{
  "id" : 24,
  "expression" : "Version",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/codec/ExchangeCodecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Version",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 239,
      "startColumnNumber" : 32,
      "endLineNumber" : 239,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 239,
        "startColumnNumber" : 32,
        "endLineNumber" : 239,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Version.getProtocolVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assertions.assertEquals(Version.getProtocolVersion(),obj.getVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assertions.assertEquals(Version.getProtocolVersion(),obj.getVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 229,
        "startColumnNumber" : 77,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] header=new byte[]{MAGIC_HIGH,MAGIC_LOW,(byte)0xe2,20,0,0,0,0,0,0,0,0,0,0,0,0};\n  Person person=new Person();\n  byte[] request=getRequestBytes(person,header);\n  Request obj=(Request)decode(request);\n  Assertions.assertEquals(person,obj.getData());\n  Assertions.assertTrue(obj.isTwoWay());\n  Assertions.assertTrue(obj.isEvent());\n  Assertions.assertEquals(Version.getProtocolVersion(),obj.getVersion());\n  System.out.println(obj);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_Decode_Return_Request_Event_Object() throws IOException {\n  byte[] header=new byte[]{MAGIC_HIGH,MAGIC_LOW,(byte)0xe2,20,0,0,0,0,0,0,0,0,0,0,0,0};\n  Person person=new Person();\n  byte[] request=getRequestBytes(person,header);\n  Request obj=(Request)decode(request);\n  Assertions.assertEquals(person,obj.getData());\n  Assertions.assertTrue(obj.isTwoWay());\n  Assertions.assertTrue(obj.isEvent());\n  Assertions.assertEquals(Version.getProtocolVersion(),obj.getVersion());\n  System.out.println(obj);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assertions.assertEquals(Version.getProtocolVersion(),obj.getVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.common.Version"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 239,
    "startColumnNumber" : 32,
    "endLineNumber" : 239,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}