{
  "id" : 456,
  "expression" : "ddata.getNbLayers() > NB_BITS_COMPACT.length",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/aztec/decoder/Decoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ddata.getNbLayers() > NB_BITS_COMPACT.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 380,
      "startColumnNumber" : 10,
      "endLineNumber" : 380,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 380,
        "startColumnNumber" : 6,
        "endLineNumber" : 382,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 379,
        "startColumnNumber" : 27,
        "endLineNumber" : 385,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n    throw FormatException.getFormatInstance();\n  }\n  rawbits=new boolean[NB_BITS_COMPACT[ddata.getNbLayers()]];\n  numCodewords=NB_DATABLOCK_COMPACT[ddata.getNbLayers()];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 379,
        "startColumnNumber" : 4,
        "endLineNumber" : 391,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (ddata.isCompact()) {\n  if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n    throw FormatException.getFormatInstance();\n  }\n  rawbits=new boolean[NB_BITS_COMPACT[ddata.getNbLayers()]];\n  numCodewords=NB_DATABLOCK_COMPACT[ddata.getNbLayers()];\n}\n else {\n  if (ddata.getNbLayers() > NB_BITS.length) {\n    throw FormatException.getFormatInstance();\n  }\n  rawbits=new boolean[NB_BITS[ddata.getNbLayers()]];\n  numCodewords=NB_DATABLOCK[ddata.getNbLayers()];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 376,
        "startColumnNumber" : 73,
        "endLineNumber" : 423,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean[] rawbits;\n  if (ddata.isCompact()) {\n    if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n      throw FormatException.getFormatInstance();\n    }\n    rawbits=new boolean[NB_BITS_COMPACT[ddata.getNbLayers()]];\n    numCodewords=NB_DATABLOCK_COMPACT[ddata.getNbLayers()];\n  }\n else {\n    if (ddata.getNbLayers() > NB_BITS.length) {\n      throw FormatException.getFormatInstance();\n    }\n    rawbits=new boolean[NB_BITS[ddata.getNbLayers()]];\n    numCodewords=NB_DATABLOCK[ddata.getNbLayers()];\n  }\n  int layer=ddata.getNbLayers();\n  int size=matrix.getHeight();\n  int rawbitsOffset=0;\n  int matrixOffset=0;\n  while (layer != 0) {\n    int flip=0;\n    for (int i=0; i < 2 * size - 4; i++) {\n      rawbits[rawbitsOffset + i]=matrix.get(matrixOffset + flip,matrixOffset + i / 2);\n      rawbits[rawbitsOffset + 2 * size - 4 + i]=matrix.get(matrixOffset + i / 2,matrixOffset + size - 1 - flip);\n      flip=(flip + 1) % 2;\n    }\n    flip=0;\n    for (int i=2 * size + 1; i > 5; i--) {\n      rawbits[rawbitsOffset + 4 * size - 8 + (2 * size - i) + 1]=matrix.get(matrixOffset + size - 1 - flip,matrixOffset + i / 2 - 1);\n      rawbits[rawbitsOffset + 6 * size - 12 + (2 * size - i) + 1]=matrix.get(matrixOffset + i / 2 - 1,matrixOffset + flip);\n      flip=(flip + 1) % 2;\n    }\n    matrixOffset+=2;\n    rawbitsOffset+=8 * size - 16;\n    layer--;\n    size-=4;\n  }\n  return rawbits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1831,
        "startLineNumber" : 370,
        "startColumnNumber" : 2,
        "endLineNumber" : 423,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Gets the array of bits from an Aztec Code matrix\n * @return the array of bits\n * @throws FormatException if the matrix is not a valid aztec code\n */\nprivate boolean[] extractBits(BitMatrix matrix) throws FormatException {\n  boolean[] rawbits;\n  if (ddata.isCompact()) {\n    if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n      throw FormatException.getFormatInstance();\n    }\n    rawbits=new boolean[NB_BITS_COMPACT[ddata.getNbLayers()]];\n    numCodewords=NB_DATABLOCK_COMPACT[ddata.getNbLayers()];\n  }\n else {\n    if (ddata.getNbLayers() > NB_BITS.length) {\n      throw FormatException.getFormatInstance();\n    }\n    rawbits=new boolean[NB_BITS[ddata.getNbLayers()]];\n    numCodewords=NB_DATABLOCK[ddata.getNbLayers()];\n  }\n  int layer=ddata.getNbLayers();\n  int size=matrix.getHeight();\n  int rawbitsOffset=0;\n  int matrixOffset=0;\n  while (layer != 0) {\n    int flip=0;\n    for (int i=0; i < 2 * size - 4; i++) {\n      rawbits[rawbitsOffset + i]=matrix.get(matrixOffset + flip,matrixOffset + i / 2);\n      rawbits[rawbitsOffset + 2 * size - 4 + i]=matrix.get(matrixOffset + i / 2,matrixOffset + size - 1 - flip);\n      flip=(flip + 1) % 2;\n    }\n    flip=0;\n    for (int i=2 * size + 1; i > 5; i--) {\n      rawbits[rawbitsOffset + 4 * size - 8 + (2 * size - i) + 1]=matrix.get(matrixOffset + size - 1 - flip,matrixOffset + i / 2 - 1);\n      rawbits[rawbitsOffset + 6 * size - 12 + (2 * size - i) + 1]=matrix.get(matrixOffset + i / 2 - 1,matrixOffset + flip);\n      flip=(flip + 1) % 2;\n    }\n    matrixOffset+=2;\n    rawbitsOffset+=8 * size - 16;\n    layer--;\n    size-=4;\n  }\n  return rawbits;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 317,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 380,
        "startColumnNumber" : 6,
        "endLineNumber" : 382,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ddata.getNbLayers() > NB_BITS_COMPACT.length) {\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 380,
    "startColumnNumber" : 10,
    "endLineNumber" : 380,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}