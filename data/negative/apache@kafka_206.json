{
  "id" : 206,
  "expression" : "oldAgg",
  "projectName" : "apache@kafka",
  "commitID" : "ce83e5be6644884d5c727ed49982f45eca8c136f",
  "filePath" : "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamAggregate.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oldAgg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 111,
      "startColumnNumber" : 16,
      "endLineNumber" : 111,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 30
      },
      "nodeContext" : "oldAgg == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (oldAgg == null) {\n  oldAgg=initializer.apply();\n  newTimestamp=record.timestamp();\n}\n else {\n  oldAgg=oldAggAndTimestamp.value();\n  newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 86,
        "startColumnNumber" : 59,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<KIn,VIn> record){\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 30
      },
      "nodeContext" : "oldAgg == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "VAgg"
  }, {
    "nodeContext" : "oldAgg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 119,
      "startColumnNumber" : 68,
      "endLineNumber" : 119,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 119,
        "startColumnNumber" : 21,
        "endLineNumber" : 119,
        "endColumnNumber" : 75
      },
      "nodeContext" : "aggregator.apply(record.key(),record.value(),oldAgg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 75
      },
      "nodeContext" : "newAgg=aggregator.apply(record.key(),record.value(),oldAgg)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 76
      },
      "nodeContext" : "newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 86,
        "startColumnNumber" : 59,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<KIn,VIn> record){\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 76
      },
      "nodeContext" : "newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "VAgg"
  }, {
    "nodeContext" : "oldAgg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 122,
      "startColumnNumber" : 78,
      "endLineNumber" : 122,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 122,
        "startColumnNumber" : 62,
        "endLineNumber" : 122,
        "endColumnNumber" : 91
      },
      "nodeContext" : "sendOldValues ? oldAgg : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 106
      },
      "nodeContext" : "tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 107
      },
      "nodeContext" : "tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 86,
        "startColumnNumber" : 59,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void process(final Record<KIn,VIn> record){\n  if (record.key() == null || record.value() == null) {\n    if (context().recordMetadata().isPresent()) {\n      final RecordMetadata recordMetadata=context().recordMetadata().get();\n      LOG.warn(\"Skipping record due to null key or value. \" + \"topic=[{}] partition=[{}] offset=[{}]\",recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset());\n    }\n else {\n      LOG.warn(\"Skipping record due to null key or value. Topic, partition, and offset not known.\");\n    }\n    droppedRecordsSensor.record();\n    return;\n  }\n  final ValueAndTimestamp<VAgg> oldAggAndTimestamp=store.get(record.key());\n  VAgg oldAgg=getValueOrNull(oldAggAndTimestamp);\n  final VAgg newAgg;\n  final long newTimestamp;\n  if (oldAgg == null) {\n    oldAgg=initializer.apply();\n    newTimestamp=record.timestamp();\n  }\n else {\n    oldAgg=oldAggAndTimestamp.value();\n    newTimestamp=Math.max(record.timestamp(),oldAggAndTimestamp.timestamp());\n  }\n  newAgg=aggregator.apply(record.key(),record.value(),oldAgg);\n  store.put(record.key(),ValueAndTimestamp.make(newAgg,newTimestamp));\n  tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 107
      },
      "nodeContext" : "tupleForwarder.maybeForward(record.key(),newAgg,sendOldValues ? oldAgg : null,newTimestamp);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "VAgg"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 111,
    "startColumnNumber" : 16,
    "endLineNumber" : 111,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 119,
    "startColumnNumber" : 68,
    "endLineNumber" : 119,
    "endColumnNumber" : 74
  }, {
    "charLength" : 6,
    "startLineNumber" : 122,
    "startColumnNumber" : 78,
    "endLineNumber" : 122,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}