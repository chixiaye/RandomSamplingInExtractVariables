{
  "id" : 397,
  "expression" : "2",
  "projectName" : "arduino@Arduino",
  "commitID" : "24b32422e24e3dbffbb25a16a6ab3d8d533a3b5d",
  "filePath" : "arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 291,
      "startColumnNumber" : 45,
      "endLineNumber" : 291,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 291,
        "startColumnNumber" : 23,
        "endLineNumber" : 291,
        "endColumnNumber" : 47
      },
      "nodeContext" : "programmer.split(\":\",2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 291,
        "startColumnNumber" : 15,
        "endLineNumber" : 291,
        "endColumnNumber" : 47
      },
      "nodeContext" : "split=programmer.split(\":\",2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 291,
        "startColumnNumber" : 6,
        "endLineNumber" : 291,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String[] split=programmer.split(\":\",2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 290,
        "startColumnNumber" : 34,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] split=programmer.split(\":\",2);\n  TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n  programmer=split[1];\n  programmerPrefs=platform.getProgrammer(programmer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (programmer.contains(\":\")) {\n  String[] split=programmer.split(\":\",2);\n  TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n  programmer=split[1];\n  programmerPrefs=platform.getProgrammer(programmer);\n}\n else {\n  programmerPrefs=targetPlatform.getProgrammer(programmer);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2485,
        "startLineNumber" : 284,
        "startColumnNumber" : 51,
        "endLineNumber" : 343,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap programmerPrefs;\n  String programmer=PreferencesData.get(\"programmer\");\n  if (programmer.contains(\":\")) {\n    String[] split=programmer.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    programmer=split[1];\n    programmerPrefs=platform.getProgrammer(programmer);\n  }\n else {\n    programmerPrefs=targetPlatform.getProgrammer(programmer);\n  }\n  if (programmerPrefs == null)   throw new RunnerException(_(\"Please select a programmer from Tools->Programmer menu\"));\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  prefs.putAll(programmerPrefs);\n  PreferencesMap toolPrefs=new PreferencesMap();\n  String tool=prefs.getOrExcept(\"bootloader.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n    toolPrefs.putAll(platform.getTool(tool));\n    if (toolPrefs.size() == 0)     throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n  }\n  toolPrefs.putAll(targetPlatform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0}\"),tool));\n  prefs.putAll(toolPrefs);\n  if (verbose) {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.verbose\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.verbose\"));\n  }\n else {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.quiet\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.quiet\"));\n  }\n  String pattern=prefs.getOrExcept(\"erase.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  if (!executeUploadCommand(cmd))   return false;\n  pattern=prefs.getOrExcept(\"bootloader.pattern\");\n  cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  return executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2534,
        "startLineNumber" : 284,
        "startColumnNumber" : 2,
        "endLineNumber" : 343,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean burnBootloader() throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap programmerPrefs;\n  String programmer=PreferencesData.get(\"programmer\");\n  if (programmer.contains(\":\")) {\n    String[] split=programmer.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    programmer=split[1];\n    programmerPrefs=platform.getProgrammer(programmer);\n  }\n else {\n    programmerPrefs=targetPlatform.getProgrammer(programmer);\n  }\n  if (programmerPrefs == null)   throw new RunnerException(_(\"Please select a programmer from Tools->Programmer menu\"));\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  prefs.putAll(programmerPrefs);\n  PreferencesMap toolPrefs=new PreferencesMap();\n  String tool=prefs.getOrExcept(\"bootloader.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n    toolPrefs.putAll(platform.getTool(tool));\n    if (toolPrefs.size() == 0)     throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n  }\n  toolPrefs.putAll(targetPlatform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0}\"),tool));\n  prefs.putAll(toolPrefs);\n  if (verbose) {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.verbose\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.verbose\"));\n  }\n else {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.quiet\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.quiet\"));\n  }\n  String pattern=prefs.getOrExcept(\"erase.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  if (!executeUploadCommand(cmd))   return false;\n  pattern=prefs.getOrExcept(\"bootloader.pattern\");\n  cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  return executeUploadCommand(cmd);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 320,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 291,
        "startColumnNumber" : 6,
        "endLineNumber" : 291,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String[] split=programmer.split(\":\",2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 314,
      "startColumnNumber" : 39,
      "endLineNumber" : 314,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 314,
        "startColumnNumber" : 23,
        "endLineNumber" : 314,
        "endColumnNumber" : 41
      },
      "nodeContext" : "tool.split(\":\",2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 314,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 41
      },
      "nodeContext" : "split=tool.split(\":\",2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 314,
        "startColumnNumber" : 6,
        "endLineNumber" : 314,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String[] split=tool.split(\":\",2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 313,
        "startColumnNumber" : 28,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] split=tool.split(\":\",2);\n  TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n  tool=split[1];\n  toolPrefs.putAll(platform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 313,
        "startColumnNumber" : 4,
        "endLineNumber" : 320,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (tool.contains(\":\")) {\n  String[] split=tool.split(\":\",2);\n  TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n  tool=split[1];\n  toolPrefs.putAll(platform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2485,
        "startLineNumber" : 284,
        "startColumnNumber" : 51,
        "endLineNumber" : 343,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap programmerPrefs;\n  String programmer=PreferencesData.get(\"programmer\");\n  if (programmer.contains(\":\")) {\n    String[] split=programmer.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    programmer=split[1];\n    programmerPrefs=platform.getProgrammer(programmer);\n  }\n else {\n    programmerPrefs=targetPlatform.getProgrammer(programmer);\n  }\n  if (programmerPrefs == null)   throw new RunnerException(_(\"Please select a programmer from Tools->Programmer menu\"));\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  prefs.putAll(programmerPrefs);\n  PreferencesMap toolPrefs=new PreferencesMap();\n  String tool=prefs.getOrExcept(\"bootloader.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n    toolPrefs.putAll(platform.getTool(tool));\n    if (toolPrefs.size() == 0)     throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n  }\n  toolPrefs.putAll(targetPlatform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0}\"),tool));\n  prefs.putAll(toolPrefs);\n  if (verbose) {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.verbose\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.verbose\"));\n  }\n else {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.quiet\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.quiet\"));\n  }\n  String pattern=prefs.getOrExcept(\"erase.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  if (!executeUploadCommand(cmd))   return false;\n  pattern=prefs.getOrExcept(\"bootloader.pattern\");\n  cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  return executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2534,
        "startLineNumber" : 284,
        "startColumnNumber" : 2,
        "endLineNumber" : 343,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean burnBootloader() throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap programmerPrefs;\n  String programmer=PreferencesData.get(\"programmer\");\n  if (programmer.contains(\":\")) {\n    String[] split=programmer.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    programmer=split[1];\n    programmerPrefs=platform.getProgrammer(programmer);\n  }\n else {\n    programmerPrefs=targetPlatform.getProgrammer(programmer);\n  }\n  if (programmerPrefs == null)   throw new RunnerException(_(\"Please select a programmer from Tools->Programmer menu\"));\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  prefs.putAll(programmerPrefs);\n  PreferencesMap toolPrefs=new PreferencesMap();\n  String tool=prefs.getOrExcept(\"bootloader.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    TargetPlatform platform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n    toolPrefs.putAll(platform.getTool(tool));\n    if (toolPrefs.size() == 0)     throw new RunnerException(I18n.format(_(\"Could not find tool {0} from package {1}\"),tool,split[0]));\n  }\n  toolPrefs.putAll(targetPlatform.getTool(tool));\n  if (toolPrefs.size() == 0)   throw new RunnerException(I18n.format(_(\"Could not find tool {0}\"),tool));\n  prefs.putAll(toolPrefs);\n  if (verbose) {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.verbose\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.verbose\"));\n  }\n else {\n    prefs.put(\"erase.verbose\",prefs.getOrExcept(\"erase.params.quiet\"));\n    prefs.put(\"bootloader.verbose\",prefs.getOrExcept(\"bootloader.params.quiet\"));\n  }\n  String pattern=prefs.getOrExcept(\"erase.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  if (!executeUploadCommand(cmd))   return false;\n  pattern=prefs.getOrExcept(\"bootloader.pattern\");\n  cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  return executeUploadCommand(cmd);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 320,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 314,
        "startColumnNumber" : 6,
        "endLineNumber" : 314,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String[] split=tool.split(\":\",2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 291,
    "startColumnNumber" : 45,
    "endLineNumber" : 291,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 314,
    "startColumnNumber" : 39,
    "endLineNumber" : 314,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}