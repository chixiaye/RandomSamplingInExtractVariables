{
  "id" : 295,
  "expression" : "b",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/cache/CacheBuilderSpecTest.java",
  "occurrences" : 16,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 529,
      "startColumnNumber" : 57,
      "endLineNumber" : 529,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 529,
        "startColumnNumber" : 57,
        "endLineNumber" : 529,
        "endColumnNumber" : 75
      },
      "nodeContext" : "b.concurrencyLevel",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 529,
        "startColumnNumber" : 4,
        "endLineNumber" : 529,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 529,
        "startColumnNumber" : 4,
        "endLineNumber" : 529,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 529,
        "startColumnNumber" : 4,
        "endLineNumber" : 529,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 530,
      "startColumnNumber" : 69,
      "endLineNumber" : 530,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 530,
        "startColumnNumber" : 69,
        "endLineNumber" : 530,
        "endColumnNumber" : 93
      },
      "nodeContext" : "b.expireAfterAccessNanos",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 530,
        "startColumnNumber" : 4,
        "endLineNumber" : 530,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 530,
        "startColumnNumber" : 4,
        "endLineNumber" : 530,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 530,
        "startColumnNumber" : 4,
        "endLineNumber" : 530,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 531,
      "startColumnNumber" : 67,
      "endLineNumber" : 531,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 531,
        "startColumnNumber" : 67,
        "endLineNumber" : 531,
        "endColumnNumber" : 90
      },
      "nodeContext" : "b.expireAfterWriteNanos",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 531,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 531,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 531,
        "startColumnNumber" : 4,
        "endLineNumber" : 531,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 532,
      "startColumnNumber" : 55,
      "endLineNumber" : 532,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 532,
        "startColumnNumber" : 55,
        "endLineNumber" : 532,
        "endColumnNumber" : 72
      },
      "nodeContext" : "b.initialCapacity",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 532,
        "startColumnNumber" : 4,
        "endLineNumber" : 532,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 532,
        "startColumnNumber" : 4,
        "endLineNumber" : 532,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 532,
        "startColumnNumber" : 4,
        "endLineNumber" : 532,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 533,
      "startColumnNumber" : 47,
      "endLineNumber" : 533,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 533,
        "startColumnNumber" : 47,
        "endLineNumber" : 533,
        "endColumnNumber" : 60
      },
      "nodeContext" : "b.maximumSize",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 533,
        "startColumnNumber" : 4,
        "endLineNumber" : 533,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 533,
        "startColumnNumber" : 4,
        "endLineNumber" : 533,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 533,
        "startColumnNumber" : 4,
        "endLineNumber" : 533,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 534,
      "startColumnNumber" : 51,
      "endLineNumber" : 534,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 534,
        "startColumnNumber" : 51,
        "endLineNumber" : 534,
        "endColumnNumber" : 66
      },
      "nodeContext" : "b.maximumWeight",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 534,
        "startColumnNumber" : 4,
        "endLineNumber" : 534,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 534,
        "startColumnNumber" : 4,
        "endLineNumber" : 534,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 534,
        "startColumnNumber" : 4,
        "endLineNumber" : 534,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 535,
      "startColumnNumber" : 49,
      "endLineNumber" : 535,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 535,
        "startColumnNumber" : 49,
        "endLineNumber" : 535,
        "endColumnNumber" : 63
      },
      "nodeContext" : "b.refreshNanos",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 535,
        "startColumnNumber" : 4,
        "endLineNumber" : 535,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 535,
        "startColumnNumber" : 4,
        "endLineNumber" : 535,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 535,
        "startColumnNumber" : 4,
        "endLineNumber" : 535,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 536,
      "startColumnNumber" : 53,
      "endLineNumber" : 536,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 536,
        "startColumnNumber" : 53,
        "endLineNumber" : 536,
        "endColumnNumber" : 69
      },
      "nodeContext" : "b.keyEquivalence",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 536,
        "startColumnNumber" : 4,
        "endLineNumber" : 536,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 536,
        "startColumnNumber" : 4,
        "endLineNumber" : 536,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 536,
        "startColumnNumber" : 4,
        "endLineNumber" : 536,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 537,
      "startColumnNumber" : 47,
      "endLineNumber" : 537,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 537,
        "startColumnNumber" : 47,
        "endLineNumber" : 537,
        "endColumnNumber" : 60
      },
      "nodeContext" : "b.keyStrength",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 537,
        "startColumnNumber" : 4,
        "endLineNumber" : 537,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 537,
        "startColumnNumber" : 4,
        "endLineNumber" : 537,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 537,
        "startColumnNumber" : 4,
        "endLineNumber" : 537,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 538,
      "startColumnNumber" : 55,
      "endLineNumber" : 538,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 538,
        "startColumnNumber" : 55,
        "endLineNumber" : 538,
        "endColumnNumber" : 72
      },
      "nodeContext" : "b.removalListener",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 538,
        "startColumnNumber" : 4,
        "endLineNumber" : 538,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(\"removalListener\",a.removalListener,b.removalListener)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 538,
        "startColumnNumber" : 4,
        "endLineNumber" : 538,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 538,
        "startColumnNumber" : 4,
        "endLineNumber" : 538,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 539,
      "startColumnNumber" : 39,
      "endLineNumber" : 539,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 539,
        "startColumnNumber" : 39,
        "endLineNumber" : 539,
        "endColumnNumber" : 48
      },
      "nodeContext" : "b.weigher",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 539,
        "startColumnNumber" : 4,
        "endLineNumber" : 539,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(\"weigher\",a.weigher,b.weigher)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 539,
        "startColumnNumber" : 4,
        "endLineNumber" : 539,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(\"weigher\",a.weigher,b.weigher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 539,
        "startColumnNumber" : 4,
        "endLineNumber" : 539,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(\"weigher\",a.weigher,b.weigher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 540,
      "startColumnNumber" : 57,
      "endLineNumber" : 540,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 540,
        "startColumnNumber" : 57,
        "endLineNumber" : 540,
        "endColumnNumber" : 75
      },
      "nodeContext" : "b.valueEquivalence",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 540,
        "startColumnNumber" : 4,
        "endLineNumber" : 540,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 540,
        "startColumnNumber" : 4,
        "endLineNumber" : 540,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 540,
        "startColumnNumber" : 4,
        "endLineNumber" : 540,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 541,
      "startColumnNumber" : 51,
      "endLineNumber" : 541,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 541,
        "startColumnNumber" : 51,
        "endLineNumber" : 541,
        "endColumnNumber" : 66
      },
      "nodeContext" : "b.valueStrength",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 541,
        "startColumnNumber" : 4,
        "endLineNumber" : 541,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 541,
        "startColumnNumber" : 4,
        "endLineNumber" : 541,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 541,
        "startColumnNumber" : 4,
        "endLineNumber" : 541,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 542,
      "startColumnNumber" : 65,
      "endLineNumber" : 542,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 542,
        "startColumnNumber" : 65,
        "endLineNumber" : 542,
        "endColumnNumber" : 87
      },
      "nodeContext" : "b.statsCounterSupplier",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 542,
        "startColumnNumber" : 4,
        "endLineNumber" : 542,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 542,
        "startColumnNumber" : 4,
        "endLineNumber" : 542,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 542,
        "startColumnNumber" : 4,
        "endLineNumber" : 542,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 543,
      "startColumnNumber" : 37,
      "endLineNumber" : 543,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 543,
        "startColumnNumber" : 37,
        "endLineNumber" : 543,
        "endColumnNumber" : 45
      },
      "nodeContext" : "b.ticker",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 543,
        "startColumnNumber" : 4,
        "endLineNumber" : 543,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(\"ticker\",a.ticker,b.ticker)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 543,
        "startColumnNumber" : 4,
        "endLineNumber" : 543,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"ticker\",a.ticker,b.ticker);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 543,
        "startColumnNumber" : 4,
        "endLineNumber" : 543,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(\"ticker\",a.ticker,b.ticker);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  }, {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 544,
      "startColumnNumber" : 54,
      "endLineNumber" : 544,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 544,
        "startColumnNumber" : 54,
        "endLineNumber" : 544,
        "endColumnNumber" : 74
      },
      "nodeContext" : "b.isRecordingStats()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 544,
        "startColumnNumber" : 4,
        "endLineNumber" : 544,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 544,
        "startColumnNumber" : 4,
        "endLineNumber" : 544,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 528,
        "startColumnNumber" : 96,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 528,
        "startColumnNumber" : 2,
        "endLineNumber" : 545,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCacheBuilderEquivalence(CacheBuilder<?,?> a,CacheBuilder<?,?> b){\n  assertEquals(\"concurrencyLevel\",a.concurrencyLevel,b.concurrencyLevel);\n  assertEquals(\"expireAfterAccessNanos\",a.expireAfterAccessNanos,b.expireAfterAccessNanos);\n  assertEquals(\"expireAfterWriteNanos\",a.expireAfterWriteNanos,b.expireAfterWriteNanos);\n  assertEquals(\"initialCapacity\",a.initialCapacity,b.initialCapacity);\n  assertEquals(\"maximumSize\",a.maximumSize,b.maximumSize);\n  assertEquals(\"maximumWeight\",a.maximumWeight,b.maximumWeight);\n  assertEquals(\"refreshNanos\",a.refreshNanos,b.refreshNanos);\n  assertEquals(\"keyEquivalence\",a.keyEquivalence,b.keyEquivalence);\n  assertEquals(\"keyStrength\",a.keyStrength,b.keyStrength);\n  assertEquals(\"removalListener\",a.removalListener,b.removalListener);\n  assertEquals(\"weigher\",a.weigher,b.weigher);\n  assertEquals(\"valueEquivalence\",a.valueEquivalence,b.valueEquivalence);\n  assertEquals(\"valueStrength\",a.valueStrength,b.valueStrength);\n  assertEquals(\"statsCounterSupplier\",a.statsCounterSupplier,b.statsCounterSupplier);\n  assertEquals(\"ticker\",a.ticker,b.ticker);\n  assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 544,
        "startColumnNumber" : 4,
        "endLineNumber" : 544,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"recordStats\",a.isRecordingStats(),b.isRecordingStats());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.cache.CacheBuilder<,>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 529,
    "startColumnNumber" : 57,
    "endLineNumber" : 529,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 530,
    "startColumnNumber" : 69,
    "endLineNumber" : 530,
    "endColumnNumber" : 70
  }, {
    "charLength" : 1,
    "startLineNumber" : 531,
    "startColumnNumber" : 67,
    "endLineNumber" : 531,
    "endColumnNumber" : 68
  }, {
    "charLength" : 1,
    "startLineNumber" : 532,
    "startColumnNumber" : 55,
    "endLineNumber" : 532,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 533,
    "startColumnNumber" : 47,
    "endLineNumber" : 533,
    "endColumnNumber" : 48
  }, {
    "charLength" : 1,
    "startLineNumber" : 534,
    "startColumnNumber" : 51,
    "endLineNumber" : 534,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 535,
    "startColumnNumber" : 49,
    "endLineNumber" : 535,
    "endColumnNumber" : 50
  }, {
    "charLength" : 1,
    "startLineNumber" : 536,
    "startColumnNumber" : 53,
    "endLineNumber" : 536,
    "endColumnNumber" : 54
  }, {
    "charLength" : 1,
    "startLineNumber" : 537,
    "startColumnNumber" : 47,
    "endLineNumber" : 537,
    "endColumnNumber" : 48
  }, {
    "charLength" : 1,
    "startLineNumber" : 538,
    "startColumnNumber" : 55,
    "endLineNumber" : 538,
    "endColumnNumber" : 56
  }, {
    "charLength" : 1,
    "startLineNumber" : 539,
    "startColumnNumber" : 39,
    "endLineNumber" : 539,
    "endColumnNumber" : 40
  }, {
    "charLength" : 1,
    "startLineNumber" : 540,
    "startColumnNumber" : 57,
    "endLineNumber" : 540,
    "endColumnNumber" : 58
  }, {
    "charLength" : 1,
    "startLineNumber" : 541,
    "startColumnNumber" : 51,
    "endLineNumber" : 541,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 542,
    "startColumnNumber" : 65,
    "endLineNumber" : 542,
    "endColumnNumber" : 66
  }, {
    "charLength" : 1,
    "startLineNumber" : 543,
    "startColumnNumber" : 37,
    "endLineNumber" : 543,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 544,
    "startColumnNumber" : 54,
    "endLineNumber" : 544,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 3
  } ]
}