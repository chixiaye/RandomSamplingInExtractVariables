{
  "id" : 137,
  "expression" : "String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName)",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/mapper/Wrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 1548,
      "startColumnNumber" : 20,
      "endLineNumber" : 1548,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 1547,
        "startColumnNumber" : 25,
        "endLineNumber" : 1548,
        "endColumnNumber" : 85
      },
      "nodeContext" : "sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 1547,
        "startColumnNumber" : 16,
        "endLineNumber" : 1548,
        "endColumnNumber" : 85
      },
      "nodeContext" : "sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 1547,
        "startColumnNumber" : 16,
        "endLineNumber" : 1548,
        "endColumnNumber" : 86
      },
      "nodeContext" : "sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 1545,
        "startColumnNumber" : 52,
        "endLineNumber" : 1550,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n  sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n  paramNameValuePairs.put(genParamName,params[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 1545,
        "startColumnNumber" : 12,
        "endLineNumber" : 1550,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < params.length; ++i) {\n  String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n  sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n  paramNameValuePairs.put(genParamName,params[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 1544,
        "startColumnNumber" : 43,
        "endLineNumber" : 1551,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < params.length; ++i) {\n    String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n    sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n    paramNameValuePairs.put(genParamName,params[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 1544,
        "startColumnNumber" : 8,
        "endLineNumber" : 1551,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ArrayUtils.isNotEmpty(params)) {\n  for (int i=0; i < params.length; ++i) {\n    String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n    sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n    paramNameValuePairs.put(genParamName,params[i]);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 1539,
        "startColumnNumber" : 84,
        "endLineNumber" : 1553,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!need || StringUtils.isEmpty(sqlStr)) {\n    return null;\n  }\n  if (ArrayUtils.isNotEmpty(params)) {\n    for (int i=0; i < params.length; ++i) {\n      String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n      sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n      paramNameValuePairs.put(genParamName,params[i]);\n    }\n  }\n  return sqlStr;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 1521,
        "startColumnNumber" : 4,
        "endLineNumber" : 1553,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 根据需要格式化SQL<BR> <BR> Format SQL for methods: EntityWrapper<T>.where/and/or...(\"name={0}\", value); ALL the {<b>i</b>} will be replaced with #{MPGENVAL<b>i</b>}<BR> <BR> ew.where(\"sample_name=<b>{0}</b>\", \"haha\").and(\"sample_age &gt;<b>{0}</b> and sample_age&lt;<b>{1}</b>\", 18, 30) <b>TO</b> sample_name=<b>#{MPGENVAL1}</b> and sample_age&gt;#<b>{MPGENVAL2}</b> and sample_age&lt;<b>#{MPGENVAL3}</b><BR> </p>\n * @param need   是否需要格式化\n * @param sqlStr SQL语句部分\n * @param params 参数集\n * @return this\n */\nprotected String formatSqlIfNeed(boolean need,String sqlStr,Object... params){\n  if (!need || StringUtils.isEmpty(sqlStr)) {\n    return null;\n  }\n  if (ArrayUtils.isNotEmpty(params)) {\n    for (int i=0; i < params.length; ++i) {\n      String genParamName=MP_GENERAL_PARAMNAME + paramNameSeq.incrementAndGet();\n      sqlStr=sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName));\n      paramNameValuePairs.put(genParamName,params[i]);\n    }\n  }\n  return sqlStr;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 1547,
        "startColumnNumber" : 25,
        "endLineNumber" : 1548,
        "endColumnNumber" : 85
      },
      "nodeContext" : "sqlStr.replace(String.format(PLACE_HOLDER,i),String.format(MYBATIS_PLUS_TOKEN,getParamAlias(),genParamName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 1548,
    "startColumnNumber" : 20,
    "endLineNumber" : 1548,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}