{
  "id" : 39,
  "expression" : "SampleInstanceInfo.ZuulServer",
  "projectName" : "Netflix@eureka",
  "commitID" : "6196a70755cdc2f14ba47802ac3e262081928f9a",
  "filePath" : "eureka-client/src/test/java/com/netflix/eureka2/client/EurekaClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SampleInstanceInfo.ZuulServer",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 71,
      "startColumnNumber" : 45,
      "endLineNumber" : 71,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 71,
        "startColumnNumber" : 45,
        "endLineNumber" : 71,
        "endColumnNumber" : 82
      },
      "nodeContext" : "SampleInstanceInfo.ZuulServer.build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 71,
        "startColumnNumber" : 45,
        "endLineNumber" : 71,
        "endColumnNumber" : 98
      },
      "nodeContext" : "SampleInstanceInfo.ZuulServer.build().getVipAddress()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 71,
        "startColumnNumber" : 27,
        "endLineNumber" : 71,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 99
      },
      "nodeContext" : "interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 100
      },
      "nodeContext" : "interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 68,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  interestAll=Interests.forFullRegistry();\n  interestDiscovery=Interests.forVips(SampleInstanceInfo.DiscoveryServer.build().getVipAddress());\n  interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n  discoveryRegistry=Arrays.asList(SampleChangeNotification.DiscoveryAdd.newNotification(),SampleChangeNotification.DiscoveryAdd.newNotification());\n  zuulRegistry=Arrays.asList(SampleChangeNotification.ZuulAdd.newNotification(),SampleChangeNotification.ZuulAdd.newNotification());\n  allRegistry=new ArrayList<>(discoveryRegistry);\n  allRegistry.addAll(zuulRegistry);\n  registry=new PreservableEurekaRegistry(new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics()),new BasicEurekaRegistryConfig(),EurekaRegistryMetricFactory.registryMetrics());\n  for (  ChangeNotification<InstanceInfo> notification : allRegistry) {\n    registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n  }\n  when(mockConnection.submitWithAck(anyObject())).thenReturn(Observable.<Void>empty());\n  when(mockConnection.incoming()).thenReturn(Observable.never());\n  when(mockConnection.lifecycleObservable()).thenReturn(ReplaySubject.<Void>create());\n  when(mockReadTransportClient.connect()).thenReturn(Observable.just(mockConnection));\n  ClientChannelFactory clientChannelFactory=new ClientChannelFactoryImpl(mockWriteTransportClient,mockReadTransportClient,registry,1000,EurekaClientMetricFactory.clientMetrics());\n  InterestHandler interestHandler=new InterestHandlerImpl(registry,clientChannelFactory);\n  client=new EurekaClientImpl(interestHandler,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2173,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void before() throws Throwable {\n  interestAll=Interests.forFullRegistry();\n  interestDiscovery=Interests.forVips(SampleInstanceInfo.DiscoveryServer.build().getVipAddress());\n  interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n  discoveryRegistry=Arrays.asList(SampleChangeNotification.DiscoveryAdd.newNotification(),SampleChangeNotification.DiscoveryAdd.newNotification());\n  zuulRegistry=Arrays.asList(SampleChangeNotification.ZuulAdd.newNotification(),SampleChangeNotification.ZuulAdd.newNotification());\n  allRegistry=new ArrayList<>(discoveryRegistry);\n  allRegistry.addAll(zuulRegistry);\n  registry=new PreservableEurekaRegistry(new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics()),new BasicEurekaRegistryConfig(),EurekaRegistryMetricFactory.registryMetrics());\n  for (  ChangeNotification<InstanceInfo> notification : allRegistry) {\n    registry.register(notification.getData()).toBlocking().firstOrDefault(null);\n  }\n  when(mockConnection.submitWithAck(anyObject())).thenReturn(Observable.<Void>empty());\n  when(mockConnection.incoming()).thenReturn(Observable.never());\n  when(mockConnection.lifecycleObservable()).thenReturn(ReplaySubject.<Void>create());\n  when(mockReadTransportClient.connect()).thenReturn(Observable.just(mockConnection));\n  ClientChannelFactory clientChannelFactory=new ClientChannelFactoryImpl(mockWriteTransportClient,mockReadTransportClient,registry,1000,EurekaClientMetricFactory.clientMetrics());\n  InterestHandler interestHandler=new InterestHandlerImpl(registry,clientChannelFactory);\n  client=new EurekaClientImpl(interestHandler,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 100
      },
      "nodeContext" : "interestZuul=Interests.forVips(SampleInstanceInfo.ZuulServer.build().getVipAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "com.netflix.eureka2.testkit.data.builder.SampleInstanceInfo"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 71,
    "startColumnNumber" : 45,
    "endLineNumber" : 71,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}