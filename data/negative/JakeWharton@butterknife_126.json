{
  "id" : 126,
  "expression" : "superType",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "superType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 1021,
      "startColumnNumber" : 24,
      "endLineNumber" : 1021,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 1021,
        "startColumnNumber" : 8,
        "endLineNumber" : 1021,
        "endColumnNumber" : 45
      },
      "nodeContext" : "isSubtypeOfType(superType,otherType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 1021,
        "startColumnNumber" : 4,
        "endLineNumber" : 1023,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isSubtypeOfType(superType,otherType)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1209,
        "startLineNumber" : 992,
        "startColumnNumber" : 75,
        "endLineNumber" : 1030,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (otherType.equals(typeMirror.toString())) {\n    return true;\n  }\n  if (typeMirror.getKind() != TypeKind.DECLARED) {\n    return false;\n  }\n  DeclaredType declaredType=(DeclaredType)typeMirror;\n  List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n  if (typeArguments.size() > 0) {\n    StringBuilder typeString=new StringBuilder(declaredType.asElement().toString());\n    typeString.append('<');\n    for (int i=0; i < typeArguments.size(); i++) {\n      if (i > 0) {\n        typeString.append(',');\n      }\n      typeString.append('?');\n    }\n    typeString.append('>');\n    if (typeString.toString().equals(otherType)) {\n      return true;\n    }\n  }\n  Element element=declaredType.asElement();\n  if (!(element instanceof TypeElement)) {\n    return false;\n  }\n  TypeElement typeElement=(TypeElement)element;\n  TypeMirror superType=typeElement.getSuperclass();\n  if (isSubtypeOfType(superType,otherType)) {\n    return true;\n  }\n  for (  TypeMirror interfaceType : typeElement.getInterfaces()) {\n    if (isSubtypeOfType(interfaceType,otherType)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1282,
        "startLineNumber" : 992,
        "startColumnNumber" : 2,
        "endLineNumber" : 1030,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean isSubtypeOfType(TypeMirror typeMirror,String otherType){\n  if (otherType.equals(typeMirror.toString())) {\n    return true;\n  }\n  if (typeMirror.getKind() != TypeKind.DECLARED) {\n    return false;\n  }\n  DeclaredType declaredType=(DeclaredType)typeMirror;\n  List<? extends TypeMirror> typeArguments=declaredType.getTypeArguments();\n  if (typeArguments.size() > 0) {\n    StringBuilder typeString=new StringBuilder(declaredType.asElement().toString());\n    typeString.append('<');\n    for (int i=0; i < typeArguments.size(); i++) {\n      if (i > 0) {\n        typeString.append(',');\n      }\n      typeString.append('?');\n    }\n    typeString.append('>');\n    if (typeString.toString().equals(otherType)) {\n      return true;\n    }\n  }\n  Element element=declaredType.asElement();\n  if (!(element instanceof TypeElement)) {\n    return false;\n  }\n  TypeElement typeElement=(TypeElement)element;\n  TypeMirror superType=typeElement.getSuperclass();\n  if (isSubtypeOfType(superType,otherType)) {\n    return true;\n  }\n  for (  TypeMirror interfaceType : typeElement.getInterfaces()) {\n    if (isSubtypeOfType(interfaceType,otherType)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 1021,
        "startColumnNumber" : 8,
        "endLineNumber" : 1021,
        "endColumnNumber" : 45
      },
      "nodeContext" : "isSubtypeOfType(superType,otherType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.type.TypeMirror"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 1021,
    "startColumnNumber" : 24,
    "endLineNumber" : 1021,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}