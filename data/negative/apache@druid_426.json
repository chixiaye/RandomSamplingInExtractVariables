{
  "id" : 426,
  "expression" : "\"Invalid table size[%s]\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/segment/data/TableLongEncodingReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid table size[%s]\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 40,
      "startColumnNumber" : 22,
      "endLineNumber" : 40,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 40,
        "startColumnNumber" : 14,
        "endLineNumber" : 40,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new IAE(\"Invalid table size[%s]\",tableSize)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 59
      },
      "nodeContext" : "throw new IAE(\"Invalid table size[%s]\",tableSize);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 39,
        "startColumnNumber" : 74,
        "endLineNumber" : 41,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new IAE(\"Invalid table size[%s]\",tableSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 41,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (tableSize < 0 || tableSize > CompressionFactory.MAX_TABLE_SIZE) {\n  throw new IAE(\"Invalid table size[%s]\",tableSize);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 37,
        "startColumnNumber" : 62,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int tableSize=buffer.getInt();\n  if (tableSize < 0 || tableSize > CompressionFactory.MAX_TABLE_SIZE) {\n    throw new IAE(\"Invalid table size[%s]\",tableSize);\n  }\n  bitsPerValue=VSizeLongSerde.getBitsForMax(tableSize);\n  table=new long[tableSize];\n  for (int i=0; i < tableSize; i++) {\n    table[i]=buffer.getLong();\n  }\n  fromBuffer.position(buffer.position());\n  deserializer=VSizeLongSerde.getDeserializer(bitsPerValue,buffer,buffer.position());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (version == CompressionFactory.TABLE_ENCODING_VERSION) {\n  int tableSize=buffer.getInt();\n  if (tableSize < 0 || tableSize > CompressionFactory.MAX_TABLE_SIZE) {\n    throw new IAE(\"Invalid table size[%s]\",tableSize);\n  }\n  bitsPerValue=VSizeLongSerde.getBitsForMax(tableSize);\n  table=new long[tableSize];\n  for (int i=0; i < tableSize; i++) {\n    table[i]=buffer.getLong();\n  }\n  fromBuffer.position(buffer.position());\n  deserializer=VSizeLongSerde.getDeserializer(bitsPerValue,buffer,buffer.position());\n}\n else {\n  throw new IAE(\"Unknown version[%s]\",version);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.buffer=fromBuffer.asReadOnlyBuffer();\n  byte version=buffer.get();\n  if (version == CompressionFactory.TABLE_ENCODING_VERSION) {\n    int tableSize=buffer.getInt();\n    if (tableSize < 0 || tableSize > CompressionFactory.MAX_TABLE_SIZE) {\n      throw new IAE(\"Invalid table size[%s]\",tableSize);\n    }\n    bitsPerValue=VSizeLongSerde.getBitsForMax(tableSize);\n    table=new long[tableSize];\n    for (int i=0; i < tableSize; i++) {\n      table[i]=buffer.getLong();\n    }\n    fromBuffer.position(buffer.position());\n    deserializer=VSizeLongSerde.getDeserializer(bitsPerValue,buffer,buffer.position());\n  }\n else {\n    throw new IAE(\"Unknown version[%s]\",version);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public TableLongEncodingReader(ByteBuffer fromBuffer){\n  this.buffer=fromBuffer.asReadOnlyBuffer();\n  byte version=buffer.get();\n  if (version == CompressionFactory.TABLE_ENCODING_VERSION) {\n    int tableSize=buffer.getInt();\n    if (tableSize < 0 || tableSize > CompressionFactory.MAX_TABLE_SIZE) {\n      throw new IAE(\"Invalid table size[%s]\",tableSize);\n    }\n    bitsPerValue=VSizeLongSerde.getBitsForMax(tableSize);\n    table=new long[tableSize];\n    for (int i=0; i < tableSize; i++) {\n      table[i]=buffer.getLong();\n    }\n    fromBuffer.position(buffer.position());\n    deserializer=VSizeLongSerde.getDeserializer(bitsPerValue,buffer,buffer.position());\n  }\n else {\n    throw new IAE(\"Unknown version[%s]\",version);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 59
      },
      "nodeContext" : "throw new IAE(\"Invalid table size[%s]\",tableSize);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 40,
    "startColumnNumber" : 22,
    "endLineNumber" : 40,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}