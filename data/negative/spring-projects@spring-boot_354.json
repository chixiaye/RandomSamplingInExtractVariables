{
  "id" : 354,
  "expression" : "defaultConverters",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/http/HttpMessageConverters.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "defaultConverters",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 116,
      "startColumnNumber" : 50,
      "endLineNumber" : 116,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (HttpMessageConverter<?> defaultConverter : defaultConverters) {\n  Iterator<HttpMessageConverter<?>> iterator=processing.iterator();\n  while (iterator.hasNext()) {\n    HttpMessageConverter<?> candidate=iterator.next();\n    if (isReplacement(defaultConverter,candidate)) {\n      combined.add(candidate);\n      iterator.remove();\n    }\n  }\n  combined.add(defaultConverter);\n  if (defaultConverter instanceof AllEncompassingFormHttpMessageConverter) {\n    configurePartConverters((AllEncompassingFormHttpMessageConverter)defaultConverter,converters);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 113,
        "startColumnNumber" : 52,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<HttpMessageConverter<?>> combined=new ArrayList<>();\n  List<HttpMessageConverter<?>> processing=new ArrayList<>(converters);\n  for (  HttpMessageConverter<?> defaultConverter : defaultConverters) {\n    Iterator<HttpMessageConverter<?>> iterator=processing.iterator();\n    while (iterator.hasNext()) {\n      HttpMessageConverter<?> candidate=iterator.next();\n      if (isReplacement(defaultConverter,candidate)) {\n        combined.add(candidate);\n        iterator.remove();\n      }\n    }\n    combined.add(defaultConverter);\n    if (defaultConverter instanceof AllEncompassingFormHttpMessageConverter) {\n      configurePartConverters((AllEncompassingFormHttpMessageConverter)defaultConverter,converters);\n    }\n  }\n  combined.addAll(0,processing);\n  return combined;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 111,
        "startColumnNumber" : 1,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private List<HttpMessageConverter<?>> getCombinedConverters(Collection<HttpMessageConverter<?>> converters,List<HttpMessageConverter<?>> defaultConverters){\n  List<HttpMessageConverter<?>> combined=new ArrayList<>();\n  List<HttpMessageConverter<?>> processing=new ArrayList<>(converters);\n  for (  HttpMessageConverter<?> defaultConverter : defaultConverters) {\n    Iterator<HttpMessageConverter<?>> iterator=processing.iterator();\n    while (iterator.hasNext()) {\n      HttpMessageConverter<?> candidate=iterator.next();\n      if (isReplacement(defaultConverter,candidate)) {\n        combined.add(candidate);\n        iterator.remove();\n      }\n    }\n    combined.add(defaultConverter);\n    if (defaultConverter instanceof AllEncompassingFormHttpMessageConverter) {\n      configurePartConverters((AllEncompassingFormHttpMessageConverter)defaultConverter,converters);\n    }\n  }\n  combined.addAll(0,processing);\n  return combined;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (HttpMessageConverter<?> defaultConverter : defaultConverters) {\n  Iterator<HttpMessageConverter<?>> iterator=processing.iterator();\n  while (iterator.hasNext()) {\n    HttpMessageConverter<?> candidate=iterator.next();\n    if (isReplacement(defaultConverter,candidate)) {\n      combined.add(candidate);\n      iterator.remove();\n    }\n  }\n  combined.add(defaultConverter);\n  if (defaultConverter instanceof AllEncompassingFormHttpMessageConverter) {\n    configurePartConverters((AllEncompassingFormHttpMessageConverter)defaultConverter,converters);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.springframework.boot.autoconfigure.http.HttpMessageConverter<?>>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 116,
    "startColumnNumber" : 50,
    "endLineNumber" : 116,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}