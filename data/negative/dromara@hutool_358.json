{
  "id" : 358,
  "expression" : "NumberWordFormatter.format(100.23)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/convert/NumberWordFormatTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NumberWordFormatter.format(100.23)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 10,
      "startColumnNumber" : 18,
      "endLineNumber" : 10,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 10,
        "startColumnNumber" : 9,
        "endLineNumber" : 10,
        "endColumnNumber" : 52
      },
      "nodeContext" : "format=NumberWordFormatter.format(100.23)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 10,
        "startColumnNumber" : 2,
        "endLineNumber" : 10,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String format=NumberWordFormatter.format(100.23);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 9,
        "startColumnNumber" : 26,
        "endLineNumber" : 15,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String format=NumberWordFormatter.format(100.23);\n  Assert.assertEquals(\"ONE HUNDRED AND CENTS TWENTY THREE ONLY\",format);\n  String format2=NumberWordFormatter.format(\"2100.00\");\n  Assert.assertEquals(\"TWO THOUSAND ONE HUNDRED AND CENTS  ONLY\",format2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 8,
        "startColumnNumber" : 1,
        "endLineNumber" : 15,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void formatTest(){\n  String format=NumberWordFormatter.format(100.23);\n  Assert.assertEquals(\"ONE HUNDRED AND CENTS TWENTY THREE ONLY\",format);\n  String format2=NumberWordFormatter.format(\"2100.00\");\n  Assert.assertEquals(\"TWO THOUSAND ONE HUNDRED AND CENTS  ONLY\",format2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 10,
        "startColumnNumber" : 2,
        "endLineNumber" : 10,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String format=NumberWordFormatter.format(100.23);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 10,
    "startColumnNumber" : 18,
    "endLineNumber" : 10,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}