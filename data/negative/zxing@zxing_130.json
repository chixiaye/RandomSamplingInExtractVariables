{
  "id" : 130,
  "expression" : "hints.containsKey(DecodeHintType.TRY_HARDER)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/MultiFormatReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hints.containsKey(DecodeHintType.TRY_HARDER)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 98,
      "startColumnNumber" : 41,
      "endLineNumber" : 98,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "hints != null && hints.containsKey(DecodeHintType.TRY_HARDER)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "tryHarder=hints != null && hints.containsKey(DecodeHintType.TRY_HARDER)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 86
      },
      "nodeContext" : "boolean tryHarder=hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2243,
        "startLineNumber" : 95,
        "startColumnNumber" : 52,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.hints=hints;\n  boolean tryHarder=hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n  Collection<BarcodeFormat> formats=hints == null ? null : (Collection<BarcodeFormat>)hints.get(DecodeHintType.POSSIBLE_FORMATS);\n  Collection<Reader> readers=new ArrayList<Reader>();\n  if (formats != null) {\n    boolean addOneDReader=formats.contains(BarcodeFormat.UPC_A) || formats.contains(BarcodeFormat.UPC_E) || formats.contains(BarcodeFormat.EAN_13)|| formats.contains(BarcodeFormat.EAN_8)|| formats.contains(BarcodeFormat.CODABAR)|| formats.contains(BarcodeFormat.CODE_39)|| formats.contains(BarcodeFormat.CODE_93)|| formats.contains(BarcodeFormat.CODE_128)|| formats.contains(BarcodeFormat.ITF)|| formats.contains(BarcodeFormat.RSS_14)|| formats.contains(BarcodeFormat.RSS_EXPANDED);\n    if (addOneDReader && !tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n    if (formats.contains(BarcodeFormat.QR_CODE)) {\n      readers.add(new QRCodeReader());\n    }\n    if (formats.contains(BarcodeFormat.DATA_MATRIX)) {\n      readers.add(new DataMatrixReader());\n    }\n    if (formats.contains(BarcodeFormat.AZTEC)) {\n      readers.add(new AztecReader());\n    }\n    if (formats.contains(BarcodeFormat.PDF_417)) {\n      readers.add(new PDF417Reader());\n    }\n    if (formats.contains(BarcodeFormat.MAXICODE)) {\n      readers.add(new MaxiCodeReader());\n    }\n    if (addOneDReader && tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n  }\n  if (readers.isEmpty()) {\n    if (!tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n    readers.add(new QRCodeReader());\n    readers.add(new DataMatrixReader());\n    readers.add(new AztecReader());\n    readers.add(new PDF417Reader());\n    readers.add(new MaxiCodeReader());\n    if (tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n  }\n  this.readers=readers.toArray(new Reader[readers.size()]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2649,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls to decodeWithState(image) can reuse the same set of readers without reallocating memory. This is important for performance in continuous scan clients.\n * @param hints The set of hints to use for subsequent calls to decode(image)\n */\npublic void setHints(Map<DecodeHintType,?> hints){\n  this.hints=hints;\n  boolean tryHarder=hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n  Collection<BarcodeFormat> formats=hints == null ? null : (Collection<BarcodeFormat>)hints.get(DecodeHintType.POSSIBLE_FORMATS);\n  Collection<Reader> readers=new ArrayList<Reader>();\n  if (formats != null) {\n    boolean addOneDReader=formats.contains(BarcodeFormat.UPC_A) || formats.contains(BarcodeFormat.UPC_E) || formats.contains(BarcodeFormat.EAN_13)|| formats.contains(BarcodeFormat.EAN_8)|| formats.contains(BarcodeFormat.CODABAR)|| formats.contains(BarcodeFormat.CODE_39)|| formats.contains(BarcodeFormat.CODE_93)|| formats.contains(BarcodeFormat.CODE_128)|| formats.contains(BarcodeFormat.ITF)|| formats.contains(BarcodeFormat.RSS_14)|| formats.contains(BarcodeFormat.RSS_EXPANDED);\n    if (addOneDReader && !tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n    if (formats.contains(BarcodeFormat.QR_CODE)) {\n      readers.add(new QRCodeReader());\n    }\n    if (formats.contains(BarcodeFormat.DATA_MATRIX)) {\n      readers.add(new DataMatrixReader());\n    }\n    if (formats.contains(BarcodeFormat.AZTEC)) {\n      readers.add(new AztecReader());\n    }\n    if (formats.contains(BarcodeFormat.PDF_417)) {\n      readers.add(new PDF417Reader());\n    }\n    if (formats.contains(BarcodeFormat.MAXICODE)) {\n      readers.add(new MaxiCodeReader());\n    }\n    if (addOneDReader && tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n  }\n  if (readers.isEmpty()) {\n    if (!tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n    readers.add(new QRCodeReader());\n    readers.add(new DataMatrixReader());\n    readers.add(new AztecReader());\n    readers.add(new PDF417Reader());\n    readers.add(new MaxiCodeReader());\n    if (tryHarder) {\n      readers.add(new MultiFormatOneDReader(hints));\n    }\n  }\n  this.readers=readers.toArray(new Reader[readers.size()]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 86
      },
      "nodeContext" : "boolean tryHarder=hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 98,
    "startColumnNumber" : 41,
    "endLineNumber" : 98,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}