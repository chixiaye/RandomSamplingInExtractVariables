{
  "id" : 14,
  "expression" : "arch",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/io/FileHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 48,
      "startColumnNumber" : 40,
      "endLineNumber" : 48,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 48,
        "startColumnNumber" : 40,
        "endLineNumber" : 48,
        "endColumnNumber" : 51
      },
      "nodeContext" : "arch + name",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 47,
        "startColumnNumber" : 17,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 72
      },
      "nodeContext" : "List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String arch=Objects.requireNonNull(System.getProperty(\"os.arch\")).toLowerCase() + \"/\";\n  List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n  if (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n    alternatives.add(\"mac/\" + name);\n    alternatives.add(\"/mac/\" + name);\n  }\n  for (  String possibility : alternatives) {\n    InputStream stream=FileHandler.class.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n    stream=forClassLoader.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n  }\n  throw new IOException(\"Unable to locate: \" + name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static InputStream locateResource(Class<?> forClassLoader,String name) throws IOException {\n  String arch=Objects.requireNonNull(System.getProperty(\"os.arch\")).toLowerCase() + \"/\";\n  List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n  if (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n    alternatives.add(\"mac/\" + name);\n    alternatives.add(\"/mac/\" + name);\n  }\n  for (  String possibility : alternatives) {\n    InputStream stream=FileHandler.class.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n    stream=forClassLoader.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n  }\n  throw new IOException(\"Unable to locate: \" + name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "arch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 48,
      "startColumnNumber" : 59,
      "endLineNumber" : 48,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 48,
        "startColumnNumber" : 53,
        "endLineNumber" : 48,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"/\" + arch + name",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 47,
        "startColumnNumber" : 17,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 72
      },
      "nodeContext" : "List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String arch=Objects.requireNonNull(System.getProperty(\"os.arch\")).toLowerCase() + \"/\";\n  List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n  if (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n    alternatives.add(\"mac/\" + name);\n    alternatives.add(\"/mac/\" + name);\n  }\n  for (  String possibility : alternatives) {\n    InputStream stream=FileHandler.class.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n    stream=forClassLoader.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n  }\n  throw new IOException(\"Unable to locate: \" + name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static InputStream locateResource(Class<?> forClassLoader,String name) throws IOException {\n  String arch=Objects.requireNonNull(System.getProperty(\"os.arch\")).toLowerCase() + \"/\";\n  List<String> alternatives=Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name);\n  if (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n    alternatives.add(\"mac/\" + name);\n    alternatives.add(\"/mac/\" + name);\n  }\n  for (  String possibility : alternatives) {\n    InputStream stream=FileHandler.class.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n    stream=forClassLoader.getResourceAsStream(possibility);\n    if (stream != null) {\n      return stream;\n    }\n  }\n  throw new IOException(\"Unable to locate: \" + name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Arrays.asList(name,\"/\" + name,arch + name,\"/\" + arch + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 48,
    "startColumnNumber" : 40,
    "endLineNumber" : 48,
    "endColumnNumber" : 44
  }, {
    "charLength" : 4,
    "startLineNumber" : 48,
    "startColumnNumber" : 59,
    "endLineNumber" : 48,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}