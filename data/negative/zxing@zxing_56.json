{
  "id" : 56,
  "expression" : "DecodeHintType",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/aztec/AztecReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DecodeHintType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 65,
      "startColumnNumber" : 65,
      "endLineNumber" : 65,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 65,
        "startColumnNumber" : 65,
        "endLineNumber" : 65,
        "endColumnNumber" : 106
      },
      "nodeContext" : "DecodeHintType.NEED_RESULT_POINT_CALLBACK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 55,
        "endLineNumber" : 65,
        "endColumnNumber" : 107
      },
      "nodeContext" : "hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 65,
        "startColumnNumber" : 33,
        "endLineNumber" : 65,
        "endColumnNumber" : 107
      },
      "nodeContext" : "(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 65,
        "startColumnNumber" : 26,
        "endLineNumber" : 65,
        "endColumnNumber" : 107
      },
      "nodeContext" : "rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 108
      },
      "nodeContext" : "ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 64,
        "startColumnNumber" : 23,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n  if (rpcb != null) {\n    for (    ResultPoint point : points) {\n      rpcb.foundPossibleResultPoint(point);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hints != null) {\n  ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n  if (rpcb != null) {\n    for (    ResultPoint point : points) {\n      rpcb.foundPossibleResultPoint(point);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 59,
        "startColumnNumber" : 48,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Result decode(BinaryBitmap image,Map<DecodeHintType,?> hints) throws NotFoundException, FormatException {\n  AztecDetectorResult detectorResult=new Detector(image.getBlackMatrix()).detect();\n  ResultPoint[] points=detectorResult.getPoints();\n  if (hints != null) {\n    ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n    if (rpcb != null) {\n      for (      ResultPoint point : points) {\n        rpcb.foundPossibleResultPoint(point);\n      }\n    }\n  }\n  DecoderResult decoderResult=new Decoder().decode(detectorResult);\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.AZTEC);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 108
      },
      "nodeContext" : "ResultPointCallback rpcb=(ResultPointCallback)hints.get(DecodeHintType.NEED_RESULT_POINT_CALLBACK);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.DecodeHintType"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 65,
    "startColumnNumber" : 65,
    "endLineNumber" : 65,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}