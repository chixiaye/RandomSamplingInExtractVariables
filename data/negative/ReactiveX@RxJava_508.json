{
  "id" : 508,
  "expression" : "new TestSubscriber<Integer>()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableOnErrorResumeNextViaFunctionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TestSubscriber<Integer>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 315,
      "startColumnNumber" : 37,
      "endLineNumber" : 315,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 315,
        "startColumnNumber" : 32,
        "endLineNumber" : 315,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ts=new TestSubscriber<Integer>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 315,
        "startColumnNumber" : 8,
        "endLineNumber" : 315,
        "endColumnNumber" : 67
      },
      "nodeContext" : "TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1142,
        "startLineNumber" : 314,
        "startColumnNumber" : 35,
        "endLineNumber" : 346,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.range(0,100000).onErrorResumeNext(new Function<Throwable,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Throwable t1){\n      return Flowable.just(1);\n    }\n  }\n).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n    int c=0;\n    @Override public Integer apply(    Integer t1){\n      if (c++ <= 1) {\n        try {\n          Thread.sleep(500);\n        }\n catch (        InterruptedException e) {\n          e.printStackTrace();\n        }\n      }\n      return t1;\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 313,
        "startColumnNumber" : 4,
        "endLineNumber" : 346,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBackpressure(){\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.range(0,100000).onErrorResumeNext(new Function<Throwable,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Throwable t1){\n      return Flowable.just(1);\n    }\n  }\n).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n    int c=0;\n    @Override public Integer apply(    Integer t1){\n      if (c++ <= 1) {\n        try {\n          Thread.sleep(500);\n        }\n catch (        InterruptedException e) {\n          e.printStackTrace();\n        }\n      }\n      return t1;\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 315,
        "startColumnNumber" : 8,
        "endLineNumber" : 315,
        "endColumnNumber" : 67
      },
      "nodeContext" : "TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.subscribers.TestSubscriber<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 315,
    "startColumnNumber" : 37,
    "endLineNumber" : 315,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}