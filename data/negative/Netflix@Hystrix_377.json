{
  "id" : 377,
  "expression" : "parametersTypes.length",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/cache/CacheInvocationContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parametersTypes.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 62,
      "startColumnNumber" : 29,
      "endLineNumber" : 62,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 51
      },
      "nodeContext" : "parameterCount=parametersTypes.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int parameterCount=parametersTypes.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1447,
        "startLineNumber" : 56,
        "startColumnNumber" : 137,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.method=method;\n  this.target=target;\n  this.cacheKeyMethod=cacheKeyMethod;\n  this.cacheAnnotation=cacheAnnotation;\n  Class<?>[] parametersTypes=method.getParameterTypes();\n  int parameterCount=parametersTypes.length;\n  if (parameterCount > 0) {\n    Annotation[][] parametersAnnotations=method.getParameterAnnotations();\n    ImmutableList.Builder<CacheInvocationParameter> parametersBuilder=ImmutableList.builder();\n    for (int pos=0; pos < parameterCount; pos++) {\n      Class<?> paramType=parametersTypes[pos];\n      Object val=args[pos];\n      parametersBuilder.add(new CacheInvocationParameter(paramType,val,parametersAnnotations[pos],pos));\n    }\n    parameters=parametersBuilder.build();\n    Iterable<CacheInvocationParameter> filtered=Iterables.filter(parameters,new Predicate<CacheInvocationParameter>(){\n      @Override public boolean apply(      CacheInvocationParameter input){\n        return input.hasCacheKeyAnnotation();\n      }\n    }\n);\n    if (filtered.iterator().hasNext()) {\n      keyParameters=ImmutableList.<CacheInvocationParameter>builder().addAll(filtered).build();\n    }\n else {\n      keyParameters=parameters;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2085,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Constructor to create CacheInvocationContext based on passed parameters.\n * @param cacheAnnotation the caching annotation, like {@link com.netflix.hystrix.contrib.javanica.cache.annotation.CacheResult}\n * @param cacheKeyMethod  the method to generate cache key\n * @param target          the current instance of intercepted method\n * @param method          the method annotated with on of caching annotations\n * @param args            the method arguments\n */\npublic CacheInvocationContext(A cacheAnnotation,MethodExecutionAction cacheKeyMethod,Object target,Method method,Object... args){\n  this.method=method;\n  this.target=target;\n  this.cacheKeyMethod=cacheKeyMethod;\n  this.cacheAnnotation=cacheAnnotation;\n  Class<?>[] parametersTypes=method.getParameterTypes();\n  int parameterCount=parametersTypes.length;\n  if (parameterCount > 0) {\n    Annotation[][] parametersAnnotations=method.getParameterAnnotations();\n    ImmutableList.Builder<CacheInvocationParameter> parametersBuilder=ImmutableList.builder();\n    for (int pos=0; pos < parameterCount; pos++) {\n      Class<?> paramType=parametersTypes[pos];\n      Object val=args[pos];\n      parametersBuilder.add(new CacheInvocationParameter(paramType,val,parametersAnnotations[pos],pos));\n    }\n    parameters=parametersBuilder.build();\n    Iterable<CacheInvocationParameter> filtered=Iterables.filter(parameters,new Predicate<CacheInvocationParameter>(){\n      @Override public boolean apply(      CacheInvocationParameter input){\n        return input.hasCacheKeyAnnotation();\n      }\n    }\n);\n    if (filtered.iterator().hasNext()) {\n      keyParameters=ImmutableList.<CacheInvocationParameter>builder().addAll(filtered).build();\n    }\n else {\n      keyParameters=parameters;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int parameterCount=parametersTypes.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 62,
    "startColumnNumber" : 29,
    "endLineNumber" : 62,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}