{
  "id" : 386,
  "expression" : "invokable",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/command/CommandExecutor.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "invokable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 47,
      "startColumnNumber" : 25,
      "endLineNumber" : 47,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Validate.notNull(invokable)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Validate.notNull(invokable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 46,
        "startColumnNumber" : 137,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calls a method of  {@link HystrixExecutable} in accordance with specified execution type.\n * @param invokable  {@link HystrixInvokable}\n * @param metaHolder {@link MetaHolder}\n * @return the result of invocation of specific method.\n * @throws RuntimeException\n */\npublic static Object execute(HystrixInvokable invokable,ExecutionType executionType,MetaHolder metaHolder) throws RuntimeException {\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Validate.notNull(invokable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokable"
  }, {
    "nodeContext" : "invokable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 52,
      "startColumnNumber" : 40,
      "endLineNumber" : 52,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 52,
        "startColumnNumber" : 23,
        "endLineNumber" : 52,
        "endColumnNumber" : 65
      },
      "nodeContext" : "castToExecutable(invokable,executionType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 52,
        "startColumnNumber" : 23,
        "endLineNumber" : 52,
        "endColumnNumber" : 75
      },
      "nodeContext" : "castToExecutable(invokable,executionType).execute()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return castToExecutable(invokable,executionType).execute();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 51,
        "startColumnNumber" : 30,
        "endLineNumber" : 53,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return castToExecutable(invokable,executionType).execute();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (executionType) {\ncase SYNCHRONOUS:{\n    return castToExecutable(invokable,executionType).execute();\n  }\ncase ASYNCHRONOUS:{\n  HystrixExecutable executable=castToExecutable(invokable,executionType);\n  if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n    return new FutureDecorator(executable.queue());\n  }\n  return executable.queue();\n}\ncase OBSERVABLE:{\nHystrixObservable observable=castToObservable(invokable);\nreturn ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 46,
        "startColumnNumber" : 137,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calls a method of  {@link HystrixExecutable} in accordance with specified execution type.\n * @param invokable  {@link HystrixInvokable}\n * @param metaHolder {@link MetaHolder}\n * @return the result of invocation of specific method.\n * @throws RuntimeException\n */\npublic static Object execute(HystrixInvokable invokable,ExecutionType executionType,MetaHolder metaHolder) throws RuntimeException {\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return castToExecutable(invokable,executionType).execute();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokable"
  }, {
    "nodeContext" : "invokable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 55,
      "startColumnNumber" : 64,
      "endLineNumber" : 55,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 55,
        "startColumnNumber" : 47,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "castToExecutable(invokable,executionType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "executable=castToExecutable(invokable,executionType)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 90
      },
      "nodeContext" : "HystrixExecutable executable=castToExecutable(invokable,executionType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  HystrixExecutable executable=castToExecutable(invokable,executionType);\n  if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n    return new FutureDecorator(executable.queue());\n  }\n  return executable.queue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (executionType) {\ncase SYNCHRONOUS:{\n    return castToExecutable(invokable,executionType).execute();\n  }\ncase ASYNCHRONOUS:{\n  HystrixExecutable executable=castToExecutable(invokable,executionType);\n  if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n    return new FutureDecorator(executable.queue());\n  }\n  return executable.queue();\n}\ncase OBSERVABLE:{\nHystrixObservable observable=castToObservable(invokable);\nreturn ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 46,
        "startColumnNumber" : 137,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calls a method of  {@link HystrixExecutable} in accordance with specified execution type.\n * @param invokable  {@link HystrixInvokable}\n * @param metaHolder {@link MetaHolder}\n * @return the result of invocation of specific method.\n * @throws RuntimeException\n */\npublic static Object execute(HystrixInvokable invokable,ExecutionType executionType,MetaHolder metaHolder) throws RuntimeException {\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 90
      },
      "nodeContext" : "HystrixExecutable executable=castToExecutable(invokable,executionType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokable"
  }, {
    "nodeContext" : "invokable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 63,
      "startColumnNumber" : 64,
      "endLineNumber" : 63,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 63,
        "endColumnNumber" : 74
      },
      "nodeContext" : "castToObservable(invokable)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 63,
        "endColumnNumber" : 74
      },
      "nodeContext" : "observable=castToObservable(invokable)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 75
      },
      "nodeContext" : "HystrixObservable observable=castToObservable(invokable);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 62,
        "startColumnNumber" : 29,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (executionType) {\ncase SYNCHRONOUS:{\n    return castToExecutable(invokable,executionType).execute();\n  }\ncase ASYNCHRONOUS:{\n  HystrixExecutable executable=castToExecutable(invokable,executionType);\n  if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n    return new FutureDecorator(executable.queue());\n  }\n  return executable.queue();\n}\ncase OBSERVABLE:{\nHystrixObservable observable=castToObservable(invokable);\nreturn ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 46,
        "startColumnNumber" : 137,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calls a method of  {@link HystrixExecutable} in accordance with specified execution type.\n * @param invokable  {@link HystrixInvokable}\n * @param metaHolder {@link MetaHolder}\n * @return the result of invocation of specific method.\n * @throws RuntimeException\n */\npublic static Object execute(HystrixInvokable invokable,ExecutionType executionType,MetaHolder metaHolder) throws RuntimeException {\n  Validate.notNull(invokable);\n  Validate.notNull(metaHolder);\nswitch (executionType) {\ncase SYNCHRONOUS:{\n      return castToExecutable(invokable,executionType).execute();\n    }\ncase ASYNCHRONOUS:{\n    HystrixExecutable executable=castToExecutable(invokable,executionType);\n    if (metaHolder.hasFallbackMethodCommand() && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n      return new FutureDecorator(executable.queue());\n    }\n    return executable.queue();\n  }\ncase OBSERVABLE:{\n  HystrixObservable observable=castToObservable(invokable);\n  return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n}\ndefault:throw new RuntimeException(\"unsupported execution type: \" + executionType);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 75
      },
      "nodeContext" : "HystrixObservable observable=castToObservable(invokable);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokable"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 47,
    "startColumnNumber" : 25,
    "endLineNumber" : 47,
    "endColumnNumber" : 34
  }, {
    "charLength" : 9,
    "startLineNumber" : 52,
    "startColumnNumber" : 40,
    "endLineNumber" : 52,
    "endColumnNumber" : 49
  }, {
    "charLength" : 9,
    "startLineNumber" : 55,
    "startColumnNumber" : 64,
    "endLineNumber" : 55,
    "endColumnNumber" : 73
  }, {
    "charLength" : 9,
    "startLineNumber" : 63,
    "startColumnNumber" : 64,
    "endLineNumber" : 63,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}