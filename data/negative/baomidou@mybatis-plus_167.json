{
  "id" : 167,
  "expression" : "new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class)",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/mapper/LogicSqlInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 226,
      "startLineNumber" : 129,
      "startColumnNumber" : 28,
      "endLineNumber" : 130,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 29,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 106
      },
      "nodeContext" : "sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 107
      },
      "nodeContext" : "sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (batch) {\n  sqlMethod=SqlMethod.LOGIC_SELECT_BATCH_BY_IDS;\n  StringBuilder ids=new StringBuilder();\n  ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n  ids.append(\"#{item}\");\n  ids.append(\"\\n</foreach>\");\n  sqlSource=languageDriver.createSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),ids.toString(),getLogicDeleteSql(table)),modelClass);\n}\n else {\n  sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 117,
        "startColumnNumber" : 35,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SqlMethod sqlMethod=SqlMethod.LOGIC_SELECT_BY_ID;\n  SqlSource sqlSource;\n  if (batch) {\n    sqlMethod=SqlMethod.LOGIC_SELECT_BATCH_BY_IDS;\n    StringBuilder ids=new StringBuilder();\n    ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n    ids.append(\"#{item}\");\n    ids.append(\"\\n</foreach>\");\n    sqlSource=languageDriver.createSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),ids.toString(),getLogicDeleteSql(table)),modelClass);\n  }\n else {\n    sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n  }\n  this.addSelectMappedStatement(mapperClass,sqlMethod.getMethod(),sqlSource,modelClass,table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (table.isLogicDelete()) {\n  SqlMethod sqlMethod=SqlMethod.LOGIC_SELECT_BY_ID;\n  SqlSource sqlSource;\n  if (batch) {\n    sqlMethod=SqlMethod.LOGIC_SELECT_BATCH_BY_IDS;\n    StringBuilder ids=new StringBuilder();\n    ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n    ids.append(\"#{item}\");\n    ids.append(\"\\n</foreach>\");\n    sqlSource=languageDriver.createSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),ids.toString(),getLogicDeleteSql(table)),modelClass);\n  }\n else {\n    sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n  }\n  this.addSelectMappedStatement(mapperClass,sqlMethod.getMethod(),sqlSource,modelClass,table);\n}\n else {\n  super.injectSelectByIdSql(batch,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1265,
        "startLineNumber" : 116,
        "startColumnNumber" : 114,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (table.isLogicDelete()) {\n    SqlMethod sqlMethod=SqlMethod.LOGIC_SELECT_BY_ID;\n    SqlSource sqlSource;\n    if (batch) {\n      sqlMethod=SqlMethod.LOGIC_SELECT_BATCH_BY_IDS;\n      StringBuilder ids=new StringBuilder();\n      ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n      ids.append(\"#{item}\");\n      ids.append(\"\\n</foreach>\");\n      sqlSource=languageDriver.createSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),ids.toString(),getLogicDeleteSql(table)),modelClass);\n    }\n else {\n      sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n    }\n    this.addSelectMappedStatement(mapperClass,sqlMethod.getMethod(),sqlSource,modelClass,table);\n  }\n else {\n    super.injectSelectByIdSql(batch,mapperClass,modelClass,table);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1559,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 注入查询 SQL 语句 </p>\n * @param batch       是否为批量插入\n * @param mapperClass\n * @param modelClass\n * @param table\n */\n@Override protected void injectSelectByIdSql(boolean batch,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (table.isLogicDelete()) {\n    SqlMethod sqlMethod=SqlMethod.LOGIC_SELECT_BY_ID;\n    SqlSource sqlSource;\n    if (batch) {\n      sqlMethod=SqlMethod.LOGIC_SELECT_BATCH_BY_IDS;\n      StringBuilder ids=new StringBuilder();\n      ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n      ids.append(\"#{item}\");\n      ids.append(\"\\n</foreach>\");\n      sqlSource=languageDriver.createSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),ids.toString(),getLogicDeleteSql(table)),modelClass);\n    }\n else {\n      sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n    }\n    this.addSelectMappedStatement(mapperClass,sqlMethod.getMethod(),sqlSource,modelClass,table);\n  }\n else {\n    super.injectSelectByIdSql(batch,mapperClass,modelClass,table);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 107
      },
      "nodeContext" : "sqlSource=new RawSqlSource(configuration,String.format(sqlMethod.getSql(),sqlSelectColumns(table,false),table.getTableName(),table.getKeyColumn(),table.getKeyProperty(),getLogicDeleteSql(table)),Object.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    },
    "tokenLength" : 18,
    "type" : "com.baomidou.mybatisplus.mapper.RawSqlSource"
  } ],
  "positionList" : [ {
    "charLength" : 226,
    "startLineNumber" : 129,
    "startColumnNumber" : 28,
    "endLineNumber" : 130,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}