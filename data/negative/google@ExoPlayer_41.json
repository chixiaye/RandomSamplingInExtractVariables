{
  "id" : 41,
  "expression" : "C",
  "projectName" : "google@ExoPlayer",
  "commitID" : "ac881be2fccbbfe29fe3b4f094b85d6d16942c72",
  "filePath" : "extensions/cast/src/main/java/com/google/android/exoplayer2/ext/cast/CastPlayer.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 1064,
      "startColumnNumber" : 7,
      "endLineNumber" : 1064,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MarkerAnnotation,typeName]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 1064,
        "startColumnNumber" : 7,
        "endLineNumber" : 1064,
        "endColumnNumber" : 18
      },
      "nodeContext" : "C.TrackType",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 1064,
        "startColumnNumber" : 6,
        "endLineNumber" : 1064,
        "endColumnNumber" : 18
      },
      "nodeContext" : "@C.TrackType",
      "nodeType" : "MarkerAnnotation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 1064,
        "startColumnNumber" : 6,
        "endLineNumber" : 1064,
        "endColumnNumber" : 87
      },
      "nodeContext" : "@C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 1064,
        "startColumnNumber" : 6,
        "endLineNumber" : 1064,
        "endColumnNumber" : 87
      },
      "nodeContext" : "@C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  }, {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 1066,
      "startColumnNumber" : 43,
      "endLineNumber" : 1066,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 1066,
        "startColumnNumber" : 43,
        "endLineNumber" : 1066,
        "endColumnNumber" : 56
      },
      "nodeContext" : "C.INDEX_UNSET",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 1066,
        "startColumnNumber" : 26,
        "endLineNumber" : 1066,
        "endColumnNumber" : 56
      },
      "nodeContext" : "rendererIndex != C.INDEX_UNSET",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 1066,
        "startColumnNumber" : 14,
        "endLineNumber" : 1066,
        "endColumnNumber" : 56
      },
      "nodeContext" : "supported=rendererIndex != C.INDEX_UNSET",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 1066,
        "startColumnNumber" : 6,
        "endLineNumber" : 1066,
        "endColumnNumber" : 57
      },
      "nodeContext" : "boolean supported=rendererIndex != C.INDEX_UNSET;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 1066,
        "startColumnNumber" : 6,
        "endLineNumber" : 1066,
        "endColumnNumber" : 57
      },
      "nodeContext" : "boolean supported=rendererIndex != C.INDEX_UNSET;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  }, {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 1072,
      "startColumnNumber" : 7,
      "endLineNumber" : 1072,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MarkerAnnotation,typeName]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 1072,
        "startColumnNumber" : 7,
        "endLineNumber" : 1072,
        "endColumnNumber" : 22
      },
      "nodeContext" : "C.FormatSupport",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 1072,
        "startColumnNumber" : 6,
        "endLineNumber" : 1072,
        "endColumnNumber" : 22
      },
      "nodeContext" : "@C.FormatSupport",
      "nodeType" : "MarkerAnnotation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1072,
        "startColumnNumber" : 6,
        "endLineNumber" : 1073,
        "endColumnNumber" : 96
      },
      "nodeContext" : "@C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 1072,
        "startColumnNumber" : 6,
        "endLineNumber" : 1072,
        "endColumnNumber" : 22
      },
      "nodeContext" : "@C.FormatSupport",
      "nodeType" : "MarkerAnnotation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  }, {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 1073,
      "startColumnNumber" : 50,
      "endLineNumber" : 1073,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 1073,
        "startColumnNumber" : 50,
        "endLineNumber" : 1073,
        "endColumnNumber" : 66
      },
      "nodeContext" : "C.FORMAT_HANDLED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 1073,
        "startColumnNumber" : 38,
        "endLineNumber" : 1073,
        "endColumnNumber" : 94
      },
      "nodeContext" : "supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 1073,
        "startColumnNumber" : 37,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1073,
        "startColumnNumber" : 27,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 1073,
        "startColumnNumber" : 12,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1072,
        "startColumnNumber" : 6,
        "endLineNumber" : 1073,
        "endColumnNumber" : 96
      },
      "nodeContext" : "@C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 1073,
        "startColumnNumber" : 12,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  }, {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 1073,
      "startColumnNumber" : 69,
      "endLineNumber" : 1073,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1073,
        "startColumnNumber" : 69,
        "endLineNumber" : 1073,
        "endColumnNumber" : 94
      },
      "nodeContext" : "C.FORMAT_UNSUPPORTED_TYPE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 1073,
        "startColumnNumber" : 38,
        "endLineNumber" : 1073,
        "endColumnNumber" : 94
      },
      "nodeContext" : "supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 1073,
        "startColumnNumber" : 37,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1073,
        "startColumnNumber" : 27,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 1073,
        "startColumnNumber" : 12,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1072,
        "startColumnNumber" : 6,
        "endLineNumber" : 1073,
        "endColumnNumber" : 96
      },
      "nodeContext" : "@C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 1059,
        "startColumnNumber" : 53,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 1059,
        "startColumnNumber" : 4,
        "endLineNumber" : 1077,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < castMediaTracks.size(); i++) {\n  MediaTrack mediaTrack=castMediaTracks.get(i);\n  trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n  long id=mediaTrack.getId();\n  @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n  int rendererIndex=getRendererIndexForTrackType(trackType);\n  boolean supported=rendererIndex != C.INDEX_UNSET;\n  boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n  if (selected) {\n    trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n  }\n  @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n  final boolean[] trackSelected=new boolean[]{selected};\n  trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 1034,
        "startColumnNumber" : 64,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 1033,
        "startColumnNumber" : 2,
        "endLineNumber" : 1091,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Updates the internal tracks and selection and returns whether they have changed. \n */\nprivate boolean updateTracksAndSelectionsAndNotifyIfChanged(){\n  if (remoteMediaClient == null) {\n    return false;\n  }\n  MediaStatus mediaStatus=getMediaStatus();\n  MediaInfo mediaInfo=mediaStatus != null ? mediaStatus.getMediaInfo() : null;\n  List<MediaTrack> castMediaTracks=mediaInfo != null ? mediaInfo.getMediaTracks() : null;\n  if (castMediaTracks == null || castMediaTracks.isEmpty()) {\n    boolean hasChanged=!currentTrackGroups.isEmpty();\n    currentTrackGroups=TrackGroupArray.EMPTY;\n    currentTrackSelection=EMPTY_TRACK_SELECTION_ARRAY;\n    currentTracksInfo=TracksInfo.EMPTY;\n    return hasChanged;\n  }\n  long[] activeTrackIds=mediaStatus.getActiveTrackIds();\n  if (activeTrackIds == null) {\n    activeTrackIds=EMPTY_TRACK_ID_ARRAY;\n  }\n  TrackGroup[] trackGroups=new TrackGroup[castMediaTracks.size()];\n  @NullableType TrackSelection[] trackSelections=new TrackSelection[RENDERER_COUNT];\n  TracksInfo.TrackGroupInfo[] trackGroupInfos=new TracksInfo.TrackGroupInfo[castMediaTracks.size()];\n  for (int i=0; i < castMediaTracks.size(); i++) {\n    MediaTrack mediaTrack=castMediaTracks.get(i);\n    trackGroups[i]=new TrackGroup(CastUtils.mediaTrackToFormat(mediaTrack));\n    long id=mediaTrack.getId();\n    @C.TrackType int trackType=MimeTypes.getTrackType(mediaTrack.getContentType());\n    int rendererIndex=getRendererIndexForTrackType(trackType);\n    boolean supported=rendererIndex != C.INDEX_UNSET;\n    boolean selected=isTrackActive(id,activeTrackIds) && supported && trackSelections[rendererIndex] == null;\n    if (selected) {\n      trackSelections[rendererIndex]=new CastTrackSelection(trackGroups[i]);\n    }\n    @C.FormatSupport int[] trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE};\n    final boolean[] trackSelected=new boolean[]{selected};\n    trackGroupInfos[i]=new TracksInfo.TrackGroupInfo(trackGroups[i],trackSupport,trackType,trackSelected);\n  }\n  TrackGroupArray newTrackGroups=new TrackGroupArray(trackGroups);\n  TrackSelectionArray newTrackSelections=new TrackSelectionArray(trackSelections);\n  TracksInfo newTracksInfo=new TracksInfo(ImmutableList.copyOf(trackGroupInfos));\n  if (!newTrackGroups.equals(currentTrackGroups) || !newTrackSelections.equals(currentTrackSelection) || !newTracksInfo.equals(currentTracksInfo)) {\n    currentTrackSelection=newTrackSelections;\n    currentTrackGroups=newTrackGroups;\n    currentTracksInfo=newTracksInfo;\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 1073,
        "startColumnNumber" : 12,
        "endLineNumber" : 1073,
        "endColumnNumber" : 95
      },
      "nodeContext" : "trackSupport=new int[]{supported ? C.FORMAT_HANDLED : C.FORMAT_UNSUPPORTED_TYPE}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 1064,
    "startColumnNumber" : 7,
    "endLineNumber" : 1064,
    "endColumnNumber" : 8
  }, {
    "charLength" : 1,
    "startLineNumber" : 1066,
    "startColumnNumber" : 43,
    "endLineNumber" : 1066,
    "endColumnNumber" : 44
  }, {
    "charLength" : 1,
    "startLineNumber" : 1072,
    "startColumnNumber" : 7,
    "endLineNumber" : 1072,
    "endColumnNumber" : 8
  }, {
    "charLength" : 1,
    "startLineNumber" : 1073,
    "startColumnNumber" : 50,
    "endLineNumber" : 1073,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 1073,
    "startColumnNumber" : 69,
    "endLineNumber" : 1073,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}