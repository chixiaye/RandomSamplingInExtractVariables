{
  "id" : 71,
  "expression" : "new BigInteger(str)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/utils/PrefUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new BigInteger(str)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 73,
      "startColumnNumber" : 23,
      "endLineNumber" : 73,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return new BigInteger(str);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 72,
        "startColumnNumber" : 54,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return new BigInteger(str);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 72,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 70,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == Double.class || valueType == Double.TYPE) {\n  return CommonUtils.toDouble(str);\n}\n else if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 64,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n  return CommonUtils.toInt(str);\n}\n else if (valueType == Double.class || valueType == Double.TYPE) {\n  return CommonUtils.toDouble(str);\n}\n else if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 62,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == Long.class || valueType == Long.TYPE) {\n  return CommonUtils.toLong(str);\n}\n else if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n  return CommonUtils.toInt(str);\n}\n else if (valueType == Double.class || valueType == Double.TYPE) {\n  return CommonUtils.toDouble(str);\n}\n else if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n  return CommonUtils.toBoolean(str);\n}\n else if (valueType == Long.class || valueType == Long.TYPE) {\n  return CommonUtils.toLong(str);\n}\n else if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n  return CommonUtils.toInt(str);\n}\n else if (valueType == Double.class || valueType == Double.TYPE) {\n  return CommonUtils.toDouble(str);\n}\n else if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (valueType == null || CharSequence.class.isAssignableFrom(valueType)) {\n  return CommonUtils.isEmpty(str) ? null : str;\n}\n else if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n  return CommonUtils.toBoolean(str);\n}\n else if (valueType == Long.class || valueType == Long.TYPE) {\n  return CommonUtils.toLong(str);\n}\n else if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n  return CommonUtils.toInt(str);\n}\n else if (valueType == Double.class || valueType == Double.TYPE) {\n  return CommonUtils.toDouble(str);\n}\n else if (valueType == Float.class || valueType == Float.TYPE) {\n  return CommonUtils.toFloat(store);\n}\n else if (valueType == BigInteger.class) {\n  return new BigInteger(str);\n}\n else if (valueType == BigDecimal.class) {\n  return new BigDecimal(str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 158,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String str=store.getString(propName);\n  if (str == null) {\n    return null;\n  }\n  if (valueType == null || CharSequence.class.isAssignableFrom(valueType)) {\n    return CommonUtils.isEmpty(str) ? null : str;\n  }\n else   if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n    return CommonUtils.toBoolean(str);\n  }\n else   if (valueType == Long.class || valueType == Long.TYPE) {\n    return CommonUtils.toLong(str);\n  }\n else   if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n    return CommonUtils.toInt(str);\n  }\n else   if (valueType == Double.class || valueType == Double.TYPE) {\n    return CommonUtils.toDouble(str);\n  }\n else   if (valueType == Float.class || valueType == Float.TYPE) {\n    return CommonUtils.toFloat(store);\n  }\n else   if (valueType == BigInteger.class) {\n    return new BigInteger(str);\n  }\n else   if (valueType == BigDecimal.class) {\n    return new BigDecimal(str);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final String str=store.getString(propName);\n  if (str == null) {\n    return null;\n  }\n  if (valueType == null || CharSequence.class.isAssignableFrom(valueType)) {\n    return CommonUtils.isEmpty(str) ? null : str;\n  }\n else   if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n    return CommonUtils.toBoolean(str);\n  }\n else   if (valueType == Long.class || valueType == Long.TYPE) {\n    return CommonUtils.toLong(str);\n  }\n else   if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n    return CommonUtils.toInt(str);\n  }\n else   if (valueType == Double.class || valueType == Double.TYPE) {\n    return CommonUtils.toDouble(str);\n  }\n else   if (valueType == Float.class || valueType == Float.TYPE) {\n    return CommonUtils.toFloat(store);\n  }\n else   if (valueType == BigInteger.class) {\n    return new BigInteger(str);\n  }\n else   if (valueType == BigDecimal.class) {\n    return new BigDecimal(str);\n  }\n}\n catch (RuntimeException e) {\n  log.error(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 188,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1523,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    final String str=store.getString(propName);\n    if (str == null) {\n      return null;\n    }\n    if (valueType == null || CharSequence.class.isAssignableFrom(valueType)) {\n      return CommonUtils.isEmpty(str) ? null : str;\n    }\n else     if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n      return CommonUtils.toBoolean(str);\n    }\n else     if (valueType == Long.class || valueType == Long.TYPE) {\n      return CommonUtils.toLong(str);\n    }\n else     if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n      return CommonUtils.toInt(str);\n    }\n else     if (valueType == Double.class || valueType == Double.TYPE) {\n      return CommonUtils.toDouble(str);\n    }\n else     if (valueType == Float.class || valueType == Float.TYPE) {\n      return CommonUtils.toFloat(store);\n    }\n else     if (valueType == BigInteger.class) {\n      return new BigInteger(str);\n    }\n else     if (valueType == BigDecimal.class) {\n      return new BigDecimal(str);\n    }\n  }\n catch (  RuntimeException e) {\n    log.error(e);\n  }\n  final String string=store.getString(propName);\n  return CommonUtils.isEmpty(string) ? null : string;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1631,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Object getPreferenceValue(DBPPreferenceStore store,String propName,Class<?> valueType){\n  try {\n    final String str=store.getString(propName);\n    if (str == null) {\n      return null;\n    }\n    if (valueType == null || CharSequence.class.isAssignableFrom(valueType)) {\n      return CommonUtils.isEmpty(str) ? null : str;\n    }\n else     if (valueType == Boolean.class || valueType == Boolean.TYPE) {\n      return CommonUtils.toBoolean(str);\n    }\n else     if (valueType == Long.class || valueType == Long.TYPE) {\n      return CommonUtils.toLong(str);\n    }\n else     if (valueType == Integer.class || valueType == Integer.TYPE || valueType == Short.class || valueType == Short.TYPE || valueType == Byte.class || valueType == Byte.TYPE) {\n      return CommonUtils.toInt(str);\n    }\n else     if (valueType == Double.class || valueType == Double.TYPE) {\n      return CommonUtils.toDouble(str);\n    }\n else     if (valueType == Float.class || valueType == Float.TYPE) {\n      return CommonUtils.toFloat(store);\n    }\n else     if (valueType == BigInteger.class) {\n      return new BigInteger(str);\n    }\n else     if (valueType == BigDecimal.class) {\n      return new BigDecimal(str);\n    }\n  }\n catch (  RuntimeException e) {\n    log.error(e);\n  }\n  final String string=store.getString(propName);\n  return CommonUtils.isEmpty(string) ? null : string;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return new BigInteger(str);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.math.BigInteger"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 73,
    "startColumnNumber" : 23,
    "endLineNumber" : 73,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}