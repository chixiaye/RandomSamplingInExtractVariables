{
  "id" : 40,
  "expression" : "node != null",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/jmh/java/com/github/benmanes/caffeine/cache/map/ConcurrentHashMapV7.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 500,
      "startColumnNumber" : 28,
      "endLineNumber" : 500,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 500,
        "startColumnNumber" : 24,
        "endLineNumber" : 504,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (node != null) {\n  node.setNext(first);\n}\n else {\n  node=new HashEntry<K,V>(hash,key,value,first);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 499,
        "startColumnNumber" : 25,
        "endLineNumber" : 515,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (node != null) {\n    node.setNext(first);\n  }\n else {\n    node=new HashEntry<K,V>(hash,key,value,first);\n  }\n  int c=count + 1;\n  if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n    rehash(node);\n  }\n else {\n    setEntryAt(tab,index,node);\n  }\n  ++modCount;\n  count=c;\n  oldValue=null;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 486,
        "startColumnNumber" : 20,
        "endLineNumber" : 515,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (e != null) {\n  K k;\n  if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n    oldValue=e.value;\n    if (!onlyIfAbsent) {\n      e.value=value;\n      ++modCount;\n    }\n    break;\n  }\n  e=e.next;\n}\n else {\n  if (node != null) {\n    node.setNext(first);\n  }\n else {\n    node=new HashEntry<K,V>(hash,key,value,first);\n  }\n  int c=count + 1;\n  if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n    rehash(node);\n  }\n else {\n    setEntryAt(tab,index,node);\n  }\n  ++modCount;\n  count=c;\n  oldValue=null;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 485,
        "startColumnNumber" : 49,
        "endLineNumber" : 516,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (e != null) {\n    K k;\n    if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n      oldValue=e.value;\n      if (!onlyIfAbsent) {\n        e.value=value;\n        ++modCount;\n      }\n      break;\n    }\n    e=e.next;\n  }\n else {\n    if (node != null) {\n      node.setNext(first);\n    }\n else {\n      node=new HashEntry<K,V>(hash,key,value,first);\n    }\n    int c=count + 1;\n    if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n      rehash(node);\n    }\n else {\n      setEntryAt(tab,index,node);\n    }\n    ++modCount;\n    count=c;\n    oldValue=null;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 485,
        "startColumnNumber" : 16,
        "endLineNumber" : 516,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (HashEntry<K,V> e=first; ; ) {\n  if (e != null) {\n    K k;\n    if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n      oldValue=e.value;\n      if (!onlyIfAbsent) {\n        e.value=value;\n        ++modCount;\n      }\n      break;\n    }\n    e=e.next;\n  }\n else {\n    if (node != null) {\n      node.setNext(first);\n    }\n else {\n      node=new HashEntry<K,V>(hash,key,value,first);\n    }\n    int c=count + 1;\n    if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n      rehash(node);\n    }\n else {\n      setEntryAt(tab,index,node);\n    }\n    ++modCount;\n    count=c;\n    oldValue=null;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 139,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1495,
        "startLineNumber" : 481,
        "startColumnNumber" : 16,
        "endLineNumber" : 517,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  HashEntry<K,V>[] tab=table;\n  int index=(tab.length - 1) & hash;\n  HashEntry<K,V> first=entryAt(tab,index);\n  for (HashEntry<K,V> e=first; ; ) {\n    if (e != null) {\n      K k;\n      if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n        oldValue=e.value;\n        if (!onlyIfAbsent) {\n          e.value=value;\n          ++modCount;\n        }\n        break;\n      }\n      e=e.next;\n    }\n else {\n      if (node != null) {\n        node.setNext(first);\n      }\n else {\n        node=new HashEntry<K,V>(hash,key,value,first);\n      }\n      int c=count + 1;\n      if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n        rehash(node);\n      }\n else {\n        setEntryAt(tab,index,node);\n      }\n      ++modCount;\n      count=c;\n      oldValue=null;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1551,
        "startLineNumber" : 481,
        "startColumnNumber" : 12,
        "endLineNumber" : 519,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  HashEntry<K,V>[] tab=table;\n  int index=(tab.length - 1) & hash;\n  HashEntry<K,V> first=entryAt(tab,index);\n  for (HashEntry<K,V> e=first; ; ) {\n    if (e != null) {\n      K k;\n      if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n        oldValue=e.value;\n        if (!onlyIfAbsent) {\n          e.value=value;\n          ++modCount;\n        }\n        break;\n      }\n      e=e.next;\n    }\n else {\n      if (node != null) {\n        node.setNext(first);\n      }\n else {\n        node=new HashEntry<K,V>(hash,key,value,first);\n      }\n      int c=count + 1;\n      if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n        rehash(node);\n      }\n else {\n        setEntryAt(tab,index,node);\n      }\n      ++modCount;\n      count=c;\n      oldValue=null;\n      break;\n    }\n  }\n}\n  finally {\n  unlock();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 184,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1740,
        "startLineNumber" : 477,
        "startColumnNumber" : 68,
        "endLineNumber" : 521,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashEntry<K,V> node=tryLock() ? null : scanAndLockForPut(key,hash,value);\n  V oldValue;\n  try {\n    HashEntry<K,V>[] tab=table;\n    int index=(tab.length - 1) & hash;\n    HashEntry<K,V> first=entryAt(tab,index);\n    for (HashEntry<K,V> e=first; ; ) {\n      if (e != null) {\n        K k;\n        if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n          oldValue=e.value;\n          if (!onlyIfAbsent) {\n            e.value=value;\n            ++modCount;\n          }\n          break;\n        }\n        e=e.next;\n      }\n else {\n        if (node != null) {\n          node.setNext(first);\n        }\n else {\n          node=new HashEntry<K,V>(hash,key,value,first);\n        }\n        int c=count + 1;\n        if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n          rehash(node);\n        }\n else {\n          setEntryAt(tab,index,node);\n        }\n        ++modCount;\n        count=c;\n        oldValue=null;\n        break;\n      }\n    }\n  }\n  finally {\n    unlock();\n  }\n  return oldValue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 477,
        "startColumnNumber" : 8,
        "endLineNumber" : 521,
        "endColumnNumber" : 9
      },
      "nodeContext" : "final V put(K key,int hash,V value,boolean onlyIfAbsent){\n  HashEntry<K,V> node=tryLock() ? null : scanAndLockForPut(key,hash,value);\n  V oldValue;\n  try {\n    HashEntry<K,V>[] tab=table;\n    int index=(tab.length - 1) & hash;\n    HashEntry<K,V> first=entryAt(tab,index);\n    for (HashEntry<K,V> e=first; ; ) {\n      if (e != null) {\n        K k;\n        if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {\n          oldValue=e.value;\n          if (!onlyIfAbsent) {\n            e.value=value;\n            ++modCount;\n          }\n          break;\n        }\n        e=e.next;\n      }\n else {\n        if (node != null) {\n          node.setNext(first);\n        }\n else {\n          node=new HashEntry<K,V>(hash,key,value,first);\n        }\n        int c=count + 1;\n        if (c > threshold && tab.length < MAXIMUM_CAPACITY) {\n          rehash(node);\n        }\n else {\n          setEntryAt(tab,index,node);\n        }\n        ++modCount;\n        count=c;\n        oldValue=null;\n        break;\n      }\n    }\n  }\n  finally {\n    unlock();\n  }\n  return oldValue;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 230,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 500,
        "startColumnNumber" : 24,
        "endLineNumber" : 504,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (node != null) {\n  node.setNext(first);\n}\n else {\n  node=new HashEntry<K,V>(hash,key,value,first);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 500,
    "startColumnNumber" : 28,
    "endLineNumber" : 500,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}