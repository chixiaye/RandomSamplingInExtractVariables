{
  "id" : 263,
  "expression" : "curr != start",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/fibonacciheap/FibonacciHeap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "curr != start",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 449,
      "startColumnNumber" : 13,
      "endLineNumber" : 449,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 449,
        "startColumnNumber" : 6,
        "endLineNumber" : 458,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (curr != start) {\n  buf.append(curr);\n  buf.append(\", \");\n  if (curr.getChild() != null) {\n    stack.push(curr.getChild());\n  }\n  curr=curr.getRight();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 437,
        "startColumnNumber" : 27,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FibonacciHeapNode<E> curr=stack.pop();\n  buf.append(curr);\n  buf.append(\", \");\n  if (curr.getChild() != null) {\n    stack.push(curr.getChild());\n  }\n  FibonacciHeapNode<E> start=curr;\n  curr=curr.getRight();\n  while (curr != start) {\n    buf.append(curr);\n    buf.append(\", \");\n    if (curr.getChild() != null) {\n      stack.push(curr.getChild());\n    }\n    curr=curr.getRight();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 437,
        "startColumnNumber" : 4,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!stack.empty()) {\n  FibonacciHeapNode<E> curr=stack.pop();\n  buf.append(curr);\n  buf.append(\", \");\n  if (curr.getChild() != null) {\n    stack.push(curr.getChild());\n  }\n  FibonacciHeapNode<E> start=curr;\n  curr=curr.getRight();\n  while (curr != start) {\n    buf.append(curr);\n    buf.append(\", \");\n    if (curr.getChild() != null) {\n      stack.push(curr.getChild());\n    }\n    curr=curr.getRight();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 425,
        "startColumnNumber" : 27,
        "endLineNumber" : 464,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (minimumNode == null) {\n    return \"FibonacciHeap=[]\";\n  }\n  Stack<FibonacciHeapNode<E>> stack=new Stack<FibonacciHeapNode<E>>();\n  stack.push(minimumNode);\n  StringBuilder buf=new StringBuilder(\"FibonacciHeap=[\");\n  while (!stack.empty()) {\n    FibonacciHeapNode<E> curr=stack.pop();\n    buf.append(curr);\n    buf.append(\", \");\n    if (curr.getChild() != null) {\n      stack.push(curr.getChild());\n    }\n    FibonacciHeapNode<E> start=curr;\n    curr=curr.getRight();\n    while (curr != start) {\n      buf.append(curr);\n      buf.append(\", \");\n      if (curr.getChild() != null) {\n        stack.push(curr.getChild());\n      }\n      curr=curr.getRight();\n    }\n  }\n  buf.append(']');\n  return buf.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 420,
        "startColumnNumber" : 2,
        "endLineNumber" : 464,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a String representation of this Fibonacci heap.\n * @return String of this.\n */\npublic String toString(){\n  if (minimumNode == null) {\n    return \"FibonacciHeap=[]\";\n  }\n  Stack<FibonacciHeapNode<E>> stack=new Stack<FibonacciHeapNode<E>>();\n  stack.push(minimumNode);\n  StringBuilder buf=new StringBuilder(\"FibonacciHeap=[\");\n  while (!stack.empty()) {\n    FibonacciHeapNode<E> curr=stack.pop();\n    buf.append(curr);\n    buf.append(\", \");\n    if (curr.getChild() != null) {\n      stack.push(curr.getChild());\n    }\n    FibonacciHeapNode<E> start=curr;\n    curr=curr.getRight();\n    while (curr != start) {\n      buf.append(curr);\n      buf.append(\", \");\n      if (curr.getChild() != null) {\n        stack.push(curr.getChild());\n      }\n      curr=curr.getRight();\n    }\n  }\n  buf.append(']');\n  return buf.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 449,
        "startColumnNumber" : 6,
        "endLineNumber" : 458,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (curr != start) {\n  buf.append(curr);\n  buf.append(\", \");\n  if (curr.getChild() != null) {\n    stack.push(curr.getChild());\n  }\n  curr=curr.getRight();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 449,
    "startColumnNumber" : 13,
    "endLineNumber" : 449,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}