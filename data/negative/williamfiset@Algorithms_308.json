{
  "id" : 308,
  "expression" : "new ArrayDeque<>(n)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "81d084f7eae21b9e01022004c8b5cac5729ec593",
  "filePath" : "com/williamfiset/algorithms/graphtheory/networkflow/Dinics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayDeque<>(n)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 56,
      "startColumnNumber" : 23,
      "endLineNumber" : 56,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 42
      },
      "nodeContext" : "q=new ArrayDeque<>(n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Deque<Integer> q=new ArrayDeque<>(n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean bfs(){\n  Arrays.fill(level,-1);\n  level[s]=0;\n  Deque<Integer> q=new ArrayDeque<>(n);\n  q.offer(s);\n  while (!q.isEmpty()) {\n    int node=q.poll();\n    for (    Edge edge : graph[node]) {\n      final long cap=edge.capacity - edge.flow;\n      if (cap > 0 && level[edge.to] == -1) {\n        level[edge.to]=level[node] + 1;\n        q.offer(edge.to);\n      }\n    }\n  }\n  return level[t] != -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Deque<Integer> q=new ArrayDeque<>(n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.ArrayDeque<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 56,
    "startColumnNumber" : 23,
    "endLineNumber" : 56,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}