{
  "id" : 220,
  "expression" : "i / ConsumeQueue.CQ_STORE_UNIT_SIZE",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/main/java/org/apache/rocketmq/store/DefaultMessageStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i / ConsumeQueue.CQ_STORE_UNIT_SIZE",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 618,
      "startColumnNumber" : 52,
      "endLineNumber" : 618,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 618,
        "startColumnNumber" : 51,
        "endLineNumber" : 618,
        "endColumnNumber" : 88
      },
      "nodeContext" : "(i / ConsumeQueue.CQ_STORE_UNIT_SIZE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 618,
        "startColumnNumber" : 42,
        "endLineNumber" : 618,
        "endColumnNumber" : 88
      },
      "nodeContext" : "offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 618,
        "startColumnNumber" : 24,
        "endLineNumber" : 618,
        "endColumnNumber" : 88
      },
      "nodeContext" : "nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 618,
        "startColumnNumber" : 24,
        "endLineNumber" : 618,
        "endColumnNumber" : 89
      },
      "nodeContext" : "nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4995,
        "startLineNumber" : 536,
        "startColumnNumber" : 24,
        "endLineNumber" : 624,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  status=GetMessageStatus.NO_MATCHED_MESSAGE;\n  long nextPhyFileStartOffset=Long.MIN_VALUE;\n  long maxPhyOffsetPulling=0;\n  int i=0;\n  final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n  final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n  ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n  for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n    long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n    int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n    long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n    maxPhyOffsetPulling=offsetPy;\n    if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n      if (offsetPy < nextPhyFileStartOffset)       continue;\n    }\n    boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n    if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n      break;\n    }\n    boolean extRet=false, isTagsCodeLegal=true;\n    if (consumeQueue.isExtAddr(tagsCode)) {\n      extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n      if (extRet) {\n        tagsCode=cqExtUnit.getTagsCode();\n      }\n else {\n        log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n        isTagsCodeLegal=false;\n      }\n    }\n    if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      }\n      continue;\n    }\n    SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n    if (null == selectResult) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n      }\n      nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n      continue;\n    }\n    if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      }\n      selectResult.release();\n      continue;\n    }\n    this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n    getResult.addMessage(selectResult);\n    status=GetMessageStatus.FOUND;\n    nextPhyFileStartOffset=Long.MIN_VALUE;\n  }\n  if (diskFallRecorded) {\n    long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n    brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n  }\n  nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n  long diff=maxOffsetPy - maxPhyOffsetPulling;\n  long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n  getResult.setSuggestPullingFromSlave(diff > memory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 381,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5086,
        "startLineNumber" : 536,
        "startColumnNumber" : 20,
        "endLineNumber" : 627,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  status=GetMessageStatus.NO_MATCHED_MESSAGE;\n  long nextPhyFileStartOffset=Long.MIN_VALUE;\n  long maxPhyOffsetPulling=0;\n  int i=0;\n  final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n  final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n  ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n  for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n    long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n    int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n    long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n    maxPhyOffsetPulling=offsetPy;\n    if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n      if (offsetPy < nextPhyFileStartOffset)       continue;\n    }\n    boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n    if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n      break;\n    }\n    boolean extRet=false, isTagsCodeLegal=true;\n    if (consumeQueue.isExtAddr(tagsCode)) {\n      extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n      if (extRet) {\n        tagsCode=cqExtUnit.getTagsCode();\n      }\n else {\n        log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n        isTagsCodeLegal=false;\n      }\n    }\n    if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      }\n      continue;\n    }\n    SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n    if (null == selectResult) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n      }\n      nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n      continue;\n    }\n    if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n      if (getResult.getBufferTotalSize() == 0) {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      }\n      selectResult.release();\n      continue;\n    }\n    this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n    getResult.addMessage(selectResult);\n    status=GetMessageStatus.FOUND;\n    nextPhyFileStartOffset=Long.MIN_VALUE;\n  }\n  if (diskFallRecorded) {\n    long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n    brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n  }\n  nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n  long diff=maxOffsetPy - maxPhyOffsetPulling;\n  long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n  getResult.setSuggestPullingFromSlave(diff > memory);\n}\n  finally {\n  bufferConsumeQueue.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 387,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5126,
        "startLineNumber" : 535,
        "startColumnNumber" : 48,
        "endLineNumber" : 628,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    status=GetMessageStatus.NO_MATCHED_MESSAGE;\n    long nextPhyFileStartOffset=Long.MIN_VALUE;\n    long maxPhyOffsetPulling=0;\n    int i=0;\n    final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n    final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n    ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n    for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n      long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n      int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n      long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n      maxPhyOffsetPulling=offsetPy;\n      if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n        if (offsetPy < nextPhyFileStartOffset)         continue;\n      }\n      boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n      if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n        break;\n      }\n      boolean extRet=false, isTagsCodeLegal=true;\n      if (consumeQueue.isExtAddr(tagsCode)) {\n        extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n        if (extRet) {\n          tagsCode=cqExtUnit.getTagsCode();\n        }\n else {\n          log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n          isTagsCodeLegal=false;\n        }\n      }\n      if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        }\n        continue;\n      }\n      SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n      if (null == selectResult) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n        }\n        nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n        continue;\n      }\n      if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        }\n        selectResult.release();\n        continue;\n      }\n      this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n      getResult.addMessage(selectResult);\n      status=GetMessageStatus.FOUND;\n      nextPhyFileStartOffset=Long.MIN_VALUE;\n    }\n    if (diskFallRecorded) {\n      long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n      brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n    }\n    nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n    long diff=maxOffsetPy - maxPhyOffsetPulling;\n    long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n    getResult.setSuggestPullingFromSlave(diff > memory);\n  }\n  finally {\n    bufferConsumeQueue.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5558,
        "startLineNumber" : 535,
        "startColumnNumber" : 16,
        "endLineNumber" : 633,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (bufferConsumeQueue != null) {\n  try {\n    status=GetMessageStatus.NO_MATCHED_MESSAGE;\n    long nextPhyFileStartOffset=Long.MIN_VALUE;\n    long maxPhyOffsetPulling=0;\n    int i=0;\n    final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n    final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n    ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n    for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n      long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n      int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n      long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n      maxPhyOffsetPulling=offsetPy;\n      if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n        if (offsetPy < nextPhyFileStartOffset)         continue;\n      }\n      boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n      if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n        break;\n      }\n      boolean extRet=false, isTagsCodeLegal=true;\n      if (consumeQueue.isExtAddr(tagsCode)) {\n        extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n        if (extRet) {\n          tagsCode=cqExtUnit.getTagsCode();\n        }\n else {\n          log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n          isTagsCodeLegal=false;\n        }\n      }\n      if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        }\n        continue;\n      }\n      SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n      if (null == selectResult) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n        }\n        nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n        continue;\n      }\n      if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n        if (getResult.getBufferTotalSize() == 0) {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        }\n        selectResult.release();\n        continue;\n      }\n      this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n      getResult.addMessage(selectResult);\n      status=GetMessageStatus.FOUND;\n      nextPhyFileStartOffset=Long.MIN_VALUE;\n    }\n    if (diskFallRecorded) {\n      long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n      brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n    }\n    nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n    long diff=maxOffsetPy - maxPhyOffsetPulling;\n    long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n    getResult.setSuggestPullingFromSlave(diff > memory);\n  }\n  finally {\n    bufferConsumeQueue.release();\n  }\n}\n else {\n  status=GetMessageStatus.OFFSET_FOUND_NULL;\n  nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n  log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 423,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5689,
        "startLineNumber" : 533,
        "startColumnNumber" : 19,
        "endLineNumber" : 634,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n  if (bufferConsumeQueue != null) {\n    try {\n      status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      long nextPhyFileStartOffset=Long.MIN_VALUE;\n      long maxPhyOffsetPulling=0;\n      int i=0;\n      final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n      ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n      for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n        long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n        int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n        long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n        maxPhyOffsetPulling=offsetPy;\n        if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n          if (offsetPy < nextPhyFileStartOffset)           continue;\n        }\n        boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n        if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n          break;\n        }\n        boolean extRet=false, isTagsCodeLegal=true;\n        if (consumeQueue.isExtAddr(tagsCode)) {\n          extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n          if (extRet) {\n            tagsCode=cqExtUnit.getTagsCode();\n          }\n else {\n            log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n            isTagsCodeLegal=false;\n          }\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          continue;\n        }\n        SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n        if (null == selectResult) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n          }\n          nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n          continue;\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          selectResult.release();\n          continue;\n        }\n        this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n        getResult.addMessage(selectResult);\n        status=GetMessageStatus.FOUND;\n        nextPhyFileStartOffset=Long.MIN_VALUE;\n      }\n      if (diskFallRecorded) {\n        long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n        brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n      }\n      nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      long diff=maxOffsetPy - maxPhyOffsetPulling;\n      long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n      getResult.setSuggestPullingFromSlave(diff > memory);\n    }\n  finally {\n      bufferConsumeQueue.release();\n    }\n  }\n else {\n    status=GetMessageStatus.OFFSET_FOUND_NULL;\n    nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n    log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 433,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6038,
        "startLineNumber" : 526,
        "startColumnNumber" : 19,
        "endLineNumber" : 634,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (offset > maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n  if (0 == minOffset) {\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else {\n    nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n  }\n}\n else {\n  SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n  if (bufferConsumeQueue != null) {\n    try {\n      status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      long nextPhyFileStartOffset=Long.MIN_VALUE;\n      long maxPhyOffsetPulling=0;\n      int i=0;\n      final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n      ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n      for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n        long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n        int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n        long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n        maxPhyOffsetPulling=offsetPy;\n        if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n          if (offsetPy < nextPhyFileStartOffset)           continue;\n        }\n        boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n        if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n          break;\n        }\n        boolean extRet=false, isTagsCodeLegal=true;\n        if (consumeQueue.isExtAddr(tagsCode)) {\n          extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n          if (extRet) {\n            tagsCode=cqExtUnit.getTagsCode();\n          }\n else {\n            log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n            isTagsCodeLegal=false;\n          }\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          continue;\n        }\n        SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n        if (null == selectResult) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n          }\n          nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n          continue;\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          selectResult.release();\n          continue;\n        }\n        this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n        getResult.addMessage(selectResult);\n        status=GetMessageStatus.FOUND;\n        nextPhyFileStartOffset=Long.MIN_VALUE;\n      }\n      if (diskFallRecorded) {\n        long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n        brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n      }\n      nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      long diff=maxOffsetPy - maxPhyOffsetPulling;\n      long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n      getResult.setSuggestPullingFromSlave(diff > memory);\n    }\n  finally {\n      bufferConsumeQueue.release();\n    }\n  }\n else {\n    status=GetMessageStatus.OFFSET_FOUND_NULL;\n    nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n    log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 464,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6219,
        "startLineNumber" : 523,
        "startColumnNumber" : 19,
        "endLineNumber" : 634,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (offset == maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n  nextBeginOffset=nextOffsetCorrection(offset,offset);\n}\n else if (offset > maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n  if (0 == minOffset) {\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else {\n    nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n  }\n}\n else {\n  SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n  if (bufferConsumeQueue != null) {\n    try {\n      status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      long nextPhyFileStartOffset=Long.MIN_VALUE;\n      long maxPhyOffsetPulling=0;\n      int i=0;\n      final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n      ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n      for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n        long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n        int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n        long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n        maxPhyOffsetPulling=offsetPy;\n        if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n          if (offsetPy < nextPhyFileStartOffset)           continue;\n        }\n        boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n        if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n          break;\n        }\n        boolean extRet=false, isTagsCodeLegal=true;\n        if (consumeQueue.isExtAddr(tagsCode)) {\n          extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n          if (extRet) {\n            tagsCode=cqExtUnit.getTagsCode();\n          }\n else {\n            log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n            isTagsCodeLegal=false;\n          }\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          continue;\n        }\n        SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n        if (null == selectResult) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n          }\n          nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n          continue;\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          selectResult.release();\n          continue;\n        }\n        this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n        getResult.addMessage(selectResult);\n        status=GetMessageStatus.FOUND;\n        nextPhyFileStartOffset=Long.MIN_VALUE;\n      }\n      if (diskFallRecorded) {\n        long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n        brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n      }\n      nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      long diff=maxOffsetPy - maxPhyOffsetPulling;\n      long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n      getResult.setSuggestPullingFromSlave(diff > memory);\n    }\n  finally {\n      bufferConsumeQueue.release();\n    }\n  }\n else {\n    status=GetMessageStatus.OFFSET_FOUND_NULL;\n    nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n    log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 482,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6399,
        "startLineNumber" : 520,
        "startColumnNumber" : 19,
        "endLineNumber" : 634,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (offset < minOffset) {\n  status=GetMessageStatus.OFFSET_TOO_SMALL;\n  nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n}\n else if (offset == maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n  nextBeginOffset=nextOffsetCorrection(offset,offset);\n}\n else if (offset > maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n  if (0 == minOffset) {\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else {\n    nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n  }\n}\n else {\n  SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n  if (bufferConsumeQueue != null) {\n    try {\n      status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      long nextPhyFileStartOffset=Long.MIN_VALUE;\n      long maxPhyOffsetPulling=0;\n      int i=0;\n      final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n      ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n      for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n        long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n        int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n        long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n        maxPhyOffsetPulling=offsetPy;\n        if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n          if (offsetPy < nextPhyFileStartOffset)           continue;\n        }\n        boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n        if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n          break;\n        }\n        boolean extRet=false, isTagsCodeLegal=true;\n        if (consumeQueue.isExtAddr(tagsCode)) {\n          extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n          if (extRet) {\n            tagsCode=cqExtUnit.getTagsCode();\n          }\n else {\n            log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n            isTagsCodeLegal=false;\n          }\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          continue;\n        }\n        SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n        if (null == selectResult) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n          }\n          nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n          continue;\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          selectResult.release();\n          continue;\n        }\n        this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n        getResult.addMessage(selectResult);\n        status=GetMessageStatus.FOUND;\n        nextPhyFileStartOffset=Long.MIN_VALUE;\n      }\n      if (diskFallRecorded) {\n        long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n        brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n      }\n      nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      long diff=maxOffsetPy - maxPhyOffsetPulling;\n      long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n      getResult.setSuggestPullingFromSlave(diff > memory);\n    }\n  finally {\n      bufferConsumeQueue.release();\n    }\n  }\n else {\n    status=GetMessageStatus.OFFSET_FOUND_NULL;\n    nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n    log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 500,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6570,
        "startLineNumber" : 517,
        "startColumnNumber" : 12,
        "endLineNumber" : 634,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (maxOffset == 0) {\n  status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n  nextBeginOffset=nextOffsetCorrection(offset,0);\n}\n else if (offset < minOffset) {\n  status=GetMessageStatus.OFFSET_TOO_SMALL;\n  nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n}\n else if (offset == maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n  nextBeginOffset=nextOffsetCorrection(offset,offset);\n}\n else if (offset > maxOffset) {\n  status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n  if (0 == minOffset) {\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else {\n    nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n  }\n}\n else {\n  SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n  if (bufferConsumeQueue != null) {\n    try {\n      status=GetMessageStatus.NO_MATCHED_MESSAGE;\n      long nextPhyFileStartOffset=Long.MIN_VALUE;\n      long maxPhyOffsetPulling=0;\n      int i=0;\n      final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n      ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n      for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n        long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n        int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n        long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n        maxPhyOffsetPulling=offsetPy;\n        if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n          if (offsetPy < nextPhyFileStartOffset)           continue;\n        }\n        boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n        if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n          break;\n        }\n        boolean extRet=false, isTagsCodeLegal=true;\n        if (consumeQueue.isExtAddr(tagsCode)) {\n          extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n          if (extRet) {\n            tagsCode=cqExtUnit.getTagsCode();\n          }\n else {\n            log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n            isTagsCodeLegal=false;\n          }\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          continue;\n        }\n        SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n        if (null == selectResult) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n          }\n          nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n          continue;\n        }\n        if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n          if (getResult.getBufferTotalSize() == 0) {\n            status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          }\n          selectResult.release();\n          continue;\n        }\n        this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n        getResult.addMessage(selectResult);\n        status=GetMessageStatus.FOUND;\n        nextPhyFileStartOffset=Long.MIN_VALUE;\n      }\n      if (diskFallRecorded) {\n        long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n        brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n      }\n      nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n      long diff=maxOffsetPy - maxPhyOffsetPulling;\n      long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n      getResult.setSuggestPullingFromSlave(diff > memory);\n    }\n  finally {\n      bufferConsumeQueue.release();\n    }\n  }\n else {\n    status=GetMessageStatus.OFFSET_FOUND_NULL;\n    nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n    log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 518,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 6715,
        "startLineNumber" : 513,
        "startColumnNumber" : 34,
        "endLineNumber" : 635,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  minOffset=consumeQueue.getMinOffsetInQueue();\n  maxOffset=consumeQueue.getMaxOffsetInQueue();\n  if (maxOffset == 0) {\n    status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n    nextBeginOffset=nextOffsetCorrection(offset,0);\n  }\n else   if (offset < minOffset) {\n    status=GetMessageStatus.OFFSET_TOO_SMALL;\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else   if (offset == maxOffset) {\n    status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n    nextBeginOffset=nextOffsetCorrection(offset,offset);\n  }\n else   if (offset > maxOffset) {\n    status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n    if (0 == minOffset) {\n      nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n    }\n else {\n      nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n    }\n  }\n else {\n    SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n    if (bufferConsumeQueue != null) {\n      try {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        long nextPhyFileStartOffset=Long.MIN_VALUE;\n        long maxPhyOffsetPulling=0;\n        int i=0;\n        final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n        final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n        ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n        for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n          long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n          int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n          long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n          maxPhyOffsetPulling=offsetPy;\n          if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n            if (offsetPy < nextPhyFileStartOffset)             continue;\n          }\n          boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n          if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n            break;\n          }\n          boolean extRet=false, isTagsCodeLegal=true;\n          if (consumeQueue.isExtAddr(tagsCode)) {\n            extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n            if (extRet) {\n              tagsCode=cqExtUnit.getTagsCode();\n            }\n else {\n              log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n              isTagsCodeLegal=false;\n            }\n          }\n          if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.NO_MATCHED_MESSAGE;\n            }\n            continue;\n          }\n          SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n          if (null == selectResult) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n            }\n            nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n            continue;\n          }\n          if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.NO_MATCHED_MESSAGE;\n            }\n            selectResult.release();\n            continue;\n          }\n          this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n          getResult.addMessage(selectResult);\n          status=GetMessageStatus.FOUND;\n          nextPhyFileStartOffset=Long.MIN_VALUE;\n        }\n        if (diskFallRecorded) {\n          long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n          brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n        }\n        nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n        long diff=maxOffsetPy - maxPhyOffsetPulling;\n        long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n        getResult.setSuggestPullingFromSlave(diff > memory);\n      }\n  finally {\n        bufferConsumeQueue.release();\n      }\n    }\n else {\n      status=GetMessageStatus.OFFSET_FOUND_NULL;\n      nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n      log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 531,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6883,
        "startLineNumber" : 513,
        "startColumnNumber" : 8,
        "endLineNumber" : 638,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (consumeQueue != null) {\n  minOffset=consumeQueue.getMinOffsetInQueue();\n  maxOffset=consumeQueue.getMaxOffsetInQueue();\n  if (maxOffset == 0) {\n    status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n    nextBeginOffset=nextOffsetCorrection(offset,0);\n  }\n else   if (offset < minOffset) {\n    status=GetMessageStatus.OFFSET_TOO_SMALL;\n    nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n  }\n else   if (offset == maxOffset) {\n    status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n    nextBeginOffset=nextOffsetCorrection(offset,offset);\n  }\n else   if (offset > maxOffset) {\n    status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n    if (0 == minOffset) {\n      nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n    }\n else {\n      nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n    }\n  }\n else {\n    SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n    if (bufferConsumeQueue != null) {\n      try {\n        status=GetMessageStatus.NO_MATCHED_MESSAGE;\n        long nextPhyFileStartOffset=Long.MIN_VALUE;\n        long maxPhyOffsetPulling=0;\n        int i=0;\n        final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n        final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n        ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n        for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n          long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n          int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n          long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n          maxPhyOffsetPulling=offsetPy;\n          if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n            if (offsetPy < nextPhyFileStartOffset)             continue;\n          }\n          boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n          if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n            break;\n          }\n          boolean extRet=false, isTagsCodeLegal=true;\n          if (consumeQueue.isExtAddr(tagsCode)) {\n            extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n            if (extRet) {\n              tagsCode=cqExtUnit.getTagsCode();\n            }\n else {\n              log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n              isTagsCodeLegal=false;\n            }\n          }\n          if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.NO_MATCHED_MESSAGE;\n            }\n            continue;\n          }\n          SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n          if (null == selectResult) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n            }\n            nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n            continue;\n          }\n          if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n            if (getResult.getBufferTotalSize() == 0) {\n              status=GetMessageStatus.NO_MATCHED_MESSAGE;\n            }\n            selectResult.release();\n            continue;\n          }\n          this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n          getResult.addMessage(selectResult);\n          status=GetMessageStatus.FOUND;\n          nextPhyFileStartOffset=Long.MIN_VALUE;\n        }\n        if (diskFallRecorded) {\n          long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n          brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n        }\n        nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n        long diff=maxOffsetPy - maxPhyOffsetPulling;\n        long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n        getResult.setSuggestPullingFromSlave(diff > memory);\n      }\n  finally {\n        bufferConsumeQueue.release();\n      }\n    }\n else {\n      status=GetMessageStatus.OFFSET_FOUND_NULL;\n      nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n      log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n    }\n  }\n}\n else {\n  status=GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;\n  nextBeginOffset=nextOffsetCorrection(offset,0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 549,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8255,
        "startLineNumber" : 490,
        "startColumnNumber" : 43,
        "endLineNumber" : 653,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this.shutdown) {\n    log.warn(\"message store has shutdown, so getMessage is forbidden\");\n    return null;\n  }\n  if (!this.runningFlags.isReadable()) {\n    log.warn(\"message store is not readable, so getMessage is forbidden \" + this.runningFlags.getFlagBits());\n    return null;\n  }\n  long beginTime=this.getSystemClock().now();\n  GetMessageStatus status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n  long nextBeginOffset=offset;\n  long minOffset=0;\n  long maxOffset=0;\n  GetMessageResult getResult=new GetMessageResult();\n  final long maxOffsetPy=this.commitLog.getMaxOffset();\n  ConsumeQueue consumeQueue=findConsumeQueue(topic,queueId);\n  if (consumeQueue != null) {\n    minOffset=consumeQueue.getMinOffsetInQueue();\n    maxOffset=consumeQueue.getMaxOffsetInQueue();\n    if (maxOffset == 0) {\n      status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n      nextBeginOffset=nextOffsetCorrection(offset,0);\n    }\n else     if (offset < minOffset) {\n      status=GetMessageStatus.OFFSET_TOO_SMALL;\n      nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n    }\n else     if (offset == maxOffset) {\n      status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n      nextBeginOffset=nextOffsetCorrection(offset,offset);\n    }\n else     if (offset > maxOffset) {\n      status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n      if (0 == minOffset) {\n        nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n      }\n else {\n        nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n      }\n    }\n else {\n      SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n      if (bufferConsumeQueue != null) {\n        try {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          long nextPhyFileStartOffset=Long.MIN_VALUE;\n          long maxPhyOffsetPulling=0;\n          int i=0;\n          final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n          final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n          ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n          for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n            long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n            int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n            long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n            maxPhyOffsetPulling=offsetPy;\n            if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n              if (offsetPy < nextPhyFileStartOffset)               continue;\n            }\n            boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n            if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n              break;\n            }\n            boolean extRet=false, isTagsCodeLegal=true;\n            if (consumeQueue.isExtAddr(tagsCode)) {\n              extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n              if (extRet) {\n                tagsCode=cqExtUnit.getTagsCode();\n              }\n else {\n                log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n                isTagsCodeLegal=false;\n              }\n            }\n            if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.NO_MATCHED_MESSAGE;\n              }\n              continue;\n            }\n            SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n            if (null == selectResult) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n              }\n              nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n              continue;\n            }\n            if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.NO_MATCHED_MESSAGE;\n              }\n              selectResult.release();\n              continue;\n            }\n            this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n            getResult.addMessage(selectResult);\n            status=GetMessageStatus.FOUND;\n            nextPhyFileStartOffset=Long.MIN_VALUE;\n          }\n          if (diskFallRecorded) {\n            long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n            brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n          }\n          nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n          long diff=maxOffsetPy - maxPhyOffsetPulling;\n          long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n          getResult.setSuggestPullingFromSlave(diff > memory);\n        }\n  finally {\n          bufferConsumeQueue.release();\n        }\n      }\n else {\n        status=GetMessageStatus.OFFSET_FOUND_NULL;\n        nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n        log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n      }\n    }\n  }\n else {\n    status=GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;\n    nextBeginOffset=nextOffsetCorrection(offset,0);\n  }\n  if (GetMessageStatus.FOUND == status) {\n    this.storeStatsService.getGetMessageTimesTotalFound().incrementAndGet();\n  }\n else {\n    this.storeStatsService.getGetMessageTimesTotalMiss().incrementAndGet();\n  }\n  long eclipseTime=this.getSystemClock().now() - beginTime;\n  this.storeStatsService.setGetMessageEntireTimeMax(eclipseTime);\n  getResult.setStatus(status);\n  getResult.setNextBeginOffset(nextBeginOffset);\n  getResult.setMaxOffset(maxOffset);\n  getResult.setMinOffset(minOffset);\n  return getResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 706,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8441,
        "startLineNumber" : 488,
        "startColumnNumber" : 4,
        "endLineNumber" : 653,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public GetMessageResult getMessage(final String group,final String topic,final int queueId,final long offset,final int maxMsgNums,final MessageFilter messageFilter){\n  if (this.shutdown) {\n    log.warn(\"message store has shutdown, so getMessage is forbidden\");\n    return null;\n  }\n  if (!this.runningFlags.isReadable()) {\n    log.warn(\"message store is not readable, so getMessage is forbidden \" + this.runningFlags.getFlagBits());\n    return null;\n  }\n  long beginTime=this.getSystemClock().now();\n  GetMessageStatus status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n  long nextBeginOffset=offset;\n  long minOffset=0;\n  long maxOffset=0;\n  GetMessageResult getResult=new GetMessageResult();\n  final long maxOffsetPy=this.commitLog.getMaxOffset();\n  ConsumeQueue consumeQueue=findConsumeQueue(topic,queueId);\n  if (consumeQueue != null) {\n    minOffset=consumeQueue.getMinOffsetInQueue();\n    maxOffset=consumeQueue.getMaxOffsetInQueue();\n    if (maxOffset == 0) {\n      status=GetMessageStatus.NO_MESSAGE_IN_QUEUE;\n      nextBeginOffset=nextOffsetCorrection(offset,0);\n    }\n else     if (offset < minOffset) {\n      status=GetMessageStatus.OFFSET_TOO_SMALL;\n      nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n    }\n else     if (offset == maxOffset) {\n      status=GetMessageStatus.OFFSET_OVERFLOW_ONE;\n      nextBeginOffset=nextOffsetCorrection(offset,offset);\n    }\n else     if (offset > maxOffset) {\n      status=GetMessageStatus.OFFSET_OVERFLOW_BADLY;\n      if (0 == minOffset) {\n        nextBeginOffset=nextOffsetCorrection(offset,minOffset);\n      }\n else {\n        nextBeginOffset=nextOffsetCorrection(offset,maxOffset);\n      }\n    }\n else {\n      SelectMappedBufferResult bufferConsumeQueue=consumeQueue.getIndexBuffer(offset);\n      if (bufferConsumeQueue != null) {\n        try {\n          status=GetMessageStatus.NO_MATCHED_MESSAGE;\n          long nextPhyFileStartOffset=Long.MIN_VALUE;\n          long maxPhyOffsetPulling=0;\n          int i=0;\n          final int maxFilterMessageCount=Math.max(16000,maxMsgNums * ConsumeQueue.CQ_STORE_UNIT_SIZE);\n          final boolean diskFallRecorded=this.messageStoreConfig.isDiskFallRecorded();\n          ConsumeQueueExt.CqExtUnit cqExtUnit=new ConsumeQueueExt.CqExtUnit();\n          for (; i < bufferConsumeQueue.getSize() && i < maxFilterMessageCount; i+=ConsumeQueue.CQ_STORE_UNIT_SIZE) {\n            long offsetPy=bufferConsumeQueue.getByteBuffer().getLong();\n            int sizePy=bufferConsumeQueue.getByteBuffer().getInt();\n            long tagsCode=bufferConsumeQueue.getByteBuffer().getLong();\n            maxPhyOffsetPulling=offsetPy;\n            if (nextPhyFileStartOffset != Long.MIN_VALUE) {\n              if (offsetPy < nextPhyFileStartOffset)               continue;\n            }\n            boolean isInDisk=checkInDiskByCommitOffset(offsetPy,maxOffsetPy);\n            if (this.isTheBatchFull(sizePy,maxMsgNums,getResult.getBufferTotalSize(),getResult.getMessageCount(),isInDisk)) {\n              break;\n            }\n            boolean extRet=false, isTagsCodeLegal=true;\n            if (consumeQueue.isExtAddr(tagsCode)) {\n              extRet=consumeQueue.getExt(tagsCode,cqExtUnit);\n              if (extRet) {\n                tagsCode=cqExtUnit.getTagsCode();\n              }\n else {\n                log.error(\"[BUG] can't find consume queue extend file content!addr={}, offsetPy={}, sizePy={}, topic={}, group={}\",tagsCode,offsetPy,sizePy,topic,group);\n                isTagsCodeLegal=false;\n              }\n            }\n            if (messageFilter != null && !messageFilter.isMatchedByConsumeQueue(isTagsCodeLegal ? tagsCode : null,extRet ? cqExtUnit : null)) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.NO_MATCHED_MESSAGE;\n              }\n              continue;\n            }\n            SelectMappedBufferResult selectResult=this.commitLog.getMessage(offsetPy,sizePy);\n            if (null == selectResult) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.MESSAGE_WAS_REMOVING;\n              }\n              nextPhyFileStartOffset=this.commitLog.rollNextFile(offsetPy);\n              continue;\n            }\n            if (messageFilter != null && !messageFilter.isMatchedByCommitLog(selectResult.getByteBuffer().slice(),null)) {\n              if (getResult.getBufferTotalSize() == 0) {\n                status=GetMessageStatus.NO_MATCHED_MESSAGE;\n              }\n              selectResult.release();\n              continue;\n            }\n            this.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();\n            getResult.addMessage(selectResult);\n            status=GetMessageStatus.FOUND;\n            nextPhyFileStartOffset=Long.MIN_VALUE;\n          }\n          if (diskFallRecorded) {\n            long fallBehind=maxOffsetPy - maxPhyOffsetPulling;\n            brokerStatsManager.recordDiskFallBehindSize(group,topic,queueId,fallBehind);\n          }\n          nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n          long diff=maxOffsetPy - maxPhyOffsetPulling;\n          long memory=(long)(StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (this.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / 100.0));\n          getResult.setSuggestPullingFromSlave(diff > memory);\n        }\n  finally {\n          bufferConsumeQueue.release();\n        }\n      }\n else {\n        status=GetMessageStatus.OFFSET_FOUND_NULL;\n        nextBeginOffset=nextOffsetCorrection(offset,consumeQueue.rollNextFile(offset));\n        log.warn(\"consumer request topic: \" + topic + \"offset: \"+ offset+ \" minOffset: \"+ minOffset+ \" maxOffset: \"+ maxOffset+ \", but access logic queue failed.\");\n      }\n    }\n  }\n else {\n    status=GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;\n    nextBeginOffset=nextOffsetCorrection(offset,0);\n  }\n  if (GetMessageStatus.FOUND == status) {\n    this.storeStatsService.getGetMessageTimesTotalFound().incrementAndGet();\n  }\n else {\n    this.storeStatsService.getGetMessageTimesTotalMiss().incrementAndGet();\n  }\n  long eclipseTime=this.getSystemClock().now() - beginTime;\n  this.storeStatsService.setGetMessageEntireTimeMax(eclipseTime);\n  getResult.setStatus(status);\n  getResult.setNextBeginOffset(nextBeginOffset);\n  getResult.setMaxOffset(maxOffset);\n  getResult.setMinOffset(minOffset);\n  return getResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 738,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 618,
        "startColumnNumber" : 24,
        "endLineNumber" : 618,
        "endColumnNumber" : 89
      },
      "nodeContext" : "nextBeginOffset=offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 618,
    "startColumnNumber" : 52,
    "endLineNumber" : 618,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}