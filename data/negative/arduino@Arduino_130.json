{
  "id" : 130,
  "expression" : "prefs",
  "projectName" : "arduino@Arduino",
  "commitID" : "24b32422e24e3dbffbb25a16a6ab3d8d533a3b5d",
  "filePath" : "arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
  "occurrences" : 26,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 65,
      "startColumnNumber" : 6,
      "endLineNumber" : 65,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 36
      },
      "nodeContext" : "prefs.putAll(boardPreferences)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 37
      },
      "nodeContext" : "prefs.putAll(boardPreferences);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 64,
        "startColumnNumber" : 34,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.putAll(boardPreferences);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (boardPreferences != null) {\n  prefs.putAll(boardPreferences);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 37
      },
      "nodeContext" : "prefs.putAll(boardPreferences);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 67,
      "startColumnNumber" : 18,
      "endLineNumber" : 67,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 67,
        "startColumnNumber" : 18,
        "endLineNumber" : 67,
        "endColumnNumber" : 50
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.tool\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 67,
        "startColumnNumber" : 11,
        "endLineNumber" : 67,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tool=prefs.getOrExcept(\"upload.tool\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String tool=prefs.getOrExcept(\"upload.tool\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String tool=prefs.getOrExcept(\"upload.tool\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 73,
      "startColumnNumber" : 4,
      "endLineNumber" : 73,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 46
      },
      "nodeContext" : "prefs.putAll(targetPlatform.getTool(tool))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 47
      },
      "nodeContext" : "prefs.putAll(targetPlatform.getTool(tool));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 47
      },
      "nodeContext" : "prefs.putAll(targetPlatform.getTool(tool));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 77,
      "startColumnNumber" : 27,
      "endLineNumber" : 77,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 77,
        "startColumnNumber" : 27,
        "endLineNumber" : 77,
        "endColumnNumber" : 55
      },
      "nodeContext" : "prefs.get(\"upload.protocol\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 27,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "prefs.get(\"upload.protocol\") == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "usingProgrammer || prefs.get(\"upload.protocol\") == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n  return uploadUsingProgrammer(buildPath,className);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "usingProgrammer || prefs.get(\"upload.protocol\") == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 83,
      "startColumnNumber" : 6,
      "endLineNumber" : 83,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 40
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 41
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 41
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 84,
      "startColumnNumber" : 6,
      "endLineNumber" : 84,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 49
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 49
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 86,
      "startColumnNumber" : 8,
      "endLineNumber" : 86,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 79
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 80
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 80
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 86,
      "startColumnNumber" : 36,
      "endLineNumber" : 86,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 86,
        "startColumnNumber" : 36,
        "endLineNumber" : 86,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.params.verbose\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 79
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 80
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 80
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 88,
      "startColumnNumber" : 8,
      "endLineNumber" : 88,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 77
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 88,
      "startColumnNumber" : 36,
      "endLineNumber" : 88,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 88,
        "startColumnNumber" : 36,
        "endLineNumber" : 88,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.params.quiet\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 77
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 92,
      "startColumnNumber" : 25,
      "endLineNumber" : 92,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 92,
        "startColumnNumber" : 25,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.pattern\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 92,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pattern=prefs.getOrExcept(\"upload.pattern\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String pattern=prefs.getOrExcept(\"upload.pattern\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 91,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String pattern=prefs.getOrExcept(\"upload.pattern\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 93,
      "startColumnNumber" : 62,
      "endLineNumber" : 93,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 93,
        "startColumnNumber" : 23,
        "endLineNumber" : 93,
        "endColumnNumber" : 74
      },
      "nodeContext" : "StringReplacer.formatAndSplit(pattern,prefs,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 93,
        "startColumnNumber" : 17,
        "endLineNumber" : 93,
        "endColumnNumber" : 74
      },
      "nodeContext" : "cmd=StringReplacer.formatAndSplit(pattern,prefs,true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 91,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (noUploadPort) {\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 107,
      "startColumnNumber" : 15,
      "endLineNumber" : 107,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 107,
        "startColumnNumber" : 15,
        "endLineNumber" : 107,
        "endColumnNumber" : 52
      },
      "nodeContext" : "prefs.get(\"upload.use_1200bps_touch\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 107,
        "startColumnNumber" : 11,
        "endLineNumber" : 107,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t=prefs.get(\"upload.use_1200bps_touch\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String t=prefs.get(\"upload.use_1200bps_touch\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String t=prefs.get(\"upload.use_1200bps_touch\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 110,
      "startColumnNumber" : 8,
      "endLineNumber" : 110,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 48
      },
      "nodeContext" : "prefs.get(\"upload.wait_for_upload_port\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 48
      },
      "nodeContext" : "t=prefs.get(\"upload.wait_for_upload_port\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 49
      },
      "nodeContext" : "t=prefs.get(\"upload.wait_for_upload_port\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 49
      },
      "nodeContext" : "t=prefs.get(\"upload.wait_for_upload_port\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 114,
      "startColumnNumber" : 26,
      "endLineNumber" : 114,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 114,
        "startColumnNumber" : 26,
        "endLineNumber" : 114,
        "endColumnNumber" : 58
      },
      "nodeContext" : "prefs.getOrExcept(\"serial.port\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 114,
        "startColumnNumber" : 13,
        "endLineNumber" : 114,
        "endColumnNumber" : 58
      },
      "nodeContext" : "uploadPort=prefs.getOrExcept(\"serial.port\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String uploadPort=prefs.getOrExcept(\"serial.port\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doTouch) {\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String uploadPort=prefs.getOrExcept(\"serial.port\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 137,
      "startColumnNumber" : 6,
      "endLineNumber" : 137,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 42
      },
      "nodeContext" : "prefs.put(\"serial.port\",uploadPort)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 43
      },
      "nodeContext" : "prefs.put(\"serial.port\",uploadPort);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doTouch) {\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 43
      },
      "nodeContext" : "prefs.put(\"serial.port\",uploadPort);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 139,
      "startColumnNumber" : 8,
      "endLineNumber" : 139,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 62
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort.substring(5))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 63
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort.substring(5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "if (uploadPort.startsWith(\"/dev/\")) prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else prefs.put(\"serial.port.file\",uploadPort);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doTouch) {\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 63
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort.substring(5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 141,
      "startColumnNumber" : 8,
      "endLineNumber" : 141,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 49
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "if (uploadPort.startsWith(\"/dev/\")) prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else prefs.put(\"serial.port.file\",uploadPort);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doTouch) {\n  String uploadPort=prefs.getOrExcept(\"serial.port\");\n  try {\n    List<String> before=Serial.list();\n    if (before.contains(uploadPort)) {\n      if (verbose)       System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n      Serial.touchForCDCReset(uploadPort);\n    }\n    Thread.sleep(400);\n    if (waitForUploadPort) {\n      uploadPort=waitForUploadPort(uploadPort,before);\n    }\n  }\n catch (  SerialException e) {\n    throw new RunnerException(e);\n  }\ncatch (  InterruptedException e) {\n    throw new RunnerException(e.getMessage());\n  }\n  prefs.put(\"serial.port\",uploadPort);\n  if (uploadPort.startsWith(\"/dev/\"))   prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else   prefs.put(\"serial.port.file\",uploadPort);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 50
      },
      "nodeContext" : "prefs.put(\"serial.port.file\",uploadPort);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 144,
      "startColumnNumber" : 4,
      "endLineNumber" : 144,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 38
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 39
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 39
      },
      "nodeContext" : "prefs.put(\"build.path\",buildPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 145,
      "startColumnNumber" : 4,
      "endLineNumber" : 145,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 46
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 47
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 47
      },
      "nodeContext" : "prefs.put(\"build.project_name\",className);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 147,
      "startColumnNumber" : 6,
      "endLineNumber" : 147,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 77
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 147,
      "startColumnNumber" : 34,
      "endLineNumber" : 147,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 147,
        "startColumnNumber" : 34,
        "endLineNumber" : 147,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.params.verbose\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 77
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 78
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 149,
      "startColumnNumber" : 6,
      "endLineNumber" : 149,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 75
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 149,
      "startColumnNumber" : 34,
      "endLineNumber" : 149,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 149,
        "startColumnNumber" : 34,
        "endLineNumber" : 149,
        "endColumnNumber" : 74
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.params.quiet\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 75
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "if (verbose) prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 76
      },
      "nodeContext" : "prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 158,
      "startColumnNumber" : 23,
      "endLineNumber" : 158,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 158,
        "startColumnNumber" : 23,
        "endLineNumber" : 158,
        "endColumnNumber" : 58
      },
      "nodeContext" : "prefs.getOrExcept(\"upload.pattern\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 158,
        "startColumnNumber" : 13,
        "endLineNumber" : 158,
        "endColumnNumber" : 58
      },
      "nodeContext" : "pattern=prefs.getOrExcept(\"upload.pattern\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 158,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String pattern=prefs.getOrExcept(\"upload.pattern\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (RunnerException e) {\n  throw e;\n}\ncatch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 158,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String pattern=prefs.getOrExcept(\"upload.pattern\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  }, {
    "nodeContext" : "prefs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 159,
      "startColumnNumber" : 60,
      "endLineNumber" : 159,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 159,
        "startColumnNumber" : 21,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "StringReplacer.formatAndSplit(pattern,prefs,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 159,
        "startColumnNumber" : 15,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "cmd=StringReplacer.formatAndSplit(pattern,prefs,true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  String pattern=prefs.getOrExcept(\"upload.pattern\");\n  String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n  uploadResult=executeUploadCommand(cmd);\n}\n catch (RunnerException e) {\n  throw e;\n}\ncatch (Exception e) {\n  throw new RunnerException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5082,
        "startLineNumber" : 59,
        "startColumnNumber" : 169,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 494,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5249,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean uploadUsingPreferences(File sourcePath,String buildPath,String className,boolean usingProgrammer,List<String> warningsAccumulator) throws Exception {\n  TargetPlatform targetPlatform=BaseNoGui.getTargetPlatform();\n  PreferencesMap prefs=PreferencesData.getMap();\n  PreferencesMap boardPreferences=BaseNoGui.getBoardPreferences();\n  if (boardPreferences != null) {\n    prefs.putAll(boardPreferences);\n  }\n  String tool=prefs.getOrExcept(\"upload.tool\");\n  if (tool.contains(\":\")) {\n    String[] split=tool.split(\":\",2);\n    targetPlatform=BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);\n    tool=split[1];\n  }\n  prefs.putAll(targetPlatform.getTool(tool));\n  if (usingProgrammer || prefs.get(\"upload.protocol\") == null) {\n    return uploadUsingProgrammer(buildPath,className);\n  }\n  if (noUploadPort) {\n    prefs.put(\"build.path\",buildPath);\n    prefs.put(\"build.project_name\",className);\n    if (verbose)     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else     prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n    boolean uploadResult;\n    try {\n      String pattern=prefs.getOrExcept(\"upload.pattern\");\n      String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n      uploadResult=executeUploadCommand(cmd);\n    }\n catch (    Exception e) {\n      throw new RunnerException(e);\n    }\n    return uploadResult;\n  }\n  String t=prefs.get(\"upload.use_1200bps_touch\");\n  boolean doTouch=t != null && t.equals(\"true\");\n  t=prefs.get(\"upload.wait_for_upload_port\");\n  boolean waitForUploadPort=(t != null) && t.equals(\"true\");\n  if (doTouch) {\n    String uploadPort=prefs.getOrExcept(\"serial.port\");\n    try {\n      List<String> before=Serial.list();\n      if (before.contains(uploadPort)) {\n        if (verbose)         System.out.println(I18n.format(_(\"Forcing reset using 1200bps open/close on port {0}\"),uploadPort));\n        Serial.touchForCDCReset(uploadPort);\n      }\n      Thread.sleep(400);\n      if (waitForUploadPort) {\n        uploadPort=waitForUploadPort(uploadPort,before);\n      }\n    }\n catch (    SerialException e) {\n      throw new RunnerException(e);\n    }\ncatch (    InterruptedException e) {\n      throw new RunnerException(e.getMessage());\n    }\n    prefs.put(\"serial.port\",uploadPort);\n    if (uploadPort.startsWith(\"/dev/\"))     prefs.put(\"serial.port.file\",uploadPort.substring(5));\n else     prefs.put(\"serial.port.file\",uploadPort);\n  }\n  prefs.put(\"build.path\",buildPath);\n  prefs.put(\"build.project_name\",className);\n  if (verbose)   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.verbose\"));\n else   prefs.put(\"upload.verbose\",prefs.getOrExcept(\"upload.params.quiet\"));\n  boolean uploadResult;\n  try {\n    String pattern=prefs.getOrExcept(\"upload.pattern\");\n    String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n    uploadResult=executeUploadCommand(cmd);\n  }\n catch (  RunnerException e) {\n    throw e;\n  }\ncatch (  Exception e) {\n    throw new RunnerException(e);\n  }\n  try {\n    if (uploadResult && doTouch) {\n      String uploadPort=PreferencesData.get(\"serial.port\");\n      if (waitForUploadPort) {\n        Thread.sleep(1000);\n        long started=System.currentTimeMillis();\n        while (System.currentTimeMillis() - started < 2000) {\n          List<String> portList=Serial.list();\n          if (portList.contains(uploadPort))           break;\n          Thread.sleep(250);\n        }\n      }\n    }\n  }\n catch (  InterruptedException ex) {\n  }\n  return uploadResult;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 522,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "String[] cmd=StringReplacer.formatAndSplit(pattern,prefs,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "processing.app.helpers.PreferencesMap"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 65,
    "startColumnNumber" : 6,
    "endLineNumber" : 65,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 67,
    "startColumnNumber" : 18,
    "endLineNumber" : 67,
    "endColumnNumber" : 23
  }, {
    "charLength" : 5,
    "startLineNumber" : 73,
    "startColumnNumber" : 4,
    "endLineNumber" : 73,
    "endColumnNumber" : 9
  }, {
    "charLength" : 5,
    "startLineNumber" : 77,
    "startColumnNumber" : 27,
    "endLineNumber" : 77,
    "endColumnNumber" : 32
  }, {
    "charLength" : 5,
    "startLineNumber" : 83,
    "startColumnNumber" : 6,
    "endLineNumber" : 83,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 84,
    "startColumnNumber" : 6,
    "endLineNumber" : 84,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 86,
    "startColumnNumber" : 8,
    "endLineNumber" : 86,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 86,
    "startColumnNumber" : 36,
    "endLineNumber" : 86,
    "endColumnNumber" : 41
  }, {
    "charLength" : 5,
    "startLineNumber" : 88,
    "startColumnNumber" : 8,
    "endLineNumber" : 88,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 88,
    "startColumnNumber" : 36,
    "endLineNumber" : 88,
    "endColumnNumber" : 41
  }, {
    "charLength" : 5,
    "startLineNumber" : 92,
    "startColumnNumber" : 25,
    "endLineNumber" : 92,
    "endColumnNumber" : 30
  }, {
    "charLength" : 5,
    "startLineNumber" : 93,
    "startColumnNumber" : 62,
    "endLineNumber" : 93,
    "endColumnNumber" : 67
  }, {
    "charLength" : 5,
    "startLineNumber" : 107,
    "startColumnNumber" : 15,
    "endLineNumber" : 107,
    "endColumnNumber" : 20
  }, {
    "charLength" : 5,
    "startLineNumber" : 110,
    "startColumnNumber" : 8,
    "endLineNumber" : 110,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 114,
    "startColumnNumber" : 26,
    "endLineNumber" : 114,
    "endColumnNumber" : 31
  }, {
    "charLength" : 5,
    "startLineNumber" : 137,
    "startColumnNumber" : 6,
    "endLineNumber" : 137,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 139,
    "startColumnNumber" : 8,
    "endLineNumber" : 139,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 141,
    "startColumnNumber" : 8,
    "endLineNumber" : 141,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 144,
    "startColumnNumber" : 4,
    "endLineNumber" : 144,
    "endColumnNumber" : 9
  }, {
    "charLength" : 5,
    "startLineNumber" : 145,
    "startColumnNumber" : 4,
    "endLineNumber" : 145,
    "endColumnNumber" : 9
  }, {
    "charLength" : 5,
    "startLineNumber" : 147,
    "startColumnNumber" : 6,
    "endLineNumber" : 147,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 147,
    "startColumnNumber" : 34,
    "endLineNumber" : 147,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 149,
    "startColumnNumber" : 6,
    "endLineNumber" : 149,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 149,
    "startColumnNumber" : 34,
    "endLineNumber" : 149,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 158,
    "startColumnNumber" : 23,
    "endLineNumber" : 158,
    "endColumnNumber" : 28
  }, {
    "charLength" : 5,
    "startLineNumber" : 159,
    "startColumnNumber" : 60,
    "endLineNumber" : 159,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 0
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 0
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 1
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 0
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 1
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 3
  } ]
}