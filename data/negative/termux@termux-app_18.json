{
  "id" : 18,
  "expression" : "displayName",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/filepicker/TermuxDocumentsProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "displayName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 234,
      "startColumnNumber" : 46,
      "endLineNumber" : 234,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 58
      },
      "nodeContext" : "row.add(Document.COLUMN_DISPLAY_NAME,displayName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 59
      },
      "nodeContext" : "row.add(Document.COLUMN_DISPLAY_NAME,displayName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 214,
        "startColumnNumber" : 37,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (docId == null) {\n    docId=getDocIdForFile(file);\n  }\n else {\n    file=getFileForDocId(docId);\n  }\n  int flags=0;\n  if (file.isDirectory()) {\n    if (file.isDirectory() && file.canWrite())     flags|=Document.FLAG_DIR_SUPPORTS_CREATE;\n  }\n else   if (file.canWrite()) {\n    flags|=Document.FLAG_SUPPORTS_WRITE | Document.FLAG_SUPPORTS_DELETE;\n  }\n  final String displayName=file.getName();\n  final String mimeType=getMimeType(file);\n  if (mimeType.startsWith(\"image/\"))   flags|=Document.FLAG_SUPPORTS_THUMBNAIL;\n  final MatrixCursor.RowBuilder row=result.newRow();\n  row.add(Document.COLUMN_DOCUMENT_ID,docId);\n  row.add(Document.COLUMN_DISPLAY_NAME,displayName);\n  row.add(Document.COLUMN_SIZE,file.length());\n  row.add(Document.COLUMN_MIME_TYPE,mimeType);\n  row.add(Document.COLUMN_LAST_MODIFIED,file.lastModified());\n  row.add(Document.COLUMN_FLAGS,flags);\n  row.add(Document.COLUMN_ICON,R.drawable.ic_launcher);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1503,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add a representation of a file to a cursor.\n * @param result the cursor to modify\n * @param docId  the document ID representing the desired file (may be null if given file)\n * @param file   the File object representing the desired file (may be null if given docID)\n */\nprivate void includeFile(MatrixCursor result,String docId,File file) throws FileNotFoundException {\n  if (docId == null) {\n    docId=getDocIdForFile(file);\n  }\n else {\n    file=getFileForDocId(docId);\n  }\n  int flags=0;\n  if (file.isDirectory()) {\n    if (file.isDirectory() && file.canWrite())     flags|=Document.FLAG_DIR_SUPPORTS_CREATE;\n  }\n else   if (file.canWrite()) {\n    flags|=Document.FLAG_SUPPORTS_WRITE | Document.FLAG_SUPPORTS_DELETE;\n  }\n  final String displayName=file.getName();\n  final String mimeType=getMimeType(file);\n  if (mimeType.startsWith(\"image/\"))   flags|=Document.FLAG_SUPPORTS_THUMBNAIL;\n  final MatrixCursor.RowBuilder row=result.newRow();\n  row.add(Document.COLUMN_DOCUMENT_ID,docId);\n  row.add(Document.COLUMN_DISPLAY_NAME,displayName);\n  row.add(Document.COLUMN_SIZE,file.length());\n  row.add(Document.COLUMN_MIME_TYPE,mimeType);\n  row.add(Document.COLUMN_LAST_MODIFIED,file.lastModified());\n  row.add(Document.COLUMN_FLAGS,flags);\n  row.add(Document.COLUMN_ICON,R.drawable.ic_launcher);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 59
      },
      "nodeContext" : "row.add(Document.COLUMN_DISPLAY_NAME,displayName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 234,
    "startColumnNumber" : 46,
    "endLineNumber" : 234,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}