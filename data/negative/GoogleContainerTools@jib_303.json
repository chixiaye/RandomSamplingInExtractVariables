{
  "id" : 303,
  "expression" : "BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "5d7588cafd9d3e1687d4e782524871bda727bbfd",
  "filePath" : "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BuildDockerTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 489,
      "startLineNumber" : 92,
      "startColumnNumber" : 8,
      "endLineNumber" : 100,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 40,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 91,
        "startColumnNumber" : 23,
        "endLineNumber" : 100,
        "endColumnNumber" : 20
      },
      "nodeContext" : "buildConfiguration=BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 42,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 21
      },
      "nodeContext" : "BuildConfiguration buildConfiguration=BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 45,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2433,
        "startLineNumber" : 67,
        "startColumnNumber" : 66,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!new DockerClient().isDockerInstalled()) {\n    throw new GradleException(HELPFUL_SUGGESTIONS.forDockerNotInstalled());\n  }\n  Preconditions.checkNotNull(jibExtension);\n  RegistryCredentials knownBaseRegistryCredentials=null;\n  Authorization fromAuthorization=jibExtension.getFrom().getImageAuthorization();\n  if (fromAuthorization != null) {\n    knownBaseRegistryCredentials=new RegistryCredentials(\"jib.from.auth\",fromAuthorization);\n  }\n  GradleBuildLogger gradleBuildLogger=new GradleBuildLogger(getLogger());\n  GradleProjectProperties gradleProjectProperties=GradleProjectProperties.getForProject(getProject(),gradleBuildLogger);\n  String mainClass=gradleProjectProperties.getMainClass(jibExtension);\n  ImageReference targetImage=Strings.isNullOrEmpty(jibExtension.getTargetImage()) ? ImageReference.of(null,getProject().getName(),getProject().getVersion().toString()) : ImageReference.parse(jibExtension.getTargetImage());\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build();\n  GradleProjectProperties.disableHttpLogging();\n  RegistryClient.setUserAgentSuffix(USER_AGENT_SUFFIX);\n  try {\n    BuildStepsRunner.forBuildToDockerDaemon(buildConfiguration,gradleProjectProperties.getSourceFilesConfiguration(),gradleProjectProperties.getCacheDirectory(),jibExtension.getUseOnlyProjectCache()).build(HELPFUL_SUGGESTIONS);\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new GradleException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TaskAction public void buildDocker() throws InvalidImageReferenceException {\n  if (!new DockerClient().isDockerInstalled()) {\n    throw new GradleException(HELPFUL_SUGGESTIONS.forDockerNotInstalled());\n  }\n  Preconditions.checkNotNull(jibExtension);\n  RegistryCredentials knownBaseRegistryCredentials=null;\n  Authorization fromAuthorization=jibExtension.getFrom().getImageAuthorization();\n  if (fromAuthorization != null) {\n    knownBaseRegistryCredentials=new RegistryCredentials(\"jib.from.auth\",fromAuthorization);\n  }\n  GradleBuildLogger gradleBuildLogger=new GradleBuildLogger(getLogger());\n  GradleProjectProperties gradleProjectProperties=GradleProjectProperties.getForProject(getProject(),gradleBuildLogger);\n  String mainClass=gradleProjectProperties.getMainClass(jibExtension);\n  ImageReference targetImage=Strings.isNullOrEmpty(jibExtension.getTargetImage()) ? ImageReference.of(null,getProject().getName(),getProject().getVersion().toString()) : ImageReference.parse(jibExtension.getTargetImage());\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build();\n  GradleProjectProperties.disableHttpLogging();\n  RegistryClient.setUserAgentSuffix(USER_AGENT_SUFFIX);\n  try {\n    BuildStepsRunner.forBuildToDockerDaemon(buildConfiguration,gradleProjectProperties.getSourceFilesConfiguration(),gradleProjectProperties.getCacheDirectory(),jibExtension.getUseOnlyProjectCache()).build(HELPFUL_SUGGESTIONS);\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new GradleException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 91,
        "startColumnNumber" : 23,
        "endLineNumber" : 100,
        "endColumnNumber" : 20
      },
      "nodeContext" : "buildConfiguration=BuildConfiguration.builder(gradleBuildLogger).setBaseImage(ImageReference.parse(jibExtension.getBaseImage())).setTargetImage(targetImage).setBaseImageCredentialHelperName(jibExtension.getFrom().getCredHelper()).setKnownBaseRegistryCredentials(knownBaseRegistryCredentials).setMainClass(mainClass).setJavaArguments(jibExtension.getArgs()).setJvmFlags(jibExtension.getJvmFlags()).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 42,
      "astHeight" : 12
    },
    "tokenLength" : 25,
    "type" : "com.google.cloud.tools.jib.builder.BuildConfiguration"
  } ],
  "positionList" : [ {
    "charLength" : 489,
    "startLineNumber" : 92,
    "startColumnNumber" : 8,
    "endLineNumber" : 100,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}