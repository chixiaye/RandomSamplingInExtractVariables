{
  "id" : 249,
  "expression" : "MessageBuilder.withPayload(payload)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jms/src/test/java/org/springframework/jms/support/converter/MessagingMessageConverterTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MessageBuilder.withPayload(payload)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 60,
      "startColumnNumber" : 27,
      "endLineNumber" : 60,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 60,
        "startColumnNumber" : 27,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "MessageBuilder.withPayload(payload).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 80
      },
      "nodeContext" : "this.converter.toMessage(MessageBuilder.withPayload(payload).build(),session)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 81
      },
      "nodeContext" : "this.converter.toMessage(MessageBuilder.withPayload(payload).build(),session);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 54,
        "startColumnNumber" : 45,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Session session=mock(Session.class);\n  Serializable payload=mock(Serializable.class);\n  ObjectMessage jmsMessage=mock(ObjectMessage.class);\n  given(session.createObjectMessage(payload)).willReturn(jmsMessage);\n  this.converter.toMessage(MessageBuilder.withPayload(payload).build(),session);\n  verify(session).createObjectMessage(payload);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void simpleObject() throws Exception {\n  Session session=mock(Session.class);\n  Serializable payload=mock(Serializable.class);\n  ObjectMessage jmsMessage=mock(ObjectMessage.class);\n  given(session.createObjectMessage(payload)).willReturn(jmsMessage);\n  this.converter.toMessage(MessageBuilder.withPayload(payload).build(),session);\n  verify(session).createObjectMessage(payload);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 81
      },
      "nodeContext" : "this.converter.toMessage(MessageBuilder.withPayload(payload).build(),session);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.springframework.messaging.support.MessageBuilder<java.io.Serializable>"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 60,
    "startColumnNumber" : 27,
    "endLineNumber" : 60,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}