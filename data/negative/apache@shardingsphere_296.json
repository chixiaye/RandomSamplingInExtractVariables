{
  "id" : 296,
  "expression" : "actual.getSchema()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rql/impl/rule/ShowShardingTableNodesStatementAssert.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actual.getSchema()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 48,
      "startColumnNumber" : 77,
      "endLineNumber" : 48,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 48,
        "startColumnNumber" : 77,
        "endLineNumber" : 48,
        "endColumnNumber" : 107
      },
      "nodeContext" : "actual.getSchema().isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 47,
        "startColumnNumber" : 42,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n  assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n  SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getSchema()) {\n  assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n  assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n  SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n}\n else {\n  assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 46,
        "startColumnNumber" : 88,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert show sharding table nodes statement is correct with expected parser result.\n * @param assertContext assert context\n * @param actual actual show sharding table nodes statement\n * @param expected expected show sharding table nodes statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final ShowShardingTableNodesStatement actual,final ShowShardingTableNodesStatementTestCase expected){\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Optional<org.apache.shardingsphere.sql.parser.sql.common.segment.generic.SchemaSegment>"
  }, {
    "nodeContext" : "actual.getSchema()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 50,
      "startColumnNumber" : 49,
      "endLineNumber" : 50,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 50,
        "startColumnNumber" : 49,
        "endLineNumber" : 50,
        "endColumnNumber" : 73
      },
      "nodeContext" : "actual.getSchema().get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 96
      },
      "nodeContext" : "SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 97
      },
      "nodeContext" : "SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 47,
        "startColumnNumber" : 42,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n  assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n  SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getSchema()) {\n  assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n  assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n  SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n}\n else {\n  assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 46,
        "startColumnNumber" : 88,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert show sharding table nodes statement is correct with expected parser result.\n * @param assertContext assert context\n * @param actual actual show sharding table nodes statement\n * @param expected expected show sharding table nodes statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final ShowShardingTableNodesStatement actual,final ShowShardingTableNodesStatementTestCase expected){\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 97
      },
      "nodeContext" : "SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Optional<org.apache.shardingsphere.sql.parser.sql.common.segment.generic.SchemaSegment>"
  }, {
    "nodeContext" : "actual.getSchema()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 52,
      "startColumnNumber" : 82,
      "endLineNumber" : 52,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 52,
        "startColumnNumber" : 82,
        "endLineNumber" : 52,
        "endColumnNumber" : 112
      },
      "nodeContext" : "actual.getSchema().isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 113
      },
      "nodeContext" : "assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getSchema()) {\n  assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n  assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n  SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n}\n else {\n  assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 46,
        "startColumnNumber" : 88,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert show sharding table nodes statement is correct with expected parser result.\n * @param assertContext assert context\n * @param actual actual show sharding table nodes statement\n * @param expected expected show sharding table nodes statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final ShowShardingTableNodesStatement actual,final ShowShardingTableNodesStatementTestCase expected){\n  if (null != expected.getSchema()) {\n    assertTrue(assertContext.getText(\"Actual schema should exist.\"),actual.getSchema().isPresent());\n    assertThat(assertContext.getText(\"Table assertion error:\"),actual.getTableName(),is(expected.getTable()));\n    SchemaAssert.assertIs(assertContext,actual.getSchema().get(),expected.getSchema());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertFalse(assertContext.getText(\"Actual schema should not exist.\"),actual.getSchema().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Optional<org.apache.shardingsphere.sql.parser.sql.common.segment.generic.SchemaSegment>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 48,
    "startColumnNumber" : 77,
    "endLineNumber" : 48,
    "endColumnNumber" : 95
  }, {
    "charLength" : 18,
    "startLineNumber" : 50,
    "startColumnNumber" : 49,
    "endLineNumber" : 50,
    "endColumnNumber" : 67
  }, {
    "charLength" : 18,
    "startLineNumber" : 52,
    "startColumnNumber" : 82,
    "endLineNumber" : 52,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}