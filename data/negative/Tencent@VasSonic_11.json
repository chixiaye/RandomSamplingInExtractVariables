{
  "id" : 11,
  "expression" : "sessionIdBuilder.toString()",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicRuntime.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sessionIdBuilder.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 99,
      "startColumnNumber" : 78,
      "endLineNumber" : 99,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 99,
        "startColumnNumber" : 60,
        "endLineNumber" : 99,
        "endColumnNumber" : 106
      },
      "nodeContext" : "SonicUtils.getMD5(sessionIdBuilder.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 106
      },
      "nodeContext" : "getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 106
      },
      "nodeContext" : "sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 107
      },
      "nodeContext" : "sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isAccountRelated) {\n  sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n else {\n  sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1965,
        "startLineNumber" : 69,
        "startColumnNumber" : 29,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSonicUrl(url)) {\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2023,
        "startLineNumber" : 68,
        "startColumnNumber" : 70,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2321,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Make a unique session id for the url, it can be account related.\n * @param url Url which need to make session id\n * @param isAccountRelated Is account related or not\n * @return A unique session id\n */\npublic String makeSessionId(String url,boolean isAccountRelated){\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 107
      },
      "nodeContext" : "sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "sessionIdBuilder.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 101,
      "startColumnNumber" : 46,
      "endLineNumber" : 101,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 74
      },
      "nodeContext" : "SonicUtils.getMD5(sessionIdBuilder.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 74
      },
      "nodeContext" : "sessionId=SonicUtils.getMD5(sessionIdBuilder.toString())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 75
      },
      "nodeContext" : "sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 100,
        "startColumnNumber" : 19,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isAccountRelated) {\n  sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n else {\n  sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1965,
        "startLineNumber" : 69,
        "startColumnNumber" : 29,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1986,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isSonicUrl(url)) {\n  StringBuilder sessionIdBuilder=new StringBuilder();\n  try {\n    Uri uri=Uri.parse(url);\n    sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n    if (uri.isHierarchical()) {\n      String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n      if (!TextUtils.isEmpty(sonicRemainParams)) {\n        Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n      }\n      TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n      if (!remainParamTreeSet.isEmpty()) {\n        parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n      }\n      for (      String parameterName : parameterNamesTreeSet) {\n        if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n          sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n    sessionIdBuilder.setLength(0);\n    sessionIdBuilder.append(url);\n  }\n  String sessionId;\n  if (isAccountRelated) {\n    sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n else {\n    sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n  }\n  return sessionId;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2023,
        "startLineNumber" : 68,
        "startColumnNumber" : 70,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2321,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Make a unique session id for the url, it can be account related.\n * @param url Url which need to make session id\n * @param isAccountRelated Is account related or not\n * @return A unique session id\n */\npublic String makeSessionId(String url,boolean isAccountRelated){\n  if (isSonicUrl(url)) {\n    StringBuilder sessionIdBuilder=new StringBuilder();\n    try {\n      Uri uri=Uri.parse(url);\n      sessionIdBuilder.append(uri.getAuthority()).append(uri.getPath());\n      if (uri.isHierarchical()) {\n        String sonicRemainParams=uri.getQueryParameter(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        TreeSet<String> remainParamTreeSet=new TreeSet<String>();\n        if (!TextUtils.isEmpty(sonicRemainParams)) {\n          Collections.addAll(remainParamTreeSet,sonicRemainParams.split(SonicConstants.SONIC_REMAIN_PARAMETER_SPLIT_CHAR));\n        }\n        TreeSet<String> parameterNamesTreeSet=new TreeSet<String>(getQueryParameterNames(uri));\n        if (!remainParamTreeSet.isEmpty()) {\n          parameterNamesTreeSet.remove(SonicConstants.SONIC_REMAIN_PARAMETER_NAMES);\n        }\n        for (        String parameterName : parameterNamesTreeSet) {\n          if (!TextUtils.isEmpty(parameterName) && (parameterName.startsWith(SonicConstants.SONIC_PARAMETER_NAME_PREFIX) || remainParamTreeSet.contains(parameterName))) {\n            sessionIdBuilder.append(parameterName).append(uri.getQueryParameter(parameterName));\n          }\n        }\n      }\n    }\n catch (    Throwable e) {\n      log(TAG,Log.ERROR,\"makeSessionId error:\" + e.getMessage() + \", url=\"+ url);\n      sessionIdBuilder.setLength(0);\n      sessionIdBuilder.append(url);\n    }\n    String sessionId;\n    if (isAccountRelated) {\n      sessionId=getCurrentUserAccount() + \"_\" + SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n else {\n      sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n    }\n    return sessionId;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 75
      },
      "nodeContext" : "sessionId=SonicUtils.getMD5(sessionIdBuilder.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 99,
    "startColumnNumber" : 78,
    "endLineNumber" : 99,
    "endColumnNumber" : 105
  }, {
    "charLength" : 27,
    "startLineNumber" : 101,
    "startColumnNumber" : 46,
    "endLineNumber" : 101,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}