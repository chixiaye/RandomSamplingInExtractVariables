{
  "id" : 259,
  "expression" : "IllegalStateException.class",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/raft/src/test/java/org/apache/kafka/raft/QuorumStateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "IllegalStateException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 260,
      "startColumnNumber" : 21,
      "endLineNumber" : 260,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 260,
        "startColumnNumber" : 8,
        "endLineNumber" : 261,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertThrows(IllegalStateException.class,() -> state.transitionToResigned(Collections.singletonList(localId)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 260,
        "startColumnNumber" : 8,
        "endLineNumber" : 261,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThrows(IllegalStateException.class,() -> state.transitionToResigned(Collections.singletonList(localId)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 249,
        "startColumnNumber" : 61,
        "endLineNumber" : 263,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node1=1;\n  int node2=2;\n  Set<Integer> voters=Utils.mkSet(localId,node1,node2);\n  assertNull(store.readElectionState());\n  QuorumState state=initializeEmptyState(voters);\n  state.transitionToCandidate();\n  assertTrue(state.isCandidate());\n  assertEquals(1,state.epoch());\n  assertThrows(IllegalStateException.class,() -> state.transitionToResigned(Collections.singletonList(localId)));\n  assertTrue(state.isCandidate());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 263,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCandidateToResigned() throws IOException {\n  int node1=1;\n  int node2=2;\n  Set<Integer> voters=Utils.mkSet(localId,node1,node2);\n  assertNull(store.readElectionState());\n  QuorumState state=initializeEmptyState(voters);\n  state.transitionToCandidate();\n  assertTrue(state.isCandidate());\n  assertEquals(1,state.epoch());\n  assertThrows(IllegalStateException.class,() -> state.transitionToResigned(Collections.singletonList(localId)));\n  assertTrue(state.isCandidate());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 260,
        "startColumnNumber" : 8,
        "endLineNumber" : 261,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertThrows(IllegalStateException.class,() -> state.transitionToResigned(Collections.singletonList(localId)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.IllegalStateException>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 260,
    "startColumnNumber" : 21,
    "endLineNumber" : 260,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}