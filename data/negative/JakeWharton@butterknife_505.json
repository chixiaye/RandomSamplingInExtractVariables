{
  "id" : 505,
  "expression" : "type",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "244a9e7f73df20c80faefd0bb78d81e9c6ed642f",
  "filePath" : "butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "type",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 231,
      "startColumnNumber" : 48,
      "endLineNumber" : 231,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 231,
        "startColumnNumber" : 26,
        "endLineNumber" : 231,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ViewBinding(name,type,required)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 231,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 63
      },
      "nodeContext" : "binding=new ViewBinding(name,type,required)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ViewBinding binding=new ViewBinding(name,type,required);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1677,
        "startLineNumber" : 194,
        "startColumnNumber" : 37,
        "endLineNumber" : 236,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean hasError=false;\n  TypeElement enclosingElement=(TypeElement)element.getEnclosingElement();\n  TypeMirror elementType=element.asType();\n  if (elementType instanceof TypeVariable) {\n    TypeVariable typeVariable=(TypeVariable)elementType;\n    elementType=typeVariable.getUpperBound();\n  }\n  if (!isSubtypeOfType(elementType,VIEW_TYPE)) {\n    error(element,\"@InjectView fields must extend from View. (%s.%s)\",enclosingElement.getQualifiedName(),element.getSimpleName());\n    hasError=true;\n  }\n  hasError|=isValidForGeneratedCode(InjectView.class,\"fields\",element);\n  if (element.getAnnotation(InjectViews.class) != null) {\n    error(element,\"Only one of @InjectView and @InjectViews is allowed. (%s.%s)\",enclosingElement.getQualifiedName(),element.getSimpleName());\n    hasError=true;\n  }\n  if (hasError) {\n    return;\n  }\n  String name=element.getSimpleName().toString();\n  int id=element.getAnnotation(InjectView.class).value();\n  String type=elementType.toString();\n  boolean required=element.getAnnotation(Optional.class) == null;\n  ViewInjector viewInjector=getOrCreateTargetClass(targetClassMap,enclosingElement);\n  ViewBinding binding=new ViewBinding(name,type,required);\n  viewInjector.addView(id,binding);\n  erasedTargetNames.add(enclosingElement.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1807,
        "startLineNumber" : 193,
        "startColumnNumber" : 2,
        "endLineNumber" : 236,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void parseInjectView(Element element,Map<TypeElement,ViewInjector> targetClassMap,Set<String> erasedTargetNames){\n  boolean hasError=false;\n  TypeElement enclosingElement=(TypeElement)element.getEnclosingElement();\n  TypeMirror elementType=element.asType();\n  if (elementType instanceof TypeVariable) {\n    TypeVariable typeVariable=(TypeVariable)elementType;\n    elementType=typeVariable.getUpperBound();\n  }\n  if (!isSubtypeOfType(elementType,VIEW_TYPE)) {\n    error(element,\"@InjectView fields must extend from View. (%s.%s)\",enclosingElement.getQualifiedName(),element.getSimpleName());\n    hasError=true;\n  }\n  hasError|=isValidForGeneratedCode(InjectView.class,\"fields\",element);\n  if (element.getAnnotation(InjectViews.class) != null) {\n    error(element,\"Only one of @InjectView and @InjectViews is allowed. (%s.%s)\",enclosingElement.getQualifiedName(),element.getSimpleName());\n    hasError=true;\n  }\n  if (hasError) {\n    return;\n  }\n  String name=element.getSimpleName().toString();\n  int id=element.getAnnotation(InjectView.class).value();\n  String type=elementType.toString();\n  boolean required=element.getAnnotation(Optional.class) == null;\n  ViewInjector viewInjector=getOrCreateTargetClass(targetClassMap,enclosingElement);\n  ViewBinding binding=new ViewBinding(name,type,required);\n  viewInjector.addView(id,binding);\n  erasedTargetNames.add(enclosingElement.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ViewBinding binding=new ViewBinding(name,type,required);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 231,
    "startColumnNumber" : 48,
    "endLineNumber" : 231,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}