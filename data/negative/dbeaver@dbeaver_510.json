{
  "id" : 510,
  "expression" : "!editor.isReadOnly()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.erd.ui/src/org/jkiss/dbeaver/erd/ui/action/ERDHandlerPaste.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!editor.isReadOnly()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 69,
      "startColumnNumber" : 34,
      "endLineNumber" : 69,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 54
      },
      "nodeContext" : "editor != null && !editor.isReadOnly()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (editor != null && !editor.isReadOnly()) {\n  final Collection<DBPNamedObject> objects=DatabaseObjectTransfer.getInstance().getObject();\n  if (!CommonUtils.isEmpty(objects)) {\n    try {\n      UIUtils.runInProgressService(monitor -> {\n        final List<ERDEntity> erdEntities=DiagramObjectCollector.generateEntityList(monitor,editor.getDiagram(),objects,new DiagramCollectSettingsDefault(),true);\n        if (!CommonUtils.isEmpty(erdEntities)) {\n          UIUtils.syncExec(() -> {\n            Command command=editor.getDiagramPart().createEntityAddCommand(erdEntities,new Point(10,10));\n            editor.getCommandStack().execute(command);\n          }\n);\n        }\n      }\n);\n    }\n catch (    InvocationTargetException e) {\n      DBWorkbench.getPlatformUI().showError(\"Entity collect error\",\"Error during diagram entities collect\",e);\n    }\ncatch (    InterruptedException e) {\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 67,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ERDEditorPart editor=ERDEditorAdapter.getEditor(control);\n  if (editor != null && !editor.isReadOnly()) {\n    final Collection<DBPNamedObject> objects=DatabaseObjectTransfer.getInstance().getObject();\n    if (!CommonUtils.isEmpty(objects)) {\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          final List<ERDEntity> erdEntities=DiagramObjectCollector.generateEntityList(monitor,editor.getDiagram(),objects,new DiagramCollectSettingsDefault(),true);\n          if (!CommonUtils.isEmpty(erdEntities)) {\n            UIUtils.syncExec(() -> {\n              Command command=editor.getDiagramPart().createEntityAddCommand(erdEntities,new Point(10,10));\n              editor.getCommandStack().execute(command);\n            }\n);\n          }\n        }\n);\n      }\n catch (      InvocationTargetException e) {\n        DBWorkbench.getPlatformUI().showError(\"Entity collect error\",\"Error during diagram entities collect\",e);\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (control != null) {\n  ERDEditorPart editor=ERDEditorAdapter.getEditor(control);\n  if (editor != null && !editor.isReadOnly()) {\n    final Collection<DBPNamedObject> objects=DatabaseObjectTransfer.getInstance().getObject();\n    if (!CommonUtils.isEmpty(objects)) {\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          final List<ERDEntity> erdEntities=DiagramObjectCollector.generateEntityList(monitor,editor.getDiagram(),objects,new DiagramCollectSettingsDefault(),true);\n          if (!CommonUtils.isEmpty(erdEntities)) {\n            UIUtils.syncExec(() -> {\n              Command command=editor.getDiagramPart().createEntityAddCommand(erdEntities,new Point(10,10));\n              editor.getCommandStack().execute(command);\n            }\n);\n          }\n        }\n);\n      }\n catch (      InvocationTargetException e) {\n        DBWorkbench.getPlatformUI().showError(\"Entity collect error\",\"Error during diagram entities collect\",e);\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1642,
        "startLineNumber" : 65,
        "startColumnNumber" : 74,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Control control=(Control)HandlerUtil.getVariable(event,ISources.ACTIVE_FOCUS_CONTROL_NAME);\n  if (control != null) {\n    ERDEditorPart editor=ERDEditorAdapter.getEditor(control);\n    if (editor != null && !editor.isReadOnly()) {\n      final Collection<DBPNamedObject> objects=DatabaseObjectTransfer.getInstance().getObject();\n      if (!CommonUtils.isEmpty(objects)) {\n        try {\n          UIUtils.runInProgressService(monitor -> {\n            final List<ERDEntity> erdEntities=DiagramObjectCollector.generateEntityList(monitor,editor.getDiagram(),objects,new DiagramCollectSettingsDefault(),true);\n            if (!CommonUtils.isEmpty(erdEntities)) {\n              UIUtils.syncExec(() -> {\n                Command command=editor.getDiagramPart().createEntityAddCommand(erdEntities,new Point(10,10));\n                editor.getCommandStack().execute(command);\n              }\n);\n            }\n          }\n);\n        }\n catch (        InvocationTargetException e) {\n          DBWorkbench.getPlatformUI().showError(\"Entity collect error\",\"Error during diagram entities collect\",e);\n        }\ncatch (        InterruptedException e) {\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1726,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object execute(ExecutionEvent event) throws ExecutionException {\n  Control control=(Control)HandlerUtil.getVariable(event,ISources.ACTIVE_FOCUS_CONTROL_NAME);\n  if (control != null) {\n    ERDEditorPart editor=ERDEditorAdapter.getEditor(control);\n    if (editor != null && !editor.isReadOnly()) {\n      final Collection<DBPNamedObject> objects=DatabaseObjectTransfer.getInstance().getObject();\n      if (!CommonUtils.isEmpty(objects)) {\n        try {\n          UIUtils.runInProgressService(monitor -> {\n            final List<ERDEntity> erdEntities=DiagramObjectCollector.generateEntityList(monitor,editor.getDiagram(),objects,new DiagramCollectSettingsDefault(),true);\n            if (!CommonUtils.isEmpty(erdEntities)) {\n              UIUtils.syncExec(() -> {\n                Command command=editor.getDiagramPart().createEntityAddCommand(erdEntities,new Point(10,10));\n                editor.getCommandStack().execute(command);\n              }\n);\n            }\n          }\n);\n        }\n catch (        InvocationTargetException e) {\n          DBWorkbench.getPlatformUI().showError(\"Entity collect error\",\"Error during diagram entities collect\",e);\n        }\ncatch (        InterruptedException e) {\n        }\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 26
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 54
      },
      "nodeContext" : "editor != null && !editor.isReadOnly()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 69,
    "startColumnNumber" : 34,
    "endLineNumber" : 69,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}