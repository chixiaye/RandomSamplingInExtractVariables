{
  "id" : 60,
  "expression" : "mEditTextRatioX",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/sample/src/main/java/com/yalantis/ucrop/sample/SampleActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mEditTextRatioX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 159,
      "startColumnNumber" : 8,
      "endLineNumber" : 159,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 71
      },
      "nodeContext" : "mEditTextRatioX.addTextChangedListener(mAspectRatioTextWatcher)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mEditTextRatioX.addTextChangedListener(mAspectRatioTextWatcher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3151,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  findViewById(R.id.button_crop).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View v){\n      pickFromGallery();\n    }\n  }\n);\n  findViewById(R.id.button_random_image).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View v){\n      Random random=new Random();\n      int minSizePixels=800;\n      int maxSizePixels=2400;\n      Uri uri=Uri.parse(String.format(Locale.getDefault(),\"https://unsplash.it/%d/%d/?random\",minSizePixels + random.nextInt(maxSizePixels - minSizePixels),minSizePixels + random.nextInt(maxSizePixels - minSizePixels)));\n      startCrop(uri);\n    }\n  }\n);\n  settingsView=findViewById(R.id.settings);\n  mRadioGroupAspectRatio=findViewById(R.id.radio_group_aspect_ratio);\n  mRadioGroupCompressionSettings=findViewById(R.id.radio_group_compression_settings);\n  mCheckBoxMaxSize=findViewById(R.id.checkbox_max_size);\n  mEditTextRatioX=findViewById(R.id.edit_text_ratio_x);\n  mEditTextRatioY=findViewById(R.id.edit_text_ratio_y);\n  mEditTextMaxWidth=findViewById(R.id.edit_text_max_width);\n  mEditTextMaxHeight=findViewById(R.id.edit_text_max_height);\n  mSeekBarQuality=findViewById(R.id.seekbar_quality);\n  mTextViewQuality=findViewById(R.id.text_view_quality);\n  mCheckBoxHideBottomControls=findViewById(R.id.checkbox_hide_bottom_controls);\n  mCheckBoxFreeStyleCrop=findViewById(R.id.checkbox_freestyle_crop);\n  mRadioGroupAspectRatio.check(R.id.radio_dynamic);\n  mEditTextRatioX.addTextChangedListener(mAspectRatioTextWatcher);\n  mEditTextRatioY.addTextChangedListener(mAspectRatioTextWatcher);\n  mRadioGroupCompressionSettings.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      mSeekBarQuality.setEnabled(checkedId == R.id.radio_jpeg);\n    }\n  }\n);\n  mRadioGroupCompressionSettings.check(R.id.radio_jpeg);\n  mSeekBarQuality.setProgress(UCropActivity.DEFAULT_COMPRESS_QUALITY);\n  mTextViewQuality.setText(String.format(getString(R.string.format_quality_d),mSeekBarQuality.getProgress()));\n  mSeekBarQuality.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){\n    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){\n      mTextViewQuality.setText(String.format(getString(R.string.format_quality_d),progress));\n    }\n    @Override public void onStartTrackingTouch(    SeekBar seekBar){\n    }\n    @Override public void onStopTrackingTouch(    SeekBar seekBar){\n    }\n  }\n);\n  mEditTextMaxHeight.addTextChangedListener(mMaxSizeTextWatcher);\n  mEditTextMaxWidth.addTextChangedListener(mMaxSizeTextWatcher);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 392,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ConstantConditions\") private void setupUI(){\n  findViewById(R.id.button_crop).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View v){\n      pickFromGallery();\n    }\n  }\n);\n  findViewById(R.id.button_random_image).setOnClickListener(new View.OnClickListener(){\n    @Override public void onClick(    View v){\n      Random random=new Random();\n      int minSizePixels=800;\n      int maxSizePixels=2400;\n      Uri uri=Uri.parse(String.format(Locale.getDefault(),\"https://unsplash.it/%d/%d/?random\",minSizePixels + random.nextInt(maxSizePixels - minSizePixels),minSizePixels + random.nextInt(maxSizePixels - minSizePixels)));\n      startCrop(uri);\n    }\n  }\n);\n  settingsView=findViewById(R.id.settings);\n  mRadioGroupAspectRatio=findViewById(R.id.radio_group_aspect_ratio);\n  mRadioGroupCompressionSettings=findViewById(R.id.radio_group_compression_settings);\n  mCheckBoxMaxSize=findViewById(R.id.checkbox_max_size);\n  mEditTextRatioX=findViewById(R.id.edit_text_ratio_x);\n  mEditTextRatioY=findViewById(R.id.edit_text_ratio_y);\n  mEditTextMaxWidth=findViewById(R.id.edit_text_max_width);\n  mEditTextMaxHeight=findViewById(R.id.edit_text_max_height);\n  mSeekBarQuality=findViewById(R.id.seekbar_quality);\n  mTextViewQuality=findViewById(R.id.text_view_quality);\n  mCheckBoxHideBottomControls=findViewById(R.id.checkbox_hide_bottom_controls);\n  mCheckBoxFreeStyleCrop=findViewById(R.id.checkbox_freestyle_crop);\n  mRadioGroupAspectRatio.check(R.id.radio_dynamic);\n  mEditTextRatioX.addTextChangedListener(mAspectRatioTextWatcher);\n  mEditTextRatioY.addTextChangedListener(mAspectRatioTextWatcher);\n  mRadioGroupCompressionSettings.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      mSeekBarQuality.setEnabled(checkedId == R.id.radio_jpeg);\n    }\n  }\n);\n  mRadioGroupCompressionSettings.check(R.id.radio_jpeg);\n  mSeekBarQuality.setProgress(UCropActivity.DEFAULT_COMPRESS_QUALITY);\n  mTextViewQuality.setText(String.format(getString(R.string.format_quality_d),mSeekBarQuality.getProgress()));\n  mSeekBarQuality.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener(){\n    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){\n      mTextViewQuality.setText(String.format(getString(R.string.format_quality_d),progress));\n    }\n    @Override public void onStartTrackingTouch(    SeekBar seekBar){\n    }\n    @Override public void onStopTrackingTouch(    SeekBar seekBar){\n    }\n  }\n);\n  mEditTextMaxHeight.addTextChangedListener(mMaxSizeTextWatcher);\n  mEditTextMaxWidth.addTextChangedListener(mMaxSizeTextWatcher);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mEditTextRatioX.addTextChangedListener(mAspectRatioTextWatcher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.yalantis.ucrop.sample.EditText"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 159,
    "startColumnNumber" : 8,
    "endLineNumber" : 159,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}