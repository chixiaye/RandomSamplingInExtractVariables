{
  "id" : 214,
  "expression" : "value",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/rule-engine/rule-engine-components/src/test/java/org/thingsboard/rule/engine/metadata/TbGetCustomerAttributeNodeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 128,
      "startColumnNumber" : 40,
      "endLineNumber" : 128,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 128,
        "startColumnNumber" : 40,
        "endLineNumber" : 128,
        "endColumnNumber" : 58
      },
      "nodeContext" : "value.getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(\"something wrong\",value.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(\"something wrong\",value.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 108,
        "startColumnNumber" : 52,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserId userId=new UserId(Uuids.timeBased());\n  CustomerId customerId=new CustomerId(Uuids.timeBased());\n  User user=new User();\n  user.setCustomerId(customerId);\n  msg=TbMsg.newMsg(\"USER\",userId,new TbMsgMetaData(),TbMsgDataType.JSON,\"{}\",ruleChainId,ruleNodeId);\n  when(ctx.getUserService()).thenReturn(userService);\n  when(userService.findUserByIdAsync(any(),eq(userId))).thenReturn(Futures.immediateFuture(user));\n  when(ctx.getAttributesService()).thenReturn(attributesService);\n  when(attributesService.find(any(),eq(customerId),eq(SERVER_SCOPE),eq(Collections.singleton(\"temperature\")))).thenThrow(new IllegalStateException(\"something wrong\"));\n  node.onMsg(ctx,msg);\n  final ArgumentCaptor<Throwable> captor=ArgumentCaptor.forClass(Throwable.class);\n  verify(ctx).tellFailure(same(msg),captor.capture());\n  Throwable value=captor.getValue();\n  assertEquals(\"something wrong\",value.getMessage());\n  assertTrue(msg.getMetaData().getData().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void errorThrownIfCannotLoadAttributes(){\n  UserId userId=new UserId(Uuids.timeBased());\n  CustomerId customerId=new CustomerId(Uuids.timeBased());\n  User user=new User();\n  user.setCustomerId(customerId);\n  msg=TbMsg.newMsg(\"USER\",userId,new TbMsgMetaData(),TbMsgDataType.JSON,\"{}\",ruleChainId,ruleNodeId);\n  when(ctx.getUserService()).thenReturn(userService);\n  when(userService.findUserByIdAsync(any(),eq(userId))).thenReturn(Futures.immediateFuture(user));\n  when(ctx.getAttributesService()).thenReturn(attributesService);\n  when(attributesService.find(any(),eq(customerId),eq(SERVER_SCOPE),eq(Collections.singleton(\"temperature\")))).thenThrow(new IllegalStateException(\"something wrong\"));\n  node.onMsg(ctx,msg);\n  final ArgumentCaptor<Throwable> captor=ArgumentCaptor.forClass(Throwable.class);\n  verify(ctx).tellFailure(same(msg),captor.capture());\n  Throwable value=captor.getValue();\n  assertEquals(\"something wrong\",value.getMessage());\n  assertTrue(msg.getMetaData().getData().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(\"something wrong\",value.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 128,
    "startColumnNumber" : 40,
    "endLineNumber" : 128,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}