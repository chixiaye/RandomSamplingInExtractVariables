{
  "id" : 416,
  "expression" : "0.3",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "ed93fa45d3518532cc0db2b857a2413a81430212",
  "filePath" : "core/src/mindustry/game/Waves.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0.3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 327,
      "startColumnNumber" : 31,
      "endLineNumber" : 327,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 327,
        "startColumnNumber" : 19,
        "endLineNumber" : 327,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rand.chance(0.3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 327,
        "startColumnNumber" : 16,
        "endLineNumber" : 329,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (rand.chance(0.3)) {\n  curSpecies=Structs.random(species);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 286,
        "startColumnNumber" : 40,
        "endLineNumber" : 330,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int f=i;\n  int next=rand.random(8,16) + curTier * 4;\n  float shieldAmount=Math.max((i - shieldStart) * shieldsPerWave,0);\n  int space=start == 0 ? 1 : rand.random(1,2);\n  int ctier=curTier;\n  out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n      unitAmount=f == start ? 1 : 6 / (int)scaling[ctier];\n      begin=f;\n      end=f + next >= cap ? never : f + next;\n      max=14;\n      unitScaling=(difficulty < 0.4f ? rand.random(2f,4f) : rand.random(1f,3f)) * scaling[ctier];\n      shields=shieldAmount;\n      shieldScaling=shieldsPerWave;\n      spacing=space;\n    }\n  }\n);\n  out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n      unitAmount=3 / (int)scaling[ctier];\n      begin=f + next - 1;\n      end=f + next + rand.random(6,10);\n      max=6;\n      unitScaling=rand.random(1f,2f);\n      spacing=rand.random(2,4);\n      shields=shieldAmount / 2f;\n      shieldScaling=shieldsPerWave;\n    }\n  }\n);\n  i+=next + 1;\n  if (curTier < 3 || rand.chance(0.05)) {\n    curTier++;\n  }\n  curTier=Math.min(curTier,3);\n  if (rand.chance(0.3)) {\n    curSpecies=Structs.random(species);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1873,
        "startLineNumber" : 286,
        "startColumnNumber" : 12,
        "endLineNumber" : 330,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=start; i < cap; ) {\n  int f=i;\n  int next=rand.random(8,16) + curTier * 4;\n  float shieldAmount=Math.max((i - shieldStart) * shieldsPerWave,0);\n  int space=start == 0 ? 1 : rand.random(1,2);\n  int ctier=curTier;\n  out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n      unitAmount=f == start ? 1 : 6 / (int)scaling[ctier];\n      begin=f;\n      end=f + next >= cap ? never : f + next;\n      max=14;\n      unitScaling=(difficulty < 0.4f ? rand.random(2f,4f) : rand.random(1f,3f)) * scaling[ctier];\n      shields=shieldAmount;\n      shieldScaling=shieldsPerWave;\n      spacing=space;\n    }\n  }\n);\n  out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n      unitAmount=3 / (int)scaling[ctier];\n      begin=f + next - 1;\n      end=f + next + rand.random(6,10);\n      max=6;\n      unitScaling=rand.random(1f,2f);\n      spacing=rand.random(2,4);\n      shields=shieldAmount / 2f;\n      shieldScaling=shieldsPerWave;\n    }\n  }\n);\n  i+=next + 1;\n  if (curTier < 3 || rand.chance(0.05)) {\n    curTier++;\n  }\n  curTier=Math.min(curTier,3);\n  if (rand.chance(0.3)) {\n    curSpecies=Structs.random(species);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 272,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2016,
        "startLineNumber" : 281,
        "startColumnNumber" : 42,
        "endLineNumber" : 331,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  UnitType[] curSpecies=Structs.random(species);\n  int curTier=0;\n  for (int i=start; i < cap; ) {\n    int f=i;\n    int next=rand.random(8,16) + curTier * 4;\n    float shieldAmount=Math.max((i - shieldStart) * shieldsPerWave,0);\n    int space=start == 0 ? 1 : rand.random(1,2);\n    int ctier=curTier;\n    out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n        unitAmount=f == start ? 1 : 6 / (int)scaling[ctier];\n        begin=f;\n        end=f + next >= cap ? never : f + next;\n        max=14;\n        unitScaling=(difficulty < 0.4f ? rand.random(2f,4f) : rand.random(1f,3f)) * scaling[ctier];\n        shields=shieldAmount;\n        shieldScaling=shieldsPerWave;\n        spacing=space;\n      }\n    }\n);\n    out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n        unitAmount=3 / (int)scaling[ctier];\n        begin=f + next - 1;\n        end=f + next + rand.random(6,10);\n        max=6;\n        unitScaling=rand.random(1f,2f);\n        spacing=rand.random(2,4);\n        shields=shieldAmount / 2f;\n        shieldScaling=shieldsPerWave;\n      }\n    }\n);\n    i+=next + 1;\n    if (curTier < 3 || rand.chance(0.05)) {\n      curTier++;\n    }\n    curTier=Math.min(curTier,3);\n    if (rand.chance(0.3)) {\n      curSpecies=Structs.random(species);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 2025,
        "startLineNumber" : 281,
        "startColumnNumber" : 33,
        "endLineNumber" : 331,
        "endColumnNumber" : 9
      },
      "nodeContext" : "start -> {\n  UnitType[] curSpecies=Structs.random(species);\n  int curTier=0;\n  for (int i=start; i < cap; ) {\n    int f=i;\n    int next=rand.random(8,16) + curTier * 4;\n    float shieldAmount=Math.max((i - shieldStart) * shieldsPerWave,0);\n    int space=start == 0 ? 1 : rand.random(1,2);\n    int ctier=curTier;\n    out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n        unitAmount=f == start ? 1 : 6 / (int)scaling[ctier];\n        begin=f;\n        end=f + next >= cap ? never : f + next;\n        max=14;\n        unitScaling=(difficulty < 0.4f ? rand.random(2f,4f) : rand.random(1f,3f)) * scaling[ctier];\n        shields=shieldAmount;\n        shieldScaling=shieldsPerWave;\n        spacing=space;\n      }\n    }\n);\n    out.add(new SpawnGroup(curSpecies[Math.min(curTier,curSpecies.length - 1)]){\n{\n        unitAmount=3 / (int)scaling[ctier];\n        begin=f + next - 1;\n        end=f + next + rand.random(6,10);\n        max=6;\n        unitScaling=rand.random(1f,2f);\n        spacing=rand.random(2,4);\n        shields=shieldAmount / 2f;\n        shieldScaling=shieldsPerWave;\n      }\n    }\n);\n    i+=next + 1;\n    if (curTier < 3 || rand.chance(0.05)) {\n      curTier++;\n    }\n    curTier=Math.min(curTier,3);\n    if (rand.chance(0.3)) {\n      curSpecies=Structs.random(species);\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 292,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 327,
        "startColumnNumber" : 19,
        "endLineNumber" : 327,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rand.chance(0.3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 327,
    "startColumnNumber" : 31,
    "endLineNumber" : 327,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}