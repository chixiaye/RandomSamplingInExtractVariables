{
  "id" : 120,
  "expression" : "new OptimizedJsonFieldCollector(optimizedJsonInfo,mode)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/optimize/gson/DuplicateJsonFieldNameChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new OptimizedJsonFieldCollector(optimizedJsonInfo,mode)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 104,
      "startLineNumber" : 49,
      "startColumnNumber" : 16,
      "endLineNumber" : 50,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 48,
        "startColumnNumber" : 40,
        "endLineNumber" : 50,
        "endColumnNumber" : 53
      },
      "nodeContext" : "jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 54
      },
      "nodeContext" : "OptimizedJsonFieldCollector jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1269,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  OptimizedJsonInfo optimizedJsonInfo=new OptimizedJsonInfo();\n  OptimizedJsonFieldCollector jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode);\n  programClass.accept(new MultiClassVisitor(jsonFieldCollector,new AllFieldVisitor(jsonFieldCollector)));\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  Collection<String[]> jsonFieldNamesCollection=classJsonInfo.javaToJsonFieldNames.values();\n  Set<String> uniqueFieldNames=new HashSet<String>();\n  for (  String[] jsonFieldNames : jsonFieldNamesCollection) {\n    for (    String jsonFieldName : jsonFieldNames) {\n      if (uniqueFieldNames.contains(jsonFieldName)) {\n        hasDuplicateJsonFieldNames=true;\n        return;\n      }\n else {\n        uniqueFieldNames.add(jsonFieldName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1365,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (OptimizedJsonFieldCollector.Mode mode : OptimizedJsonFieldCollector.Mode.values()) {\n  OptimizedJsonInfo optimizedJsonInfo=new OptimizedJsonInfo();\n  OptimizedJsonFieldCollector jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode);\n  programClass.accept(new MultiClassVisitor(jsonFieldCollector,new AllFieldVisitor(jsonFieldCollector)));\n  OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n  Collection<String[]> jsonFieldNamesCollection=classJsonInfo.javaToJsonFieldNames.values();\n  Set<String> uniqueFieldNames=new HashSet<String>();\n  for (  String[] jsonFieldNames : jsonFieldNamesCollection) {\n    for (    String jsonFieldName : jsonFieldNames) {\n      if (uniqueFieldNames.contains(jsonFieldName)) {\n        hasDuplicateJsonFieldNames=true;\n        return;\n      }\n else {\n        uniqueFieldNames.add(jsonFieldName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  OptimizedJsonFieldCollector.Mode mode : OptimizedJsonFieldCollector.Mode.values()) {\n    OptimizedJsonInfo optimizedJsonInfo=new OptimizedJsonInfo();\n    OptimizedJsonFieldCollector jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode);\n    programClass.accept(new MultiClassVisitor(jsonFieldCollector,new AllFieldVisitor(jsonFieldCollector)));\n    OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n    Collection<String[]> jsonFieldNamesCollection=classJsonInfo.javaToJsonFieldNames.values();\n    Set<String> uniqueFieldNames=new HashSet<String>();\n    for (    String[] jsonFieldNames : jsonFieldNamesCollection) {\n      for (      String jsonFieldName : jsonFieldNames) {\n        if (uniqueFieldNames.contains(jsonFieldName)) {\n          hasDuplicateJsonFieldNames=true;\n          return;\n        }\n else {\n          uniqueFieldNames.add(jsonFieldName);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1456,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void visitProgramClass(ProgramClass programClass){\n  for (  OptimizedJsonFieldCollector.Mode mode : OptimizedJsonFieldCollector.Mode.values()) {\n    OptimizedJsonInfo optimizedJsonInfo=new OptimizedJsonInfo();\n    OptimizedJsonFieldCollector jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode);\n    programClass.accept(new MultiClassVisitor(jsonFieldCollector,new AllFieldVisitor(jsonFieldCollector)));\n    OptimizedJsonInfo.ClassJsonInfo classJsonInfo=optimizedJsonInfo.classJsonInfos.get(programClass.getName());\n    Collection<String[]> jsonFieldNamesCollection=classJsonInfo.javaToJsonFieldNames.values();\n    Set<String> uniqueFieldNames=new HashSet<String>();\n    for (    String[] jsonFieldNames : jsonFieldNamesCollection) {\n      for (      String jsonFieldName : jsonFieldNames) {\n        if (uniqueFieldNames.contains(jsonFieldName)) {\n          hasDuplicateJsonFieldNames=true;\n          return;\n        }\n else {\n          uniqueFieldNames.add(jsonFieldName);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 48,
        "startColumnNumber" : 40,
        "endLineNumber" : 50,
        "endColumnNumber" : 53
      },
      "nodeContext" : "jsonFieldCollector=new OptimizedJsonFieldCollector(optimizedJsonInfo,mode)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "proguard.optimize.gson.OptimizedJsonFieldCollector"
  } ],
  "positionList" : [ {
    "charLength" : 104,
    "startLineNumber" : 49,
    "startColumnNumber" : 16,
    "endLineNumber" : 50,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}