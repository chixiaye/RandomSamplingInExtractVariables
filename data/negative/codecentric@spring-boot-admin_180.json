{
  "id" : 180,
  "expression" : "Level",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/services/StatusUpdateTrigger.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Level",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 56,
      "startColumnNumber" : 55,
      "endLineNumber" : 56,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 56,
        "startColumnNumber" : 55,
        "endLineNumber" : 56,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Level.FINEST",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 56,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 57,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 58,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception()))).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "intervalSubscription=Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception()))).subscribe()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "intervalSubscription=Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception()))).subscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 913,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.start();\n  intervalSubscription=Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception()))).subscribe();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void start(){\n  super.start();\n  intervalSubscription=Flux.interval(Duration.ofMillis(updateInterval)).doOnSubscribe(subscription -> log.debug(\"Scheduled status update every {}ms\",updateInterval)).log(log.getName(),Level.FINEST).subscribeOn(Schedulers.newSingle(\"status-monitor\")).flatMap((i) -> this.updateStatusForAllApplications()).retryWhen(Retry.any().retryMax(Integer.MAX_VALUE).doOnRetry(ctx -> log.error(\"Resubscribing after uncaught error\",ctx.exception()))).subscribe();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 56,
        "startColumnNumber" : 55,
        "endLineNumber" : 56,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Level.FINEST",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.Level"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 56,
    "startColumnNumber" : 55,
    "endLineNumber" : 56,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}