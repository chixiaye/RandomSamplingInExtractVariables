{
  "id" : 147,
  "expression" : "testRealm()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "e2514ea2e60fca7569515da686dc8add7d109a10",
  "filePath" : "testsuite/integration-arquillian/tests/other/webauthn/src/test/java/org/keycloak/testsuite/webauthn/registration/PolicyJsInjectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testRealm()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 65,
      "startColumnNumber" : 59,
      "endLineNumber" : 65,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 65,
        "startColumnNumber" : 59,
        "endLineNumber" : 65,
        "endColumnNumber" : 89
      },
      "nodeContext" : "testRealm().toRepresentation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 65,
        "startColumnNumber" : 37,
        "endLineNumber" : 65,
        "endColumnNumber" : 108
      },
      "nodeContext" : "new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 65,
        "startColumnNumber" : 30,
        "endLineNumber" : 65,
        "endColumnNumber" : 108
      },
      "nodeContext" : "data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 109
      },
      "nodeContext" : "WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 63,
        "startColumnNumber" : 27,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n  assertThat(data.getRpId(),is(PROMPT_SCRIPT));\n  registerDefaultUser(false);\n  webAuthnErrorPage.assertCurrent();\n  final String expectedMessage=getExpectedMessageByDriver(\"SecurityError: The operation is insecure.\",\"The relying party ID is not a registrable domain suffix of, nor equal to the current domain.\");\n  assertThat(webAuthnErrorPage.getError(),containsString(expectedMessage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Closeable u=getWebAuthnRealmUpdater().setWebAuthnPolicyRpId(PROMPT_SCRIPT).update()){\n  WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n  assertThat(data.getRpId(),is(PROMPT_SCRIPT));\n  registerDefaultUser(false);\n  webAuthnErrorPage.assertCurrent();\n  final String expectedMessage=getExpectedMessageByDriver(\"SecurityError: The operation is insecure.\",\"The relying party ID is not a registrable domain suffix of, nor equal to the current domain.\");\n  assertThat(webAuthnErrorPage.getError(),containsString(expectedMessage));\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 60,
        "startColumnNumber" : 52,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (Closeable u=getWebAuthnRealmUpdater().setWebAuthnPolicyRpId(PROMPT_SCRIPT).update()){\n    WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n    assertThat(data.getRpId(),is(PROMPT_SCRIPT));\n    registerDefaultUser(false);\n    webAuthnErrorPage.assertCurrent();\n    final String expectedMessage=getExpectedMessageByDriver(\"SecurityError: The operation is insecure.\",\"The relying party ID is not a registrable domain suffix of, nor equal to the current domain.\");\n    assertThat(webAuthnErrorPage.getError(),containsString(expectedMessage));\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void relyingPartyId() throws IOException {\n  try (Closeable u=getWebAuthnRealmUpdater().setWebAuthnPolicyRpId(PROMPT_SCRIPT).update()){\n    WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n    assertThat(data.getRpId(),is(PROMPT_SCRIPT));\n    registerDefaultUser(false);\n    webAuthnErrorPage.assertCurrent();\n    final String expectedMessage=getExpectedMessageByDriver(\"SecurityError: The operation is insecure.\",\"The relying party ID is not a registrable domain suffix of, nor equal to the current domain.\");\n    assertThat(webAuthnErrorPage.getError(),containsString(expectedMessage));\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 109
      },
      "nodeContext" : "WebAuthnRealmData data=new WebAuthnRealmData(testRealm().toRepresentation(),isPasswordless());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.admin.client.resource.RealmResource"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 65,
    "startColumnNumber" : 59,
    "endLineNumber" : 65,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}