{
  "id" : 16,
  "expression" : "System.out",
  "projectName" : "crossoverJie@JCSprout",
  "commitID" : "397ee3763e12279fd83d26d02da20955d5bcc7cf",
  "filePath" : "/src/main/java/com/crossoverjie/red/RedPacket.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 92,
      "startColumnNumber" : 12,
      "endLineNumber" : 92,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 67
      },
      "nodeContext" : "System.out.println(\"recursiveCount==\" + recursiveCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 68
      },
      "nodeContext" : "System.out.println(\"recursiveCount==\" + recursiveCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 90,
        "startColumnNumber" : 27,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  recursiveCount++;\n  System.out.println(\"recursiveCount==\" + recursiveCount);\n  return randomRedPacket(totalMoney,minMoney,redPacket,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (LESS == status) {\n  recursiveCount++;\n  System.out.println(\"recursiveCount==\" + recursiveCount);\n  return randomRedPacket(totalMoney,minMoney,redPacket,count);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1092,
        "startLineNumber" : 64,
        "startColumnNumber" : 87,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (count == 1) {\n    return totalMoney;\n  }\n  if (minMoney == maxMoney) {\n    return minMoney;\n  }\n  maxMoney=maxMoney > totalMoney ? totalMoney : maxMoney;\n  int redPacket=(int)(Math.random() * (maxMoney - minMoney) + minMoney);\n  int lastMoney=totalMoney - redPacket;\n  int status=checkMoney(lastMoney,count - 1);\n  if (OK == status) {\n    return redPacket;\n  }\n  if (LESS == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount==\" + recursiveCount);\n    return randomRedPacket(totalMoney,minMoney,redPacket,count);\n  }\n  if (MORE == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount===\" + recursiveCount);\n    return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n  }\n  return redPacket;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private int randomRedPacket(int totalMoney,int minMoney,int maxMoney,int count){\n  if (count == 1) {\n    return totalMoney;\n  }\n  if (minMoney == maxMoney) {\n    return minMoney;\n  }\n  maxMoney=maxMoney > totalMoney ? totalMoney : maxMoney;\n  int redPacket=(int)(Math.random() * (maxMoney - minMoney) + minMoney);\n  int lastMoney=totalMoney - redPacket;\n  int status=checkMoney(lastMoney,count - 1);\n  if (OK == status) {\n    return redPacket;\n  }\n  if (LESS == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount==\" + recursiveCount);\n    return randomRedPacket(totalMoney,minMoney,redPacket,count);\n  }\n  if (MORE == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount===\" + recursiveCount);\n    return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n  }\n  return redPacket;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 68
      },
      "nodeContext" : "System.out.println(\"recursiveCount==\" + recursiveCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 98,
      "startColumnNumber" : 12,
      "endLineNumber" : 98,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 68
      },
      "nodeContext" : "System.out.println(\"recursiveCount===\" + recursiveCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.out.println(\"recursiveCount===\" + recursiveCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 96,
        "startColumnNumber" : 27,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  recursiveCount++;\n  System.out.println(\"recursiveCount===\" + recursiveCount);\n  return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (MORE == status) {\n  recursiveCount++;\n  System.out.println(\"recursiveCount===\" + recursiveCount);\n  return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1092,
        "startLineNumber" : 64,
        "startColumnNumber" : 87,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (count == 1) {\n    return totalMoney;\n  }\n  if (minMoney == maxMoney) {\n    return minMoney;\n  }\n  maxMoney=maxMoney > totalMoney ? totalMoney : maxMoney;\n  int redPacket=(int)(Math.random() * (maxMoney - minMoney) + minMoney);\n  int lastMoney=totalMoney - redPacket;\n  int status=checkMoney(lastMoney,count - 1);\n  if (OK == status) {\n    return redPacket;\n  }\n  if (LESS == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount==\" + recursiveCount);\n    return randomRedPacket(totalMoney,minMoney,redPacket,count);\n  }\n  if (MORE == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount===\" + recursiveCount);\n    return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n  }\n  return redPacket;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1175,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private int randomRedPacket(int totalMoney,int minMoney,int maxMoney,int count){\n  if (count == 1) {\n    return totalMoney;\n  }\n  if (minMoney == maxMoney) {\n    return minMoney;\n  }\n  maxMoney=maxMoney > totalMoney ? totalMoney : maxMoney;\n  int redPacket=(int)(Math.random() * (maxMoney - minMoney) + minMoney);\n  int lastMoney=totalMoney - redPacket;\n  int status=checkMoney(lastMoney,count - 1);\n  if (OK == status) {\n    return redPacket;\n  }\n  if (LESS == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount==\" + recursiveCount);\n    return randomRedPacket(totalMoney,minMoney,redPacket,count);\n  }\n  if (MORE == status) {\n    recursiveCount++;\n    System.out.println(\"recursiveCount===\" + recursiveCount);\n    return randomRedPacket(totalMoney,redPacket,maxMoney,count);\n  }\n  return redPacket;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.out.println(\"recursiveCount===\" + recursiveCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 92,
    "startColumnNumber" : 12,
    "endLineNumber" : 92,
    "endColumnNumber" : 22
  }, {
    "charLength" : 10,
    "startLineNumber" : 98,
    "startColumnNumber" : 12,
    "endLineNumber" : 98,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}