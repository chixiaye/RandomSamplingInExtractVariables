{
  "id" : 362,
  "expression" : "\"myfactory\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-compatible/src/test/java/org/apache/dubbo/common/extension/ExtensionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"myfactory\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 30,
      "startColumnNumber" : 111,
      "endLineNumber" : 30,
      "endColumnNumber" : 122
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 30,
        "startColumnNumber" : 39,
        "endLineNumber" : 30,
        "endColumnNumber" : 123
      },
      "nodeContext" : "ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 30,
        "startColumnNumber" : 29,
        "endLineNumber" : 30,
        "endColumnNumber" : 123
      },
      "nodeContext" : "factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 124
      },
      "nodeContext" : "ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n  Assertions.assertTrue(factory instanceof ExtensionFactory);\n  Assertions.assertTrue(factory instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n  Assertions.assertTrue(factory instanceof MyExtensionFactory);\n  ExtensionFactory spring=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"spring\");\n  Assertions.assertTrue(spring instanceof ExtensionFactory);\n  Assertions.assertFalse(spring instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n  Assertions.assertTrue(factory instanceof ExtensionFactory);\n  Assertions.assertTrue(factory instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n  Assertions.assertTrue(factory instanceof MyExtensionFactory);\n  ExtensionFactory spring=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"spring\");\n  Assertions.assertTrue(spring instanceof ExtensionFactory);\n  Assertions.assertFalse(spring instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n}\n catch (IllegalArgumentException expected) {\n  fail();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 28,
        "startColumnNumber" : 39,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n    Assertions.assertTrue(factory instanceof ExtensionFactory);\n    Assertions.assertTrue(factory instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n    Assertions.assertTrue(factory instanceof MyExtensionFactory);\n    ExtensionFactory spring=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"spring\");\n    Assertions.assertTrue(spring instanceof ExtensionFactory);\n    Assertions.assertFalse(spring instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n  }\n catch (  IllegalArgumentException expected) {\n    fail();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 828,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExtensionFactory(){\n  try {\n    ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n    Assertions.assertTrue(factory instanceof ExtensionFactory);\n    Assertions.assertTrue(factory instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n    Assertions.assertTrue(factory instanceof MyExtensionFactory);\n    ExtensionFactory spring=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"spring\");\n    Assertions.assertTrue(spring instanceof ExtensionFactory);\n    Assertions.assertFalse(spring instanceof com.alibaba.dubbo.common.extension.ExtensionFactory);\n  }\n catch (  IllegalArgumentException expected) {\n    fail();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 124
      },
      "nodeContext" : "ExtensionFactory factory=ExtensionLoader.getExtensionLoader(ExtensionFactory.class).getExtension(\"myfactory\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 30,
    "startColumnNumber" : 111,
    "endLineNumber" : 30,
    "endColumnNumber" : 122
  } ],
  "layoutRelationDataList" : [ ]
}