{
  "id" : 440,
  "expression" : "spanStreamSendData",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/SpanStreamUdpSender.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "spanStreamSendData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 251,
      "startColumnNumber" : 12,
      "endLineNumber" : 251,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 251,
        "startColumnNumber" : 12,
        "endLineNumber" : 251,
        "endColumnNumber" : 38
      },
      "nodeContext" : "spanStreamSendData == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (spanStreamSendData == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 250,
        "startColumnNumber" : 81,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void flush(SpanStreamSendData spanStreamSendData) throws IOException {\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 251,
        "startColumnNumber" : 12,
        "endLineNumber" : 251,
        "endColumnNumber" : 38
      },
      "nodeContext" : "spanStreamSendData == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.sender.SpanStreamSendData"
  }, {
    "nodeContext" : "spanStreamSendData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 255,
      "startColumnNumber" : 35,
      "endLineNumber" : 255,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 255,
        "startColumnNumber" : 35,
        "endLineNumber" : 255,
        "endColumnNumber" : 70
      },
      "nodeContext" : "spanStreamSendData.getSendBuffers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 255,
        "startColumnNumber" : 21,
        "endLineNumber" : 255,
        "endColumnNumber" : 70
      },
      "nodeContext" : "byteBuffers=spanStreamSendData.getSendBuffers()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 71
      },
      "nodeContext" : "ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 250,
        "startColumnNumber" : 81,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void flush(SpanStreamSendData spanStreamSendData) throws IOException {\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 71
      },
      "nodeContext" : "ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.sender.SpanStreamSendData"
  }, {
    "nodeContext" : "spanStreamSendData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 268,
      "startColumnNumber" : 12,
      "endLineNumber" : 268,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 268,
        "startColumnNumber" : 12,
        "endLineNumber" : 268,
        "endColumnNumber" : 37
      },
      "nodeContext" : "spanStreamSendData.done()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 268,
        "startColumnNumber" : 12,
        "endLineNumber" : 268,
        "endColumnNumber" : 38
      },
      "nodeContext" : "spanStreamSendData.done();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 267,
        "startColumnNumber" : 18,
        "endLineNumber" : 269,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  spanStreamSendData.done();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 258,
        "startColumnNumber" : 8,
        "endLineNumber" : 269,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (remainingLength != 0) {\n    long sentBufferSize=udpChannel.write(byteBuffers);\n    if (remainingLength != sentBufferSize) {\n      logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n    }\n else {\n      logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n    }\n  }\n}\n  finally {\n  spanStreamSendData.done();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 250,
        "startColumnNumber" : 81,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void flush(SpanStreamSendData spanStreamSendData) throws IOException {\n  if (spanStreamSendData == null) {\n    return;\n  }\n  ByteBuffer[] byteBuffers=spanStreamSendData.getSendBuffers();\n  int remainingLength=ByteBufferUtils.getRemaining(byteBuffers);\n  try {\n    if (remainingLength != 0) {\n      long sentBufferSize=udpChannel.write(byteBuffers);\n      if (remainingLength != sentBufferSize) {\n        logger.warn(\"sent buffer {}/{}.\",sentBufferSize,remainingLength);\n      }\n else {\n        logger.debug(\"Data sent. size:{}, {}\",sentBufferSize);\n      }\n    }\n  }\n  finally {\n    spanStreamSendData.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 268,
        "startColumnNumber" : 12,
        "endLineNumber" : 268,
        "endColumnNumber" : 38
      },
      "nodeContext" : "spanStreamSendData.done();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.sender.SpanStreamSendData"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 251,
    "startColumnNumber" : 12,
    "endLineNumber" : 251,
    "endColumnNumber" : 30
  }, {
    "charLength" : 18,
    "startLineNumber" : 255,
    "startColumnNumber" : 35,
    "endLineNumber" : 255,
    "endColumnNumber" : 53
  }, {
    "charLength" : 18,
    "startLineNumber" : 268,
    "startColumnNumber" : 12,
    "endLineNumber" : 268,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}