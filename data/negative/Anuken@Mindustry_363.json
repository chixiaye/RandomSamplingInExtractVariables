{
  "id" : 363,
  "expression" : "indexer",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/bullet/BulletType.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "indexer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 225,
      "startColumnNumber" : 16,
      "endLineNumber" : 225,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 225,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 18
      },
      "nodeContext" : "indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n  Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n  other.heal(healPercent / 100f * other.maxHealth());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 225,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n  Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n  other.heal(healPercent / 100f * other.maxHealth());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 224,
        "startColumnNumber" : 32,
        "endLineNumber" : 229,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n    Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n    other.heal(healPercent / 100f * other.maxHealth());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 229,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (healPercent > 0f) {\n  indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n    Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n    other.heal(healPercent / 100f * other.maxHealth());\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 217,
        "startColumnNumber" : 49,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n  if (status != StatusEffects.none) {\n    Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n  }\n  if (healPercent > 0f) {\n    indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n      Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n      other.heal(healPercent / 100f * other.maxHealth());\n    }\n);\n  }\n  if (makeFire) {\n    indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n      Fires.create(other.tile);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (splashDamageRadius > 0 && !b.absorbed) {\n  Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n  if (status != StatusEffects.none) {\n    Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n  }\n  if (healPercent > 0f) {\n    indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n      Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n      other.heal(healPercent / 100f * other.maxHealth());\n    }\n);\n  }\n  if (makeFire) {\n    indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n      Fires.create(other.tile);\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2197,
        "startLineNumber" : 191,
        "startColumnNumber" : 47,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  b.hit=true;\n  hitEffect.at(x,y,b.rotation(),hitColor);\n  hitSound.at(x,y,hitSoundPitch,hitSoundVolume);\n  Effect.shake(hitShake,hitShake,b);\n  if (fragBullet != null) {\n    for (int i=0; i < fragBullets; i++) {\n      float len=Mathf.random(1f,7f);\n      float a=b.rotation() + Mathf.range(fragCone / 2) + fragAngle;\n      fragBullet.create(b,x + Angles.trnsx(a,len),y + Angles.trnsy(a,len),a,Mathf.random(fragVelocityMin,fragVelocityMax),Mathf.random(fragLifeMin,fragLifeMax));\n    }\n  }\n  if (puddleLiquid != null && puddles > 0) {\n    for (int i=0; i < puddles; i++) {\n      Tile tile=world.tileWorld(x + Mathf.range(puddleRange),y + Mathf.range(puddleRange));\n      Puddles.deposit(tile,puddleLiquid,puddleAmount);\n    }\n  }\n  if (Mathf.chance(incendChance)) {\n    Damage.createIncend(x,y,incendSpread,incendAmount);\n  }\n  if (splashDamageRadius > 0 && !b.absorbed) {\n    Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n    if (status != StatusEffects.none) {\n      Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n    }\n    if (healPercent > 0f) {\n      indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n        Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n        other.heal(healPercent / 100f * other.maxHealth());\n      }\n);\n    }\n    if (makeFire) {\n      indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n        Fires.create(other.tile);\n      }\n);\n    }\n  }\n  for (int i=0; i < lightning; i++) {\n    Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,b.x,b.y,b.rotation() + Mathf.range(lightningCone / 2) + lightningAngle,lightningLength + Mathf.random(lightningLengthRand));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 345,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void hit(Bullet b,float x,float y){\n  b.hit=true;\n  hitEffect.at(x,y,b.rotation(),hitColor);\n  hitSound.at(x,y,hitSoundPitch,hitSoundVolume);\n  Effect.shake(hitShake,hitShake,b);\n  if (fragBullet != null) {\n    for (int i=0; i < fragBullets; i++) {\n      float len=Mathf.random(1f,7f);\n      float a=b.rotation() + Mathf.range(fragCone / 2) + fragAngle;\n      fragBullet.create(b,x + Angles.trnsx(a,len),y + Angles.trnsy(a,len),a,Mathf.random(fragVelocityMin,fragVelocityMax),Mathf.random(fragLifeMin,fragLifeMax));\n    }\n  }\n  if (puddleLiquid != null && puddles > 0) {\n    for (int i=0; i < puddles; i++) {\n      Tile tile=world.tileWorld(x + Mathf.range(puddleRange),y + Mathf.range(puddleRange));\n      Puddles.deposit(tile,puddleLiquid,puddleAmount);\n    }\n  }\n  if (Mathf.chance(incendChance)) {\n    Damage.createIncend(x,y,incendSpread,incendAmount);\n  }\n  if (splashDamageRadius > 0 && !b.absorbed) {\n    Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n    if (status != StatusEffects.none) {\n      Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n    }\n    if (healPercent > 0f) {\n      indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n        Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n        other.heal(healPercent / 100f * other.maxHealth());\n      }\n);\n    }\n    if (makeFire) {\n      indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n        Fires.create(other.tile);\n      }\n);\n    }\n  }\n  for (int i=0; i < lightning; i++) {\n    Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,b.x,b.y,b.rotation() + Mathf.range(lightningCone / 2) + lightningAngle,lightningLength + Mathf.random(lightningLengthRand));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 359,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 225,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 18
      },
      "nodeContext" : "indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n  Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n  other.heal(healPercent / 100f * other.maxHealth());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 47,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "mindustry.ai.BlockIndexer"
  }, {
    "nodeContext" : "indexer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 232,
      "startColumnNumber" : 16,
      "endLineNumber" : 232,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 232,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 18
      },
      "nodeContext" : "indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n  Fires.create(other.tile);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 232,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n  Fires.create(other.tile);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 231,
        "startColumnNumber" : 24,
        "endLineNumber" : 235,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n    Fires.create(other.tile);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (makeFire) {\n  indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n    Fires.create(other.tile);\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 217,
        "startColumnNumber" : 49,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n  if (status != StatusEffects.none) {\n    Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n  }\n  if (healPercent > 0f) {\n    indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n      Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n      other.heal(healPercent / 100f * other.maxHealth());\n    }\n);\n  }\n  if (makeFire) {\n    indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n      Fires.create(other.tile);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 236,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (splashDamageRadius > 0 && !b.absorbed) {\n  Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n  if (status != StatusEffects.none) {\n    Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n  }\n  if (healPercent > 0f) {\n    indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n      Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n      other.heal(healPercent / 100f * other.maxHealth());\n    }\n);\n  }\n  if (makeFire) {\n    indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n      Fires.create(other.tile);\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2197,
        "startLineNumber" : 191,
        "startColumnNumber" : 47,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  b.hit=true;\n  hitEffect.at(x,y,b.rotation(),hitColor);\n  hitSound.at(x,y,hitSoundPitch,hitSoundVolume);\n  Effect.shake(hitShake,hitShake,b);\n  if (fragBullet != null) {\n    for (int i=0; i < fragBullets; i++) {\n      float len=Mathf.random(1f,7f);\n      float a=b.rotation() + Mathf.range(fragCone / 2) + fragAngle;\n      fragBullet.create(b,x + Angles.trnsx(a,len),y + Angles.trnsy(a,len),a,Mathf.random(fragVelocityMin,fragVelocityMax),Mathf.random(fragLifeMin,fragLifeMax));\n    }\n  }\n  if (puddleLiquid != null && puddles > 0) {\n    for (int i=0; i < puddles; i++) {\n      Tile tile=world.tileWorld(x + Mathf.range(puddleRange),y + Mathf.range(puddleRange));\n      Puddles.deposit(tile,puddleLiquid,puddleAmount);\n    }\n  }\n  if (Mathf.chance(incendChance)) {\n    Damage.createIncend(x,y,incendSpread,incendAmount);\n  }\n  if (splashDamageRadius > 0 && !b.absorbed) {\n    Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n    if (status != StatusEffects.none) {\n      Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n    }\n    if (healPercent > 0f) {\n      indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n        Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n        other.heal(healPercent / 100f * other.maxHealth());\n      }\n);\n    }\n    if (makeFire) {\n      indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n        Fires.create(other.tile);\n      }\n);\n    }\n  }\n  for (int i=0; i < lightning; i++) {\n    Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,b.x,b.y,b.rotation() + Mathf.range(lightningCone / 2) + lightningAngle,lightningLength + Mathf.random(lightningLengthRand));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 345,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void hit(Bullet b,float x,float y){\n  b.hit=true;\n  hitEffect.at(x,y,b.rotation(),hitColor);\n  hitSound.at(x,y,hitSoundPitch,hitSoundVolume);\n  Effect.shake(hitShake,hitShake,b);\n  if (fragBullet != null) {\n    for (int i=0; i < fragBullets; i++) {\n      float len=Mathf.random(1f,7f);\n      float a=b.rotation() + Mathf.range(fragCone / 2) + fragAngle;\n      fragBullet.create(b,x + Angles.trnsx(a,len),y + Angles.trnsy(a,len),a,Mathf.random(fragVelocityMin,fragVelocityMax),Mathf.random(fragLifeMin,fragLifeMax));\n    }\n  }\n  if (puddleLiquid != null && puddles > 0) {\n    for (int i=0; i < puddles; i++) {\n      Tile tile=world.tileWorld(x + Mathf.range(puddleRange),y + Mathf.range(puddleRange));\n      Puddles.deposit(tile,puddleLiquid,puddleAmount);\n    }\n  }\n  if (Mathf.chance(incendChance)) {\n    Damage.createIncend(x,y,incendSpread,incendAmount);\n  }\n  if (splashDamageRadius > 0 && !b.absorbed) {\n    Damage.damage(b.team,x,y,splashDamageRadius,splashDamage * b.damageMultiplier(),collidesAir,collidesGround);\n    if (status != StatusEffects.none) {\n      Damage.status(b.team,x,y,splashDamageRadius,status,statusDuration,collidesAir,collidesGround);\n    }\n    if (healPercent > 0f) {\n      indexer.eachBlock(b.team,x,y,splashDamageRadius,Building::damaged,other -> {\n        Fx.healBlockFull.at(other.x,other.y,other.block.size,Pal.heal);\n        other.heal(healPercent / 100f * other.maxHealth());\n      }\n);\n    }\n    if (makeFire) {\n      indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n        Fires.create(other.tile);\n      }\n);\n    }\n  }\n  for (int i=0; i < lightning; i++) {\n    Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,b.x,b.y,b.rotation() + Mathf.range(lightningCone / 2) + lightningAngle,lightningLength + Mathf.random(lightningLengthRand));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 359,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 232,
        "startColumnNumber" : 16,
        "endLineNumber" : 234,
        "endColumnNumber" : 18
      },
      "nodeContext" : "indexer.eachBlock(null,x,y,splashDamageRadius,other -> other.team != b.team,other -> {\n  Fires.create(other.tile);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "mindustry.ai.BlockIndexer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 225,
    "startColumnNumber" : 16,
    "endLineNumber" : 225,
    "endColumnNumber" : 23
  }, {
    "charLength" : 7,
    "startLineNumber" : 232,
    "startColumnNumber" : 16,
    "endLineNumber" : 232,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}