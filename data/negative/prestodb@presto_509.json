{
  "id" : 509,
  "expression" : "\"preparedSelectSql() only applies to TeradataJdbcDriver\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-product-tests/src/main/java/com/facebook/presto/tests/jdbc/PreparedStatements.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"preparedSelectSql() only applies to TeradataJdbcDriver\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 130,
      "startColumnNumber" : 24,
      "endLineNumber" : 130,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 81
      },
      "nodeContext" : "LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 82
      },
      "nodeContext" : "LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 129,
        "startColumnNumber" : 13,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 877,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (usingTeradataJdbcDriver(connection())) {\n  String prepareSql=\"PREPARE ps1 from SELECT c_int FROM \" + TABLE_NAME + \" WHERE c_int = ?\";\n  final int testValue=2147483647;\n  String executeSql=\"EXECUTE ps1 using \";\n  Statement statement=connection().createStatement();\n  statement.execute(prepareSql);\n  assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + testValue))).containsOnly(row(testValue));\n  assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + \"NULL\"))).hasNoRows();\n  assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + 2))).hasNoRows();\n}\n else {\n  LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 893,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (usingTeradataJdbcDriver(connection())) {\n    String prepareSql=\"PREPARE ps1 from SELECT c_int FROM \" + TABLE_NAME + \" WHERE c_int = ?\";\n    final int testValue=2147483647;\n    String executeSql=\"EXECUTE ps1 using \";\n    Statement statement=connection().createStatement();\n    statement.execute(prepareSql);\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + testValue))).containsOnly(row(testValue));\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + \"NULL\"))).hasNoRows();\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + 2))).hasNoRows();\n  }\n else {\n    LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(groups={JDBC,SIMBA_JDBC}) @Requires(ImmutableAllTypesTable.class) public void preparedSelectSql() throws SQLException {\n  if (usingTeradataJdbcDriver(connection())) {\n    String prepareSql=\"PREPARE ps1 from SELECT c_int FROM \" + TABLE_NAME + \" WHERE c_int = ?\";\n    final int testValue=2147483647;\n    String executeSql=\"EXECUTE ps1 using \";\n    Statement statement=connection().createStatement();\n    statement.execute(prepareSql);\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + testValue))).containsOnly(row(testValue));\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + \"NULL\"))).hasNoRows();\n    assertThat(QueryResult.forResultSet(statement.executeQuery(executeSql + 2))).hasNoRows();\n  }\n else {\n    LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 82
      },
      "nodeContext" : "LOGGER.warn(\"preparedSelectSql() only applies to TeradataJdbcDriver\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 130,
    "startColumnNumber" : 24,
    "endLineNumber" : 130,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}