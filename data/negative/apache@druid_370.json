{
  "id" : 370,
  "expression" : "new GoHandler(){\n  @Override protected ListenableFuture<Response> go(  Request request){\n    results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n    return GoHandlers.immediateFuture(EmitterTest.okResponse());\n  }\n}\n.times(2)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/test/java/org/apache/druid/java/util/emitter/core/ParametrizedUriEmitterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new GoHandler(){\n  @Override protected ListenableFuture<Response> go(  Request request){\n    results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n    return GoHandlers.immediateFuture(EmitterTest.okResponse());\n  }\n}\n.times(2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 396,
      "startLineNumber" : 135,
      "startColumnNumber" : 8,
      "endLineNumber" : 146,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 48,
    "astHeight" : 12,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "httpClient.setGoHandler(new GoHandler(){\n  @Override protected ListenableFuture<Response> go(  Request request){\n    results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n    return GoHandlers.immediateFuture(EmitterTest.okResponse());\n  }\n}\n.times(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 6
      },
      "nodeContext" : "httpClient.setGoHandler(new GoHandler(){\n  @Override protected ListenableFuture<Response> go(  Request request){\n    results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n    return GoHandlers.immediateFuture(EmitterTest.okResponse());\n  }\n}\n.times(2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 52,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1170,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Emitter emitter=parametrizedEmmiter(\"http://example.com/{feed}\");\n  final List<UnitEvent> events=Arrays.asList(new UnitEvent(\"test1\",1),new UnitEvent(\"test2\",2));\n  final Map<String,String> results=new HashMap<>();\n  httpClient.setGoHandler(new GoHandler(){\n    @Override protected ListenableFuture<Response> go(    Request request){\n      results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n      return GoHandlers.immediateFuture(EmitterTest.okResponse());\n    }\n  }\n.times(2));\n  for (  UnitEvent event : events) {\n    emitter.emit(event);\n  }\n  emitter.flush();\n  Assert.assertTrue(httpClient.succeeded());\n  Map<String,String> expected=ImmutableMap.of(\"http://example.com/test1\",StringUtils.format(\"[%s]\\n\",JSON_MAPPER.writeValueAsString(events.get(0))),\"http://example.com/test2\",StringUtils.format(\"[%s]\\n\",JSON_MAPPER.writeValueAsString(events.get(1))));\n  Assert.assertEquals(expected,results);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEmitterWithMultipleFeeds() throws Exception {\n  Emitter emitter=parametrizedEmmiter(\"http://example.com/{feed}\");\n  final List<UnitEvent> events=Arrays.asList(new UnitEvent(\"test1\",1),new UnitEvent(\"test2\",2));\n  final Map<String,String> results=new HashMap<>();\n  httpClient.setGoHandler(new GoHandler(){\n    @Override protected ListenableFuture<Response> go(    Request request){\n      results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n      return GoHandlers.immediateFuture(EmitterTest.okResponse());\n    }\n  }\n.times(2));\n  for (  UnitEvent event : events) {\n    emitter.emit(event);\n  }\n  emitter.flush();\n  Assert.assertTrue(httpClient.succeeded());\n  Map<String,String> expected=ImmutableMap.of(\"http://example.com/test1\",StringUtils.format(\"[%s]\\n\",JSON_MAPPER.writeValueAsString(events.get(0))),\"http://example.com/test2\",StringUtils.format(\"[%s]\\n\",JSON_MAPPER.writeValueAsString(events.get(1))));\n  Assert.assertEquals(expected,results);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "httpClient.setGoHandler(new GoHandler(){\n  @Override protected ListenableFuture<Response> go(  Request request){\n    results.put(request.getUrl(),StandardCharsets.UTF_8.decode(request.getByteBufferData().slice()).toString());\n    return GoHandlers.immediateFuture(EmitterTest.okResponse());\n  }\n}\n.times(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 13
    },
    "tokenLength" : 24,
    "type" : "org.apache.druid.java.util.emitter.core.GoHandler"
  } ],
  "positionList" : [ {
    "charLength" : 396,
    "startLineNumber" : 135,
    "startColumnNumber" : 8,
    "endLineNumber" : 146,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}