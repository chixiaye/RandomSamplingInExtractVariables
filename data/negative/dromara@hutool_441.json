{
  "id" : 441,
  "expression" : "isMoneyMode ? \"元零\" : \"点零\"",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/convert/NumberChineseFormatter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isMoneyMode ? \"元零\" : \"点零\"",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 130,
      "startColumnNumber" : 23,
      "endLineNumber" : 130,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 130,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 49
      },
      "nodeContext" : "chineseStr.append(isMoneyMode ? \"元零\" : \"点零\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 130,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 74
      },
      "nodeContext" : "chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 130,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 105
      },
      "nodeContext" : "chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 130,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 106
      },
      "nodeContext" : "chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 129,
        "startColumnNumber" : 22,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numJiao == 0) {\n  chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n}\n else {\n  chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 128,
        "startColumnNumber" : 10,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (numJiao == 0) {\n    chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n  }\n else {\n    chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 126,
        "startColumnNumber" : 3,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (numFen == 0) {\n  chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\");\n}\n else {\n  if (numJiao == 0) {\n    chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n  }\n else {\n    chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 125,
        "startColumnNumber" : 35,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numFen == 0) {\n    chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\");\n  }\n else {\n    if (numJiao == 0) {\n      chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n    }\n else {\n      chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (numFen != 0 || numJiao != 0) {\n  if (numFen == 0) {\n    chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\");\n  }\n else {\n    if (numJiao == 0) {\n      chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n    }\n else {\n      chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n    }\n  }\n}\n else if (isMoneyMode) {\n  chineseStr.append(\"元整\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 55,
        "startColumnNumber" : 91,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final String[] numArray=isUseTraditional ? TRADITIONAL_DIGITS : SIMPLE_DIGITS;\n  if (amount > 99999999999999.99 || amount < -99999999999999.99) {\n    throw new IllegalArgumentException(\"Number support only: (-99999999999999.99 ～ 99999999999999.99)！\");\n  }\n  boolean negative=false;\n  if (amount < 0) {\n    negative=true;\n    amount=-amount;\n  }\n  long temp=Math.round(amount * 100);\n  int numFen=(int)(temp % 10);\n  temp=temp / 10;\n  int numJiao=(int)(temp % 10);\n  temp=temp / 10;\n  int[] parts=new int[20];\n  int numParts=0;\n  for (int i=0; temp != 0; i++) {\n    int part=(int)(temp % 10000);\n    parts[i]=part;\n    numParts++;\n    temp=temp / 10000;\n  }\n  boolean beforeWanIsZero=true;\n  StringBuilder chineseStr=new StringBuilder();\n  for (int i=0; i < numParts; i++) {\n    String partChinese=toChinese(parts[i],isUseTraditional);\n    if (i % 2 == 0) {\n      beforeWanIsZero=StrUtil.isEmpty(partChinese);\n    }\n    if (i != 0) {\n      if (i % 2 == 0) {\n        chineseStr.insert(0,\"亿\");\n      }\n else {\n        if (\"\".equals(partChinese) && false == beforeWanIsZero) {\n          chineseStr.insert(0,\"零\");\n        }\n else {\n          if (parts[i - 1] < 1000 && parts[i - 1] > 0) {\n            chineseStr.insert(0,\"零\");\n          }\n          if (parts[i] > 0) {\n            chineseStr.insert(0,\"万\");\n          }\n        }\n      }\n    }\n    chineseStr.insert(0,partChinese);\n  }\n  if (StrUtil.EMPTY.equals(chineseStr.toString())) {\n    chineseStr=new StringBuilder(numArray[0]);\n  }\n  if (negative) {\n    chineseStr.insert(0,\"负\");\n  }\n  if (numFen != 0 || numJiao != 0) {\n    if (numFen == 0) {\n      chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\");\n    }\n else {\n      if (numJiao == 0) {\n        chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n      }\n else {\n        chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n      }\n    }\n  }\n else   if (isMoneyMode) {\n    chineseStr.append(\"元整\");\n  }\n  return chineseStr.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 399,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2639,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 阿拉伯数字转换成中文,小数点后四舍五入保留两位. 使用于整数、小数的转换.\n * @param amount           数字\n * @param isUseTraditional 是否使用繁体\n * @param isMoneyMode      是否为金额模式\n * @return 中文\n */\npublic static String format(double amount,boolean isUseTraditional,boolean isMoneyMode){\n  final String[] numArray=isUseTraditional ? TRADITIONAL_DIGITS : SIMPLE_DIGITS;\n  if (amount > 99999999999999.99 || amount < -99999999999999.99) {\n    throw new IllegalArgumentException(\"Number support only: (-99999999999999.99 ～ 99999999999999.99)！\");\n  }\n  boolean negative=false;\n  if (amount < 0) {\n    negative=true;\n    amount=-amount;\n  }\n  long temp=Math.round(amount * 100);\n  int numFen=(int)(temp % 10);\n  temp=temp / 10;\n  int numJiao=(int)(temp % 10);\n  temp=temp / 10;\n  int[] parts=new int[20];\n  int numParts=0;\n  for (int i=0; temp != 0; i++) {\n    int part=(int)(temp % 10000);\n    parts[i]=part;\n    numParts++;\n    temp=temp / 10000;\n  }\n  boolean beforeWanIsZero=true;\n  StringBuilder chineseStr=new StringBuilder();\n  for (int i=0; i < numParts; i++) {\n    String partChinese=toChinese(parts[i],isUseTraditional);\n    if (i % 2 == 0) {\n      beforeWanIsZero=StrUtil.isEmpty(partChinese);\n    }\n    if (i != 0) {\n      if (i % 2 == 0) {\n        chineseStr.insert(0,\"亿\");\n      }\n else {\n        if (\"\".equals(partChinese) && false == beforeWanIsZero) {\n          chineseStr.insert(0,\"零\");\n        }\n else {\n          if (parts[i - 1] < 1000 && parts[i - 1] > 0) {\n            chineseStr.insert(0,\"零\");\n          }\n          if (parts[i] > 0) {\n            chineseStr.insert(0,\"万\");\n          }\n        }\n      }\n    }\n    chineseStr.insert(0,partChinese);\n  }\n  if (StrUtil.EMPTY.equals(chineseStr.toString())) {\n    chineseStr=new StringBuilder(numArray[0]);\n  }\n  if (negative) {\n    chineseStr.insert(0,\"负\");\n  }\n  if (numFen != 0 || numJiao != 0) {\n    if (numFen == 0) {\n      chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\");\n    }\n else {\n      if (numJiao == 0) {\n        chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n      }\n else {\n        chineseStr.append(isMoneyMode ? \"元\" : \"点\").append(numArray[numJiao]).append(isMoneyMode ? \"角\" : \"\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n      }\n    }\n  }\n else   if (isMoneyMode) {\n    chineseStr.append(\"元整\");\n  }\n  return chineseStr.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 415,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 130,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 106
      },
      "nodeContext" : "chineseStr.append(isMoneyMode ? \"元零\" : \"点零\").append(numArray[numFen]).append(isMoneyMode ? \"分\" : \"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 130,
    "startColumnNumber" : 23,
    "endLineNumber" : 130,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}