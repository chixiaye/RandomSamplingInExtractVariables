{
  "id" : 352,
  "expression" : "\"table\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-iceberg/src/main/java/com/facebook/presto/iceberg/IcebergTableName.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"table\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 83,
      "startColumnNumber" : 35,
      "endLineNumber" : 83,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 83,
        "startColumnNumber" : 23,
        "endLineNumber" : 83,
        "endColumnNumber" : 43
      },
      "nodeContext" : "match.group(\"table\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 83,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 43
      },
      "nodeContext" : "table=match.group(\"table\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 44
      },
      "nodeContext" : "String table=match.group(\"table\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1618,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Matcher match=TABLE_PATTERN.matcher(name);\n  if (!match.matches()) {\n    throw new PrestoException(NOT_SUPPORTED,\"Invalid Iceberg table name: \" + name);\n  }\n  String table=match.group(\"table\");\n  String typeString=match.group(\"type\");\n  String version1=match.group(\"ver1\");\n  String version2=match.group(\"ver2\");\n  TableType type=DATA;\n  if (typeString != null) {\n    try {\n      type=TableType.valueOf(typeString.toUpperCase(ROOT));\n    }\n catch (    IllegalArgumentException e) {\n      throw new PrestoException(NOT_SUPPORTED,format(\"Invalid Iceberg table name (unknown type '%s'): %s\",typeString,name));\n    }\n  }\n  Optional<Long> version=Optional.empty();\n  if (type == DATA || type == PARTITIONS || type == MANIFESTS || type == FILES) {\n    if (version1 != null && version2 != null) {\n      throw new PrestoException(NOT_SUPPORTED,\"Invalid Iceberg table name (cannot specify two @ versions): \" + name);\n    }\n    if (version1 != null) {\n      version=Optional.of(parseLong(version1));\n    }\n else     if (version2 != null) {\n      version=Optional.of(parseLong(version2));\n    }\n  }\n else   if (version1 != null || version2 != null) {\n    throw new PrestoException(NOT_SUPPORTED,format(\"Invalid Iceberg table name (cannot use @ version with table type '%s'): %s\",type,name));\n  }\n  return new IcebergTableName(table,type,version);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static IcebergTableName from(String name){\n  Matcher match=TABLE_PATTERN.matcher(name);\n  if (!match.matches()) {\n    throw new PrestoException(NOT_SUPPORTED,\"Invalid Iceberg table name: \" + name);\n  }\n  String table=match.group(\"table\");\n  String typeString=match.group(\"type\");\n  String version1=match.group(\"ver1\");\n  String version2=match.group(\"ver2\");\n  TableType type=DATA;\n  if (typeString != null) {\n    try {\n      type=TableType.valueOf(typeString.toUpperCase(ROOT));\n    }\n catch (    IllegalArgumentException e) {\n      throw new PrestoException(NOT_SUPPORTED,format(\"Invalid Iceberg table name (unknown type '%s'): %s\",typeString,name));\n    }\n  }\n  Optional<Long> version=Optional.empty();\n  if (type == DATA || type == PARTITIONS || type == MANIFESTS || type == FILES) {\n    if (version1 != null && version2 != null) {\n      throw new PrestoException(NOT_SUPPORTED,\"Invalid Iceberg table name (cannot specify two @ versions): \" + name);\n    }\n    if (version1 != null) {\n      version=Optional.of(parseLong(version1));\n    }\n else     if (version2 != null) {\n      version=Optional.of(parseLong(version2));\n    }\n  }\n else   if (version1 != null || version2 != null) {\n    throw new PrestoException(NOT_SUPPORTED,format(\"Invalid Iceberg table name (cannot use @ version with table type '%s'): %s\",type,name));\n  }\n  return new IcebergTableName(table,type,version);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 44
      },
      "nodeContext" : "String table=match.group(\"table\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 83,
    "startColumnNumber" : 35,
    "endLineNumber" : 83,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}