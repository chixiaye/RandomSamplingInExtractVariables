{
  "id" : 104,
  "expression" : "capacity",
  "projectName" : "prestodb@presto",
  "commitID" : "247881d621aa26e4823e7a8a113100345ad923a3",
  "filePath" : "presto-common/src/main/java/com/facebook/presto/common/array/Arrays.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "capacity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 163,
      "startColumnNumber" : 33,
      "endLineNumber" : 163,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 163,
        "startColumnNumber" : 33,
        "endLineNumber" : 163,
        "endColumnNumber" : 75
      },
      "nodeContext" : "capacity * expansionFactor.expansionFactor",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(capacity * expansionFactor.expansionFactor)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 163,
        "startColumnNumber" : 26,
        "endLineNumber" : 163,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(int)(capacity * expansionFactor.expansionFactor)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 76
      },
      "nodeContext" : "newCapacity=(int)(capacity * expansionFactor.expansionFactor)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 77
      },
      "nodeContext" : "int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n  if (buffer == null) {\n    buffer=new long[newCapacity];\n  }\n else   if (buffer.length < capacity) {\n    if (expansionOption == PRESERVE) {\n      buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n    }\n else {\n      buffer=new long[newCapacity];\n    }\n  }\n else   if (expansionOption == INITIALIZE) {\n    java.util.Arrays.fill(buffer,0L);\n  }\n  return buffer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static long[] ensureCapacity(long[] buffer,int capacity,ExpansionFactor expansionFactor,ExpansionOption expansionOption){\n  int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n  if (buffer == null) {\n    buffer=new long[newCapacity];\n  }\n else   if (buffer.length < capacity) {\n    if (expansionOption == PRESERVE) {\n      buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n    }\n else {\n      buffer=new long[newCapacity];\n    }\n  }\n else   if (expansionOption == INITIALIZE) {\n    java.util.Arrays.fill(buffer,0L);\n  }\n  return buffer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 77
      },
      "nodeContext" : "int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "capacity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 168,
      "startColumnNumber" : 33,
      "endLineNumber" : 168,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 168,
        "startColumnNumber" : 17,
        "endLineNumber" : 168,
        "endColumnNumber" : 41
      },
      "nodeContext" : "buffer.length < capacity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 168,
        "startColumnNumber" : 13,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (buffer.length < capacity) {\n  if (expansionOption == PRESERVE) {\n    buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n  }\n else {\n    buffer=new long[newCapacity];\n  }\n}\n else if (expansionOption == INITIALIZE) {\n  java.util.Arrays.fill(buffer,0L);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (buffer == null) {\n  buffer=new long[newCapacity];\n}\n else if (buffer.length < capacity) {\n  if (expansionOption == PRESERVE) {\n    buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n  }\n else {\n    buffer=new long[newCapacity];\n  }\n}\n else if (expansionOption == INITIALIZE) {\n  java.util.Arrays.fill(buffer,0L);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n  if (buffer == null) {\n    buffer=new long[newCapacity];\n  }\n else   if (buffer.length < capacity) {\n    if (expansionOption == PRESERVE) {\n      buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n    }\n else {\n      buffer=new long[newCapacity];\n    }\n  }\n else   if (expansionOption == INITIALIZE) {\n    java.util.Arrays.fill(buffer,0L);\n  }\n  return buffer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static long[] ensureCapacity(long[] buffer,int capacity,ExpansionFactor expansionFactor,ExpansionOption expansionOption){\n  int newCapacity=(int)(capacity * expansionFactor.expansionFactor);\n  if (buffer == null) {\n    buffer=new long[newCapacity];\n  }\n else   if (buffer.length < capacity) {\n    if (expansionOption == PRESERVE) {\n      buffer=java.util.Arrays.copyOf(buffer,newCapacity);\n    }\n else {\n      buffer=new long[newCapacity];\n    }\n  }\n else   if (expansionOption == INITIALIZE) {\n    java.util.Arrays.fill(buffer,0L);\n  }\n  return buffer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 168,
        "startColumnNumber" : 17,
        "endLineNumber" : 168,
        "endColumnNumber" : 41
      },
      "nodeContext" : "buffer.length < capacity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 163,
    "startColumnNumber" : 33,
    "endLineNumber" : 163,
    "endColumnNumber" : 41
  }, {
    "charLength" : 8,
    "startLineNumber" : 168,
    "startColumnNumber" : 33,
    "endLineNumber" : 168,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}