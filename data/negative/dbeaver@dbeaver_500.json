{
  "id" : 500,
  "expression" : "((InvocationTargetException)e)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/runtime/properties/PropertySourceEditable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((InvocationTargetException)e)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 185,
      "startColumnNumber" : 20,
      "endLineNumber" : 185,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 185,
        "endColumnNumber" : 72
      },
      "nodeContext" : "((InvocationTargetException)e).getTargetException()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 72
      },
      "nodeContext" : "e=((InvocationTargetException)e).getTargetException()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 73
      },
      "nodeContext" : "e=((InvocationTargetException)e).getTargetException();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 184,
        "startColumnNumber" : 56,
        "endLineNumber" : 186,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  e=((InvocationTargetException)e).getTargetException();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 186,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (e instanceof InvocationTargetException) {\n  e=((InvocationTargetException)e).getTargetException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 183,
        "startColumnNumber" : 30,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e instanceof InvocationTargetException) {\n    e=((InvocationTargetException)e).getTargetException();\n  }\n  log.error(\"Can't write property '\" + prop.getDisplayName() + \"' value\",e);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 183,
        "startColumnNumber" : 10,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  if (e instanceof InvocationTargetException) {\n    e=((InvocationTargetException)e).getTargetException();\n  }\n  log.error(\"Can't write property '\" + prop.getDisplayName() + \"' value\",e);\n  return false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 35,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (value != null && value.getClass() == String.class) {\n    final Object[] items=prop.getPossibleValues(editableValue);\n    if (items != null) {\n      boolean found=false;\n      if (items.length > 0) {\n        for (int i=0, itemsLength=items.length; i < itemsLength; i++) {\n          if ((items[i] instanceof DBPNamedObject && value.equals(((DBPNamedObject)items[i]).getName())) || (items[i] instanceof Enum && value.equals(((Enum)items[i]).name()))) {\n            value=items[i];\n            found=true;\n            break;\n          }\n        }\n      }\n      if (!found) {\n        if (value.getClass() != prop.getDataType()) {\n          value=null;\n        }\n      }\n    }\n  }\n  final Object oldValue=getPropertyValue(monitor,editableValue,prop,true);\n  if (CommonUtils.equalObjects(oldValue,value)) {\n    return false;\n  }\n  prop.writeValue(editableValue,value);\n  if (editableValue instanceof DBSObject) {\n    DBUtils.fireObjectUpdate((DBSObject)editableValue,prop);\n  }\n  return true;\n}\n catch (Throwable e) {\n  if (e instanceof InvocationTargetException) {\n    e=((InvocationTargetException)e).getTargetException();\n  }\n  log.error(\"Can't write property '\" + prop.getDisplayName() + \"' value\",e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2005,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (value != null && value.getClass() == String.class) {\n      final Object[] items=prop.getPossibleValues(editableValue);\n      if (items != null) {\n        boolean found=false;\n        if (items.length > 0) {\n          for (int i=0, itemsLength=items.length; i < itemsLength; i++) {\n            if ((items[i] instanceof DBPNamedObject && value.equals(((DBPNamedObject)items[i]).getName())) || (items[i] instanceof Enum && value.equals(((Enum)items[i]).name()))) {\n              value=items[i];\n              found=true;\n              break;\n            }\n          }\n        }\n        if (!found) {\n          if (value.getClass() != prop.getDataType()) {\n            value=null;\n          }\n        }\n      }\n    }\n    final Object oldValue=getPropertyValue(monitor,editableValue,prop,true);\n    if (CommonUtils.equalObjects(oldValue,value)) {\n      return false;\n    }\n    prop.writeValue(editableValue,value);\n    if (editableValue instanceof DBSObject) {\n      DBUtils.fireObjectUpdate((DBSObject)editableValue,prop);\n    }\n    return true;\n  }\n catch (  Throwable e) {\n    if (e instanceof InvocationTargetException) {\n      e=((InvocationTargetException)e).getTargetException();\n    }\n    log.error(\"Can't write property '\" + prop.getDisplayName() + \"' value\",e);\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2205,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean updatePropertyValue(@Nullable DBRProgressMonitor monitor,Object editableValue,ObjectPropertyDescriptor prop,Object value,boolean force) throws IllegalArgumentException {\n  try {\n    if (value != null && value.getClass() == String.class) {\n      final Object[] items=prop.getPossibleValues(editableValue);\n      if (items != null) {\n        boolean found=false;\n        if (items.length > 0) {\n          for (int i=0, itemsLength=items.length; i < itemsLength; i++) {\n            if ((items[i] instanceof DBPNamedObject && value.equals(((DBPNamedObject)items[i]).getName())) || (items[i] instanceof Enum && value.equals(((Enum)items[i]).name()))) {\n              value=items[i];\n              found=true;\n              break;\n            }\n          }\n        }\n        if (!found) {\n          if (value.getClass() != prop.getDataType()) {\n            value=null;\n          }\n        }\n      }\n    }\n    final Object oldValue=getPropertyValue(monitor,editableValue,prop,true);\n    if (CommonUtils.equalObjects(oldValue,value)) {\n      return false;\n    }\n    prop.writeValue(editableValue,value);\n    if (editableValue instanceof DBSObject) {\n      DBUtils.fireObjectUpdate((DBSObject)editableValue,prop);\n    }\n    return true;\n  }\n catch (  Throwable e) {\n    if (e instanceof InvocationTargetException) {\n      e=((InvocationTargetException)e).getTargetException();\n    }\n    log.error(\"Can't write property '\" + prop.getDisplayName() + \"' value\",e);\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 73
      },
      "nodeContext" : "e=((InvocationTargetException)e).getTargetException();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.reflect.InvocationTargetException"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 185,
    "startColumnNumber" : 20,
    "endLineNumber" : 185,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}