{
  "id" : 165,
  "expression" : "EMPTY",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "c44a91feea9d6fa6d61acab58463fd0406fe6005",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/toolkit/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "EMPTY",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 123,
      "startColumnNumber" : 10,
      "endLineNumber" : 123,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return EMPTY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 122,
        "startColumnNumber" : 22,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return EMPTY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (isEmpty(param)) {\n  return EMPTY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 121,
        "startColumnNumber" : 53,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String temp=param.toLowerCase();\n  int len=temp.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=temp.charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(temp.charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 112,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <p> 字符串下划线转驼峰格式 </p>\n * @param param 需要转换的字符串\n * @return 转换好的字符串\n */\npublic static String underlineToCamel(String param){\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String temp=param.toLowerCase();\n  int len=temp.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=temp.charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(temp.charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return EMPTY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 123,
    "startColumnNumber" : 10,
    "endLineNumber" : 123,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}