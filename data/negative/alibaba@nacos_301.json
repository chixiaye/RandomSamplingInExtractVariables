{
  "id" : 301,
  "expression" : "request.getAdditionParam(\"betaIps\")",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/remote/ConfigPublishRequestHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "request.getAdditionParam(\"betaIps\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 99,
      "startColumnNumber" : 29,
      "endLineNumber" : 99,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 99,
        "startColumnNumber" : 19,
        "endLineNumber" : 99,
        "endColumnNumber" : 64
      },
      "nodeContext" : "betaIps=request.getAdditionParam(\"betaIps\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "String betaIps=request.getAdditionParam(\"betaIps\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3401,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String dataId=request.getDataId();\n  String group=request.getGroup();\n  String content=request.getContent();\n  final String tenant=request.getTenant();\n  final String srcIp=meta.getClientIp();\n  final String requestIpApp=request.getAdditionParam(\"requestIpApp\");\n  final String tag=request.getAdditionParam(\"tag\");\n  final String appName=request.getAdditionParam(\"appName\");\n  final String type=request.getAdditionParam(\"type\");\n  final String srcUser=request.getAdditionParam(\"src_user\");\n  ParamUtils.checkParam(dataId,group,\"datumId\",content);\n  ParamUtils.checkParam(tag);\n  Map<String,Object> configAdvanceInfo=new HashMap<String,Object>(10);\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"config_tags\",request.getAdditionParam(\"configTags\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"desc\",request.getAdditionParam(\"desc\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"use\",request.getAdditionParam(\"use\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"effect\",request.getAdditionParam(\"effect\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"type\",type);\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"schema\",request.getAdditionParam(\"schema\"));\n  ParamUtils.checkParam(configAdvanceInfo);\n  if (AggrWhitelist.isAggrDataId(dataId)) {\n    Loggers.REMOTE_DIGEST.warn(\"[aggr-conflict] {} attempt to publish single data, {}, {}\",srcIp,dataId,group);\n    throw new NacosException(NacosException.NO_RIGHT,\"dataId:\" + dataId + \" is aggr\");\n  }\n  final Timestamp time=TimeUtils.getCurrentTime();\n  String betaIps=request.getAdditionParam(\"betaIps\");\n  ConfigInfo configInfo=new ConfigInfo(dataId,group,tenant,appName,content);\n  configInfo.setType(type);\n  if (StringUtils.isBlank(betaIps)) {\n    if (StringUtils.isBlank(tag)) {\n      persistService.insertOrUpdate(srcIp,srcUser,configInfo,time,configAdvanceInfo,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,time.getTime()));\n    }\n else {\n      persistService.insertOrUpdateTag(configInfo,tag,srcIp,srcUser,time,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n    }\n  }\n else {\n    persistService.insertOrUpdateBeta(configInfo,betaIps,srcIp,srcUser,time,true);\n    ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(true,dataId,group,tenant,time.getTime()));\n  }\n  ConfigTraceService.logPersistenceEvent(dataId,group,tenant,requestIpApp,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_PUB,content);\n  return ConfigPublishResponse.buildSuccessResponse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 359,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3633,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String dataId=request.getDataId();\n  String group=request.getGroup();\n  String content=request.getContent();\n  final String tenant=request.getTenant();\n  final String srcIp=meta.getClientIp();\n  final String requestIpApp=request.getAdditionParam(\"requestIpApp\");\n  final String tag=request.getAdditionParam(\"tag\");\n  final String appName=request.getAdditionParam(\"appName\");\n  final String type=request.getAdditionParam(\"type\");\n  final String srcUser=request.getAdditionParam(\"src_user\");\n  ParamUtils.checkParam(dataId,group,\"datumId\",content);\n  ParamUtils.checkParam(tag);\n  Map<String,Object> configAdvanceInfo=new HashMap<String,Object>(10);\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"config_tags\",request.getAdditionParam(\"configTags\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"desc\",request.getAdditionParam(\"desc\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"use\",request.getAdditionParam(\"use\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"effect\",request.getAdditionParam(\"effect\"));\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"type\",type);\n  MapUtil.putIfValNoNull(configAdvanceInfo,\"schema\",request.getAdditionParam(\"schema\"));\n  ParamUtils.checkParam(configAdvanceInfo);\n  if (AggrWhitelist.isAggrDataId(dataId)) {\n    Loggers.REMOTE_DIGEST.warn(\"[aggr-conflict] {} attempt to publish single data, {}, {}\",srcIp,dataId,group);\n    throw new NacosException(NacosException.NO_RIGHT,\"dataId:\" + dataId + \" is aggr\");\n  }\n  final Timestamp time=TimeUtils.getCurrentTime();\n  String betaIps=request.getAdditionParam(\"betaIps\");\n  ConfigInfo configInfo=new ConfigInfo(dataId,group,tenant,appName,content);\n  configInfo.setType(type);\n  if (StringUtils.isBlank(betaIps)) {\n    if (StringUtils.isBlank(tag)) {\n      persistService.insertOrUpdate(srcIp,srcUser,configInfo,time,configAdvanceInfo,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,time.getTime()));\n    }\n else {\n      persistService.insertOrUpdateTag(configInfo,tag,srcIp,srcUser,time,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n    }\n  }\n else {\n    persistService.insertOrUpdateBeta(configInfo,betaIps,srcIp,srcUser,time,true);\n    ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(true,dataId,group,tenant,time.getTime()));\n  }\n  ConfigTraceService.logPersistenceEvent(dataId,group,tenant,requestIpApp,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_PUB,content);\n  return ConfigPublishResponse.buildSuccessResponse();\n}\n catch (Exception e) {\n  Loggers.REMOTE_DIGEST.error(\"[ConfigPublishRequestHandler] publish config error ,request ={}\",request,e);\n  return ConfigPublishResponse.buildFailResponse(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 382,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3658,
        "startLineNumber" : 65,
        "startColumnNumber" : 110,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String dataId=request.getDataId();\n    String group=request.getGroup();\n    String content=request.getContent();\n    final String tenant=request.getTenant();\n    final String srcIp=meta.getClientIp();\n    final String requestIpApp=request.getAdditionParam(\"requestIpApp\");\n    final String tag=request.getAdditionParam(\"tag\");\n    final String appName=request.getAdditionParam(\"appName\");\n    final String type=request.getAdditionParam(\"type\");\n    final String srcUser=request.getAdditionParam(\"src_user\");\n    ParamUtils.checkParam(dataId,group,\"datumId\",content);\n    ParamUtils.checkParam(tag);\n    Map<String,Object> configAdvanceInfo=new HashMap<String,Object>(10);\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"config_tags\",request.getAdditionParam(\"configTags\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"desc\",request.getAdditionParam(\"desc\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"use\",request.getAdditionParam(\"use\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"effect\",request.getAdditionParam(\"effect\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"type\",type);\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"schema\",request.getAdditionParam(\"schema\"));\n    ParamUtils.checkParam(configAdvanceInfo);\n    if (AggrWhitelist.isAggrDataId(dataId)) {\n      Loggers.REMOTE_DIGEST.warn(\"[aggr-conflict] {} attempt to publish single data, {}, {}\",srcIp,dataId,group);\n      throw new NacosException(NacosException.NO_RIGHT,\"dataId:\" + dataId + \" is aggr\");\n    }\n    final Timestamp time=TimeUtils.getCurrentTime();\n    String betaIps=request.getAdditionParam(\"betaIps\");\n    ConfigInfo configInfo=new ConfigInfo(dataId,group,tenant,appName,content);\n    configInfo.setType(type);\n    if (StringUtils.isBlank(betaIps)) {\n      if (StringUtils.isBlank(tag)) {\n        persistService.insertOrUpdate(srcIp,srcUser,configInfo,time,configAdvanceInfo,true);\n        ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,time.getTime()));\n      }\n else {\n        persistService.insertOrUpdateTag(configInfo,tag,srcIp,srcUser,time,true);\n        ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n      }\n    }\n else {\n      persistService.insertOrUpdateBeta(configInfo,betaIps,srcIp,srcUser,time,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(true,dataId,group,tenant,time.getTime()));\n    }\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,requestIpApp,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_PUB,content);\n    return ConfigPublishResponse.buildSuccessResponse();\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.error(\"[ConfigPublishRequestHandler] publish config error ,request ={}\",request,e);\n    return ConfigPublishResponse.buildFailResponse(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4007,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @TpsControl(pointName=\"ConfigPublish\",parsers={ConfigPublishGroupKeyParser.class,ConfigPublishGroupParser.class}) @Secured(action=ActionTypes.WRITE,resource=\"\",parser=ConfigResourceParser.class) public ConfigPublishResponse handle(ConfigPublishRequest request,RequestMeta meta) throws NacosException {\n  try {\n    String dataId=request.getDataId();\n    String group=request.getGroup();\n    String content=request.getContent();\n    final String tenant=request.getTenant();\n    final String srcIp=meta.getClientIp();\n    final String requestIpApp=request.getAdditionParam(\"requestIpApp\");\n    final String tag=request.getAdditionParam(\"tag\");\n    final String appName=request.getAdditionParam(\"appName\");\n    final String type=request.getAdditionParam(\"type\");\n    final String srcUser=request.getAdditionParam(\"src_user\");\n    ParamUtils.checkParam(dataId,group,\"datumId\",content);\n    ParamUtils.checkParam(tag);\n    Map<String,Object> configAdvanceInfo=new HashMap<String,Object>(10);\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"config_tags\",request.getAdditionParam(\"configTags\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"desc\",request.getAdditionParam(\"desc\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"use\",request.getAdditionParam(\"use\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"effect\",request.getAdditionParam(\"effect\"));\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"type\",type);\n    MapUtil.putIfValNoNull(configAdvanceInfo,\"schema\",request.getAdditionParam(\"schema\"));\n    ParamUtils.checkParam(configAdvanceInfo);\n    if (AggrWhitelist.isAggrDataId(dataId)) {\n      Loggers.REMOTE_DIGEST.warn(\"[aggr-conflict] {} attempt to publish single data, {}, {}\",srcIp,dataId,group);\n      throw new NacosException(NacosException.NO_RIGHT,\"dataId:\" + dataId + \" is aggr\");\n    }\n    final Timestamp time=TimeUtils.getCurrentTime();\n    String betaIps=request.getAdditionParam(\"betaIps\");\n    ConfigInfo configInfo=new ConfigInfo(dataId,group,tenant,appName,content);\n    configInfo.setType(type);\n    if (StringUtils.isBlank(betaIps)) {\n      if (StringUtils.isBlank(tag)) {\n        persistService.insertOrUpdate(srcIp,srcUser,configInfo,time,configAdvanceInfo,true);\n        ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,time.getTime()));\n      }\n else {\n        persistService.insertOrUpdateTag(configInfo,tag,srcIp,srcUser,time,true);\n        ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n      }\n    }\n else {\n      persistService.insertOrUpdateBeta(configInfo,betaIps,srcIp,srcUser,time,true);\n      ConfigChangePublisher.notifyConfigChange(new ConfigDataChangeEvent(true,dataId,group,tenant,time.getTime()));\n    }\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,requestIpApp,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_PUB,content);\n    return ConfigPublishResponse.buildSuccessResponse();\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.error(\"[ConfigPublishRequestHandler] publish config error ,request ={}\",request,e);\n    return ConfigPublishResponse.buildFailResponse(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 429,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "String betaIps=request.getAdditionParam(\"betaIps\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 99,
    "startColumnNumber" : 29,
    "endLineNumber" : 99,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}