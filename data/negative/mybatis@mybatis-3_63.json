{
  "id" : 63,
  "expression" : "\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/com/ibatis/dao/client/template/SqlMapDaoTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 112,
      "startLineNumber" : 249,
      "startColumnNumber" : 29,
      "endLineNumber" : 250,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 7,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 249,
        "startColumnNumber" : 6,
        "endLineNumber" : 250,
        "endColumnNumber" : 82
      },
      "nodeContext" : "throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 248,
        "startColumnNumber" : 29,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (SQLException e) {\n  throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return getSqlMapExecutor().queryForObject(id,parameterObject,resultObject);\n}\n catch (SQLException e) {\n  throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 245,
        "startColumnNumber" : 87,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    return getSqlMapExecutor().queryForObject(id,parameterObject,resultObject);\n  }\n catch (  SQLException e) {\n    throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 233,
        "startColumnNumber" : 2,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Executes a mapped SQL SELECT statement that returns data to populate the supplied result object. <p/> The parameter object is generally used to supply the input data for the WHERE clause parameter(s) of the SELECT statement.\n * @param id              The name of the statement to execute.\n * @param parameterObject The parameter object (e.g. JavaBean, Map, XML etc.).\n * @param resultObject    The result object instance that should be populated with result data.\n * @return The single result object as supplied by the resultObject parameter, populated with the result set data.\n */\npublic Object queryForObject(String id,Object parameterObject,Object resultObject){\n  try {\n    return getSqlMapExecutor().queryForObject(id,parameterObject,resultObject);\n  }\n catch (  SQLException e) {\n    throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 249,
        "startColumnNumber" : 6,
        "endLineNumber" : 250,
        "endColumnNumber" : 82
      },
      "nodeContext" : "throw new DaoException(\"Failed to queryForObject - id [\" + id + \"], parameterObject [\"+ parameterObject+ \"].  Cause: \"+ e,e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 14,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 112,
    "startLineNumber" : 249,
    "startColumnNumber" : 29,
    "endLineNumber" : 250,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}