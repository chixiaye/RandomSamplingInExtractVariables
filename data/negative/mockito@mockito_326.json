{
  "id" : 326,
  "expression" : "String.class",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/bugs/ShouldOnlyModeAllowCapturingArgumentsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 26,
      "startColumnNumber" : 61,
      "endLineNumber" : 26,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 26,
        "startColumnNumber" : 37,
        "endLineNumber" : 26,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ArgumentCaptor.forClass(String.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 26,
        "startColumnNumber" : 31,
        "endLineNumber" : 26,
        "endColumnNumber" : 74
      },
      "nodeContext" : "arg=ArgumentCaptor.forClass(String.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ArgumentCaptor<String> arg=ArgumentCaptor.forClass(String.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 23,
        "startColumnNumber" : 48,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mock.simpleMethod(\"o\");\n  ArgumentCaptor<String> arg=ArgumentCaptor.forClass(String.class);\n  verify(mock,only()).simpleMethod(arg.capture());\n  assertEquals(\"o\",arg.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAllowCapturingArguments(){\n  mock.simpleMethod(\"o\");\n  ArgumentCaptor<String> arg=ArgumentCaptor.forClass(String.class);\n  verify(mock,only()).simpleMethod(arg.capture());\n  assertEquals(\"o\",arg.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ArgumentCaptor<String> arg=ArgumentCaptor.forClass(String.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 26,
    "startColumnNumber" : 61,
    "endLineNumber" : 26,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}