{
  "id" : 152,
  "expression" : "bazelStarlarkContext.getConvertedLabelsInPackage()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "463e8c80cd11d36777ddf80543aea7c53293f298",
  "filePath" : "src/main/java/com/google/devtools/build/lib/analysis/starlark/StarlarkToolchainContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bazelStarlarkContext.getConvertedLabelsInPackage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 98,
      "startColumnNumber" : 16,
      "endLineNumber" : 98,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 94,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 67
      },
      "nodeContext" : "context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 68
      },
      "nodeContext" : "LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 90,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n  BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n  LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n  return context.convert((String)key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n  BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n  LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n  return context.convert((String)key);\n}\n catch (LabelSyntaxException e) {\n  throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 678,
        "startLineNumber" : 89,
        "startColumnNumber" : 38,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n    BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n    LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n    return context.convert((String)key);\n  }\n catch (  LabelSyntaxException e) {\n    throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 89,
        "startColumnNumber" : 11,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (key instanceof String) {\n  try {\n    BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n    BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n    LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n    return context.convert((String)key);\n  }\n catch (  LabelSyntaxException e) {\n    throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n  }\n}\n else {\n  throw Starlark.errorf(\"Toolchains only supports indexing by toolchain type, got %s instead\",Starlark.type(key));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (key instanceof ToolchainTypeInfo) {\n  return ((ToolchainTypeInfo)key).typeLabel();\n}\n else if (key instanceof String) {\n  try {\n    BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n    BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n    LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n    return context.convert((String)key);\n  }\n catch (  LabelSyntaxException e) {\n    throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n  }\n}\n else {\n  throw Starlark.errorf(\"Toolchains only supports indexing by toolchain type, got %s instead\",Starlark.type(key));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (key instanceof Label) {\n  return (Label)key;\n}\n else if (key instanceof ToolchainTypeInfo) {\n  return ((ToolchainTypeInfo)key).typeLabel();\n}\n else if (key instanceof String) {\n  try {\n    BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n    BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n    LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n    return context.convert((String)key);\n  }\n catch (  LabelSyntaxException e) {\n    throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n  }\n}\n else {\n  throw Starlark.errorf(\"Toolchains only supports indexing by toolchain type, got %s instead\",Starlark.type(key));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 84,
        "startColumnNumber" : 93,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (key instanceof Label) {\n    return (Label)key;\n  }\n else   if (key instanceof ToolchainTypeInfo) {\n    return ((ToolchainTypeInfo)key).typeLabel();\n  }\n else   if (key instanceof String) {\n    try {\n      BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n      BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n      LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n      return context.convert((String)key);\n    }\n catch (    LabelSyntaxException e) {\n      throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n    }\n  }\n else {\n    throw Starlark.errorf(\"Toolchains only supports indexing by toolchain type, got %s instead\",Starlark.type(key));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Label transformKey(StarlarkThread starlarkThread,Object key) throws EvalException {\n  if (key instanceof Label) {\n    return (Label)key;\n  }\n else   if (key instanceof ToolchainTypeInfo) {\n    return ((ToolchainTypeInfo)key).typeLabel();\n  }\n else   if (key instanceof String) {\n    try {\n      BazelStarlarkContext bazelStarlarkContext=BazelStarlarkContext.from(starlarkThread);\n      BazelModuleContext moduleContext=BazelModuleContext.of(Module.ofInnermostEnclosingStarlarkFunction(starlarkThread));\n      LabelConversionContext context=new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage());\n      return context.convert((String)key);\n    }\n catch (    LabelSyntaxException e) {\n      throw Starlark.errorf(\"Unable to parse toolchain label '%s': %s\",key,e.getMessage());\n    }\n  }\n else {\n    throw Starlark.errorf(\"Toolchains only supports indexing by toolchain type, got %s instead\",Starlark.type(key));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new LabelConversionContext(moduleContext.label(),moduleContext.repoMapping(),bazelStarlarkContext.getConvertedLabelsInPackage())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.HashMap<java.lang.String,com.google.devtools.build.lib.cmdline.Label>"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 98,
    "startColumnNumber" : 16,
    "endLineNumber" : 98,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}